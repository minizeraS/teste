// # Includes #
#include 																<a_samp>
#include 															  <streamer>
#include 															   <foreach>

#define DCMD_PREFIX  '#' // Se voc* nao definir, por padrao * '!'
//#define DCMD_STRICT_CASE // Definir isso far* com que os comandos fa*am distin*ao entre mai*sculas e min*sculas. !test e !TEST serao diferentes
#define DCMD_ALLOW_BOTS // Definir isso nao ir* ignorar comandos enviados no canal por bots.

#include                                                                   <SKY>
#include 													 <discord-connector>
#include 														   <discord-cmd>
#include                                                                <strlib>

#include 															 <callbacks>
#define                                                  SSCANF_NO_NICE_FEATURES
#include 														 	   <sscanf2>
#include                                                                 <FCNPC>
#include                                                            <mapandreas>
#include 																  <zcmd>
#include                                                                  <DOF2>

new DCC_Channel:g_DS_LogBox;
new bool:isBleeding[MAX_PLAYERS];
new bool:isPlayerBleeding[MAX_PLAYERS];
new Timer:bleedTimer[MAX_PLAYERS];
const INVALID_TIMER = -1;
forward StopBleeding(playerid);
forward CheckBleeding(playerid);
forward StartBleeding(playerid);

//new DCC_Channel:g_DS_LogsAll;

#define GetDynamicObjectModel(%0) Streamer_GetIntData(STREAMER_TYPE_OBJECT, %0, E_STREAMER_MODEL_ID)
#define playersimp 2000

/*REDEFININDO MAX_SAMP*/
#undef MAX_PLAYERS
#define MAX_PLAYERS (1000)
#undef MAX_VEHICLES
#define MAX_VEHICLES (1000)

/*
Sistema de se reanimar e deixar a pessoa inconsciente, ou deixar a pessoa gravemente ferida apÃ³s tiros.
Sistema de editar acessorios para ambas plataformas.
*/

//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-FALTA TERMINAR/CRIAR=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
new MembroSelect[MAX_PLAYERS];
//=-=-=-=-=-=-=-=-=-=-=-=-=-MAX_DEFINES=-=-=-=-=-=-=-=-=-=-=-=-=-=

#define     MAX_VEHS                                    700
#define     MAX_DROPS                                   (4000+1)
#define     MAX_LOOTS                                   20000
#define     MAX_ITEM_NAME                               (24)
#define     MAX_CRAFTS                                  5000+1
#define     MAX_TRITU                                   100
#define     MAX_CAIXA                                   3000+1
#define     MAX_ARVORES                                 500
#define     MAX_ARMAS                                   120
#define     MAX_PEDRAS                                  400

/*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=*/


#define NIVEL_PARA_CRAFTAR  3
new bool:PlayerLogado[MAX_PLAYERS];
new bool:PiscaCarColor[MAX_PLAYERS], bool:PiscaCarLuz[MAX_PLAYERS];
new bool:PiscarLuzesState[MAX_PLAYERS];
new IdCraftRaid[MAX_PLAYERS][300];
new bool:ACaixa[MAX_PLAYERS];
new bool:Acao_Ativa[MAX_PLAYERS];
new TempACaixa[MAX_PLAYERS];
new idcabrir[MAX_PLAYERS];

//Icons
#define ICON_SAFELS   0
#define ICON_SAFEROCA 1
#define ICON_BASEM1   2
#define ICON_BASEM2   3
#define ICON_BASEM3   4
#define ICON_BASEM4   5
#define ICON_BASEM5   6//navio
#define ICON_BLACKM1  7
#define ICON_BLACKM2  8
#define ICON_FLORESTA 9


//sistema de acess card
#define MAX_PORTOES_AREAS 2

#define PORTAO_SALA_AREA51    0
#define PORTAO_AREA_AEROPORTO 1

new GatePrivateOpen[MAX_PORTOES_AREAS];

/*enum DAT_AC{     
    IDModel,      
    OssoAC,

    Float:PosXAC,                          
    Float:PosYAC,    
    Float:PosYAC,

    Float:RotXAC,   
    Float:RotYAC,    
    Float:RotZAC,   

    Float:TamXAC,
    Float:TamYAC,
    Float:TamZAC           
}
new AcessorioInfo[MAX_PLAYERS][MAX_ACESSORIOS_PLAYER];*/

enum {
    SlotMochila,
    SlotFerramenta_1,
    SlotFerramenta_2,
    SlotMascara,
    SlotVariados,
    SlotColete,
    Acessorio1,
    Acessorio2,
    Acessorio3,
    Acessorio4
}
/*Equipamentos no corpo do jogador Attached*/
#define MAX_OBJSAT      7+1

#define CHAVE_DE_FENDA  1
#define CHAVE_COMBINADA 2
#define MARTELO         3
#define MARRETA         4
#define MASCARA         5
#define PE_DE_CABRA     6
new Equipado[MAX_PLAYERS][MAX_OBJSAT];
//========================================================
new admirSelect[MAX_PLAYERS];
new MuteVoip[MAX_PLAYERS];
new sWeaponSelected[MAX_PLAYERS];
new gItemSelected[MAX_PLAYERS];
//new bool:Motor_OffOn[MAX_PLAYERS];
//system de enquete
new Votos_Yes, Votos_Not, bool:EnqueteAberta, bool:JaVotou[MAX_PLAYERS];
//Sistema De Evento Dos
new Float:CordEventoX, Float:CordEventoY, Float:CordEventoZ;
new InteriorEvento, bool:EventoCriado, bool:EventoAberto, bool:EventoRolando, VagasEvento, bool:NoEvento[MAX_PLAYERS];

//pÃ­ckup auto function
new PickSafe[2];

#define DEBUG_CORRIDA               1
#define TAMANHO_CHECKPOINTS         8
#define CONTAGEM_START              30
#define MAX_CHECKPOINTS             800
#define MAX_CORRIDAS                500
#define MAX_CORRIDA_TEMPO           600

#define INVALID_ID_EVENTO -1
#define EVENTO_BATEBATE    1
#define EVENTO_MOTOCROSS   2
#define EVENTO_HUNTHEBOMB  3


#define INVALID_ITEM_TYPE   (-1)
#define TYPE_ITEM_CIVIL     (0)
#define TYPE_ITEM_MILITAR   (1)
#define TYPE_ITEM_FIXO      (2)
#define TYPE_ITEM_RESTRITO  (3)
//Motocross system
/*enum EVENTP{
    Type_Evento,
    CheckID
}
new E_PI[MAX_PLAYERS][EVENTP];*/
////////////////////////////////////////////////////////////////////////////////////////////////////////
new Float:TlpX[MAX_PLAYERS], Float:TlpY[MAX_PLAYERS], Float:TlpZ[MAX_PLAYERS], VehTele[MAX_PLAYERS];
//FINAL DAS VARIAVEIS DE EVENTO
//SISTEMA DE ATENDIMENTOS
new IdAtendimento[MAX_PLAYERS], bool:NoAtendimento[MAX_PLAYERS], bool:PediuAtendimento[MAX_PLAYERS];
new CarroEvento[10];
//sistema de drop
new segundosdrop;
//sistema de respawm loots
new segundosrespawnL;
new MinutosrespawnL;
new horarespawnL;
///////////////////////
new HoraL[MAX_PLAYERS], MinutoL[MAX_PLAYERS], AtendL[MAX_PLAYERS];
new MatSelect[MAX_PLAYERS];
new VerCars[MAX_VEHICLES] = 0;
new caixasdestruidas = 0;
new IDItemCreate[MAX_PLAYERS];
//new skinscomprar = mS_INVALID_LISTID;
new EditandoCraft[MAX_PLAYERS];

new Float:EditVelo[MAX_PLAYERS];

new PlayerText:TXDCCraft[MAX_PLAYERS][31];

new PlayerText:AcaoText[MAX_PLAYERS][1];
new PlayerText:Box_WeaponText[MAX_PLAYERS][34];
new PlayerText:ActionTXD[MAX_PLAYERS];

//new PlayerText:PedText[MAX_PLAYERS];
//new PlayerText:TextCaixa[MAX_PLAYERS][23];
//new PlayerText:TextInv[MAX_PLAYERS][41];

new Secundshit[MAX_PLAYERS],
    TotalHit[MAX_PLAYERS],
    TotalDamage[MAX_PLAYERS],
    PlayerHit[MAX_PLAYERS];

new SecundsAction[MAX_PLAYERS];

//new ModelCraftEscolhida[MAX_PLAYERS], CraftIDEscolhida[MAX_PLAYERS];
////////////////
//new PlayerText:HudFs[MAX_PLAYERS][14];
//new PlayerBar:ProgressFS[MAX_PLAYERS][2];
////////////////
new CarrosCriados[200], CarroCriado;
//new PlayerText:EditorParedeMobile[MAX_PLAYERS][16];
//new PlayerText:P_Hud[MAX_PLAYERS][27];

//new PlayerText:TextHUD[MAX_PLAYERS][30];
new PlayerText:HitInformer[MAX_PLAYERS];

new Text:TxdGlobalSkin[13];
new PlayerText:TxdPlayerSkin[MAX_PLAYERS][2];

new Text:TextGHud[3];
new PlayerText:TextPHud[MAX_PLAYERS][15];
//new PlayerText:pInfo[playerid][pHealth][MAX_PLAYERS][28];
new PlayerText:TextMCraft[MAX_PLAYERS][20];

//new PlayerText:InvText[MAX_PLAYERS][71];
new PlayerText:TimerTextAcao[MAX_PLAYERS][3];
new PlayerText:DosInfect[MAX_PLAYERS][3];

//new PlayerText:TextLogin[MAX_PLAYERS][11];

new Text:TextLoginG[13];
new PlayerText:TextLoginP[MAX_PLAYERS];

new fAutoC[MAX_PLAYERS];
new Morreu[MAX_PLAYERS];
new bool:PermNick[MAX_PLAYERS];
new bool:PermSenha[MAX_PLAYERS];
new bool:PermissaoRaid[MAX_PLAYERS];

new PermEdit[MAX_PLAYERS];

new PlayerText:velocimetro[MAX_PLAYERS][9];
new vercmds[MAX_PLAYERS];
new bool:ChatBloqueado;

new Text:EditMob[17];
new Text:Created_Box[12];
new Text:EnqueteText[10];
new PlayerText:EditorTipo[MAX_PLAYERS];

new bool:VendoCam[MAX_PLAYERS];


/* SQL - SAVE DADOS */
new DB:IpsDB;
new DB:Database;


//sistema de portao
new bool: EditandoCraftInfo[MAX_PLAYERS], bool: EditandoTritu[MAX_PLAYERS], bool:EditandoVeado[MAX_PLAYERS];
new Curando[MAX_PLAYERS];

#define Style_Craft            1                   
#define Style_Recicladora      2

new EditandoStyle[MAX_PLAYERS];
//new PlayerText:CraftPainel[MAX_PLAYERS][33];

// ==================== [ AirDrop System ] ============================== //
new air;
new AreaRestrita[101];
new BaseStaffMap[52];
new ObjectVariado[70];
new BlackMarketLv[105];
new NewBaseMilitar[101];
new objtextid[8];
new LojinhaLS[111];
new MapArea51[3];

new SizeTelaLogin[MAX_PLAYERS];
/*
Removendo motor do veiculo e adicionando
*/
new bool:RemovendoMotor[MAX_PLAYERS];
new TremovendoMotor[MAX_PLAYERS];

new bool:AdicionandoMotor[MAX_PLAYERS];
new TadicionandoMotor[MAX_PLAYERS];

//Skin Safe zone

new SkinSelected[MAX_PLAYERS];
new AvisosFakeTiro[MAX_PLAYERS];
new AntiFloodFakeTiro[MAX_PLAYERS];

stock ShowTXDSkinSafe(playerid){

    PlayerTextDrawSetPreviewModel(playerid, TxdPlayerSkin[playerid][0], SkinSelected[playerid]);
    
    new str[18];    format(str, sizeof str, "-Roupa_N:_~r~%i", SkinSelected[playerid]);
    PlayerTextDrawSetString(playerid, TxdPlayerSkin[playerid][1], str);

    for(new i; i < 13; i++) TextDrawShowForPlayer(playerid, TxdGlobalSkin[i]);
    PlayerTextDrawShow(playerid, TxdPlayerSkin[playerid][0]);
    PlayerTextDrawShow(playerid, TxdPlayerSkin[playerid][1]);
    SelectTextDraw(playerid, 0x00FF00FF);
    return true;
}

stock UpdateTXDSkinSafe(playerid){
    PlayerTextDrawSetPreviewModel(playerid, TxdPlayerSkin[playerid][0], SkinSelected[playerid]);
    PlayerTextDrawShow(playerid, TxdPlayerSkin[playerid][0]);

    new str[18];    format(str, sizeof str, "-Roupa_N:_~r~%i", SkinSelected[playerid]);
    PlayerTextDrawSetString(playerid, TxdPlayerSkin[playerid][1], str);
    return true;
}
stock HideTXDSkinSafe(playerid){
    for(new i; i < 13; i++) TextDrawHideForPlayer(playerid, TxdGlobalSkin[i]);
    PlayerTextDrawHide(playerid, TxdPlayerSkin[playerid][0]);
    PlayerTextDrawHide(playerid, TxdPlayerSkin[playerid][1]);
    CancelSelectTextDraw(playerid);
    return true;
}

new AreaNaoFuncional[96];
new Text3D:airlabel;
new Float:LabelZ;
new Avaliado[MAX_PLAYERS];
// -----------------------------------------------------------------------------
enum INFODROPARMA{
    ArmaID,
    ArmaMuni,
    ArmaObj,
    Text3D:ArmaText,
    Float:ArmaX,
    Float:ArmaY,
    Float:ArmaZ,
    bool:ArmaExiste
}
new ArmaInfo[MAX_ARMAS][INFODROPARMA];

/*define MAX_CRAFTLIST  5
#define TIPO_MADEIRA 1
#define TIPO_FERRO   2

//Tipos de crafts
#define TIPO_JANELA  1
#define TIPO_PAREDES 2
#define TIPO_ENFEITE 3
#define TIPO_VARIADO 4
#define TIPO_PORTOES 5
#define TIPO_PORTAS  6
#define TIPO_ESCADAS 7
#define TIPO_MOLDURAS 8
DesbugButton(playerid)
{
    if(ModelCraftEscolhida[playerid]==TIPO_PAREDES){
        PlayerTextDrawBoxColor(playerid, CraftPainel[playerid][18], 200);
        PlayerTextDrawShow(playerid, CraftPainel[playerid][18]);
    }else if(ModelCraftEscolhida[playerid]==TIPO_PORTAS){
        PlayerTextDrawBoxColor(playerid, CraftPainel[playerid][19], 200);
        PlayerTextDrawShow(playerid, CraftPainel[playerid][19]);
    }else if(ModelCraftEscolhida[playerid]==TIPO_JANELA){
        PlayerTextDrawBoxColor(playerid, CraftPainel[playerid][20], 200);
        PlayerTextDrawShow(playerid, CraftPainel[playerid][20]);
    }else if(ModelCraftEscolhida[playerid]==TIPO_VARIADO){
        PlayerTextDrawBoxColor(playerid, CraftPainel[playerid][21], 200);
        PlayerTextDrawShow(playerid, CraftPainel[playerid][21]);
    }else if(ModelCraftEscolhida[playerid]==TIPO_ENFEITE){
        PlayerTextDrawBoxColor(playerid, CraftPainel[playerid][22], 200);
        PlayerTextDrawShow(playerid, CraftPainel[playerid][22]);
    }else if(ModelCraftEscolhida[playerid]==TIPO_MOLDURAS){
        PlayerTextDrawBoxColor(playerid, CraftPainel[playerid][23], 200);
        PlayerTextDrawShow(playerid, CraftPainel[playerid][23]);
    }else if(ModelCraftEscolhida[playerid]==TIPO_ESCADAS){
        PlayerTextDrawBoxColor(playerid, CraftPainel[playerid][24], 200);
        PlayerTextDrawShow(playerid, CraftPainel[playerid][24]);
    }else if(ModelCraftEscolhida[playerid]==TIPO_PORTOES){
        PlayerTextDrawBoxColor(playerid, CraftPainel[playerid][25], 200);
        PlayerTextDrawShow(playerid, CraftPainel[playerid][25]);
    }
    return 1;
}

enum DATA_CRAFTVALUE{
    Modelo_C,
    Value_C,
    Type_C,
    bool:Exists_C
}
new InfoVCraft[40][DATA_CRAFTVALUE];

//Sistema de Craft [02/04/22]
enum DATA_CRAFT{
    ModelCraft,
    ValorCraft,
    TipoModel,
    TipoValor,
    Float:RotZ,
    bool:Exists
}

new CreateCInfo[9][MAX_CRAFTLIST][DATA_CRAFT];


stock SetValueCraft(type_craft, modelid, value)
{
    for(new c = 0; c < 40; c++){
        if(!InfoVCraft[c][Exists_C]){
            InfoVCraft[c][Type_C] = type_craft;
            InfoVCraft[c][Value_C] = value;
            InfoVCraft[c][Modelo_C] = modelid;
            InfoVCraft[c][Exists_C] = true;
            break;
        }
    }
    return 1;
}
stock CreateCraftModel(tipocraft, tipopagamento, modelid, quantia, Float:ZROT)
{
    for(new c= 0 ; c< MAX_CRAFTLIST; c++){
        if(!CreateCInfo[tipocraft][c][Exists]){
            CreateCInfo[tipocraft][c][ModelCraft] = modelid;
            CreateCInfo[tipocraft][c][ValorCraft] = quantia;
            CreateCInfo[tipocraft][c][TipoValor] = tipopagamento;
            CreateCInfo[tipocraft][c][RotZ] = ZROT;
            CreateCInfo[tipocraft][c][Exists] = true;
            break;
        }
    }
}*/
// -----------------------------------------------------------------------------
new GunNames[48][] = { // Armas
	"Soco",
	"Soco_Ingles",
	"Taco_de_golfe",
	"Cassetete",
	"Faca",
	"Baseball_Bat",
	"Pa",
	"Taco_de_sinuca",
	"Katana",
	"Motosserra",
	"Vibrador",
	"Dildo_branco_curto",
	"Dildo_branco_longo",
	"Dildo",
	"Buque_de_flores",
	"Bengala",
	"Granada",
	"Granada_de_fuma*a",
	"Molotov",
	"Cacador_de_misseis_ou_hidra",
	"Fogo_de_hidra",
	"Helice",
	"Glock 19",
	"Pistola_M9_SD",
	"Pistola.50",
	"Shotgun",
	"Sawed-off",
	"Pump_Shotgun",
	"CZ61_Skorpion",
	"MP5-K",
	"AK-47",
	"M4-A1",
	"PDW",
	"Rifle_de_caca",
	"Sniper",
	"Lancador_de_foguetes",
	"Bazuka",
	"Lanca-chamas",
	"Minigun",
	"Carga_explosiva",
	"Detonador_de_carga_explosiva",
	"Aerosol_de_gas_pimenta",
	"Extintor_de_fogo",
	"Camera_fotografica",
	"Oculos_de_visao_noturna",
	"Oculos_termico",
	"Para-quedas",
	"Pistola_falsa"
};
new GunObjects[47][0] = { // Objetos
	{0},// Ninguna.
	{331},// Pu*o americano.
	{333},// Palo de golf.
	{334},// Porra policial.
	{335},// Navaja.
	{336},// Bate de b*isbol.
	{337},// Pala.
	{338},// Palo de pool.
	{339},// Katana.
	{341},// Motosierra.
	{321},// Consolador violeta.
	{322},// Consolador corto blanco.
	{323},// Consolador largo blanco.
	{324},// Consolador vibrador.
	{325},// Ramo de flores.
	{326},// Bast*n.
	{342},// Granada.
	{343},// Grabada de gas lacrim*geno.
	{344},// C*ctel Molotov.
	{0},
	{0},
	{0},
	{346},// 9mm.
	{347},// 9mm con silenciador.
	{348},// Desert eagle.
	{349},// Escopeta normal.
	{350},// Escopeta recortada.
	{351},// Escopeta de combate.
	{352},// UZI
	{353},// MP5
	{355},// AK-47
	{356},// M4
	{372},// Tec-9
	{357},// Rifle de caza.
	{358},// Rifle de francotirador (sniper)
	{359},// Lanzaconhetes.
	{360},// Lanzacohetes busca-calor.
	{361},// Lanzallamas.
	{362},// Minigun.
	{363},// Detonador.
	{364},// Bot*n de detonador.
	{365},// Aerosol de gas pimienta.
	{366},// Extinguidor de fuego.
	{367},// C*mara fotogr*fica.
	{368},// Gafas de visi*n nocturna.
	{368},// Gafas de visi*n infrarroja.
	{371}// Paraca*das.
};
#define DIALOG_REGISTRO 0
#define DIALOG_LOGIN 1
#define TELEPORT_MAPA 2
#define Dialog_Comandos 300
#define contaplayer  20
#define DIALOG_ELEV  21

#define MENUCLAN     22
#define SETCARGOCLAN 23
#define EXPULSARCLAN 24
#define RANKCLAN     25
#define SAIRCLAN     26
#define EXCLUIRCLAN  27
#define D_PLANTANDOB 28
#define ACEITARCLAN  29

#define COR_CLAN     31
#define CORVIP_CLAN  32
#define TAG_CLAN     33

#define D_PICKUPCLAN    34
#define D_CONF_BASEC    35
#define DIALOG_CLANS    36

#define D_PMALAS 37
#define D_PMALAS2 38
#define D_PMALAS3 39
#define D_SENHAMALAS 41
#define D_COINS 42
#define D_MENUBASE 49
#define D_CRIARPORTA 50
#define D_LOOTEACORPO 51
#define D_CONFSKIN 52
#define D_AVALIACAO 54
#define D_CRIARITEM 55
#define D_CONFIGP   56
#define D_CORVIP    57
#define D_CRIANDOARM 58
#define D_CONFIGARM  59
#define D_GUARDARQUAN 60
#define D_PEGARQUAN   61
#define D_SELECTPG    62
#define D_SENHASTAFF  63
#define D_SAFEZONE     64
#define D_COMPRAR_SAFE 65
#define D_VENDER_SAFE  66
#define D_COMPRAR_AEM  67
#define D_COMPRAR_MUNI 68
#define D_VENDER_ITEM  69
#define D_VENDER_MT    70
#define D_QMADEIRA     71
#define D_QFERRO       72
#define D_CRIAR_CRAFT  73
#define D_Carro        74
#define D_DSENHAPORTAO 75
#define D_ABRIRPORTAO  76
#define D_DDSPORTAO    77
#define D_ADMCMDS      78
#define D_HELP         79
#define D_VELOCRAFT    80
#define D_EVENTOCREATE 81
#define D_MINAPLANT    82
#define D_IDCRAFTM     83
#define D_INFOADM      84
#define D_INFOADM2     85
#define D_CRIARITEM2   86
#define D_VPAINEL      87
#define D_PEGARIBOX    88
#define D_GUARDARIBOX  89
#define D_UPGRADEBOX   90
#define D_RFERRAMENTA  91
#define D_CRIARLOOT    92
#define D_CRIARLOOT2   93
#define D_VOBJETO      94
#define D_ESCOLHASKIN  95
#define D_COMIDABEBIDA 96
#define D_VENDACOMIDA  97
#define D_VENDABEBIDA  98
#define D_VENDAMAT     99
#define D_VENDAMADEIRA 100
#define D_VENDAFERRO   101
#define D_VENDERMUNI   102

#define D_CREATECLAN   103
#define SETNIVELCCLAN  104

#define D_MATERISELECT 105
#define D_ITENS_SELECT 106
#define D_QUANTIAITENS 107
#define D_MATERIALSLC  108
#define D_QUANTIAIM    109
#define D_QUANTIAIF    110

#define D_AEROBOX      111
#define D_GUARDARQIBOX 112

#define D_ASSARCARNE   113
 
new CoresRPGClan[9][8] = {
    {"CC0000"},
    {"CC6600"},
    {"CCCC00"},
    {"66CC00"},
    {"00CC00"},
    {"CC0066"},
    {"00CCCC"},
    {"00C6CC"},
    {"0000CC"}
};


new PickupsBClan[10][] = {
    {1314},
    {1239},
    {19131},
    {2061},
    {19605},
    {19606},
    {19607},
    {1313},
    {1254},
    {19134}
};
new PickupModelSelect[MAX_PLAYERS];

#define DIALOG_CHECKID 2789
#define MODENAME "gamemodetext Sobrevivencia"
#define HOSTNAME "hostname  Day Of Survival[Pc/Android][Whitelist][2.0]"
#define LANGUAGE "language PT-BR"
#define RCON     "rcon_password jogaluisbambu"
#define WEBURL   "weburl samp.com/"

// # Definicoes #

stock const antiCheatNames[][25] = {

	{ "Airbreak/Teleport" },
	{ "Speed hack" },
	{ "Car respawn" },
	{ "Jetpack" },
    { "Weapon-Hack" },
    { "Vehicle-Repair" }
};
//ANTI-CHEATE
enum{
    AirBreak_Teleport,
    Speed_Hack,
    CAR_SHOT,
    USE_JETPACK,
    WEAPON_HACK,
    Repair_Vehicle
}
enum CHEATDAT{
    CheatTemp,
    CheatAvisos,
    TPAviso,
    CheatTempRAvisos
}
new AC_Info[MAX_PLAYERS][CHEATDAT];

#define RangeAB         110.0
#define Range_Driver    150.0
#define CallBack:%0(%1) forward %0(%1); public %0(%1)
#define SpeedCheck(%0,%1,%2,%3,%4) floatround(floatsqroot(%4?(%0*%0+%1*%1+%2*%2):(%0*%0+%1*%1) ) *%3*1.6)

#define Um_Minuto            60
#define Uma_Hora             3600
#define Um_Dia               3600*24


// # Cores
#define COR_CINZA       0xBABABAFF
#define COR_VERMELHO    0xb93d3dFF
#define Vermelho        0xb93d3dFF
#define AMARELO         0xE9CC4CFF
#define Verde           0x6cb827FF

#define embed_default    0
#define embed_green      5763719
#define embed_blue       3447003
#define embed_purple     10181046
#define embed_gold       15844367
#define embed_red        15548997
#define embed_orange     15105570
#define embed_grey       9807270
#define embed_yellow     16776960


#define COR_LARANJA     0xeb680fFF
#define COR_ADMIN       0x004ffdFF
#define COR_VIP         0xa28724FF
#define COL_GREEN       "{37DB45}"
#define azul            0x46A3FFFF
#define Preto           0x808080FF


#define PlayerNoLugar(%1,%2,%3,%4,%5)   IsPlayerInRangeOfPoint(%1,%2,%3,%4,%5)
#define ISP IsPlayerInRangeOfPoint
#define CLIMA 3002

#define MAX_VAGAS 20+1//sempre colocar mais um apos o maximo definido

enum ENUM_ADMIN{
    AdminName[MAX_PLAYER_NAME],         
    AdminLevel,
    VagaLivre,
}
new AdminInfo[MAX_VAGAS][ENUM_ADMIN];

enum AirEnum
{
    Float:CoordX,
    Float:CoordY,
    Float:CoordZ,
    LocalNome[200]
}
enum AirEnum2
{
    Item1,
    Item2,
    Item3,
    Item4,
    Item5,
    Item6,
    Item7,

    QItem1,
    QItem2,
    QItem3,
    QItem4,
    QItem5,
    QItem6,
    QItem7
}
new AirDropEnum2[8][AirEnum2];

new AirDropEnum[8][AirEnum] =
{
	{215.398437, 1901.633789, 23.5,"na {FFFFFF}Area-51 [LV]"},
	{1755.343261, 1457.519409, 18.2,"no {FFFFFF}Aeroporto [LV]"},
	{2494.0974,-279.7162, 23.4,"na {FFFFFF}Linha Ferrea [LS]"},
	{2273.487792, -1069.818359, 53.9,"na {FFFFFF}Favela [LS]"},
	{792.841674, 1102.588378, 36.9,"na {FFFFFF}Pedreira [LV]"},
	{-1977.0120,289.0115,41.5719,"na {FFFFFF}Loja [SF]"},
	{1563.7526,-2543.8713,20.0000,"no {FFFFFF}Aeroporto [LS]"},
	{-785.4116,-921.1522,112.0000,"no {FFFFFF}Morro [LS/SF]"}
};
new idairdrop;

stock GetRandomItemDrop(){ 
    new item, rnd = random(14);
    switch(rnd){
        case 0: item = 68;
        case 1: item = 61;
        case 2: item = 64;
        case 3: item = 65;
        case 4: item = 72;
        case 5: item = 73;
        case 6: item = 74;
        case 7: item = 75;
        case 8: item = 76;
        case 9: item = 77;
        case 10: item = 78;
        case 11: item = 47;
        case 12: item = 48;
        case 13: item = 52;
    }
    return item;
}

#define MAX_ITEM_BOX_AERO  5
#define MAX_BOX_AERO       3
new ItensBoxAero[MAX_BOX_AERO][MAX_ITEM_BOX_AERO];

enum ctinfo
{
	Float:PLAYER_POS_X,
	Float:PLAYER_POS_Y,
	Float:PLAYER_POS_Z,
	Float:Teleport_X,
	Float:Teleport_Y,
	Float:Teleport_Z,
    PLAYER_TIMER,
	AGUARDO
};
new ah_Info[MAX_PLAYERS][ctinfo];
//new BaseW4lker[165];
enum Item_Data
{
	Item_ID,
	Item_Obj,
	Item_Name[MAX_ITEM_NAME],
	Float:Item_RotX,
	Float:Item_RotY,
	Float:Item_RotZ,
    Item_Name2[MAX_ITEM_NAME],
};
enum Drop_Data
{
	DropItemID,
	DropObj,
	Text3D:DropLabel,
	Float:dPosX,
	Float:dPosY,
	Float:dPosZ,
	bool:Existe,
};

new DropInfo[MAX_DROPS][Drop_Data];

enum Drop_Save
{
    IDValid,
    DropItemID,
    DropType,
	Float:dPosX,
	Float:dPosY,
	Float:dPosZ,
	bool:Existe,
};

new Info_Loot[MAX_DROPS][Drop_Save];



// # Arrays #
new VehicleNames[212][] = {
    "Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel", "Dumper", "Firetruck", "Trashmaster",
    "Stretch", "Manana", "Infernus", "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
    "Esperanto", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection", "Hunter", "Premier", "Enforcer",
    "Securicar", "Banshee", "Predator", "Bus", "Rhino", "Barracks", "Hotknife", "Article Trailer", "Previon", "Coach",
    "Cabbie", "Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral", "Squalo", "Seasparrow",
    "Pizzaboy", "Tram", "Article Trailer 2", "Turismo", "Speeder", "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair",
    "Berkley's RC Van", "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale", "Oceanic",
    "Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy", "Hermes", "Sabre", "Rustler", "ZR-350", "Walton",
    "Regina", "Comet", "BMX", "Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper", "Rancher",
    "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking", "Blista Compact", "Police Maverick",
    "Boxville", "Benson", "Mesa", "RC Goblin", "Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher",
    "Super GT", "Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stuntplane", "Tanker", "Roadtrain",
    "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra", "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck",
    "Fortune", "Cadrona", "SWAT Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer", "Remington", "Slamvan",
    "Blade", "Streak", "Freight", "Vortex", "Vincent", "Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder",
    "Primo", "Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite", "Windsor", "Monster", "Monster",
    "Uranus", "Jester", "Sultan", "Stratum", "Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito",
    "Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper", "Broadway", "Tornado", "AT-400", "DFT-30",
    "Huntley", "Stafford", "BF-400", "News Van", "Tug", "Petrol Trailer", "Emperor", "Wayfarer", "Euros", "Hotdog", "Club",
    "Freight Box", "Article Trailer 3", "Andromada", "Dodo", "RC Cam", "Launch", "LSPD Car", "SFPD Car", "LVPD Car",
    "Police Rancher", "Picador", "S.W.A.T", "Alpha", "Phoenix", "Glendale", "Sadler", "Luggage", "Luggage", "Stairs",
    "Boxville", "Tiller", "Utility Trailer"
};
//Variables - Server
new bool:ServerReiniciando,
    TipoReiniciamento[10+1],
    QuemReiniciou[MAX_PLAYER_NAME];

/* Agradecimento ao Marttins por procurar os objetos */
native gpci(playerid, serial[], len);
native IsValidVehicle(vehicleid);

new ListaClans[MAX_PLAYERS];
new PagListaClans[MAX_PLAYERS];

//native IsValidVehicle(vehicleid);
#define TYPET_NULL      0
#define TYPET_MADEIRA   1
#define TYPET_FERRO     2

enum ALI_ENUM{
    AlimentoID,           
    AlimentoValor
}
new BebidasVenda[6][ALI_ENUM] = {
    {9, 500},//Leite
    {10, 1000},//agua
    {11, 500},//fanta
    {13, 500},//suco de laranja
    {14, 700},//suco de maca
    {15, 650}//cafe
};
new ComidasVenda[6][ALI_ENUM] = {
    {16, 800},//Mre
    {17, 300},//fatia de pao
    {18, 750},//Sardinha enlatada
    {19, 250},//cereal 
    {20, 750},//Feijao enlatado
    {22, 450}//Hamburguer
};

new ItemInfo[][Item_Data] =
{
	{0,   3026,       "School backpack",    90.0, 0.0, 0.0, "School_backpack"},//mochila 1
	{1,   19627,       "Chave Combinada",   0.0, 0.0, 0.0, "Chave_Combinada"},
	{2,   19559,      "Camping backpack",     -91.799, 0.0, 0.0, "Camping_backpack"},//mochila 3
	{3,   2683,  "Garrafa vazia",    0.0, 0.0, 0.0, "Garrafa_Vazia"},
	/* ========== [ Items Medicos ] ========== */
	{4,   11738,      "Medkit",        0.0, 0.0, 0.0, "Medkit"},
	{5,   11748,      "Curativo",            0.0, 0.0, 0.0, "Curativo"},
	{6,   2752,       "Morfina",  0.0, 0.0, 0.0, "Morfina"},
	{7,   2709,       "Analgesico",         0.0, 0.0, 0.0, "Analgesico"},
	{8,   1580,       "Bolsa de sangue",          0.0, 0.0, 0.0, "Bolsa_de_sangue"},
	/* ============= [ Bebidas ] ============= */
	{9,    19569,     "Leite",         0.0, 0.0, 0.0, "Leite"},
	{10,   2683,      "Garrafa com agua",      0.0, 0.0, 0.0, "Garrafa_com_agua"},
	{11,   1546,      "Fanta",         0.0, 0.0, 0.0, "Fanta"},
	{12,   19823,     "Whisky",      0.0, 0.0, 0.0, "Whisky"},
	{13,   19563,     "Suco de laranja",       0.0, 0.0, 0.0, "Suco_de_laranja"},
	{14,   19564,     "Suco de maca",        0.0, 0.0, 0.0, "Suco_de_maca"},
	{15,   19835,     "Cafe",             0.0, 0.0, 0.0, "Cafe"},
	/* ============= [ Comidas ] ============= */
	{16,   2663,     "Mre",            0.0, 0.0, 0.0, "Mre"},
	{17,   19883,     "Fatia de pao",        0.0, 0.0, 0.0, "Fatia_de_pao"},
	{18,   19568,     "Sardinha enlatada",             0.0, 0.0, 0.0, "Sardinha_enlatada"},
	{19,   19561,     "Cereal",         0.0, 0.0, 0.0, "Cereal"},
	{20,   19567,     "Feijao enlatado",              0.0, 0.0, 0.0, "Feijao_enlatado"},
	{21,   19571,     "Pizza",               0.0, 0.0, 0.0, "Pizza"},
	{22,   19811,     "Hamburguer",          0.0, 0.0, 0.0, "Hamburguer"},
	{23,   2858,      "Comida chinesa",       0.0, 0.0, 0.0, "Comida_chinesa"},
	{24,   19574,     "Laranja",             0.0, 0.0, 0.0, "Laranja"},
	{25,   19575,     "Maca",              0.0, 0.0, 0.0, "Maca"},
	{26,   19576,     "Maca verde",        0.0, 0.0, 0.0, "Maca_verde"},
	{27,   19577,     "Tomate",             0.0, 0.0, 0.0, "Tomate"},
	{28,   19578,     "Banana",             0.0, 0.0, 0.0, "Banana"},
	/* ============= [ Armas e mochilas ] ============= */
	{29,   348,       "Pistola .50",         90.0, 0.0, 0.0, "Pistola.50"},
	{30,   371,      "Parachute Backpack",           90.0, 0.0, 0.0, "Parachute_Backpack"},//mochila 2 
	{31,   347,       "M9 SD",              90.0, 0.0, 0.0, "M9_SD"},
	{32,   353,       "MP5-K",         90.0, 0.0, 0.0, "MP5-K"},
	{33,   352,       "PDW",      90.0, 0.0, 0.0, "PDW"},
	{34,   372,       "CZ61 Skorpion",              90.0, 0.0, 0.0, "CZ61_Skorpion"},
	{35,   350,       "Sawn-Off",            90.0, 0.0, 0.0, "Sawn_Off"},
	{36,   349,       "Shotgun",     90.0, 0.0, 0.0, "Shotgun"},
	/* ============= [ Armas Brancas ] ============= */
	{37,   336,       "Baseball Bat",       90.0, 0.0, 0.0, "Baseball_Bat"},
	{38,   339,       "Katana",              90.0, 0.0, 0.0, "Katana"},
	{39,   335,       "Faca",       90.0, 0.0, 0.0, "Faca"},
	{40,   337,       "pa",             90.0, 0.0, 0.0, "Pa"},
	/* ============= [ Granadas ] ============= */
	{41,   342,       "Granada",       0.0, 0.0, 0.0, "Granada"},
	/* ============= [ Munia*a*es ] ============= */
	{42,   18644,      "Chave de fenda",       90.0, 0.0, 0.0, "Chave_de_fenda"},
	{43,   18635 ,      "Martelo",       90.0, 0.0, 0.0, "Martelo"},
	{44,   341,      "Motoserra",           0.0, 0.0, 0.0, "Motoserra"},
	{45,   1212,      "Dinheiro",        0.0, 0.0, 0.0, "Dinheiro"},
	{46,   18634,      "Pe de Cabra",        0.0, 0.0, 0.0, "Pe_de_cabra"},
	/* ============= [ Variados ] ============= */
	{47,   18875,     "GPS",                0.0, 0.0, 0.0, "GPS"},
	{48,   1575,      "Explosivo",           0.0, 0.0, 0.0, "Explosivo"},
	{49,   19917,     "Motor",             0.0, 0.0, 0.0, "Motor"},
	{50,   19921,     "Toolbox",            0.0, 0.0, 0.0, "ToolBox"},
	{51,   2967,      "Radio",       0.0, 0.0, 0.0, "Radio"},
	{52,   19142,     "Colete Niv.2",        90.0, 0.0, 0.0, "Colete_Niv.2"},
	{53,   19472,     "Mascara de gas",           0.0, 0.0, 0.0, "Mascara_de_gas"},
	{54,   19792,     "Cartao de Acesso",             0.0, 0.0, 0.0, "Cartao_de_acesso"},
	{55,   1650,      "Galao de combustivel",      90.0, 0.0, 0.0, "Galao_de_combustivel"},
	{56,   19602,     "Mina", 0.0, 0.0, 0.0, "Mina"},
	{57,   344,       "Molotov", -90.0, 0.0, 0.0, "Molotov"},
	{58,   11747,     "Pano", 0.0, 0.0, 0.0, "Pano"},

	/* ============= [ Vazios ] ============= */
	{59,   18871,      "Celular",    0.0, 0.0, 0.0, "Celular"},
	{60,   19631,      "Marreta",    0.0, 0.0, 0.0, "Marreta"},
	{61,   19904,     "Colete Nvl.1", 90.0, 0.0, 0.0, "Colete Nvl.1"},
	{62,   351,       "Pump Shotgun",   90.0, 0.0, 0.0, "Pump-Shotgun"},
	{63,   364,       "Controle Detonador",       0.0, 0.0, 0.0, "Controle_detonador"},
	{64,   356,       "M4-A1",      90.0, 0.0, 0.0, "M4-A1"},
	{65,   355,       "AK-47",                90.0, 0.0, 0.0, "AK-47"},
	{66,   1650,      "Galao vazio",            90.0, 0.0, 0.0, "Galao_vazio"},
    {67,   1654,      "Dinamite", -90.0, 0.0, 0.0, "Dinamite"},
    {68,   358,       "Sniper", 90.0, 0.0, 0.0, "Sniper"},
    {69,   19998,     "Isqueiro", 0.0, 0.0, 0.0, "Isqueiro"},
    {70,   2804,      "Carne Crua", 0.0, 0.0, 0.0, "Carne_Crua"},
    {71,   19847,     "Carne Assada", 0.0, 0.0, 0.0, "Carne_Assada"},
    
    {72,   2043,      "Municao 9mm", 0.0, 0.0, 0.0, "Municao_9mm"},
    {73,   2043,      "Municao SMG", 0.0, 0.0, 0.0, "Municao_SMG"},
    {74,   2043,      "Municao Escopeta", 0.0, 0.0, 0.0, "Municao_Escopeta"},
    {75,   2043,      "Municao AR", 0.0, 0.0, 0.0, "Municao_AR"},
    {76,   2043,      "Municao Rifle", 0.0, 0.0, 0.0, "Municao_Rifle"},
    {77,   2043,      "Municao.50", 0.0, 0.0, 0.0, "Municao.50"},
    
    {78,   1550,      "Coyote Backpack", 90.0, 0.0, 0.0, "Coyote_Backpack"},//mochila 4
    //Raid - mais id 59=celular; tnt= 48; dinamite = 67;
    {79,   19808,      "Teclado", 0.0, 0.0, 90.0, "Teclado"},
    {80,   19273,     "Temporizador", -90.0, 0.0, 0.0, "Temporizador"},
    {81,   1252,      "C4", -90.0, 0.0, 0.0, "C4"},
    {82,   363,       "Bomba Gala", -90.0, 0.0, 0.0, "Bomba_galao"},
    {83,   2036,       "Arma Quebrada", -90.0, 0.0, 0.0, "Arma_Quebrada"},
    {84,   19087,       "Corda", -90.0, 0.0, 0.0, "Corda"},
    {85,   19942,       "Radio Quebrado", -90.0, 0.0, 0.0, "Radio_Quebrado"}
    //{83,   19141,     "Capacete", 0.0, 0.0, 0.0, "Capacete"}
};

stock GetNameItemY(ItemID)
{
    new nameITEM[MAX_ITEM_NAME];
    if(ItemID == -1)
    {
        nameITEM = "Slot-Vazio";
    }else{
        format(nameITEM, MAX_ITEM_NAME, ItemInfo[ItemID][Item_Name]);
    }
    return nameITEM;
}
stock GetNameItemInv(ItemID)
{
    new nameITEM[20];
    if(ItemID == -1)
    {
        nameITEM = "Item-Invalido";
    }else{
        format(nameITEM, 20, ItemInfo[ItemID][Item_Name2]);
    }
    return nameITEM;
}
Comparar(string1[], string2[])
{
    if(strlen(string1) != strlen(string2))  return false;
    return (!strcmp(string1, string2, true, strlen(string1)) ? (true) : (false));
}

stock WeaponsServer(weaponid){
    switch(weaponid){
        case 0, 5, 6, 8, 9, 16, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 46: return true;
    }
    return false;
}

stock WeaponItem(weaponid) {
    new itemWeapon = 0;
    switch(weaponid){
        case 23: itemWeapon = 31;
        case 24: itemWeapon = 29;
        case 25: itemWeapon = 36;
        case 26: itemWeapon = 35;
        case 27: itemWeapon = 62;
        case 28: itemWeapon = 33;
        case 29: itemWeapon = 32;
        case 30: itemWeapon = 65;
        case 31: itemWeapon = 64;
        case 32: itemWeapon = 34;
        case 34: itemWeapon = 68;
    }
    return itemWeapon;
}


stock ModifyVehicleSpeed(vehicleid,mph) //Milles por Hora
{
    new Float:Vx,Float:Vy,Float:Vz,Float:DV,Float:multiple;
    GetVehicleVelocity(vehicleid,Vx,Vy,Vz);
    DV = floatsqroot(Vx*Vx + Vy*Vy + Vz*Vz);
    if(DV > 0) //Directional velocity must be greater than 0 (display strobes if 0)
    {
        multiple = ((mph + DV * 100) / (DV * 100)); //Multiplying DV by 100 calculates speed in MPH
        return SetVehicleVelocity(vehicleid,Vx*multiple,Vy*multiple,Vz*multiple);
    }
    return 0;
}
stock ConvertToQuantia(number)
{
    new real,mil,milhao,milhaor,bilhao,bilhaor,string[50];
    if(number > 999999999)
    {
        bilhao = number / 1000000000; bilhaor = number % 1000000000;
        milhao =  bilhaor / 1000000; milhaor = bilhaor % 1000000;
        mil = milhaor / 1000; real = milhaor % 1000;
    }
    else if(number > 999999)
    {
        milhao = number / 1000000; milhaor = number % 1000000;
        mil = milhaor / 1000; real = milhaor % 1000;
    }
    else if(number > 999)
    {mil = number / 1000; real = number % 1000;}

    if(number > 999999999)
    {format(string, 100, "%d.%03d.%03d.%03d", bilhao, milhao, mil, real);}

    else if(number > 999999)
    {format(string, 100, "%d.%03d.%03d", milhao, mil, real);}
    else if(number > 999)
    {format(string, 100, "%d.%03d", mil, real);}

    else
    {format(string, 100, "%d", number);}
    return string;
}
stock ConvertTime(number)
{
    new hours = 0, mins = 0, secs = 0, string[128];
    hours = floatround(number / 3600);
    mins = floatround((number / 60) - (hours * 60));
    secs = floatround(number - ((hours * 3600) + (mins * 60)));
    new days = 0;

    if(hours >= 24)
    {
        days = floatround((hours/24), floatround_floor);
        hours = hours % 24;
    }
    if(days > 0)
    {
        format(string, 100, "%d dias, %02dh, %02dmin e %02d seg", days, hours, mins, secs);
    }
    else if(hours > 0)
    {
        format(string, 100, "%02dh, %02d min e %02d seg", hours, mins, secs);
    }
    else
    {
        format(string, 100, "%02d min e %02d seg", mins, secs);
    }
    return string;
}

stock CargoAdm(admnivel)
{
	new cu[60];
	if(admnivel == 1)
	{
	    cu = "Ajudante";
	}
	else if(admnivel == 2)
	{
	    cu = "Moderador";
	}
	else if(admnivel == 3)
	{
		cu = "Administrador";
	}
	else if(admnivel == 4)
	{
		cu = "Master Admin";
	}
	else if(admnivel == 5)
	{
		cu = "Gerente";
	}
	else if(admnivel == 6)
	{
		cu = "Sub Fundador";
	}
	else if(admnivel == 7)
	{
		cu = "Fundador";
	}
	else if(admnivel == 8)
	{
		cu = "Sub Dono";
	}
	else if(admnivel == 9)
	{
		cu = "Dono";
	}
	else if(admnivel == 10)
	{
		cu = "Dono Geral";
	}
	return cu;
}
stock PegarVip(vp)
{
	new cu[60];
	if(vp == 1)
	{
	    cu = "{FFFF00}Vip";
	}
	else
	{
		cu = "Sem Vip";
	}
	return cu;
}

stock IsPlayerOnline(name[])
{
	new PlayerName2[MAX_PLAYER_NAME];
    foreach(new i : Player)
	{
	   	GetPlayerName(i, PlayerName2, sizeof(PlayerName2));
	   	if(strcmp(name,PlayerName2,false)==0)
		{
		   	return true;
		}
	}
	return 0;
}
CallBack:GetPlayerID(striing[])
{
    foreach(new i : Player)
    {
       	new testname[MAX_PLAYER_NAME];
	   	GetPlayerName(i, testname, sizeof(testname));
	   	if(strcmp(testname,striing,false)==0)
	   	{
	   	    return i;
		}
    }
    return INVALID_PLAYER_ID;
}

new Flood[MAX_PLAYERS];
new floodChat[MAX_PLAYERS];
new FloodCmd[MAX_PLAYERS];

#define DIALOG_VantagensVip (100)


// ==================== [ Criar carros ] ================================ //

// STRING GLOBAL //
new MEGAString[5500];
new StringH[264];
// =====================[ Sistema de Veiculos ] ========================== //
enum InfoC
{
	cModel,
	Existe,
    Senha[50],
	Float:cLocationx,
	Float:cLocationy,
	Float:cLocationz,
	Float:cAngle,
	cColorOne,
	cColorTwo,
	bool:cMotor,
	bool:cTrancado,
    Float:LatariaV,
    cGasolina,
};
new CarInfo[MAX_VEHICLES][InfoC];

// =====================[ Android Checagem ] ========================== //
new Plataforma[MAX_PLAYERS];
//#define         D_PCOUANDROID                                               40

// =====================[ Editor de Objetos ] ========================== //
// =====================[ Sistema de Cla's ] ========================== //
new ClanConvidado[MAX_PLAYERS],
    QuemConvidou[MAX_PLAYERS];

#define COR_ERRO 	0xBABABAFF
#define COR_BRANCO  0xFFFFFFAA
#define COR_ADM  	0x007FFFAA

new
	gstring[256];
#define MensagemFormatada(%1,%2,%3,%4) do{format(gstring,sizeof(gstring),%3,%4);SendClientMessage(%1,%2,gstring);}while(IsPlayerConnected(-1))
#define MensagemFormatadaAll(%1,%2,%3) do{format(gstring,sizeof(gstring),%2,%3);SendClientMessageToAll(%1,gstring);}while(IsPlayerConnected(-1))
#define SendClientMessageEx(%1,%2,%3,%4) do{format(gstring,sizeof(gstring),%3,%4);SendClientMessage(%1,%2,gstring);}while(IsPlayerConnected(-1))

// ======================[ PASTAS DO SERVIDOR ] ======================== //
#define Pasta_Carros         					  		   		"Carros/%d.ini"
#define Pasta_Ranks             						   		"Rank/rank_%s.ini"
#define PASTA_KEYS                                              "Codigos/%s.cod"
// =====================[ Textdraw de Login ] ========================== //
stock PertoVeiculo(playerid, Float:range)
{
    new Float:X, Float:Y, Float:Z, id = -1;
    for(new I = 1; I < GetVehiclePoolSize()+1; I++)
    {
        GetVehiclePos(I, X, Y, Z);
        if(IsPlayerInRangeOfPoint(playerid, range, X, Y, Z))
        {
            id = I;
            break;
        }
    }
    return id;
}

stock GetSkinOff(const nickname[])   
{
    new idskin = 32, query[100], DBResult:result;
    format(query, sizeof query, "SELECT * FROM `Contas` WHERE `PlayerName`='%q'", nickname);
    result = db_query(Database, query);
    if(db_num_rows(result) > 0){
        idskin = db_get_field_assoc_int(result, "Skin");
    }
    db_free_result(result);
    return idskin;
}

showTelaLogin(playerid)
{
    SetPlayerInterior(playerid, 0); SetPlayerVirtualWorld(playerid, 2);
    InterpolateCameraPos(playerid, -1418.118774, -952.987365, 204.039123, -1418.454223, -952.966857, 204.039932, 1000);
    InterpolateCameraLookAt(playerid, -1423.109375, -952.680480, 204.051620, -1423.444824, -952.659973, 204.052429, 1000);

    PlayerTextDrawSetString(playerid, TextLoginP[playerid], "Logar");

    for(new txd=0; txd < 13; txd++) TextDrawShowForPlayer(playerid, TextLoginG[txd]); 
    PlayerTextDrawShow(playerid, TextLoginP[playerid]);
	SelectTextDraw(playerid, 0x808080FF);
    return true;
}

hideTelaLogin(playerid)
{
    for(new txd=0; txd < 13; txd++) TextDrawHideForPlayer(playerid, TextLoginG[txd]); 
    PlayerTextDrawHide(playerid, TextLoginP[playerid]);
	CancelSelectTextDraw(playerid);
	return true;
}
ShowCreatedBox(playerid)
{
    for(new b = 0; b < 12; b++) TextDrawShowForPlayer(playerid, Created_Box[b]);
    SelectTextDraw(playerid, Preto);
    return 1;
}
HideCreatedBox(playerid)
{
    for(new b = 0; b < 12; b++) TextDrawHideForPlayer(playerid, Created_Box[b]);
    CancelSelectTextDraw(playerid);
    return 1;
}
new bool:VendoInv[MAX_PLAYERS];
new Pagina_WCreate[MAX_PLAYERS];
new PaginaInventario[MAX_PLAYERS];

new PaginaCreateItem[MAX_PLAYERS];
#define MAX_ITEM_CREATE 49

new bool:natora[MAX_PLAYERS];
new bool:Trancado;
new ator[10];
new idparedebomb[MAX_PLAYERS], idParedeMina[MAX_PLAYERS];
new objetoc4[MAX_PLAYERS];
new idcaixap[MAX_PLAYERS];
new idcaixaup[MAX_PLAYERS];
new idCarAF[MAX_PLAYERS];

new idVehSenha[MAX_PLAYERS];

new BoxAeroSelect[MAX_PLAYERS];

new itemselecionado[MAX_PLAYERS];
//new InventorySelect[MAX_PLAYERS];
new bool:PlayerSelecionandoItem[MAX_PLAYERS];
new idcarrop[MAX_PLAYERS],
    IDVehP[MAX_PLAYERS];

new bool:msglog[MAX_PLAYERS],

    Msggloballog[MAX_PLAYERS],
    bool:GlobalFechado = false;

new EQUIPOU[MAX_PLAYERS];

new DelayClick[MAX_PLAYERS];

new bool:conectando[MAX_PLAYERS];
new specing[MAX_PLAYERS];
new errousenha[MAX_PLAYERS];
new bool:permitidocaixa = true;
new TomouTiro[MAX_PLAYERS];

new idporta[MAX_PLAYERS];
new idchurrasqueira[MAX_PLAYERS];

new JaFabricando[MAX_PLAYERS];

new BebedorSize[18];
new GalaoSize[12];
new Text3D:galaotext[12];
new Text3D:bebedortext[18];
new bool:permitidoparede = true;

new timeF[MAX_PLAYERS];

//new Text3D:PlayerNickName[MAX_PLAYERS];

new ArrombandoSecunds[MAX_PLAYERS];
new bool:ArrombandoCarro[MAX_PLAYERS];
new bool:RepairVeh[MAX_PLAYERS], SRepairVeh[MAX_PLAYERS];
new bool:AbastecVEH[MAX_PLAYERS], sAbastecVEH[MAX_PLAYERS];
new bool:RemovendoGV[MAX_PLAYERS], sRemovendoGV[MAX_PLAYERS];

//Raid ======================================================
#define BOMBAGALAO    1
#define BOMBADINAMITE 2
#define BOMBAC4       3

new BombaUsada[MAX_PLAYERS];

/*new caidosegundos[MAX_PLAYERS];
new timercaido[MAX_PLAYERS];

new timerrilando[MAX_PLAYERS],
    RilandoAmigoID[MAX_PLAYERS],
    rilandosegundos[MAX_PLAYERS],
    jarilando[MAX_PLAYERS];*/

new verifiqued[MAX_PLAYERS];
new P_Timer_Secunds[MAX_PLAYERS];

/*
gas toxico do zumbi
*/
new SecundGToxicZ[MAX_PLAYERS];

new bool:morto[MAX_PLAYERS];

new tempoatual;
new TemperaturaAtual;

new minaplayer[MAX_PLAYERS];
new Float:minapos[MAX_PLAYERS][3];

new ideditorp[MAX_PLAYERS],
    ideditorrec[MAX_PLAYERS];

new objmina[MAX_PLAYERS];
new bool:encheG[MAX_PLAYERS];

// # Dialogs #
#define D_Sexo             (2)
#define D_Inventario       (3)
#define D_UsarDropar       (4)
#define D_QuantiaDropar    (5)

#define DIALOG_TENT_VIEW 17
#define DIALOG_TENT_VIEW_S 18
#define DIALOG_TENT_VIEW_S2 19
#define MAX_ITEMS 66

// # Enumeradores e Variaveis #
enum Player_Data
{
    pAdmin,
    pAtendidos,
	pBom,
	pMedio,
	pRuim,
    //...

    pClan,
    pCargoClan,
    pDiscord[21],

    pPreso,
    pBackpack,
    pSlots,
	pFome,
	pSede,
	pCoins,
	pTemGPS,
	pXp,
	pDinheiro,
	pkill,
	pDeath,
    pKillZ,
	pSkin,
	pUltimoLogin,
    pAvisoDM,
    pTomouTiro,
	pDiaLogin,
	pMesLogin,
	pAnoLogin,
    pAnoReg,
    pMesReg,
    pDiaReg,
	pMadeira,
	pTentLink,
	pSelectLoot,
	pTenPMalas,
	pTemRADIO,
	pIP[16],
    pPassword[40],
	pTempoVip,
	pFerro,
	pVip,
    Youtuber,
	pLevel,
    Float:pHealth,
    Float:pArmour,

    //pCapacete,

    pNvlColete,

	Float:pPosX,
	Float:pPosY,
	Float:pPosZ,

    pInterior,
    pVirtualW,
    pCama,
    pSecundsJ,
    pHorasJ,
    pTempoVivo,
	bool:pMute,
    bool:pBlockPM,
	bool:pDuty,
	bool:pConectado
    //bool:pDanoQueda
};

/*new bool:ValidArma[MAX_PLAYERS][47];
new MuniWeapon[MAX_PLAYERS][47];*/

//new NoFloodWeapon[MAX_PLAYERS];

new bool:AdminOculto[MAX_PLAYERS];
enum ParedeInfo
{
    ID,
   	Dono[MAX_PLAYER_NAME],
    Senha[60],
    Existe,
    ObjectJ,
	Text3D:Text3Dp,
    Float: PosX,
    Float: PosY,
    Float: PosZ,
    Float: RX,
    Float: RY,
    Float: RZ,
	metallife,
	upgrade,
    Modelo,

    //Mesa Craft
    ItemM1,              
    QuantiaIM1,
    ItemM2,
    QuantiaIM2,
    //==========

    //Churrasqueira Craft
    IChurrasqueira,
    MChurrasqueira,
    ObjectCarne,
    bool:AssandoC,
    //==========
    
    bool:Fechada
}
new CraftInfo[MAX_CRAFTS][ParedeInfo];

enum TrituInfo
{
    ID,
    DonoRCC[MAX_PLAYER_NAME],
    Existe,
    ObjectT,
	Text3D:Text3Dt,
    Float: PosX,
    Float: PosY,
    Float: PosZ,
    Float: RX,
    Float: RY,
    Float: RZ
}
new Tritu[MAX_TRITU][TrituInfo];

enum INFOVEADO{
    VeadoID,
	VeadoExiste,
	Text3D:TextVeado,
	StatusVeado,
	Float:VeadoX,
    Float:VeadoY,
    Float:VeadoZ,
    Float:RX,
    Float:RY,
    Float:RZ
}
new InfoVeado[100][INFOVEADO];

enum ArvoreInfo
{
    ID,
    Existe,
    ObjectA,
	Text3D:TextArvore,
	VidaArvore,
    Float: PosX,
    Float: PosY,
    Float: PosZ,
    Float: RX,
    Float: RY,
    Float: RZ,
}
new Arvore[MAX_ARVORES][ArvoreInfo];

enum PedraInfo
{
    ID,
    Existe,
	Text3D:TextPedra,
	ObjectPD,
	VidaPedra,
    Float: PosX,
    Float: PosY,
    Float: PosZ,
    Float: RX,
    Float: RY,
    Float: RZ,
}
new Pedra[MAX_PEDRAS][PedraInfo];

enum CaixaInfo
{
    ID,
    ModelC,
   	Dono[MAX_PLAYER_NAME],
    Existe,
    ObjectC,
    Upgrade,
    Float: PosX,
    Float: PosY,
    Float: PosZ,
    Float: RX,
    Float: RY,
    Float: RZ,
    Text3D:LabelC,
	bool:caberta,
}
new Caixa[MAX_CAIXA][CaixaInfo];

GetUpgradeBoxName(id)
{
    new NAMEUP[20];
    if(Caixa[id][Upgrade] == 1) {NAMEUP = "Basic Box";}
    else if(Caixa[id][Upgrade] == 2) {NAMEUP = "Regular Box";}
    else if(Caixa[id][Upgrade] == 3) {NAMEUP = "Supreme Box";}
    return NAMEUP;
}
enum BOX_INFO{
    ItemC,
    QuantiaC
}
new Box_Item[MAX_CAIXA][15][BOX_INFO];
#define INVALID_OBJECT_BOX 19475
#define INVALID_LINK       "Emply"
enum WEAPON_BOX
{
    ArmaID,
    MunicaoID
}
new WeaponBox[MAX_CAIXA][20][WEAPON_BOX];

new pInfo[MAX_PLAYERS][Player_Data];

enum Vehicle_Data
{
    Dono[MAX_PLAYER_NAME],
    cSenha[50],
	vCombustivel,
	VehicleID,
    Float:vHealth,
	bool:vLock,
	bool:vTemMotor,
	bool:vMTLigado,
};

new vInfo[MAX_VEHICLES][Vehicle_Data];

//GangZones Variaveis
new gps;
new docaszone;
new blackzone;
new Area51;
new Area52;
new safezonels;
new aerozone;
new safezoneroca;
new safezonesf;

new naviozone;
new fazendazone;

//////////////////////
new TelaLoading[MAX_PLAYERS];


new TimerPreso[MAX_PLAYERS];
new TimerACaixa[MAX_PLAYERS];
stock ShowTimerAcao(playerid, const acaoName[], segundos)
{
    Acao_Ativa[playerid] = true;
    new acao[40], stre[30];
    format(acao, sizeof acao, acaoName);
    PlayerTextDrawSetString(playerid, TimerTextAcao[playerid][0], acao);
    format(stre, sizeof stre, "%02d:%02d", segundos / 60, segundos % 60);
    PlayerTextDrawSetString(playerid, TimerTextAcao[playerid][2], stre);
    PlayerTextDrawShow(playerid, TimerTextAcao[playerid][0]);
    PlayerTextDrawShow(playerid, TimerTextAcao[playerid][1]);
    PlayerTextDrawShow(playerid, TimerTextAcao[playerid][2]);
    return 1;
}
stock HideTimerAcao(playerid)
{
    Acao_Ativa[playerid] = false;
    PlayerTextDrawHide(playerid, TimerTextAcao[playerid][0]);
    PlayerTextDrawHide(playerid, TimerTextAcao[playerid][1]);
    PlayerTextDrawHide(playerid, TimerTextAcao[playerid][2]);

    if(RemovendoMotor[playerid]) RemovendoMotor[playerid]=false;
    if(AdicionandoMotor[playerid]) AdicionandoMotor[playerid]=false;
    if(ArrombandoCarro[playerid])ArrombandoCarro[playerid] = false;
    if(RepairVeh[playerid])RepairVeh[playerid]=false;
    if(AbastecVEH[playerid])AbastecVEH[playerid]=false;
    if(RemovendoGV[playerid])RemovendoGV[playerid]=false;

    if(ACaixa[playerid]){
        KillTimer(TimerACaixa[playerid]);
        ACaixa[playerid]=false;
    }
    return 1;
}
stock explode(aExplode[][], const sSource[], const sDelimiter[] = " ", iVertices = sizeof aExplode, iLength = sizeof aExplode[])
{
	new
		iNode,
		iPointer,
		iPrevious = -1,
		iDelimiter = strlen(sDelimiter);

	while(iNode < iVertices)
	{
		iPointer = strfind(sSource, sDelimiter, false, iPointer);

		if(iPointer == -1)
		{
			strmid(aExplode[iNode], sSource, iPrevious, strlen(sSource), iLength);
			break;
		}
		else
		{
			strmid(aExplode[iNode], sSource, iPrevious, iPointer, iLength);
		}

		iPrevious = (iPointer += iDelimiter);
		++iNode;
	}

	return iPrevious;
}

new GunName[47][20] =
{
	"Fist","Brass Knuckles","Golf Club","Nightstick","Knife","Basebal Bat","Shovel","Pool Cue","Katana","Chainsaw","Double-ended Dildo","Dildo","Vibrator",
	"Silver Vibrator","Flowers","Cane","Grenade","Tear Gas","Molotv Cocktail","?","?","?","9mm","Silenced 9mm","Desert Eagle","Shotgun","Sawnoff-Shotgun",
	"Combat Shotgun","Micro-SMG","MP5","Ak-47","M4","Tec9","Country Rifle","Sniper Rifle","RPG","HS-RPG","Flame-Thrower","Minigun","Satchel Charge","Detonator",
	"Spray Can","Fire Extinguisher","Camera","Night Goggles","Thermal Goggles","Parachute"
};

new Float:Respawns[][] =
{
	{2113.5503,1627.0692,10.8203},
    {-141.4032,1182.1147,19.7500},
    {-1563.5631,2696.3960,55.7926},
    {2024.2794,-1870.9336,13.5469},
    {2878.5208,-1737.3754,11.0401},
    {634.4799,-571.8823,16.3359},
    {-2606.9102,1394.3036,7.1102},
    {-2851.1592,565.8410,6.8475},
    {-2340.3198,-261.6990,43.0693},
    {1668.8461,-940.7799,45.0324},
    
    {2505.2014,-2672.1953,13.6536,90.0911},
    {1938.4396,-2235.2603,13.5469,267.8676},
    {1165.8777,-2133.7380,67.9400,303.9790},
    {1767.7542,-2021.9603,14.1467,265.9332},
    {2459.4443,-1894.3365,13.5469,0.7255},
    {2548.4871,-1126.2902,63.0544,268.3284},
    {2351.4255,-650.1002,128.0547,181.2657},
    {2319.2991,32.4349,26.4844,0.0640},
    {1411.7379,377.0762,19.4071,63.3510},
    {896.0245,25.4782,91.8493,298.1587},
    {-49.6745,-271.8915,6.6332,177.6645},
    {168.0903,-1344.4014,69.5410,188.8028},
    {383.2382,-2076.6785,7.8359,358.3052},
    {-348.0859,-2252.2112,41.4429,292.4388},
    {-366.2070,-1427.7197,25.7266,89.1365},
    {-1096.2338,-1621.2406,76.3672,267.6583},
    {-1417.0266,-949.3132,201.0938,265.6317},
    {-926.5274,-527.8541,25.9536,355.0810},
    {-536.8090,-102.3255,63.2969,269.6767},
    {-1675.5402,-2403.9565,100.4839,64.1551},
    {-2062.5615,-2571.1433,30.6250,359.4026},
    {-1851.9229,-1699.4121,40.8672,36.4728},
    {-1909.0662,-1367.1981,40.2317,356.4924},
    {-2763.6995,-1548.5507,140.7513,0.5457},
    {-2518.5686,-710.0896,139.3203,0.7299},
    {-2752.1448,-251.5244,7.1875,181.9317},
    {-2493.2529,154.3482,8.2466,107.6907},
    {-2860.2776,465.9616,4.4004,271.0127},
    {-1559.8141,-444.8427,6.0000,314.8286},
    {-1604.0842,134.7225,-11.2261,136.4909},
    {-1452.5778,1078.0093,7.1875,90.2922},
    {-1629.6965,1415.6205,7.1875,135.9298},
    {-2523.4658,1226.3938,37.4283,242.6979},
    {-2794.1824,771.2958,50.5078,357.8406},
    {-2154.8650,1026.8759,80.0000,228.8715},
    {-1739.8575,758.3424,24.8906,2.4468},
    {-2375.0322,726.9743,35.1719,86.5490},
    {-2681.4319,1788.1073,68.4124,0.6882},
    {-2866.5730,2212.3801,174.3308,4.2809},
    {-2615.1157,2274.7471,8.2055,0.5961},
    {-2216.4817,2291.4592,4.9992,40.1075},
    {-2392.0432,2216.2666,4.9844,86.9971},
    {-2091.7393,2313.9211,25.9141,245.9810},
    {-1329.0094,2520.2546,87.0469,275.3676},
    {-2769.3005,2604.0664,101.7756,240.4454},
    {-715.6542,2749.2813,50.1113,136.3571},
    {-225.2406,2751.4507,62.5391,92.7379},
    {461.5489,2503.1677,21.6405,89.9743},
    {-336.4917,1561.6370,75.5625,172.1461},
    {-649.7902,1459.9211,13.4141,96.2386},
    {-190.3679,1098.1733,19.5963,90.6192},
    {818.4396,847.3539,10.7840,292.9166},
    {1288.9746,1106.2510,10.7019,359.3358},
    {659.1732,1720.9489,6.9922,224.7933},
    {693.8058,1959.6948,5.5391,180.9897},
    {1007.2170,2292.2935,11.0675,358.4145},
    {1461.6648,2772.6816,10.8203,270.5312},
    {1908.7889,2712.8965,10.8325,89.0615},
    {2435.6294,2788.9065,10.8203,167.6322},
    {2831.8748,2338.6941,10.8203,180.4371},
    {2827.7603,2006.7139,10.8203,174.6795},
    {2187.4607,1992.1218,10.8203,92.9767},
    {2535.4822,2305.5857,10.8203,89.7065},
    {1609.6594,2130.4351,10.8203,268.8732},
    {1691.7252,1757.1903,10.8203,89.8906},
    {2156.8594,1683.5264,10.6875,93.5755},
    {2801.6372,1291.3783,10.7576,93.5755},
    {2123.6213,931.2985,10.8203,92.0094},
    {1664.2853,1000.4276,10.8203,92.0094},
    {1439.9449,1463.4049,10.8203,92.0094},
    {1361.8829,1469.3488,10.8203,92.3779},
    {1617.9373,600.7108,7.7813,6.2512},
    {2625.9006,736.0453,10.8203,6.2512},
    {1925.8644,680.3789,10.8203,6.2512}

};

#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define HOLDING(%0) ((newkeys & (%0)) == (%0))

/*Modulos*/
#include "../DOS Modules/Player/inventario.pwn"
#include "../DOS Modules/Tenda/tent.pwn"
#include "../DOS Modules/Player/force_drop.pwn"
#include "../DOS Modules/anticheat.pwn"
#include "../DOS Modules/CraftCreate.pwn"
#include "../DOS Modules/vehiclepartposition.pwn"
#include "../DOS Modules/porta_malas.pwn"
#include "../DOS Modules/ItensUteis.pwn"
#include "../DOS Modules/server/db_itens.pwn"
#include "../DOS Modules/server/ZumbisUteis.pwn"
#include "../DOS Modules/server/ClanSystem.pwn"
#include "../DOS Modules/server/SqLite.pwn"
#include "../DOS Modules/server/weapons.inc"
#include "../DOS Modules/server/MesaCraft.pwn"
#include "../DOS Modules/Box_system.pwn"
#include "../DOS Modules/Player/Admin/adm_cmd.pwn"
#include "../DOS Modules/Player/VipCmd.pwn"
#include "../DOS Modules/Mapas/mapa.pwn"
#include "../DOS Modules/server/discordCNC.pwn"
#include "../DOS Modules/Player/Admin/adminspec.pwn"
#include "../DOS Modules/Player/Admin/freecam.pwn"
//#include "../DOS Modules/anticheat/AntiCheat.inc"





main()
{
	print("----------------------------------");
	print(" Day Of Survival BY: Minizera_ - Iniciado!");
	print("----------------------------------");
}
stock LoadMapas()
{
    //floresta By Walker
    CreateDynamicObject(11423, 2877.86450, -352.23792, 11.10370,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18789, 2922.27100, -352.26639, 6.58340,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18789, 3072.18140, -352.26511, 6.58340,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11423, 2939.48633, -352.23792, 11.10370,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11423, 3001.12573, -352.23792, 11.10370,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11423, 3062.72852, -352.23792, 11.10370,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11423, 3124.36768, -352.23792, 11.10370,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11695, 3195.10718, -325.44171, -25.89870,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11695, 3233.75317, -504.85562, -25.93870,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11696, 3361.40308, -457.06796, 39.11480,   0.00000, 0.00000, 174.57069);
    CreateDynamicObject(18228, 3232.02856, -505.33881, -5.21306,   0.00000, 0.00000, 234.34300);
    CreateDynamicObject(18228, 3231.44653, -512.11053, -5.21306,   0.00000, 0.00000, 234.34300);
    CreateDynamicObject(18228, 3229.55347, -541.47046, -5.21306,   0.00000, 0.00000, 234.28300);
    CreateDynamicObject(18228, 3227.22876, -554.62494, -5.21306,   0.00000, 0.00000, 234.28300);
    CreateDynamicObject(18228, 3234.88184, -447.09824, -5.21306,   0.00000, 0.00000, 234.34300);
    CreateDynamicObject(18228, 3232.02856, -505.33881, -5.21306,   0.00000, 0.00000, 234.34300);
    CreateDynamicObject(18228, 3241.82739, -377.81235, -5.21306,   0.00000, 0.00000, 235.12300);
    CreateDynamicObject(18228, 3418.21436, -287.43201, 1.84610,   0.00000, 0.00000, 200.00000);
    CreateDynamicObject(19842, 3234.14233, -414.95490, 3.90700,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(19842, 3209.18628, -413.72681, 3.90700,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(19842, 3184.24487, -413.57919, 3.90700,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(19842, 3159.03857, -422.52859, 3.90700,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(19841, 3263.57959, -409.98596, 66.49767,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(19841, 3141.32520, -426.94052, -4.02105,   -40.00000, 0.00000, 291.59311);
    CreateDynamicObject(3929, 3237.91382, -413.66299, 4.03330,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3929, 3238.22681, -416.75909, 4.03330,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3929, 3220.77197, -414.19626, 3.62726,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(868, 3233.33765, -418.05679, 4.54110,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(868, 3232.91162, -415.73819, 4.03330,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(868, 3220.91089, -418.29333, 3.31195,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(868, 3218.99268, -416.79166, 3.92590,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(868, 3194.44727, -414.05981, 3.52320,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(868, 3197.68066, -416.93280, 4.03099,   0.00000, 0.00000, 358.73172);
    CreateDynamicObject(3929, 3197.29810, -414.36740, 4.03330,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(837, 3196.42749, -414.07935, 4.40446,   0.00000, 0.00000, 93.63893);
    CreateDynamicObject(837, 3195.84839, -416.57449, 4.40446,   0.00000, 0.00000, 93.63893);
    CreateDynamicObject(868, 3148.28564, -421.54376, 4.54110,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(868, 3149.15845, -426.35751, 4.03330,   0.00000, 0.00000, -0.12000);
    CreateDynamicObject(837, 3221.64648, -416.46393, 4.40446,   0.00000, 0.00000, 93.63893);
    CreateDynamicObject(837, 3234.78076, -416.24808, 4.40446,   0.00000, 0.00000, 93.63893);
    CreateDynamicObject(868, 3149.39600, -424.15997, 4.54110,   0.00000, 0.00000, 0.12000);
    CreateDynamicObject(837, 3171.43359, -417.34821, 3.99842,   0.00000, 0.00000, 93.63893);
    CreateDynamicObject(837, 3148.61401, -424.46579, 4.83765,   0.00000, 0.00000, 94.31282);
    CreateDynamicObject(837, 3146.77710, -423.37057, 4.84198,   0.00000, 0.00000, 114.34173);
    CreateDynamicObject(880, 3130.17969, -429.08533, -0.30418,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(880, 3132.71851, -434.93927, -0.30418,   0.00000, 0.00000, -2.46000);
    CreateDynamicObject(880, 3134.18506, -431.75296, -0.30418,   0.00000, 0.00000, 58.68924);
    CreateDynamicObject(880, 3127.91968, -433.67618, -0.30418,   0.00000, 0.00000, 59.36061);
    CreateDynamicObject(3578, 3174.83276, -407.53311, 6.08130,   0.00000, 0.00000, 95.99560);
    CreateDynamicObject(3578, 3176.66772, -417.53561, 6.08130,   0.00000, 0.00000, 105.57220);
    CreateDynamicObject(3578, 3179.97510, -427.11679, 6.08130,   0.00000, 0.00000, 113.55930);
    CreateDynamicObject(3578, 3157.36890, -418.54059, 6.09920,   0.00000, 0.00000, 100.97830);
    CreateDynamicObject(3578, 3160.03076, -428.10779, 6.09920,   0.00000, 0.00000, 110.07200);
    CreateDynamicObject(970, 3159.38110, -427.70120, 7.45546,   0.00000, 0.00000, 290.92392);
    CreateDynamicObject(970, 3158.18726, -423.78763, 7.45546,   0.00000, 0.00000, 283.05865);
    CreateDynamicObject(970, 3157.25854, -419.75757, 7.45546,   0.00000, 0.00000, 282.69235);
    CreateDynamicObject(970, 3156.37573, -415.70981, 7.45546,   0.00000, 0.00000, 281.82251);
    CreateDynamicObject(970, 3155.82324, -411.61801, 7.45546,   0.00000, 0.00000, 273.63379);
    CreateDynamicObject(970, 3175.54150, -409.12589, 7.45546,   0.00000, 0.00000, 274.56128);
    CreateDynamicObject(970, 3176.14600, -413.19623, 7.45550,   0.00000, 0.00000, 282.36734);
    CreateDynamicObject(970, 3177.04834, -417.21655, 7.45546,   0.00000, 0.00000, 282.67487);
    CreateDynamicObject(970, 3178.21313, -421.16461, 7.45546,   0.00000, 0.00000, 290.37155);
    CreateDynamicObject(970, 3179.68213, -425.00760, 7.45546,   0.00000, 0.00000, 291.57303);
    CreateDynamicObject(868, 3235.25732, -414.63257, 3.41810,   0.00000, 0.00000, 78.00000);
    CreateDynamicObject(868, 3223.71118, -417.43011, 3.62519,   0.00000, 0.00000, 78.00000);
    CreateDynamicObject(868, 3227.36108, -415.61374, 3.41810,   0.00000, 0.00000, 78.00000);
    CreateDynamicObject(868, 3212.70776, -418.58524, 3.41810,   0.00000, 0.00000, 78.00000);
    CreateDynamicObject(868, 3213.57666, -414.71243, 3.51947,   0.00000, 0.00000, 77.58000);
    CreateDynamicObject(868, 3204.66040, -413.95712, 3.62653,   0.00000, 0.00000, 77.58000);
    CreateDynamicObject(868, 3206.06055, -417.78821, 3.82414,   0.00000, 0.00000, 137.60944);
    CreateDynamicObject(868, 3186.07568, -417.15381, 4.24382,   0.00000, 0.00000, 77.58000);
    CreateDynamicObject(868, 3178.52295, -417.84766, 4.59260,   0.00000, 0.00000, 142.95700);
    CreateDynamicObject(868, 3176.51270, -419.15201, 4.64777,   0.00000, 0.00000, 143.01704);
    CreateDynamicObject(868, 3176.18262, -415.09039, 4.64777,   0.00000, 0.00000, 142.95705);
    CreateDynamicObject(868, 3177.50708, -416.67059, 4.64777,   0.00000, 0.00000, 143.49702);
    CreateDynamicObject(868, 3156.79102, -422.52872, 4.64777,   0.00000, 0.00000, 142.95705);
    CreateDynamicObject(868, 3156.22607, -420.23853, 4.64777,   0.00000, 0.00000, 144.15706);
    CreateDynamicObject(868, 3156.79102, -422.52872, 4.64777,   0.00000, 0.00000, 142.95705);
    CreateDynamicObject(868, 3156.20581, -417.81717, 4.64777,   0.00000, 0.00000, 144.75706);
    CreateDynamicObject(979, 3228.85547, -477.17950, 7.66510,   0.00000, 0.00000, 357.88190);
    CreateDynamicObject(979, 3208.17554, -472.51108, 7.66510,   0.00000, 0.00000, 338.51959);
    CreateDynamicObject(979, 3243.28638, -475.90176, 7.66510,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(979, 3259.34546, -475.18393, 7.66510,   0.00000, 0.00000, 2.74258);
    CreateDynamicObject(978, 3221.39844, -465.25690, 7.66510,   0.00000, 0.00000, 167.00000);
    CreateDynamicObject(978, 3231.04590, -466.85580, 7.66510,   0.00000, 0.00000, 174.00000);
    CreateDynamicObject(978, 3243.58887, -468.25568, 7.66510,   0.00000, 0.00000, 177.00000);
    CreateDynamicObject(978, 3260.04590, -468.59869, 7.66510,   0.00000, 0.00000, 182.00000);
    CreateDynamicObject(18228, 3259.34497, -574.79932, -5.21310,   0.00000, 0.00000, 316.00000);
    CreateDynamicObject(18228, 3258.49707, -562.73279, -5.21310,   0.00000, 0.00000, 280.00000);
    CreateDynamicObject(18228, 3260.11035, -503.63870, -5.21310,   0.00000, 0.00000, 280.00000);
    CreateDynamicObject(18228, 3260.89746, -521.85730, -5.21310,   0.00000, 0.00000, 280.00000);
    CreateDynamicObject(11695, 3403.12793, -529.43671, -25.61870,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18228, 3306.13428, -579.35730, -5.21310,   0.00000, 0.00000, 316.00000);
    CreateDynamicObject(18228, 3259.34497, -574.79932, -5.21310,   0.00000, 0.00000, 316.00000);
    CreateDynamicObject(18228, 3300.31641, -577.88171, -5.21310,   0.00000, 0.00000, 316.00000);
    CreateDynamicObject(18228, 3305.30054, -563.66278, -5.21310,   0.00000, 0.00000, 316.23999);
    CreateDynamicObject(11695, 3433.27539, -416.29318, -25.61870,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11695, 3340.77173, -370.25385, -25.65870,   0.00000, 0.00000, -0.30000);
    CreateDynamicObject(979, 3358.73022, -556.67493, 33.09500,   0.00000, 0.00000, -10.00000);
    CreateDynamicObject(19951, 3349.36719, -550.38214, 30.38940,   0.00000, 0.00000, 116.00000);
    CreateDynamicObject(19951, 3350.24609, -552.34302, 30.38940,   0.00000, 0.00000, 116.00000);
    CreateDynamicObject(19951, 3351.35889, -554.28290, 30.38940,   0.00000, 0.00000, 130.00000);
    CreateDynamicObject(19951, 3353.30688, -555.77942, 30.38940,   0.00000, 0.00000, 152.00000);
    CreateDynamicObject(979, 3376.70581, -563.62500, 33.09500,   0.00000, 0.00000, -21.00000);
    CreateDynamicObject(979, 3395.45361, -567.38501, 33.09500,   0.00000, 0.00000, -6.00000);
    CreateDynamicObject(979, 3433.14551, -569.96350, 33.09500,   0.00000, 0.00000, -9.00000);
    CreateDynamicObject(979, 3447.96167, -568.79120, 33.09500,   0.00000, 0.00000, 10.00000);
    CreateDynamicObject(979, 3466.91602, -540.76099, 33.09500,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(979, 3462.50537, -522.28741, 33.09500,   0.00000, 0.00000, 103.00000);
    CreateDynamicObject(979, 3460.37842, -503.41919, 33.09500,   0.00000, 0.00000, 86.00000);
    CreateDynamicObject(19951, 3460.54102, -496.48639, 30.60010,   0.00000, 0.00000, -77.00000);
    CreateDynamicObject(19951, 3459.99976, -494.99347, 30.60010,   0.00000, 0.00000, -47.00000);
    CreateDynamicObject(19951, 3458.97339, -493.90854, 30.60010,   0.00000, 0.00000, -33.00000);
    CreateDynamicObject(19951, 3457.74927, -493.17245, 30.60010,   0.00000, 0.00000, -18.00000);
    CreateDynamicObject(19951, 3456.43872, -492.63986, 30.60010,   0.00000, 0.00000, -4.00000);
    CreateDynamicObject(11696, 3590.51270, -477.02689, 39.11480,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(11697, 3521.83423, -422.03384, 125.10030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11697, 3449.14063, -422.0330, 125.16030,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(11698, 3445.75146, -422.05258, 125.24030,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(11698, 3453.59961, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3456.56738, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3459.55103, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3462.51489, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3465.49316, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3468.46094, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3471.43140, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3474.38745, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3477.37012, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3480.29761, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3483.28394, -422.01889, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3486.26294, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3489.24951, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3492.19800, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3495.13867, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3498.10376, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3501.07715, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3504.05713, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3507.04297, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3510.03345, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3512.97437, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3515.98291, -422.03381, 124.78030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(11698, 3517.44043, -422.02301, 124.74030,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19842, 3482.39990, -410.47986, 7.46216,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3482.39990, -435.46631, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3482.39990, -460.42831, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3482.39990, -485.38721, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3482.39990, -510.34570, 7.46220,   0.00000, 0.00000, -0.06000);
    CreateDynamicObject(19842, 3482.37988, -533.06110, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3482.33984, -580.61609, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3494.02271, -435.46631, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3494.02271, -460.42831, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3470.78442, -460.42831, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3470.78442, -485.38721, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3470.78442, -510.34570, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3459.14990, -485.40649, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3459.14990, -510.34570, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3470.78442, -535.31372, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3470.78442, -560.30902, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3470.78442, -585.29932, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19842, 3459.18774, -560.30902, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(10166, 3478.00562, -403.34766, -1.98978,   0.00000, 0.00000, 83.78303);
    CreateDynamicObject(10166, 3484.43701, -520.04816, -2.90592,   0.00000, 0.00000, 83.78303);
    CreateDynamicObject(18752, 3474.34692, -311.48312, 6.27361,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18752, 3470.59009, -323.15891, -2.95682,   0.00000, 0.00000, 300.15598);
    CreateDynamicObject(19841, 3473.62744, -339.65689, 59.53640,   -40.98000, 0.00000, 1.50710);
    CreateDynamicObject(17025, 3450.57617, -335.07910, 49.54970,   0.00000, 340.00000, 305.08179);
    CreateDynamicObject(17025, 3447.77979, -342.60834, 47.38861,   0.00000, 340.00000, 305.08179);
    CreateDynamicObject(19841, 3473.80615, -346.46158, 58.35221,   -40.98000, 0.00000, 1.50710);
    CreateDynamicObject(17025, 3453.14209, -350.34689, 44.17571,   0.00000, 340.00000, 305.08179);
    CreateDynamicObject(19841, 3474.01416, -392.12302, 24.45827,   -20.98000, 0.00000, 2.22845);
    CreateDynamicObject(17025, 3445.78467, -369.04596, 25.44747,   0.00000, 340.00000, 305.08179);
    CreateDynamicObject(19841, 3473.74414, -359.98300, 53.57419,   -40.98000, 0.00000, 1.50710);
    CreateDynamicObject(17025, 3443.11865, -361.52417, 33.28925,   0.00000, 340.00000, 305.08179);
    CreateDynamicObject(19841, 3473.78882, -373.96475, 40.55322,   -20.98000, 0.00000, 1.50710);
    CreateDynamicObject(19841, 3482.79077, -403.00952, 9.69428,   -20.98000, 0.00000, 2.04845);
    CreateDynamicObject(19841, 3489.05688, -392.36984, 24.45827,   -20.98000, 0.00000, 2.04845);
    CreateDynamicObject(17025, 3457.71729, -367.88440, 25.44747,   0.00000, 340.00000, 305.08179);
    CreateDynamicObject(19841, 3482.31299, -374.31168, 40.55322,   -20.98000, 0.00000, 1.50710);
    CreateDynamicObject(19841, 3489.87964, -374.30298, 40.55322,   -20.98000, 0.00000, 1.32710);
    CreateDynamicObject(17025, 3464.29932, -368.28879, 25.44747,   0.00000, 340.00000, 305.14178);
    CreateDynamicObject(17025, 3462.47949, -350.88290, 44.17571,   0.00000, 340.00000, 297.82178);
    CreateDynamicObject(19841, 3480.46216, -360.17789, 53.57419,   -40.98000, 0.00000, 1.50710);
    CreateDynamicObject(19841, 3473.74414, -359.98300, 53.57419,   -40.98000, 0.00000, 1.50710);
    CreateDynamicObject(19841, 3484.31787, -359.61069, 53.57420,   -41.00000, 0.00000, 18.00000);
    CreateDynamicObject(17025, 3461.71289, -347.38513, 47.28455,   0.00000, 340.00000, 305.08179);
    CreateDynamicObject(17025, 3440.06519, -366.15518, 33.22034,   0.00000, 340.00000, 305.08179);
    CreateDynamicObject(19841, 3481.37744, -348.56720, 58.35220,   -41.00000, 0.00000, -4.00000);
    CreateDynamicObject(17025, 3455.29468, -325.48248, 57.76940,   0.00000, 340.00000, 305.08179);
    CreateDynamicObject(17025, 3447.82227, -323.25647, 62.95729,   0.00000, 340.00000, 313.06894);
    CreateDynamicObject(19841, 3482.20679, -392.82281, 24.45827,   -20.98000, 0.00000, 2.04845);
    CreateDynamicObject(900, 3464.45483, -382.43185, 38.92474,   0.00000, -40.00000, 56.55053);
    CreateDynamicObject(900, 3462.61255, -350.19235, 59.13483,   0.00000, -40.00000, 56.55053);
    CreateDynamicObject(900, 3464.34717, -367.89703, 51.25868,   0.00000, -40.00000, 56.55053);
    CreateDynamicObject(900, 3493.18359, -367.81735, 49.82208,   0.00000, -40.00000, 77.64168);
    CreateDynamicObject(900, 3490.10449, -357.77774, 58.15973,   0.00000, -40.00000, 77.23564);
    CreateDynamicObject(900, 3469.51709, -341.92419, 64.63801,   0.00000, -40.00000, 9.86636);
    CreateDynamicObject(900, 3466.28760, -391.35770, 23.67800,   0.00000, -60.00000, 56.55050);
    CreateDynamicObject(900, 3487.70410, -391.30710, 23.67800,   0.00000, -60.00000, 56.55050);
    CreateDynamicObject(900, 3473.14771, -398.56821, 15.79340,   0.00000, -80.00000, 56.55050);
    CreateDynamicObject(900, 3479.26709, -396.98990, 15.79340,   0.00000, -80.00000, 56.55050);
    CreateDynamicObject(900, 3486.73755, -395.77316, 15.79340,   0.00000, -80.00000, 56.55050);
    CreateDynamicObject(900, 3480.03320, -406.98383, 2.15558,   0.00000, -80.00000, 56.55050);
    CreateDynamicObject(19841, 3473.36670, -550.32373, 2.68470,   -50.98000, 0.00000, 2.04850);
    CreateDynamicObject(19841, 3470.68164, -510.53644, 2.05299,   -50.98000, 0.00000, 2.04850);
    CreateDynamicObject(19842, 3459.18823, -585.26819, 7.46220,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(900, 3458.79102, -566.94220, 6.38243,   0.00000, 0.00000, 73.06567);
    CreateDynamicObject(900, 3454.89771, -607.93884, 5.08019,   0.00000, 0.00000, 97.12961);
    CreateDynamicObject(900, 3458.79102, -566.94220, 6.38243,   0.00000, 0.00000, 73.06567);
    CreateDynamicObject(900, 3488.12842, -579.77887, 6.38243,   0.00000, 0.00000, 73.12567);
    CreateDynamicObject(900, 3486.80298, -612.50159, -0.61667,   0.00000, 0.00000, 73.12567);
    CreateDynamicObject(19841, 3467.81909, -607.20380, 1.78827,   -50.00000, 0.00000, 0.30301);
    CreateDynamicObject(900, 3487.57080, -595.83405, 6.13818,   0.00000, 0.00000, 73.12567);
    CreateDynamicObject(900, 3459.29736, -588.25476, 6.38243,   0.00000, 0.00000, 73.12567);
    CreateDynamicObject(19841, 3475.14526, -606.17712, 1.78827,   -50.00000, 0.00000, 0.30301);
    CreateDynamicObject(901, 3466.58862, -602.40656, 5.08020,   0.00000, 0.00000, 97.12960);
    CreateDynamicObject(901, 3475.85205, -603.38348, 5.08020,   0.00000, 0.00000, -11.00000);
    CreateDynamicObject(901, 3484.50220, -609.04486, 2.36720,   0.00000, 0.00000, -11.00000);
    CreateDynamicObject(901, 3492.64282, -606.89221, 2.36720,   0.00000, 0.00000, -11.00000);
    CreateDynamicObject(901, 3478.61963, -610.71771, 0.87039,   -139.01988, 25.68002, 97.12960);
    CreateDynamicObject(901, 3472.19604, -610.39398, 1.29714,   -139.01988, 25.68002, 97.12960);
    CreateDynamicObject(901, 3473.53491, -549.43378, 5.49961,   0.00000, 0.00000, -11.00000);
    CreateDynamicObject(901, 3475.03516, -545.83624, 5.53377,   0.00000, 0.00000, -11.00000);
    CreateDynamicObject(901, 3466.57397, -506.95380, 5.12773,   0.00000, 0.00000, 327.28391);
    CreateDynamicObject(901, 3471.21436, -508.09042, 5.12773,   0.00000, 0.00000, 327.28391);

    new RuaTexturizar;
    RuaTexturizar = CreateDynamicObject(11111, 3405.00488, -73.76580, 6.81520,   0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);
    RuaTexturizar = CreateDynamicObject(11111, 3464.97192, -73.76420, 6.8252,   0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);
    RuaTexturizar = CreateDynamicObject(11111, 3577.27954, -170.83740, 6.81520,   0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);
    RuaTexturizar = CreateDynamicObject(11111, 3577.2542, -350.7098, 6.8352,   -0.0300, 0.0000, 0.0000);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);
    RuaTexturizar = CreateDynamicObject(11111, 3577.26807, -290.73560, 6.81520,   0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);
    RuaTexturizar = CreateDynamicObject(11111, 3577.26953, -230.79649, 6.81520,   0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);
    RuaTexturizar = CreateDynamicObject(11111, 3477.40356, -73.76160, 6.81520,   0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);
    RuaTexturizar = CreateDynamicObject(6881, 3194.98413, -243.76599, 6.81520,   0.00000, 0.00000, 180.00000);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);
    RuaTexturizar = CreateDynamicObject(6881, 3274.95483, -183.76610, 6.81520,   0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);
    RuaTexturizar = CreateDynamicObject(6881, 3195.09717, -442.23981, 6.81520,   0.00000, 0.00000, 270.00000);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);
    RuaTexturizar = CreateDynamicObject(6881, 3335.01953, -103.79177, 6.81520,   0.00000, 0.00000, 180.00000);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);
    RuaTexturizar = CreateDynamicObject(6881, 3547.38477, -103.70110, 6.81520,   0.00000, 0.00000, 90.10870);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);
    RuaTexturizar = CreateDynamicObject(4808, 3150.24609, -343.01419, 6.82592,   0.00000, 0.00000, 90.00000);
    SetDynamicObjectMaterial(RuaTexturizar, 0, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 1, 5703, "roads_lawn", "LAroad_offroad1", 0xFFFFFFFF);
    SetDynamicObjectMaterial(RuaTexturizar, 2, 17500, "stormdrain", "craproad3_LAe", 0xFFFFFFFF);

    CreateDynamicObject(901, 3482.59009, -509.14307, 5.12773,   0.00000, 0.00000, 327.28391);
    CreateDynamicObject(19840, 3238.85059, -414.17648, 5.41709,   -20.00000, 0.00000, 269.38480);
    CreateDynamicObject(896, 3244.44653, -414.00293, 12.36418,   0.00000, 0.00000, 344.10785);
    CreateDynamicObject(896, 3267.76050, -416.51633, 76.73833,   -107.69997, 59.64005, 76.68090);
    CreateDynamicObject(896, 3269.17944, -401.29236, 75.43732,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(896, 3267.41699, -413.62280, 70.49646,   -1.74000, 22.50002, 350.72589);
    CreateDynamicObject(901, 3264.23438, -414.93848, 66.16544,   0.00000, 0.00000, 52.01093);
    CreateDynamicObject(901, 3268.25073, -410.51895, 80.60706,   0.00000, 0.00000, -85.98007);
    CreateDynamicObject(901, 3261.91455, -409.66403, 64.96253,   -19.01999, -22.26000, 228.41080);
    CreateDynamicObject(896, 3268.48071, -410.87628, 70.49646,   -1.74000, 22.50002, 350.72589);
    CreateDynamicObject(17026, 3263.28149, -413.71527, 22.66495,   -144.00000, -100.00000, 360.00000);
    CreateDynamicObject(17026, 3271.99414, -415.11029, 46.35596,   -144.00000, -100.00000, 360.00000);
    CreateDynamicObject(3930, 3258.59082, -412.65436, 57.32970,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3931, 3258.41943, -414.11050, 57.83980,   0.00000, 0.00000, 69.00000);
    CreateDynamicObject(3929, 3256.89697, -410.75214, 57.32970,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3929, 3258.38477, -409.11902, 57.32970,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3930, 3257.64722, -408.20691, 57.32970,   0.00000, 0.00000, -0.54000);
    CreateDynamicObject(3930, 3257.63940, -406.71539, 57.32970,   0.00000, 0.00000, -4.32000);
    CreateDynamicObject(3931, 3258.40845, -410.40411, 57.32969,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3930, 3258.66309, -411.74457, 57.32970,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3930, 3258.65527, -407.72021, 57.43168,   0.00000, 0.00000, -0.54000);
    CreateDynamicObject(3930, 3257.06812, -409.33432, 57.32970,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3929, 3257.64575, -415.55380, 57.32970,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3931, 3256.85962, -412.16241, 57.32970,   0.00000, 0.00000, -178.00000);
    CreateDynamicObject(3931, 3257.14722, -413.97818, 57.32969,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3930, 3258.62280, -416.88126, 57.32970,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(821, 3256.83301, -416.98550, 57.12780,   0.00000, 0.00000, 310.97800);
    CreateDynamicObject(3930, 3257.57178, -409.73639, 57.32970,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3930, 3257.76245, -411.40427, 57.32970,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3930, 3257.82983, -413.20084, 57.32970,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3930, 3258.44336, -415.30099, 57.32970,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3931, 3258.28418, -416.66556, 57.94489,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(821, 3256.51855, -414.23920, 57.12780,   0.00000, 0.00000, 310.97800);
    CreateDynamicObject(821, 3256.60522, -412.00806, 57.12780,   0.00000, 0.00000, 310.97800);
    CreateDynamicObject(821, 3256.81641, -409.19022, 57.12780,   0.00000, 0.00000, 310.55801);
    CreateDynamicObject(821, 3256.60522, -412.00806, 57.12780,   0.00000, 0.00000, 310.97800);
    CreateDynamicObject(821, 3262.61182, -405.57919, 78.71239,   0.00000, 0.00000, 309.95804);
    CreateDynamicObject(821, 3256.60522, -412.00806, 57.12780,   0.00000, 0.00000, 310.97800);
    CreateDynamicObject(821, 3256.81641, -409.19022, 57.12780,   0.00000, 0.00000, 310.55801);
    CreateDynamicObject(821, 3252.02393, -398.42786, 34.71839,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3257.37598, -420.29535, 55.57788,   0.00000, 0.00000, 310.97800);
    CreateDynamicObject(821, 3256.47461, -405.90622, 57.12780,   0.00000, 0.00000, 309.95804);
    CreateDynamicObject(821, 3261.84302, -407.73688, 77.99104,   0.00000, 0.00000, 309.95804);
    CreateDynamicObject(821, 3262.39746, -411.79269, 77.99104,   0.00000, 0.00000, 309.95804);
    CreateDynamicObject(821, 3261.57471, -411.07950, 80.00226,   0.00000, 0.00000, 309.95804);
    CreateDynamicObject(821, 3265.12500, -403.82687, 68.12209,   0.00000, 0.00000, 309.95804);
    CreateDynamicObject(3929, 3257.95117, -404.76389, 57.32970,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3929, 3257.34863, -405.42914, 56.70213,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3930, 3258.49268, -407.28378, 57.32970,   0.00000, 0.00000, -0.54000);
    CreateDynamicObject(3930, 3258.65527, -407.72021, 57.74700,   0.00000, 0.00000, -0.54000);
    CreateDynamicObject(821, 3262.57568, -403.47458, 77.99104,   0.00000, 0.00000, 309.95804);
    CreateDynamicObject(821, 3261.44385, -403.54459, 68.12209,   0.00000, 0.00000, 309.95804);
    CreateDynamicObject(19841, 3251.52637, -409.98251, 44.00393,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(17026, 3272.24463, -409.32602, 46.35596,   -144.00000, -100.00000, 360.00000);
    CreateDynamicObject(17026, 3272.24463, -409.32602, 33.96714,   -144.00000, -100.00000, 360.00000);
    CreateDynamicObject(896, 3271.06982, -409.58423, 89.53120,   0.00000, 0.00000, 336.66602);
    CreateDynamicObject(896, 3249.09985, -422.73767, 31.66614,   0.00000, 0.00000, 336.66602);
    CreateDynamicObject(901, 3245.96582, -414.69025, 25.05304,   0.00000, 0.00000, 262.77487);
    CreateDynamicObject(896, 3249.03296, -406.80164, 31.66614,   0.00000, 0.00000, 336.66602);
    CreateDynamicObject(896, 3246.03174, -410.08203, 4.97558,   0.00000, 0.00000, 336.56601);
    CreateDynamicObject(896, 3228.77246, -405.29468, 1.04624,   0.00000, 0.00000, 344.16785);
    CreateDynamicObject(896, 3244.07910, -414.29666, 18.94368,   0.00000, 0.00000, 344.10785);
    CreateDynamicObject(18228, 3233.83960, -446.26846, -4.46197,   0.00000, 0.00000, 235.06300);
    CreateDynamicObject(19841, 3242.88232, -413.59839, 19.60371,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(18228, 3232.62622, -391.40302, -5.91318,   0.00000, 0.00000, 235.12300);
    CreateDynamicObject(896, 3247.96729, -411.71515, 18.94368,   0.00000, 0.00000, 344.16785);
    CreateDynamicObject(896, 3229.36084, -426.44424, 3.04237,   0.00000, 0.00000, 344.16785);
    CreateDynamicObject(821, 3257.14600, -402.64694, 55.68085,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3231.64673, -404.52197, 9.10496,   0.00000, 0.00000, 310.40817);
    CreateDynamicObject(821, 3243.00439, -408.37024, 35.75931,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3243.10400, -420.10641, 34.59836,   0.00000, 0.00000, 308.96118);
    CreateDynamicObject(821, 3252.04028, -419.92111, 38.97221,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3246.43823, -421.59552, 37.70396,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3250.48218, -414.53195, 42.11245,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3244.06152, -417.09857, 35.75931,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3247.17749, -418.08566, 38.97221,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3250.70996, -414.28687, 38.97221,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3247.58789, -402.13947, 37.96842,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3250.49731, -403.53061, 40.37432,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3253.19946, -400.27744, 40.11897,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3249.04688, -402.51831, 44.41069,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3244.95044, -404.86938, 35.75931,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3241.21118, -406.59937, 27.95032,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3238.03320, -405.29462, 14.97377,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3238.99951, -420.08484, 15.06775,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3234.12183, -410.09885, 9.10496,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3230.95532, -420.32724, 4.45706,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3235.52002, -420.00601, 13.39944,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(821, 3235.96924, -406.66516, 10.94800,   0.00000, 0.00000, 309.89804);
    CreateDynamicObject(19841, 3130.60693, -433.07126, -6.66612,   -40.00000, 0.00000, 291.59311);
    CreateDynamicObject(837, 3208.17725, -413.69754, 4.40450,   0.00000, 0.00000, 193.00000);
    CreateDynamicObject(837, 3211.18384, -414.29086, 4.40450,   0.00000, 0.00000, 171.00000);
    CreateDynamicObject(18671, 3231.73779, -416.00430, 4.34472,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18742, 3232.29688, -415.92590, 4.53922,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3241.76831, -413.22528, 26.88339,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18742, 3244.17017, -413.55414, 31.17266,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3256.36353, -405.47290, 50.85363,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3255.30151, -415.46329, 55.80839,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(896, 3253.82983, -418.96710, 31.66614,   0.00000, 0.00000, 336.66602);
    CreateDynamicObject(18671, 3136.89697, -432.09650, -2.01711,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3136.67480, -430.83331, -1.48848,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(896, 3122.29150, -436.12628, -10.98426,   0.00000, 0.00000, 342.94891);
    CreateDynamicObject(896, 3130.06372, -433.22253, -7.89693,   0.00000, 0.00000, 342.94891);
    CreateDynamicObject(896, 3122.76953, -437.54410, -14.34324,   0.00000, 0.00000, 342.94891);
    CreateDynamicObject(896, 3124.31934, -427.88507, -7.89693,   0.00000, 0.00000, 342.94891);
    CreateDynamicObject(896, 3127.68506, -435.15747, -7.49089,   0.00000, 0.00000, 342.94891);
    CreateDynamicObject(714, 3247.66382, -360.80539, -19.62880,   0.00000, 0.00000, 76.00000);
    CreateDynamicObject(714, 3240.54370, -393.77063, -19.62880,   0.00000, 0.00000, 76.00000);
    CreateDynamicObject(714, 3274.66797, -337.45926, -19.62880,   0.00000, 0.00000, 76.00000);
    CreateDynamicObject(714, 3255.13770, -318.69281, -19.62880,   0.00000, 0.00000, 77.97999);
    CreateDynamicObject(714, 3233.11865, -438.88339, -19.62880,   0.00000, 0.00000, 76.12000);
    CreateDynamicObject(714, 3234.50000, -526.75800, -19.62880,   0.00000, 0.00000, 76.00000);
    CreateDynamicObject(714, 3272.35156, -573.20007, -23.36930,   0.00000, 0.00000, 73.42000);
    CreateDynamicObject(16061, 3166.28540, -457.48447, -2.36500,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(714, 3122.80176, -402.58960, -27.62426,   0.00000, 0.00000, 178.00000);
    CreateDynamicObject(16061, 3300.56470, -488.18814, 116.69705,   0.00000, 0.00000, 171.44267);
    CreateDynamicObject(16061, 3159.52612, -548.69879, -2.36500,   0.00000, 0.00000, 338.00000);
    CreateDynamicObject(16061, 3179.15869, -584.47522, -2.36500,   0.00000, 0.00000, 265.00000);
    CreateDynamicObject(16061, 3181.41943, -547.74927, -2.36500,   0.00000, 0.00000, 331.00000);
    CreateDynamicObject(16061, 3206.78369, -514.74268, -2.36500,   0.00000, 0.00000, 360.00000);
    CreateDynamicObject(714, 3204.00952, -503.62930, -26.32444,   0.00000, 0.00000, 76.18000);
    CreateDynamicObject(714, 3177.39478, -513.02881, -26.32440,   0.00000, 0.00000, 120.00000);
    CreateDynamicObject(714, 3161.63184, -469.17151, -26.32440,   0.00000, 0.00000, 156.00000);
    CreateDynamicObject(714, 3172.64136, -554.31348, -26.32440,   0.00000, 0.00000, 156.00000);
    CreateDynamicObject(714, 3201.26538, -568.79395, -26.32440,   0.00000, 0.00000, 155.94000);
    CreateDynamicObject(714, 3138.88672, -385.40985, -24.32370,   0.00000, 0.00000, 178.00000);
    CreateDynamicObject(16061, 3182.80078, -380.46228, -6.12549,   0.00000, 0.00000, 360.00000);
    CreateDynamicObject(16061, 3192.67212, -262.19232, -2.36500,   0.00000, 0.00000, 156.00000);
    CreateDynamicObject(16061, 3197.54248, -378.02664, -2.36500,   0.00000, 0.00000, 200.00000);
    CreateDynamicObject(16061, 3218.23120, -379.25403, -2.36500,   0.00000, 0.00000, 360.00000);
    CreateDynamicObject(714, 3209.88330, -437.53363, -26.98739,   0.00000, 0.00000, 43.94573);
    CreateDynamicObject(18228, 3356.61035, -564.94324, -3.98165,   0.00000, 0.00000, 316.23999);
    CreateDynamicObject(18228, 3402.95679, -576.32190, -3.98165,   0.00000, 0.00000, 316.12000);
    CreateDynamicObject(18228, 3429.59741, -577.14972, -3.98165,   0.00000, 0.00000, 316.12000);
    CreateDynamicObject(18228, 3362.63452, -582.31403, -3.98165,   0.00000, 0.00000, 316.12000);
    CreateDynamicObject(18228, 3349.18677, -606.52679, -3.98160,   0.00000, 0.00000, 295.00000);
    CreateDynamicObject(18228, 3414.67847, -604.23187, -3.98165,   0.00000, 0.00000, 316.06000);
    CreateDynamicObject(18228, 3428.80371, -593.62488, -3.98165,   0.00000, 0.00000, 316.00000);
    CreateDynamicObject(18228, 3371.25366, -597.54346, -3.98165,   0.00000, 0.00000, 316.00000);
    CreateDynamicObject(18228, 3382.37988, -597.40967, -3.98160,   0.00000, 0.00000, 207.00000);
    CreateDynamicObject(706, 3288.05933, -585.60559, 4.83460,   0.00000, 0.00000, -47.00000);
    CreateDynamicObject(714, 3334.32056, -567.86169, -29.14078,   0.00000, 0.00000, 74.07999);
    CreateDynamicObject(714, 3334.61230, -602.04828, -29.14080,   0.00000, 0.00000, 33.00000);
    CreateDynamicObject(714, 3358.37012, -601.05444, -29.14080,   0.00000, 0.00000, 32.52000);
    CreateDynamicObject(714, 3366.01978, -579.27307, -29.14080,   0.00000, 0.00000, 98.00000);
    CreateDynamicObject(714, 3394.64819, -597.26263, -29.14080,   0.00000, 0.00000, 98.00000);
    CreateDynamicObject(714, 3430.16772, -602.59314, -29.14080,   0.00000, 0.00000, 98.00000);
    CreateDynamicObject(714, 3414.23950, -576.14026, -29.14080,   0.00000, 0.00000, 98.00000);
    CreateDynamicObject(714, 3388.56982, -576.03308, -29.14080,   0.00000, 0.00000, 98.00000);
    CreateDynamicObject(709, 3389.69849, -609.03894, 4.63770,   0.00000, 0.00000, -49.58000);
    CreateDynamicObject(714, 3329.75073, -612.81158, 6.16900,   0.00000, 0.00000, 33.48000);
    CreateDynamicObject(11695, 3581.55054, -532.81537, -25.61870,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11695, 3661.22339, -530.35339, -25.57870,   0.00000, 0.00000, -0.18000);
    CreateDynamicObject(11695, 3673.67358, -413.38394, -25.53870,   0.00000, 0.00000, -0.18000);
    CreateDynamicObject(11695, 3600.48682, -255.43790, -25.85870,   0.00000, 0.00000, -0.18000);
    CreateDynamicObject(11695, 3522.20117, -132.23553, -25.87870,   0.00000, 0.00000, -0.18000);
    CreateDynamicObject(11695, 3381.03955, -133.93021, -25.87870,   0.00000, 0.00000, -0.60000);
    CreateDynamicObject(11695, 3345.04590, -221.67070, -25.93870,   0.00000, 0.00000, -0.60000);
    CreateDynamicObject(11695, 3235.17725, -177.46741, -25.81870,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(16061, 3148.71045, -308.19220, -2.36500,   0.00000, 0.00000, 361.08002);
    CreateDynamicObject(16061, 3129.21362, -309.57703, -2.36500,   0.00000, 0.00000, 361.14001);
    CreateDynamicObject(16061, 3148.08423, -262.88809, -2.36500,   0.00000, 0.00000, 156.00000);
    CreateDynamicObject(16061, 3139.85327, -271.41357, -2.36500,   0.00000, 0.00000, 361.14001);
    CreateDynamicObject(16061, 3137.35205, -308.90140, -2.36500,   0.00000, 0.00000, 361.14001);
    CreateDynamicObject(714, 3129.77319, -299.60870, -24.32370,   0.00000, 0.00000, 178.00000);
    CreateDynamicObject(714, 3136.56934, -267.66058, -24.32370,   0.00000, 0.00000, 178.17999);
    CreateDynamicObject(8060, 3194.97925, -314.68839, 11.77340,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(16061, 3218.23120, -379.25403, -2.36500,   0.00000, 0.00000, 360.00000);
    CreateDynamicObject(16061, 3232.84473, -234.20477, -2.36500,   0.00000, 0.00000, 105.00000);
    CreateDynamicObject(16061, 3224.84839, -267.19531, -2.36500,   0.00000, 0.00000, 104.82000);
    CreateDynamicObject(16061, 3227.68628, -276.50586, -2.36500,   0.00000, 0.00000, 33.00000);
    CreateDynamicObject(16061, 3251.00439, -262.88730, -2.36500,   0.00000, 0.00000, 33.00000);
    CreateDynamicObject(714, 3224.27295, -260.86011, -25.12198,   0.00000, 0.00000, 78.51999);
    CreateDynamicObject(714, 3227.32031, -335.36938, -25.12198,   0.00000, 0.00000, 78.45999);
    CreateDynamicObject(714, 3234.06494, -302.19046, -25.12198,   0.00000, 0.00000, 78.93999);
    CreateDynamicObject(714, 3230.67285, -279.49741, -25.12198,   0.00000, 0.00000, 80.44000);
    CreateDynamicObject(3113, 3179.00317, -333.66879, 5.89546,   0.00000, -80.00000, 180.00000);
    CreateDynamicObject(3113, 3179.22363, -310.86871, 5.89550,   0.00000, -80.00000, 180.00000);
    CreateDynamicObject(3113, 3179.25952, -296.06589, 5.89550,   0.00000, -80.00000, 180.00000);
    CreateDynamicObject(16061, 3205.67749, -348.49438, -6.12550,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(16061, 3213.28101, -348.29749, -6.12550,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(16061, 3177.57129, -216.83833, -2.36500,   0.00000, 0.00000, 135.00000);
    CreateDynamicObject(16061, 3173.89990, -183.37807, -2.36500,   0.00000, 0.00000, 164.00000);
    CreateDynamicObject(16061, 3191.56812, -170.25563, -2.36500,   0.00000, 0.00000, 165.62000);
    CreateDynamicObject(16061, 3226.24121, -191.49585, -2.36500,   0.00000, 0.00000, 265.00000);
    CreateDynamicObject(16061, 3249.87500, -109.77433, -2.36500,   0.00000, 0.00000, 267.28000);
    CreateDynamicObject(16061, 3244.60083, -169.67105, -2.36500,   0.00000, 0.00000, 267.28000);
    CreateDynamicObject(16061, 3252.92090, -144.06143, -2.36500,   0.00000, 0.00000, 267.28000);
    CreateDynamicObject(16061, 3209.20288, -142.38121, -2.36500,   0.00000, 0.00000, 165.98000);
    CreateDynamicObject(16061, 3167.22217, -127.79128, -2.36500,   0.00000, 0.00000, 165.62000);
    CreateDynamicObject(16061, 3187.93604, -126.89034, -2.36500,   0.00000, 0.00000, 165.98000);
    CreateDynamicObject(714, 3195.75659, -187.81575, -24.32370,   0.00000, 0.00000, 178.17999);
    CreateDynamicObject(714, 3228.46167, -173.25269, -24.32370,   0.00000, 0.00000, 178.17999);
    CreateDynamicObject(714, 3256.62744, -153.50711, -24.32370,   0.00000, 0.00000, 178.17999);
    CreateDynamicObject(714, 3263.57642, -128.75987, -24.32370,   0.00000, 0.00000, 179.07999);
    CreateDynamicObject(714, 3212.96265, -123.54623, -24.32370,   0.00000, 0.00000, 179.07999);
    CreateDynamicObject(714, 3176.63135, -132.56110, -24.32370,   0.00000, 0.00000, 176.67999);
    CreateDynamicObject(714, 3273.90137, -237.15799, -19.62880,   0.00000, 0.00000, 76.00000);
    CreateDynamicObject(714, 3309.42920, -207.57237, -19.62880,   0.00000, 0.00000, 76.18000);
    CreateDynamicObject(714, 3342.24878, -251.52277, -19.62880,   0.00000, 0.00000, 76.72000);
    CreateDynamicObject(714, 3289.49927, -285.78125, -19.62880,   0.00000, 0.00000, 76.48000);
    CreateDynamicObject(714, 3399.15283, -256.30280, -19.62880,   0.00000, 0.00000, 76.54000);
    CreateDynamicObject(714, 3368.07690, -190.21797, -19.62880,   0.00000, 0.00000, 77.32001);
    CreateDynamicObject(714, 3338.14185, -122.32941, -27.33058,   0.00000, 0.00000, 77.50001);
    CreateDynamicObject(714, 3412.61768, -134.29468, -19.62880,   0.00000, 0.00000, 77.68001);
    CreateDynamicObject(714, 3400.30737, -109.12780, -19.62880,   0.00000, 0.00000, 81.70001);
    CreateDynamicObject(714, 3424.46460, -221.29620, -19.62880,   0.00000, 0.00000, 77.68001);
    CreateDynamicObject(16061, 3346.43042, -166.56488, -2.36500,   0.00000, 0.00000, 105.00000);
    CreateDynamicObject(16061, 3382.20728, -218.89186, -2.36500,   0.00000, 0.00000, 105.00000);
    CreateDynamicObject(16061, 3347.77954, -280.39752, -2.36500,   0.00000, 0.00000, 105.00000);
    CreateDynamicObject(16061, 3305.56909, -243.61601, -2.36500,   0.00000, 0.00000, 105.06000);
    CreateDynamicObject(16061, 3301.15674, -317.82056, -2.36500,   0.00000, 0.00000, 105.06000);
    CreateDynamicObject(16061, 3360.72021, -320.60193, -2.36500,   0.00000, 0.00000, 105.06000);
    CreateDynamicObject(16061, 3394.91260, -158.17650, -2.36500,   0.00000, 0.00000, 40.00000);
    CreateDynamicObject(16061, 3378.18652, -269.53806, -2.36500,   0.00000, 0.00000, 40.00000);
    CreateDynamicObject(16061, 3338.75146, -116.33057, -2.36500,   0.00000, 0.00000, 149.00000);
    CreateDynamicObject(16061, 3373.39111, -57.44460, -5.32465,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(16061, 3436.72290, -55.99176, -4.81216,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(16061, 3500.77295, -54.45861, -4.64709,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(714, 3311.38403, -69.54920, -26.57431,   0.00000, 0.00000, 273.00000);
    CreateDynamicObject(714, 3339.06030, -60.96857, -30.05280,   0.00000, 0.00000, 244.00000);
    CreateDynamicObject(714, 3410.77979, -54.81384, -31.19917,   0.00000, 0.00000, 244.00000);
    CreateDynamicObject(18228, 3479.38403, -297.07855, -5.21306,   0.00000, 0.00000, 235.12300);
    CreateDynamicObject(18228, 3407.91797, -332.32376, 6.01213,   0.00000, 0.00000, 228.00000);
    CreateDynamicObject(18228, 3445.14380, -255.61780, 5.24056,   0.00000, 0.00000, 171.00000);
    CreateDynamicObject(18228, 3479.91064, -242.23170, 8.06492,   0.00000, 0.00000, 127.00000);
    CreateDynamicObject(18228, 3519.30029, -267.42511, 8.06490,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(18228, 3539.22681, -298.20599, 8.06490,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(18228, 3544.49902, -341.39493, 8.06490,   0.00000, 0.00000, 62.00000);
    CreateDynamicObject(714, 3407.28564, -321.79037, -19.62880,   0.00000, 0.00000, 76.54000);
    CreateDynamicObject(714, 3415.11206, -291.88931, -19.62880,   0.00000, 0.00000, 76.54000);
    CreateDynamicObject(714, 3429.46875, -267.39279, -14.74016,   0.00000, 0.00000, 76.54000);
    CreateDynamicObject(714, 3445.66040, -252.23997, -19.62880,   0.00000, 0.00000, 76.54000);
    CreateDynamicObject(714, 3470.94336, -246.89543, -11.81979,   0.00000, 0.00000, 76.54000);
    CreateDynamicObject(714, 3505.45068, -257.34305, -11.81979,   0.00000, 0.00000, 76.54000);
    CreateDynamicObject(714, 3522.14648, -269.09875, -14.02169,   0.00000, 0.00000, 76.54000);
    CreateDynamicObject(714, 3526.46777, -321.76245, 7.19306,   0.00000, 0.00000, 76.60000);
    CreateDynamicObject(714, 3351.63818, -105.54745, -28.32373,   0.00000, 0.00000, 77.50001);
    CreateDynamicObject(714, 3361.67480, -129.16707, -27.40759,   0.00000, 0.00000, 77.50001);
    CreateDynamicObject(16326, 3390.21826, -95.44745, 6.64294,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3253, 3379.21045, -91.49205, 6.89824,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(16061, 3391.38013, -93.18462, -2.36500,   0.00000, 0.00000, 265.00000);
    CreateDynamicObject(16061, 3379.96289, -112.54856, -2.36500,   0.00000, 0.00000, 149.00000);
    CreateDynamicObject(709, 3189.67236, -574.80939, 4.63770,   0.00000, 0.00000, -49.58000);
    CreateDynamicObject(709, 3222.71997, -485.19678, 4.63770,   0.00000, 0.00000, -49.58000);
    CreateDynamicObject(709, 3233.89453, -336.57532, 4.63770,   0.00000, 0.00000, -49.58000);
    CreateDynamicObject(694, 3179.10815, -523.68604, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3211.46509, -432.93845, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3134.12549, -383.87314, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3129.99951, -274.92548, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3185.01440, -398.75644, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3213.49438, -265.65933, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3193.18896, -183.08452, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3261.13232, -153.01149, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3336.30591, -184.61469, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(689, 3167.42920, -468.90149, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3191.55493, -498.11249, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3165.35962, -555.41516, 6.09927,   0.00000, 0.00000, 3.18000);
    CreateDynamicObject(689, 3193.73096, -432.99728, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3142.01807, -406.39508, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3183.14722, -364.15747, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3146.67456, -332.23575, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3183.34741, -274.31396, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3172.45239, -212.85739, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3221.90894, -234.94293, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3247.56323, -182.56569, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3290.91064, -215.11168, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(709, 3146.46021, -297.94800, 4.63770,   0.00000, 0.00000, -49.58000);
    CreateDynamicObject(683, 3152.37231, -369.14755, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(683, 3188.77441, -376.35977, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(683, 3248.83740, -236.00957, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(683, 3161.36450, -239.05345, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(683, 3213.89282, -199.71196, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(683, 3269.80273, -184.65685, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(683, 3162.82422, -439.93454, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(683, 3196.01123, -474.26828, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(683, 3222.90405, -453.60034, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(694, 3236.27905, -293.57620, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(709, 3170.94019, -133.06422, 4.63770,   0.00000, 0.00000, -49.58000);
    CreateDynamicObject(689, 3156.69653, -437.88232, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(694, 3389.81567, -95.72344, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3313.51318, -66.54507, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(689, 3325.66357, -130.36449, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3385.12793, -131.86404, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3274.05591, -116.02928, 6.09927,   0.00000, 0.00000, 3.24000);
    CreateDynamicObject(709, 3355.24561, -102.01299, 4.63770,   0.00000, 0.00000, -49.58000);
    CreateDynamicObject(709, 3235.10400, -133.93115, 4.63770,   0.00000, 0.00000, -49.58000);
    CreateDynamicObject(683, 3289.49097, -111.23431, 6.30331,   0.00000, 0.00000, 0.60000);
    CreateDynamicObject(694, 3276.88184, -133.71233, 5.46833,   0.00000, 0.00000, -27.12000);
    CreateDynamicObject(16061, 3299.55273, -103.39229, -4.81560,   0.00000, 0.00000, 156.00000);
    CreateDynamicObject(689, 3300.33276, -97.53435, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(16061, 3459.99634, -95.66062, -2.36500,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(16061, 3475.13721, -126.05692, -2.36500,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(16061, 3459.91138, -158.15433, -2.36500,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(16061, 3473.91895, -191.00899, -2.36500,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(16061, 3519.67505, -142.37584, -2.36500,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(16061, 3522.39087, -174.13937, -2.36500,   0.00000, 0.00000, -91.00000);
    CreateDynamicObject(16061, 3511.77148, -107.78604, -2.36500,   0.00000, 0.00000, -90.88000);
    CreateDynamicObject(16061, 3545.33008, -217.60565, -2.36500,   0.00000, 0.00000, 25.00000);
    CreateDynamicObject(16061, 3562.93164, -77.64806, -2.36500,   0.00000, 0.00000, 47.00000);
    CreateDynamicObject(714, 3466.92773, -105.25237, -19.62880,   0.00000, 0.00000, 77.68001);
    CreateDynamicObject(714, 3544.57349, -138.21646, -21.22730,   0.00000, 0.00000, 156.00000);
    CreateDynamicObject(714, 3540.09155, -182.74062, -19.62880,   0.00000, 0.00000, 142.00000);
    CreateDynamicObject(714, 3439.22754, -191.15611, -16.27055,   0.00000, 0.00000, 142.00000);
    CreateDynamicObject(714, 3506.33350, -197.05783, -16.27055,   0.00000, 0.00000, 142.00000);
    CreateDynamicObject(714, 3453.70068, -148.30219, -16.27055,   0.00000, 0.00000, 142.00000);
    CreateDynamicObject(714, 3490.58374, -163.13878, -16.27055,   0.00000, 0.00000, 142.06000);
    CreateDynamicObject(694, 3469.37012, -194.50055, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3519.85547, -150.59180, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3485.68188, -90.80882, 5.46833,   0.00000, 0.00000, 292.75754);
    CreateDynamicObject(694, 3397.61206, -191.92690, 5.46833,   0.00000, 0.00000, -28.74000);
    CreateDynamicObject(694, 3392.16895, -264.71436, 5.46833,   0.00000, 0.00000, -28.74000);
    CreateDynamicObject(709, 3441.13428, -116.79665, 4.63770,   0.00000, 0.00000, -49.58000);
    CreateDynamicObject(709, 3529.76270, -98.60490, 4.63770,   0.00000, 0.00000, -49.52000);
    CreateDynamicObject(709, 3418.68750, -224.74461, 4.63770,   0.00000, 0.00000, -49.70000);
    CreateDynamicObject(709, 3390.68774, -161.51657, 4.63770,   0.00000, 0.00000, -49.88000);
    CreateDynamicObject(689, 3320.34399, -170.13977, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3432.91211, -91.91730, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3467.64453, -90.46025, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3424.95874, -176.70595, 6.09927,   0.00000, 0.00000, 3.18000);
    CreateDynamicObject(689, 3554.49585, -152.93304, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3505.00317, -93.25480, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(694, 3468.05469, -149.44833, 5.46833,   0.00000, 0.00000, -28.68000);
    CreateDynamicObject(683, 3481.18091, -127.02474, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(683, 3514.92480, -85.53945, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(683, 3448.77368, -83.87209, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(689, 3410.65015, -108.75559, 6.09927,   0.00000, 0.00000, 2.82000);
    CreateDynamicObject(694, 3411.05151, -50.62452, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3555.01245, -56.91858, 5.46833,   0.00000, 0.00000, -27.90000);
    CreateDynamicObject(689, 3474.10596, -55.03181, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3531.21069, -57.50244, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3352.49658, -57.32841, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(683, 3376.85840, -53.00199, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(683, 3429.92993, -49.23575, 6.30331,   0.00000, 0.00000, 0.54000);
    CreateDynamicObject(683, 3452.98608, -51.09732, 6.30331,   0.00000, 0.00000, 2.16000);
    CreateDynamicObject(683, 3494.17407, -49.89186, 6.30331,   0.00000, 0.00000, 2.16000);
    CreateDynamicObject(683, 3514.87646, -49.51030, 6.30331,   0.00000, 0.00000, 2.16000);
    CreateDynamicObject(16061, 3572.50708, -64.86259, -2.36500,   0.00000, 0.00000, 47.00000);
    CreateDynamicObject(683, 3580.58984, -60.85606, 6.30331,   0.00000, 0.00000, 2.28000);
    CreateDynamicObject(689, 3568.53442, -72.94573, 6.09927,   0.00000, 0.00000, 4.02000);
    CreateDynamicObject(714, 3535.70605, -241.88403, -19.62880,   0.00000, 0.00000, 142.00000);
    CreateDynamicObject(16061, 3559.85205, -188.43613, -2.36500,   0.00000, 0.00000, 178.00000);
    CreateDynamicObject(694, 3557.48096, -247.04147, 5.46833,   0.00000, 0.00000, -28.20000);
    CreateDynamicObject(689, 3557.55420, -218.82083, 6.09927,   0.00000, 0.00000, 3.36000);
    CreateDynamicObject(689, 3558.56445, -280.11304, 6.09927,   0.00000, 0.00000, 3.60000);
    CreateDynamicObject(683, 3562.38428, -131.73558, 6.30331,   0.00000, 0.00000, 2.16000);
    CreateDynamicObject(683, 3557.27539, -230.66307, 6.30331,   0.00000, 0.00000, 2.16000);
    CreateDynamicObject(683, 3562.27051, -173.30673, 6.30331,   0.00000, 0.00000, 2.52000);
    CreateDynamicObject(709, 3557.35913, -180.68225, 4.63770,   0.00000, 0.00000, 47.00000);
    CreateDynamicObject(709, 3474.79028, -227.31294, 4.63770,   0.00000, 0.00000, 47.00000);
    CreateDynamicObject(16061, 3593.19531, -135.31497, -2.36500,   0.00000, 0.00000, 12.80769);
    CreateDynamicObject(694, 3603.52539, -173.36690, 5.46833,   0.00000, 0.00000, -27.90000);
    CreateDynamicObject(714, 3603.74829, -173.46851, -21.24320,   0.00000, 0.00000, 120.00000);
    CreateDynamicObject(689, 3582.74902, -91.30180, 6.09927,   0.00000, 0.00000, 4.08000);
    CreateDynamicObject(683, 3586.66455, -105.58208, 6.30331,   0.00000, 0.00000, 2.16000);
    CreateDynamicObject(683, 3593.31958, -123.45038, 6.30331,   0.00000, 0.00000, 2.64000);
    CreateDynamicObject(689, 3597.78296, -148.80382, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(683, 3599.19751, -159.68381, 6.30331,   0.00000, 0.00000, 2.64000);
    CreateDynamicObject(16061, 3557.48535, -257.58603, -2.36500,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(16061, 3599.15112, -229.64688, -2.36500,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(16061, 3600.13159, -299.80438, -2.36500,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(16061, 3622.09863, -248.24597, -2.36500,   0.00000, 0.00000, 3.46000);
    CreateDynamicObject(16061, 3648.18726, -221.22479, -2.36500,   0.00000, 0.00000, 3.40000);
    CreateDynamicObject(16061, 3659.31470, -305.61615, -2.36500,   0.00000, 0.00000, 3.70000);
    CreateDynamicObject(16061, 3630.79297, -329.11664, -2.36500,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(714, 3610.70264, -287.38641, -21.24320,   0.00000, 0.00000, 120.84000);
    CreateDynamicObject(714, 3642.04224, -341.90811, -21.24320,   0.00000, 0.00000, 123.42001);
    CreateDynamicObject(714, 3605.57104, -332.34076, -21.24320,   0.00000, 0.00000, 121.32000);
    CreateDynamicObject(714, 3640.77417, -277.42047, -21.24320,   0.00000, 0.00000, 121.08000);
    CreateDynamicObject(714, 3615.21826, -206.48801, -21.24320,   0.00000, 0.00000, 109.14000);
    CreateDynamicObject(709, 3636.11011, -210.25806, 4.63770,   0.00000, 0.00000, 47.06000);
    CreateDynamicObject(694, 3604.71729, -234.97336, 5.46833,   0.00000, 0.00000, -27.42000);
    CreateDynamicObject(694, 3657.13306, -304.16089, 5.46833,   0.00000, 0.00000, -21.12000);
    CreateDynamicObject(694, 3623.01221, -340.10867, 5.46833,   0.00000, 0.00000, -21.12000);
    CreateDynamicObject(694, 3661.74170, -263.43649, 5.46833,   0.00000, 0.00000, -21.12000);
    CreateDynamicObject(689, 3613.58325, -252.33499, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(689, 3606.31982, -294.51849, 6.09927,   0.00000, 0.00000, 3.36000);
    CreateDynamicObject(689, 3624.94434, -288.55713, 6.09927,   0.00000, 0.00000, 3.36000);
    CreateDynamicObject(683, 3597.86157, -208.28278, 6.30331,   0.00000, 0.00000, 2.16000);
    CreateDynamicObject(683, 3600.17749, -270.12924, 6.30331,   0.00000, 0.00000, 2.34000);
    CreateDynamicObject(683, 3598.59912, -325.88422, 6.30331,   0.00000, 0.00000, 2.28000);
    CreateDynamicObject(683, 3633.90527, -289.17044, 6.30331,   0.00000, 0.00000, 2.28000);
    CreateDynamicObject(683, 3667.53735, -196.80144, 6.30331,   0.00000, 0.00000, 2.28000);
    CreateDynamicObject(16061, 3660.25537, -211.29030, -2.36500,   0.00000, 0.00000, 3.40000);
    CreateDynamicObject(16061, 3471.41919, -392.32611, 23.20260,   -40.00000, 0.00000, 187.61360);
    CreateDynamicObject(714, 3374.41870, -343.13336, -19.62880,   0.00000, 0.00000, 76.42000);
    CreateDynamicObject(714, 3307.83618, -339.03009, -19.62880,   0.00000, 0.00000, 74.74000);
    CreateDynamicObject(714, 3601.36377, -358.69037, -21.24320,   0.00000, 0.00000, 119.27999);
    CreateDynamicObject(694, 3600.47095, -356.11658, 5.46833,   0.00000, 0.00000, -22.38000);
    CreateDynamicObject(689, 3611.97046, -323.24939, 6.09927,   0.00000, 0.00000, 3.36000);
    CreateDynamicObject(683, 3593.08838, -301.31305, 6.30331,   0.00000, 0.00000, 2.40000);
    CreateDynamicObject(683, 3594.74243, -337.47369, 6.30331,   0.00000, 0.00000, 1.20000);
    CreateDynamicObject(714, 3541.17480, -325.81036, -18.54585,   0.00000, 0.00000, 121.32000);
    CreateDynamicObject(714, 3546.01929, -359.49893, -18.54585,   0.00000, 0.00000, 121.32000);
    CreateDynamicObject(714, 3538.37231, -294.03519, -14.02169,   0.00000, 0.00000, 76.60000);
    CreateDynamicObject(714, 3488.71313, -283.41895, 26.04790,   0.00000, 0.00000, 70.48000);
    CreateDynamicObject(714, 3443.84961, -288.88229, 14.53269,   0.00000, 0.00000, 67.24000);
    CreateDynamicObject(714, 3437.84961, -305.90485, 26.04790,   0.00000, 0.00000, 66.82000);
    CreateDynamicObject(714, 3516.07690, -294.62018, 17.33046,   0.00000, 0.00000, 76.48000);
    CreateDynamicObject(714, 3477.03711, -319.96307, 42.23977,   0.00000, 0.00000, 77.43334);
    CreateDynamicObject(714, 3497.54956, -280.41168, 7.19306,   0.00000, 0.00000, 75.82000);
    CreateDynamicObject(714, 3461.07446, -294.15790, 34.57137,   0.00000, 0.00000, 75.32040);
    CreateDynamicObject(714, 3452.89648, -277.44064, 12.25192,   0.00000, 0.00000, 75.82000);
    CreateDynamicObject(689, 3528.39429, -212.67311, 6.09927,   0.00000, 0.00000, 3.24000);
    CreateDynamicObject(694, 3514.34766, -323.59897, 37.76574,   0.00000, 0.00000, 333.37750);
    CreateDynamicObject(694, 3510.33496, -303.32855, 31.70929,   0.00000, 0.00000, -27.90000);
    CreateDynamicObject(694, 3482.48999, -272.16791, 33.92820,   0.00000, 0.00000, 69.00000);
    CreateDynamicObject(694, 3464.33472, -295.65973, 42.48646,   0.00000, 0.00000, -29.99999);
    CreateDynamicObject(714, 3521.58081, -335.44431, 25.99377,   0.00000, 0.00000, 76.60000);
    CreateDynamicObject(714, 3478.57837, -346.64948, 35.90334,   0.00000, 0.00000, 77.73335);
    CreateDynamicObject(694, 3513.71118, -346.48892, 37.63630,   0.00000, 0.00000, 333.44968);
    CreateDynamicObject(694, 3481.72949, -346.07263, 37.63630,   0.00000, 0.00000, 333.68967);
    CreateDynamicObject(694, 3446.95825, -341.94571, 32.00459,   0.00000, 0.00000, 338.27911);
    CreateDynamicObject(694, 3450.50000, -314.83972, 44.91550,   0.00000, 0.00000, 334.82965);
    CreateDynamicObject(714, 3425.40234, -334.30374, 12.79645,   0.00000, 0.00000, 77.52518);
    CreateDynamicObject(694, 3418.05688, -324.51553, 20.46452,   0.00000, 0.00000, 334.52966);
    CreateDynamicObject(694, 3496.07031, -291.02750, 50.70860,   0.00000, 0.00000, -11.00000);
    CreateDynamicObject(714, 3451.67822, -347.30362, 35.69723,   0.00000, 0.00000, 77.52929);
    CreateDynamicObject(714, 3498.10742, -353.21851, 26.14636,   0.00000, 0.00000, 76.68929);
    CreateDynamicObject(689, 3497.29419, -354.42584, 58.84648,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(726, 3469.78003, -364.99875, 57.15409,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(694, 3358.73511, -290.51709, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(694, 3265.92603, -335.02664, 5.46833,   0.00000, 0.00000, -28.38000);
    CreateDynamicObject(689, 3299.75488, -321.93063, 6.09927,   0.00000, 0.00000, 3.30000);
    CreateDynamicObject(714, 3459.24829, -359.92545, 23.06426,   0.00000, 0.00000, 77.52929);
    CreateDynamicObject(16061, 3674.42065, -292.62814, -2.36500,   0.00000, 0.00000, 3.40000);
    CreateDynamicObject(16061, 3492.80225, -381.25549, 32.96240,   -40.00000, 0.00000, 187.55360);
    CreateDynamicObject(16061, 3486.60986, -590.87244, -1.74481,   0.00000, 0.00000, 163.00000);
    CreateDynamicObject(16061, 3461.96533, -584.30780, -0.80323,   0.00000, 0.00000, 178.55521);
    CreateDynamicObject(18228, 3525.30396, -586.12396, 3.86016,   0.00000, 0.00000, 336.00000);
    CreateDynamicObject(18228, 3574.19507, -586.92279, 3.86020,   0.00000, 0.00000, 316.00000);
    CreateDynamicObject(18228, 3622.92896, -595.03589, 3.86020,   0.00000, 0.00000, 316.00000);
    CreateDynamicObject(18228, 3670.39844, -581.05865, 3.86020,   0.00000, 0.00000, 345.00000);
    CreateDynamicObject(18228, 3692.55005, -549.79883, 3.86020,   0.00000, 0.00000, 40.00000);
    CreateDynamicObject(18228, 3699.39819, -500.84467, 3.86020,   0.00000, 0.00000, 39.64000);
    CreateDynamicObject(18228, 3707.32642, -450.48840, 3.86020,   0.00000, 0.00000, 47.00000);
    CreateDynamicObject(18228, 3700.85254, -406.43857, 3.86020,   0.00000, 0.00000, 69.00000);
    CreateDynamicObject(18228, 3677.25171, -368.02231, 3.86020,   0.00000, 0.00000, 105.00000);
    CreateDynamicObject(18228, 3636.17017, -361.05789, 3.86020,   0.00000, 0.00000, 135.00000);
    CreateDynamicObject(714, 3664.23560, -363.32135, -19.04130,   0.00000, 0.00000, 123.42001);
    CreateDynamicObject(714, 3690.24585, -378.66089, -19.04130,   0.00000, 0.00000, 123.42001);
    CreateDynamicObject(714, 3705.97070, -423.43622, -19.04130,   0.00000, 0.00000, 123.42001);
    CreateDynamicObject(714, 3707.45654, -456.98682, -19.04130,   0.00000, 0.00000, 123.42001);
    CreateDynamicObject(714, 3701.92847, -496.14706, -19.04130,   0.00000, 0.00000, 123.48000);
    CreateDynamicObject(714, 3700.91235, -541.59113, -19.04130,   0.00000, 0.00000, 123.66000);
    CreateDynamicObject(714, 3683.76538, -575.60992, -19.04130,   0.00000, 0.00000, 123.66000);
    CreateDynamicObject(714, 3651.31909, -598.31805, -19.04130,   0.00000, 0.00000, 124.14001);
    CreateDynamicObject(714, 3607.29175, -597.60480, -19.04130,   0.00000, 0.00000, 33.00000);
    CreateDynamicObject(714, 3560.32178, -597.06982, -19.04130,   0.00000, 0.00000, 34.32000);
    CreateDynamicObject(714, 3514.17505, -593.08765, -19.04130,   0.00000, 0.00000, 34.32000);
    CreateDynamicObject(714, 3524.46216, -609.35553, -19.04130,   0.00000, 0.00000, 34.68000);
    CreateDynamicObject(714, 3709.65161, -592.97772, -19.04130,   0.00000, 0.00000, 123.66000);
    CreateDynamicObject(714, 3712.12866, -512.86877, -19.04130,   0.00000, 0.00000, 123.72000);
    CreateDynamicObject(714, 3729.54761, -471.67072, -19.04130,   0.00000, 0.00000, 123.42001);
    CreateDynamicObject(714, 3741.46265, -449.71747, -19.04130,   0.00000, 0.00000, 123.42001);
    CreateDynamicObject(714, 3727.61914, -419.84433, -19.04130,   0.00000, 0.00000, 123.30000);
    CreateDynamicObject(714, 3723.01855, -380.06317, -19.04130,   0.00000, 0.00000, 122.82001);
    CreateDynamicObject(714, 3701.59863, -345.87622, -19.04130,   0.00000, 0.00000, 121.62001);
    CreateDynamicObject(714, 3677.49048, -339.36420, -19.04130,   0.00000, 0.00000, 121.62001);
    CreateDynamicObject(683, 3739.20337, -347.47610, 6.30331,   0.00000, 0.00000, 2.28000);
    CreateDynamicObject(683, 3696.54785, -335.98270, 6.30331,   0.00000, 0.00000, 2.28000);
    CreateDynamicObject(683, 3721.91040, -375.56766, 6.30331,   0.00000, 0.00000, 2.28000);
    CreateDynamicObject(683, 3740.14673, -407.00543, 6.30331,   0.00000, 0.00000, 2.40000);
    CreateDynamicObject(683, 3752.43555, -433.57620, 6.30331,   0.00000, 0.00000, 2.40000);
    CreateDynamicObject(683, 3735.93750, -457.23474, 6.30331,   0.00000, 0.00000, 2.40000);
    CreateDynamicObject(683, 3737.05444, -477.86722, 6.30331,   0.00000, 0.00000, 2.40000);
    CreateDynamicObject(683, 3720.25122, -490.84674, 6.30331,   0.00000, 0.00000, 2.40000);
    CreateDynamicObject(683, 3731.08032, -526.54291, 6.30331,   0.00000, 0.00000, 2.64000);
    CreateDynamicObject(683, 3737.03760, -560.59082, 6.30331,   0.00000, 0.00000, 2.70000);
    CreateDynamicObject(683, 3736.52026, -580.58081, 6.30331,   0.00000, 0.00000, 2.82000);
    CreateDynamicObject(683, 3718.91772, -598.08099, 6.30331,   0.00000, 0.00000, 2.82000);
    CreateDynamicObject(683, 3709.45923, -579.73993, 6.30331,   0.00000, 0.00000, 2.82000);
    CreateDynamicObject(683, 3696.69751, -607.20422, 6.30331,   0.00000, 0.00000, 2.88000);
    CreateDynamicObject(683, 3678.19458, -599.65430, 6.30331,   0.00000, 0.00000, 2.88000);
    CreateDynamicObject(683, 3647.70337, -609.31158, 6.30331,   0.00000, 0.00000, 2.88000);
    CreateDynamicObject(683, 3622.20605, -611.56165, 6.30331,   0.00000, 0.00000, 2.94000);
    CreateDynamicObject(683, 3570.87158, -611.26001, 6.30331,   0.00000, 0.00000, 3.06000);
    CreateDynamicObject(683, 3541.02295, -605.70068, 6.30331,   0.00000, 0.00000, 3.06000);
    CreateDynamicObject(683, 3508.17139, -615.50098, 6.30331,   0.00000, 0.00000, 3.48000);
    CreateDynamicObject(709, 3525.77490, -612.77032, 4.63770,   0.00000, 0.00000, -49.58000);
    CreateDynamicObject(709, 3720.15186, -594.83997, 4.63770,   0.00000, 0.00000, -50.06000);
    CreateDynamicObject(709, 3709.23022, -534.91107, 4.63770,   0.00000, 0.00000, -50.06000);
    CreateDynamicObject(709, 3743.20923, -460.03940, 4.63770,   0.00000, 0.00000, -50.18000);
    CreateDynamicObject(709, 3738.00122, -401.73486, 4.63770,   0.00000, 0.00000, -53.36000);
    CreateDynamicObject(709, 3706.74121, -343.43057, 4.63770,   0.00000, 0.00000, -54.14000);
    CreateDynamicObject(694, 3734.11792, -364.50122, 5.46833,   0.00000, 0.00000, -21.12000);
    CreateDynamicObject(694, 3752.67554, -437.44659, 5.46833,   0.00000, 0.00000, -21.12000);
    CreateDynamicObject(694, 3724.78955, -501.24161, 5.46833,   0.00000, 0.00000, -21.12000);
    CreateDynamicObject(694, 3731.34106, -559.67578, 5.46833,   0.00000, 0.00000, -21.06000);
    CreateDynamicObject(694, 3689.31079, -599.14191, 5.46833,   0.00000, 0.00000, -21.00000);
    CreateDynamicObject(694, 3655.56030, -604.03638, 5.46833,   0.00000, 0.00000, -20.82000);
    CreateDynamicObject(694, 3599.36523, -608.40393, 5.46833,   0.00000, 0.00000, -20.76000);
    CreateDynamicObject(694, 3561.44116, -606.67181, 5.46833,   0.00000, 0.00000, -20.64000);
    CreateDynamicObject(19952, 3315.33276, -509.92502, 123.09140,   0.00000, 0.00000, 176.30479);
    CreateDynamicObject(19952, 3312.64087, -509.51053, 123.09140,   0.00000, 0.00000, 154.12303);
    CreateDynamicObject(19952, 3310.60156, -508.20358, 123.09140,   0.00000, 0.00000, 136.57768);
    CreateDynamicObject(19952, 3309.09082, -506.46124, 123.09140,   0.00000, 0.00000, 123.75571);
    CreateDynamicObject(19952, 3308.22119, -504.26544, 123.09140,   0.00000, 0.00000, 106.49351);
    CreateDynamicObject(978, 3307.99780, -497.69940, 125.55900,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(978, 3309.07251, -486.65302, 125.55900,   0.00000, 0.00000, -100.00000);
    CreateDynamicObject(978, 3312.70435, -475.18909, 125.55900,   0.00000, 0.00000, -113.00000);
    CreateDynamicObject(979, 3317.87622, -494.59329, 125.55900,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(979, 3321.00952, -482.61069, 125.55900,   0.00000, 0.00000, 69.00000);
    CreateDynamicObject(978, 3319.85059, -464.32990, 125.55900,   0.00000, 0.00000, -130.00000);
    CreateDynamicObject(979, 3328.20483, -471.39471, 125.55900,   0.00000, 0.00000, 47.00000);
    CreateDynamicObject(978, 3329.60645, -455.04340, 125.55900,   0.00000, 0.00000, -139.00000);
    CreateDynamicObject(979, 3338.37378, -462.12210, 125.55900,   0.00000, 0.00000, 38.00000);
    CreateDynamicObject(978, 3341.41187, -445.64001, 125.55900,   0.00000, 0.00000, -142.00000);
    CreateDynamicObject(979, 3348.55103, -453.79050, 125.55900,   0.00000, 0.00000, 38.00000);
    CreateDynamicObject(978, 3354.31201, -436.10059, 125.55900,   0.00000, 0.00000, -148.00000);
    CreateDynamicObject(979, 3359.87012, -444.82211, 125.55900,   0.00000, 0.00000, 37.94000);
    CreateDynamicObject(978, 3367.24316, -429.11768, 125.55900,   0.00000, 0.00000, -156.00000);
    CreateDynamicObject(979, 3371.89038, -437.21027, 125.55900,   0.00000, 0.00000, 25.00000);
    CreateDynamicObject(979, 3383.58081, -432.67657, 125.55900,   0.00000, 0.00000, 18.00000);
    CreateDynamicObject(978, 3379.75049, -424.92807, 125.55900,   0.00000, 0.00000, -164.00000);
    CreateDynamicObject(978, 3393.22876, -421.75726, 125.55900,   0.00000, 0.00000, -171.00000);
    CreateDynamicObject(979, 3397.46313, -429.58295, 125.55900,   0.00000, 0.00000, 11.00000);
    CreateDynamicObject(978, 3406.99585, -420.09274, 125.55900,   0.00000, 0.00000, -178.00000);
    CreateDynamicObject(979, 3410.35840, -428.42984, 125.55900,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(978, 3418.99780, -419.67706, 125.55900,   0.00000, 0.00000, -178.00000);
    CreateDynamicObject(979, 3420.11548, -427.30756, 125.55900,   0.00000, 0.00000, 11.00000);
    CreateDynamicObject(978, 3429.10693, -419.57822, 125.55900,   0.00000, 0.00000, -178.06000);
    CreateDynamicObject(979, 3429.64453, -425.46512, 125.55900,   0.00000, 0.00000, 11.00000);
    CreateDynamicObject(978, 3439.21753, -419.93997, 125.55900,   0.00000, 0.00000, -185.00000);
    CreateDynamicObject(979, 3439.27466, -424.12289, 125.55900,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(714, 3248.35596, -448.66687, -19.62880,   0.00000, 0.00000, 76.12000);
    CreateDynamicObject(16061, 3164.59741, -480.09735, -2.36500,   0.00000, 0.00000, 222.00000);
    CreateDynamicObject(16061, 3328.99902, -442.66461, 116.69705,   0.00000, 0.00000, 133.21693);
    CreateDynamicObject(16061, 3378.29297, -415.28802, 116.69705,   0.00000, 0.00000, 105.39956);
    CreateDynamicObject(16061, 3415.61426, -411.23792, 116.69705,   0.00000, 0.00000, 94.51708);
    CreateDynamicObject(16061, 3345.52075, -472.05954, 116.69705,   0.00000, 0.00000, 133.27257);
    CreateDynamicObject(16061, 3355.61279, -461.64948, 116.69705,   0.00000, 0.00000, 128.96484);
    CreateDynamicObject(16061, 3393.64111, -444.84039, 116.69705,   0.00000, 0.00000, 102.41914);
    CreateDynamicObject(16061, 3413.68286, -436.89828, 116.69705,   0.00000, 0.00000, 277.15933);
    CreateDynamicObject(714, 3241.81714, -496.41891, -19.62880,   0.00000, 0.00000, 76.18000);
    CreateDynamicObject(709, 3299.50513, -259.22632, 4.63770,   0.00000, 0.00000, -49.58000);
    CreateDynamicObject(709, 3332.45361, -443.57843, 124.34824,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(708, 3308.41138, -472.26447, 124.34820,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(708, 3365.80420, -408.91019, 124.34820,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(706, 3313.68652, -431.89249, 120.45879,   0.00000, 0.00000, 0.66000);
    CreateDynamicObject(706, 3341.82251, -413.04453, 120.45880,   0.00000, 0.00000, 62.00000);
    CreateDynamicObject(726, 3493.44507, -374.56384, 50.46271,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(726, 3470.60034, -385.53989, 38.30498,   0.00000, 0.00000, 62.00000);
    CreateDynamicObject(726, 3493.44507, -374.56384, 50.46271,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(726, 3485.70483, -360.53946, 59.60125,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(726, 3464.75854, -376.03271, 50.46270,   0.00000, 0.00000, 33.00000);
    CreateDynamicObject(726, 3493.73975, -383.54999, 38.30500,   0.00000, 0.00000, 142.00000);
    CreateDynamicObject(726, 3494.96289, -391.64050, 43.07665,   0.00000, 0.00000, 142.00000);
    CreateDynamicObject(726, 3472.54736, -401.44885, 23.61716,   0.00000, 0.00000, 142.00000);
    CreateDynamicObject(706, 3310.85718, -391.89178, 120.45879,   0.00000, 0.00000, 0.66000);
    CreateDynamicObject(706, 3294.60742, -412.78113, 120.45879,   0.00000, 0.00000, 0.66000);
    CreateDynamicObject(709, 3295.20776, -511.54504, 124.34824,   0.00000, 0.00000, 2.52000);
    CreateDynamicObject(709, 3412.47437, -413.27725, 124.34820,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(708, 3366.75317, -421.60617, 124.34820,   0.00000, 0.00000, -0.42000);
    CreateDynamicObject(708, 3308.41138, -472.26447, 124.34820,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(708, 3390.40869, -415.03860, 124.34820,   0.00000, 0.00000, -1.32000);
    CreateDynamicObject(709, 3393.67456, -473.83994, 124.34824,   0.00000, 0.00000, -0.42000);
    CreateDynamicObject(709, 3442.75244, -433.48660, 124.34820,   0.00000, 0.00000, -135.00000);
    CreateDynamicObject(709, 3332.80664, -480.50656, 124.34824,   0.00000, 0.00000, -0.36000);
    CreateDynamicObject(708, 3369.64722, -472.36612, 124.34820,   0.00000, 0.00000, -0.42000);
    CreateDynamicObject(708, 3429.23853, -438.44431, 124.34820,   0.00000, 0.00000, -0.42000);
    CreateDynamicObject(708, 3313.20361, -518.22479, 124.34820,   0.00000, 0.00000, -0.42000);
    CreateDynamicObject(713, 3443.24951, -417.02753, 124.19423,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(16061, 3433.70215, -511.87799, 116.69705,   0.00000, 0.00000, 1.90744);
    CreateDynamicObject(16061, 3420.45898, -518.56049, 116.69705,   0.00000, 0.00000, 337.53632);
    CreateDynamicObject(16061, 3411.03613, -464.88092, 116.69705,   0.00000, 0.00000, 264.11331);
    CreateDynamicObject(16061, 3402.29468, -449.69495, 116.69705,   0.00000, 0.00000, 263.45331);
    CreateDynamicObject(16061, 3389.27490, -473.74149, 116.69705,   0.00000, 0.00000, 263.51331);
    CreateDynamicObject(708, 3436.40942, -497.01166, 124.34820,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(713, 3433.40015, -467.66949, 126.64586,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(713, 3373.33325, -448.52820, 126.64586,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(709, 3431.46924, -524.02960, 124.34824,   0.00000, 0.00000, -0.48000);
    CreateDynamicObject(706, 3435.73267, -484.18240, 127.73022,   0.00000, 0.00000, 0.66000);
    CreateDynamicObject(713, 3437.15820, -408.72498, 126.64586,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(16061, 3403.95410, -399.64532, 116.69705,   0.00000, 0.00000, 94.51708);
    CreateDynamicObject(16061, 3349.80029, -397.57932, 116.69705,   0.00000, 0.00000, 93.67709);
    CreateDynamicObject(16061, 3330.61011, -415.22211, 116.69705,   0.00000, 0.00000, 93.67709);
    CreateDynamicObject(16061, 3300.59912, -415.37097, 116.69705,   0.00000, 0.00000, 171.50267);
    CreateDynamicObject(16061, 3312.25195, -413.25534, 116.69705,   0.00000, 0.00000, 171.50267);
    CreateDynamicObject(713, 3331.89063, -511.00540, 135.69971,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(713, 3341.91064, -504.68729, 143.30521,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(979, 3529.37451, -426.73853, 125.55900,   0.00000, 0.00000, -25.00000);
    CreateDynamicObject(978, 3529.80566, -421.63019, 125.55900,   0.00000, 0.00000, 164.00000);
    CreateDynamicObject(978, 3539.92480, -426.29208, 125.55900,   0.00000, 0.00000, 149.00000);
    CreateDynamicObject(19952, 3544.56860, -429.26700, 123.00300,   0.00000, 0.00000, -62.00000);
    CreateDynamicObject(19952, 3545.21411, -431.21286, 123.00300,   0.00000, 0.00000, -98.00000);
    CreateDynamicObject(19952, 3545.00439, -430.15100, 123.00300,   0.00000, 0.00000, -76.00000);
    CreateDynamicObject(18228, 3557.30933, -414.33029, 116.65660,   10.00000, 0.00000, 295.00000);
    CreateDynamicObject(19951, 3534.72168, -429.21555, 123.00300,   0.00000, 0.00000, 156.00000);
    CreateDynamicObject(19951, 3536.66846, -430.29800, 123.00300,   0.00000, 0.00000, 149.00000);
    CreateDynamicObject(18228, 3570.11279, -450.74567, 116.65660,   10.00000, 0.00000, 295.00000);
    CreateDynamicObject(18228, 3602.53027, -421.38345, 121.39780,   0.00000, 0.00000, 345.00000);
    CreateDynamicObject(18228, 3633.90015, -497.71689, 121.39780,   0.00000, 0.00000, 251.00000);
    CreateDynamicObject(18228, 3592.33936, -512.81659, 121.39780,   0.00000, 0.00000, 302.72000);
    CreateDynamicObject(18228, 3627.80542, -542.16138, 121.39780,   0.00000, 0.00000, 303.01999);
    CreateDynamicObject(18228, 3575.14160, -539.16052, 121.39780,   0.00000, 0.00000, 303.01999);
    CreateDynamicObject(18228, 3635.36377, -449.73715, 121.39780,   0.00000, 0.00000, 301.64001);
    CreateDynamicObject(16061, 3568.11499, -448.68970, 116.69705,   0.00000, 0.00000, 1.96744);
    CreateDynamicObject(16061, 3606.21411, -528.64502, 116.69710,   0.00000, 0.00000, 98.00000);
    CreateDynamicObject(16061, 3597.61841, -554.52899, 116.69710,   0.00000, 0.00000, 76.00000);
    CreateDynamicObject(18228, 3543.57544, -533.11279, 123.39390,   0.00000, 0.00000, 324.00000);
    CreateDynamicObject(16061, 3541.37207, -542.62866, 116.69710,   0.00000, 0.00000, 98.00000);
    CreateDynamicObject(709, 3537.84570, -537.80011, 124.34824,   0.00000, 0.00000, 16.98000);
    CreateDynamicObject(709, 3578.07104, -441.50723, 124.34824,   0.00000, 0.00000, 17.40000);
    CreateDynamicObject(709, 3642.78540, -446.70197, 124.34824,   0.00000, 0.00000, 17.34000);
    CreateDynamicObject(706, 3609.82080, -448.99832, 127.73022,   0.00000, 0.00000, 0.66000);
    CreateDynamicObject(706, 3581.43726, -530.59210, 127.73022,   0.00000, 0.00000, 1.08000);
    CreateDynamicObject(706, 3629.56641, -527.50275, 127.73022,   0.00000, 0.00000, 0.90000);
    CreateDynamicObject(16061, 3548.43823, -420.55099, 116.69710,   0.00000, 0.00000, 62.00000);
    CreateDynamicObject(706, 3549.40161, -425.23898, 118.50067,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(16061, 3543.30713, -529.08447, 119.52142,   0.00000, 0.00000, 62.00000);
    CreateDynamicObject(706, 3517.29175, -509.57391, 121.26136,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(979, 3346.38770, -352.01910, 58.14630,   0.00000, 0.00000, 176.00000);
    CreateDynamicObject(19951, 3356.13013, -358.29779, 55.36610,   0.00000, 0.00000, -76.00000);
    CreateDynamicObject(19951, 3355.66211, -356.54260, 55.36610,   0.00000, 0.00000, -62.00000);
    CreateDynamicObject(19951, 3354.52979, -354.43579, 55.36610,   0.00000, 0.00000, -47.00000);
    CreateDynamicObject(19951, 3352.87305, -353.07819, 55.36610,   0.00000, 0.00000, -33.00000);
    CreateDynamicObject(979, 3320.48315, -351.32312, 58.14630,   0.00000, 0.00000, 184.00000);
    CreateDynamicObject(979, 3300.14551, -355.18137, 58.14630,   0.00000, 0.00000, 207.00000);
    CreateDynamicObject(979, 3281.84839, -361.85919, 58.14630,   0.00000, 0.00000, 191.00000);
    CreateDynamicObject(979, 3269.10986, -367.70218, 58.14630,   0.00000, 0.00000, 218.00000);
    CreateDynamicObject(979, 3261.48877, -378.87717, 58.14630,   0.00000, 0.00000, 262.00000);
    CreateDynamicObject(979, 3264.92090, -448.94037, 58.14630,   0.00000, 0.00000, 297.00000);
    CreateDynamicObject(979, 3270.69922, -478.74490, 58.14630,   0.00000, 0.00000, 262.00000);
    CreateDynamicObject(19951, 3269.05469, -485.91861, 55.33140,   0.00000, 0.00000, 105.00000);
    CreateDynamicObject(19951, 3269.58789, -487.34000, 55.33140,   0.00000, 0.00000, 113.00000);
    CreateDynamicObject(19951, 3270.49146, -489.56851, 55.33140,   0.00000, 0.00000, 127.00000);
    CreateDynamicObject(19951, 3271.80273, -490.94070, 55.33140,   0.00000, 0.00000, 135.00000);
    CreateDynamicObject(19951, 3462.79663, -432.74048, 79.44141,   0.00000, 0.00000, 200.23967);
    CreateDynamicObject(19951, 3464.38940, -432.04019, 79.44140,   0.00000, 0.00000, 215.00000);
    CreateDynamicObject(19951, 3465.75513, -430.97699, 79.44140,   0.00000, 0.00000, 229.00000);
    CreateDynamicObject(19951, 3466.71387, -429.42010, 79.44140,   0.00000, 0.00000, 244.00000);
    CreateDynamicObject(19951, 3467.64868, -427.78949, 79.44140,   0.00000, 0.00000, 258.00000);
    CreateDynamicObject(979, 3467.59473, -422.54111, 82.15290,   0.00000, 0.00000, 91.00000);
    CreateDynamicObject(979, 3465.11523, -406.26862, 82.15290,   0.00000, 0.00000, 97.00000);
    CreateDynamicObject(979, 3460.06665, -388.41321, 82.15290,   0.00000, 0.00000, 110.00000);
    CreateDynamicObject(19951, 3457.68188, -383.51620, 79.53010,   0.00000, 0.00000, -33.00000);
    CreateDynamicObject(19951, 3455.29614, -381.13181, 79.53010,   0.00000, 0.00000, -25.00000);
    CreateDynamicObject(19951, 3456.51025, -382.34631, 79.53010,   0.00000, 0.00000, -33.00000);
    CreateDynamicObject(19951, 3453.77832, -380.00891, 79.53010,   0.00000, 0.00000, -18.00000);
    CreateDynamicObject(19951, 3452.05957, -379.05258, 79.53010,   0.00000, 0.00000, -11.00000);
    CreateDynamicObject(19951, 3450.09204, -378.51880, 79.53010,   0.00000, 0.00000, 11.00000);
    CreateDynamicObject(19951, 3448.14673, -379.33240, 79.53010,   0.00000, 0.00000, 33.00000);
    CreateDynamicObject(19952, 3666.98779, -563.64832, 79.38060,   0.00000, 0.00000, -55.00000);
    CreateDynamicObject(19952, 3667.89941, -565.49054, 79.38060,   0.00000, 0.00000, -76.00000);
    CreateDynamicObject(19952, 3667.67603, -567.87842, 79.38060,   0.00000, 0.00000, -105.00000);
    CreateDynamicObject(19952, 3666.78271, -569.98029, 79.38060,   0.00000, 0.00000, -113.00000);
    CreateDynamicObject(978, 3657.98291, -576.40936, 82.13530,   0.00000, 0.00000, 20.00000);
    CreateDynamicObject(19952, 3665.63135, -571.64093, 79.38060,   0.00000, 0.00000, -135.00000);
    CreateDynamicObject(19952, 3663.97339, -573.23535, 79.38060,   0.00000, 0.00000, -135.00000);
    CreateDynamicObject(978, 3643.74878, -580.72858, 82.13530,   0.00000, 0.00000, 11.00000);
    CreateDynamicObject(978, 3626.11816, -583.46429, 82.13530,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(19952, 3619.60522, -583.52185, 79.38060,   0.00000, 0.00000, -200.00000);
    CreateDynamicObject(19952, 3617.13281, -582.44171, 79.38060,   0.00000, 0.00000, -215.00000);
    CreateDynamicObject(19952, 3614.96997, -580.83020, 79.38060,   0.00000, 0.00000, -244.00000);
    CreateDynamicObject(19952, 3614.20142, -578.61102, 79.38060,   0.00000, 0.00000, -258.00000);
    CreateDynamicObject(19952, 3557.01514, -387.57440, 55.49985,   0.00000, 0.00000, 37.60539);
    CreateDynamicObject(19952, 3559.50952, -385.60400, 55.49990,   0.00000, 0.00000, 30.00000);
    CreateDynamicObject(19952, 3562.33105, -384.49881, 55.49980,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(978, 3567.57153, -385.76349, 58.06040,   0.00000, 0.00000, 164.00000);
    CreateDynamicObject(978, 3593.45557, -383.80402, 58.06040,   0.00000, 0.00000, 208.00000);
    CreateDynamicObject(978, 3618.98853, -376.30450, 58.06040,   0.00000, 0.00000, 191.00000);
    CreateDynamicObject(978, 3645.61182, -375.14465, 58.06040,   0.00000, 0.00000, 177.00000);
    CreateDynamicObject(978, 3669.91943, -378.03912, 58.06040,   0.00000, 0.00000, 170.00000);
    CreateDynamicObject(978, 3679.98584, -384.56677, 58.06040,   0.00000, 0.00000, 128.00000);
    CreateDynamicObject(978, 3691.65015, -413.94385, 58.06040,   0.00000, 0.00000, 117.00000);
    CreateDynamicObject(978, 3696.87061, -440.39221, 58.06040,   0.00000, 0.00000, 93.00000);
    CreateDynamicObject(978, 3696.28198, -463.11398, 58.06040,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(19952, 3695.05762, -468.83633, 55.70460,   0.00000, 0.00000, 229.00000);
    CreateDynamicObject(19952, 3693.86865, -470.20871, 55.70460,   0.00000, 0.00000, 215.00000);
    CreateDynamicObject(19952, 3691.90454, -471.83289, 55.70460,   0.00000, 0.00000, 200.00000);
    CreateDynamicObject(19952, 3689.84595, -472.58841, 55.70460,   0.00000, 0.00000, 185.00000);
    CreateDynamicObject(19952, 3554.00513, -572.61462, 30.44661,   0.00000, 0.00000, -120.00000);
    CreateDynamicObject(19952, 3552.75366, -574.67603, 30.44660,   0.00000, 0.00000, -142.00000);
    CreateDynamicObject(19952, 3550.68506, -575.88770, 30.44660,   0.00000, 0.00000, -156.00000);
    CreateDynamicObject(19952, 3548.64429, -576.03931, 30.44660,   0.00000, 0.00000, -185.00000);
    CreateDynamicObject(19952, 3546.75928, -575.66022, 30.44660,   0.00000, 0.00000, -193.00000);
    CreateDynamicObject(19952, 3544.86279, -575.25629, 30.44660,   0.00000, 0.00000, -193.00000);
    CreateDynamicObject(978, 3536.35693, -575.53741, 33.18070,   0.00000, 0.00000, 9.00000);
    CreateDynamicObject(978, 3518.01147, -579.18256, 33.18070,   0.00000, 0.00000, 17.00000);
    CreateDynamicObject(978, 3500.91406, -581.54529, 33.18070,   0.00000, 0.00000, -6.00000);
    CreateDynamicObject(978, 3485.12524, -575.38873, 33.18070,   0.00000, 0.00000, -43.00000);
    CreateDynamicObject(978, 3477.86841, -562.13452, 33.18070,   0.00000, 0.00000, -79.00000);
    CreateDynamicObject(978, 3477.31812, -545.53809, 33.18070,   0.00000, 0.00000, -101.00000);
    CreateDynamicObject(978, 3479.57031, -525.89520, 33.18070,   0.00000, 0.00000, -88.00000);
    CreateDynamicObject(978, 3481.56201, -500.04138, 33.18070,   0.00000, 0.00000, -101.00000);
    CreateDynamicObject(978, 3488.55664, -480.97305, 33.18070,   0.00000, 0.00000, -116.00000);
    CreateDynamicObject(19952, 3490.71216, -475.72681, 30.53220,   0.00000, 0.00000, 69.00000);
    CreateDynamicObject(19952, 3490.88135, -473.81372, 30.53220,   0.00000, 0.00000, 69.00000);
    CreateDynamicObject(19952, 3491.17407, -471.86758, 30.53220,   0.00000, 0.00000, 69.00000);
    CreateDynamicObject(19952, 3491.39429, -469.81815, 30.53220,   0.00000, 0.00000, 69.00000);
    CreateDynamicObject(19952, 3492.23462, -467.70261, 30.53220,   0.00000, 0.00000, 47.00000);
    CreateDynamicObject(19952, 3493.61792, -465.94431, 30.53220,   0.00000, 0.00000, 33.00000);
    CreateDynamicObject(19952, 3495.68848, -464.74088, 30.53220,   0.00000, 0.00000, 25.00000);
    CreateDynamicObject(19952, 3497.52173, -463.94360, 30.53220,   0.00000, 0.00000, 11.00000);
    CreateDynamicObject(978, 3572.15796, -152.47580, 7.66360,   0.00000, 0.00000, -90.06000);
    CreateDynamicObject(979, 3582.40869, -136.82591, 7.66360,   0.00000, 0.00000, 94.00000);
    CreateDynamicObject(979, 3577.90991, -117.36510, 7.66360,   0.00000, 0.00000, 111.00000);
    CreateDynamicObject(979, 3567.70068, -98.68870, 7.66360,   0.00000, 0.00000, 127.00000);
    CreateDynamicObject(979, 3552.86011, -83.73192, 7.66360,   0.00000, 0.00000, 143.00000);
    CreateDynamicObject(979, 3534.33521, -73.47763, 7.66360,   0.00000, 0.00000, 159.00000);
    CreateDynamicObject(979, 3513.24023, -68.75437, 7.66360,   0.00000, 0.00000, 176.00000);
    CreateDynamicObject(978, 3570.32593, -129.53772, 7.66360,   0.00000, 0.00000, -77.00000);
    CreateDynamicObject(978, 3563.75562, -112.48411, 7.66360,   0.00000, 0.00000, -62.00000);
    CreateDynamicObject(978, 3552.69434, -97.89204, 7.66360,   0.00000, 0.00000, -46.00000);
    CreateDynamicObject(978, 3538.40698, -87.30300, 7.66360,   0.00000, 0.00000, -29.00000);
    CreateDynamicObject(978, 3521.28320, -80.90249, 7.66360,   0.00000, 0.00000, -12.00000);
    CreateDynamicObject(978, 3370.44238, -79.47590, 7.66360,   0.00000, 0.00000, 4.00000);
    CreateDynamicObject(979, 3349.02905, -72.96180, 7.66360,   0.00000, 0.00000, 202.00000);
    CreateDynamicObject(978, 3336.17383, -92.55570, 7.66360,   0.00000, 0.00000, 37.00000);
    CreateDynamicObject(979, 3315.21387, -98.05710, 7.66360,   0.00000, 0.00000, 234.00000);
    CreateDynamicObject(978, 3314.99048, -120.80050, 7.66360,   0.00000, 0.00000, 69.00000);
    CreateDynamicObject(979, 3299.70923, -137.69583, 7.66360,   0.00000, 0.00000, 265.00000);
    CreateDynamicObject(978, 3308.38989, -160.79083, 7.66360,   0.00000, 0.00000, 78.00000);
    CreateDynamicObject(979, 3291.45874, -174.77879, 7.66360,   0.00000, 0.00000, 241.00000);
    CreateDynamicObject(978, 3288.39380, -196.90881, 7.66360,   0.00000, 0.00000, 44.00000);
    CreateDynamicObject(979, 3266.24097, -199.94850, 7.66360,   0.00000, 0.00000, 210.00000);
    CreateDynamicObject(978, 3251.35986, -217.25690, 7.66360,   0.00000, 0.00000, 13.00000);
    CreateDynamicObject(979, 3229.73779, -208.53825, 7.66360,   0.00000, 0.00000, 184.00000);
    CreateDynamicObject(978, 3211.70020, -223.82629, 7.66360,   0.00000, 0.00000, 21.00000);
    CreateDynamicObject(979, 3190.02002, -223.44698, 7.66360,   0.00000, 0.00000, 217.00000);
    CreateDynamicObject(978, 3183.55127, -245.29881, 7.66360,   0.00000, 0.00000, 53.00000);
    CreateDynamicObject(979, 3164.90601, -256.11990, 7.66360,   0.00000, 0.00000, 249.00000);
    CreateDynamicObject(978, 3170.86743, -278.86716, 7.66360,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(979, 3159.59619, -297.48358, 7.66360,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(979, 3159.63574, -325.57550, 7.66360,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(978, 3170.35010, -311.66531, 7.66360,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(978, 3170.39355, -351.18323, 7.66360,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(979, 3159.74780, -376.34052, 7.66360,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(978, 3170.49780, -394.65421, 7.66360,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(979, 3161.46484, -418.30121, 7.66360,   0.00000, 0.00000, 282.00000);
    CreateDynamicObject(978, 3178.67163, -433.35596, 7.66360,   0.00000, 0.00000, 119.00000);
    CreateDynamicObject(979, 3181.80444, -455.42380, 7.66360,   0.00000, 0.00000, 315.00000);
    CreateDynamicObject(978, 3203.50024, -458.37460, 7.66360,   0.00000, 0.00000, 151.00000);
    CreateDynamicObject(1571, 3588.77759, -203.41051, 8.01600,   0.00000, 0.00000, 273.00000);
    CreateDynamicObject(11712, 3229.05566, -414.14655, 4.08420,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11712, 3229.27271, -414.10818, 4.10420,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(11712, 3229.72925, -414.34299, 4.04420,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19897, 3229.35693, -414.20322, 4.00970,   -22.00000, -8.00000, 156.00000);
    CreateDynamicObject(19896, 3229.48364, -414.43378, 4.02970,   36.74000, -23.84000, 18.00000);
    CreateDynamicObject(19824, 3229.37231, -414.36310, 3.94970,   -3.10000, 2.74000, 156.00000);
    CreateDynamicObject(868, 3229.18994, -414.06201, 3.35810,   0.00000, 0.00000, 78.00000);
    CreateDynamicObject(1933, 3229.14966, -414.30240, 3.93670,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1933, 3229.35449, -413.97830, 4.01670,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1933, 3229.66895, -414.28580, 3.95670,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3127.02319, -437.78073, -1.18628,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3472.65991, -596.69702, 6.91724,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3485.34375, -410.24057, 7.46136,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3483.95386, -411.13556, 7.46088,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3485.04956, -400.14667, 15.71092,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3482.90332, -411.32022, 8.86693,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3469.61792, -620.48340, -4.01427,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(979, 3461.08105, -561.50610, 33.09500,   0.00000, 0.00000, 47.00000);
    CreateDynamicObject(18671, 3127.02319, -437.78073, -1.18628,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3472.65991, -596.69702, 6.91724,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3485.34375, -410.24057, 7.46136,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3483.95386, -411.13556, 7.46088,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3485.04956, -400.14667, 15.71092,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3482.90332, -411.32022, 8.86693,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18671, 3469.61792, -620.48340, -4.01427,   0.00000, 0.00000, 0.00000);

    //vila Abandonada do Walker
    CreateDynamicObject(3276,3175.0000000,-2443.5000000,3.4000000,0.0000000,0.0000000,0.0000000); //convertffs(0)
    CreateDynamicObject(3276,3175.0000000,-2443.5000000,5.1000000,0.0000000,0.0000000,0.0000000); //converte(1)
    CreateDynamicObject(3276,3175.0000000,-2443.5000000,6.9000000,0.0000000,0.0000000,0.0000000); //convertffs(2)
    CreateDynamicObject(3276,3175.0000000,-2443.5000000,8.6000000,0.0000000,0.0000000,0.0000000); //converte(3)
    CreateDynamicObject(3276,3175.0000000,-2443.0000000,10.1000000,325.0000000,0.0000000,0.0000000); //convertffs(4)
    CreateDynamicObject(3276,3175.0000000,-2442.0000000,11.5000000,324.9980000,0.0000000,0.0000000); //convertffs(5)
    CreateDynamicObject(3276,3175.0000000,-2441.0000000,12.9000000,324.9980000,0.0000000,0.0000000); //convertffs(6)
    CreateDynamicObject(3276,3175.0000000,-2440.0000000,14.3000000,324.9980000,0.0000000,0.0000000); //convertffs(7)
    CreateDynamicObject(3276,3175.0000000,-2438.5000000,14.3000000,324.9980000,0.0000000,180.0000000); //convertffs(8)
    CreateDynamicObject(3276,3175.0000000,-2437.5000000,12.9000000,324.9980000,0.0000000,180.0000000); //convertffs(9)
    CreateDynamicObject(3276,3175.0000000,-2436.5000000,11.5000000,324.9980000,0.0000000,180.0000000); //convertffs(10)
    CreateDynamicObject(3276,3175.0000000,-2435.5000000,10.1000000,324.9980000,0.0000000,180.0000000); //converte(11)
    CreateDynamicObject(3276,3175.0000000,-2435.0000000,8.6000000,0.0000000,0.0000000,180.0000000); //converte(12)
    CreateDynamicObject(3276,3175.0000000,-2435.0000000,6.9000000,0.0000000,0.0000000,179.9950000); //convertffs(13)
    CreateDynamicObject(3276,3175.0000000,-2435.0000000,5.1000000,0.0000000,0.0000000,179.9950000); //convertffs(14)
    CreateDynamicObject(3276,3175.0000000,-2435.0000000,3.4000000,0.0000000,0.0000000,179.9950000); //convertffs(15)
    CreateDynamicObject(639,3177.5000000,-2443.3994000,4.4000000,0.0000000,0.0000000,90.0000000); //convertffs(16)
    CreateDynamicObject(639,3172.2998000,-2443.3994000,4.4000000,0.0000000,0.0000000,90.0000000); //convertffs(17)
    CreateDynamicObject(639,3172.2998000,-2443.3994000,8.9000000,0.0000000,24.0000000,90.0000000); //converte(18)
    CreateDynamicObject(639,3177.6006000,-2443.3994000,8.9000000,0.0000000,24.0000000,90.0000000); //convertffs(19)
    CreateDynamicObject(639,3177.4004000,-2441.0000000,12.9000000,0.0000000,41.9900000,87.9900000); //convertffs(20)
    CreateDynamicObject(639,3172.4004000,-2441.0000000,12.9000000,0.0000000,41.9900000,89.9950000); //convertffs(21)
    CreateDynamicObject(18228,3188.0000000,-2471.7002000,-6.2000000,353.9960000,0.0000000,133.9950000); //convertffs(22)
    CreateDynamicObject(18228,3149.1006000,-2476.0996000,-6.2000000,353.9960000,0.0000000,133.9950000); //convertffs(23)
    CreateDynamicObject(18228,3120.3000000,-2466.7000000,-6.2000000,353.9960000,0.0000000,75.9950000); //convertffs(24)
    CreateDynamicObject(18228,3216.6006000,-2365.0996000,-7.2000000,353.9960000,0.0000000,295.9830000); //convertffs(28)
    CreateDynamicObject(18228,3181.1006000,-2368.5996000,-7.2000000,353.9960000,0.0000000,319.9880000); //convertffs(29)
    CreateDynamicObject(18228,3145.7998000,-2367.5996000,-7.2000000,353.9960000,0.0000000,313.9840000); //convertffs(30)
    CreateDynamicObject(18228,3124.0000000,-2379.8000000,-7.2000000,353.9960000,0.0000000,37.9840000); //convertffs(31)
    CreateDynamicObject(18228,3118.2002000,-2447.2002000,-6.2000000,353.9960000,0.0000000,37.9910000); //convertffs(32)
    CreateDynamicObject(18228,3121.2998000,-2391.2998000,-6.2000000,353.9960000,0.0000000,37.9910000); //convertffs(33)
    CreateDynamicObject(3947,3139.8000000,-2458.3000000,4.0000000,0.0000000,0.0000000,242.0000000); //convertffs(34)
    CreateDynamicObject(3947,3144.2002000,-2430.5996000,3.3000000,0.0000000,0.0000000,215.9910000); //convertffs(35)
    CreateDynamicObject(3947,3195.6006000,-2415.7998000,3.3000000,0.0000000,0.0000000,101.9810000); //convertffs(36)
    CreateDynamicObject(3947,3153.3000500,-2442.6001000,2.8000000,0.0000000,2.0000000,21.9880000); //convertffs(37)
    CreateDynamicObject(639,3177.2002000,-2435.0996000,4.4000000,0.0000000,0.0000000,270.0000000); //convertffs(38)
    CreateDynamicObject(639,3172.7002000,-2435.0996000,4.4000000,0.0000000,0.0000000,270.0000000); //convertffs(39)
    CreateDynamicObject(639,3172.7002000,-2435.0996000,8.9000000,0.0000000,24.0000000,270.0000000); //convertffs(40)
    CreateDynamicObject(639,3177.2002000,-2435.0996000,8.9000000,0.0000000,24.0000000,270.0000000); //convertffs(41)
    CreateDynamicObject(639,3177.5000000,-2437.5000000,12.9000000,0.0000000,41.9900000,270.0000000); //convertffs(42)
    CreateDynamicObject(639,3172.5000000,-2437.5000000,12.9000000,0.0000000,41.9900000,270.0000000); //convertffs(43)
    CreateDynamicObject(4206,3141.2998000,-2453.7998000,2.5000000,0.0000000,0.0000000,0.0000000); //convertffs(44)
    CreateDynamicObject(4206,3146.5000000,-2439.2002000,2.4980000,0.0000000,0.0000000,0.0000000); //convertffs(45)
    CreateDynamicObject(3947,3155.3000000,-2470.8000000,2.8000000,0.0000000,2.0000000,199.9840000); //convertffs(46)
    CreateDynamicObject(18228,3124.8999000,-2451.8999000,-6.2000000,353.9960000,0.0000000,39.9910000); //convertffs(47)
    CreateDynamicObject(16405,3205.5000000,-2405.1001000,4.4000000,0.0000000,0.0000000,0.0000000); //convertffs(48)
    CreateDynamicObject(636,3206.7000000,-2404.6001000,5.9000000,334.0680000,4.4490000,1.9490000); //convertffs(49)
    CreateDynamicObject(636,3205.2000000,-2404.6001000,5.9000000,334.0670000,4.4440000,1.9450000); //convertffs(50)
    CreateDynamicObject(636,3204.2000000,-2404.6001000,5.9000000,25.9310000,4.4440000,180.0520000); //converte(51)
    CreateDynamicObject(636,3204.2000000,-2406.6001000,5.9000000,340.0080000,2.1190000,176.7180000); //convertffs(52)
    CreateDynamicObject(636,3205.3999000,-2406.7000000,5.9000000,19.8790000,6.3680000,359.8180000); //convertffs(53)
    CreateDynamicObject(636,3206.8999000,-2406.6001000,5.9000000,19.8740000,6.3670000,359.8130000); //convertffs(54)
    CreateDynamicObject(636,3203.9004000,-2403.7998000,3.7000000,0.0110000,269.9950000,277.9710000); //convertffs(55)
    CreateDynamicObject(636,3206.6006000,-2403.5000000,3.7000000,0.0110000,269.9950000,277.9710000); //convertffs(56)
    CreateDynamicObject(636,3204.0000000,-2407.6001000,4.0000000,1.8000000,269.1000000,81.9850000); //convertffs(57)
    CreateDynamicObject(636,3206.8000000,-2407.8000000,3.8000000,354.6470000,272.6930000,82.0920000); //convertffs(58)
    CreateDynamicObject(12814,3174.4004000,-2442.3994000,2.5000000,0.0000000,0.0000000,349.9970000); //convertffs(59)
    CreateDynamicObject(12814,3204.4004000,-2445.0000000,2.5000000,0.0000000,0.0000000,349.9970000); //convertffs(60)
    CreateDynamicObject(12814,3183.1001000,-2393.2000000,2.5000000,0.0000000,0.0000000,349.9970000); //convertffs(61)
    CreateDynamicObject(12814,3213.2998000,-2394.5000000,2.5000000,0.0000000,0.0000000,349.9970000); //convertffs(62)
    CreateDynamicObject(12814,3150.2000000,-2407.0000000,2.5000000,0.0000000,0.0000000,349.9970000); //convertffs(63)
    CreateDynamicObject(12814,3145.9004000,-2384.2002000,2.4900000,0.0000000,0.0000000,305.9970000); //convertffs(64)
    CreateDynamicObject(12814,3117.8000000,-2411.3999000,2.4950000,0.0000000,0.0000000,25.9970000); //convertffs(65)
    CreateDynamicObject(18228,3118.6001000,-2409.1001000,-6.2000000,353.9960000,0.0000000,55.9910000); //convertffs(66)
    CreateDynamicObject(1480,3145.4004000,-2386.5000000,3.4000000,0.0000000,90.0000000,0.0000000); //convertffs(68)
    CreateDynamicObject(1480,3143.1006000,-2386.5000000,3.4000000,0.0000000,90.0000000,179.9950000); //convertffs(69)
    CreateDynamicObject(1480,3143.1001000,-2385.8000000,3.4000000,0.0000000,90.0000000,179.9950000); //convertffs(70)
    CreateDynamicObject(1480,3143.1001000,-2385.2000000,3.4000000,0.0000000,90.0000000,179.9950000); //convertffs(71)
    CreateDynamicObject(1480,3143.1001000,-2384.5000000,3.4000000,0.0000000,90.0000000,179.9950000); //convertffs(72)
    CreateDynamicObject(1480,3143.1001000,-2383.8000000,3.4000000,0.0000000,90.0000000,179.9950000); //convertffs(73)
    CreateDynamicObject(1480,3145.3999000,-2383.8000000,3.4000000,0.0000000,90.0000000,0.0000000); //convertffs(74)
    CreateDynamicObject(2917,3149.3000000,-2385.2000000,3.5000000,78.0000000,180.0000000,270.0000000); //convertffs(75)
    CreateDynamicObject(2960,3150.0000000,-2385.0000000,3.9000000,275.9990000,0.0000000,270.0000000); //convertffs(76)
    CreateDynamicObject(2960,3150.0498000,-2385.0000000,3.6000000,285.9960000,0.0000000,270.0000000); //convertffs(77)
    CreateDynamicObject(2960,3150.1499000,-2385.0000000,3.3000000,291.9960000,0.0000000,270.0000000); //convertffs(78)
    CreateDynamicObject(2960,3150.2891000,-2385.0000000,3.0000000,297.9950000,0.0000000,270.0000000); //convertffs(79)
    CreateDynamicObject(2960,3150.4800000,-2385.0000000,2.7000000,307.9930000,0.0000000,270.0000000); //convertffs(80)
    CreateDynamicObject(2960,3150.0190000,-2385.0000000,4.2500000,260.0000000,0.0000000,270.0000000); //convertffs(81)
    CreateDynamicObject(2960,3150.0891000,-2385.0000000,4.5000000,288.0030000,180.0000000,90.0000000); //convertffs(82)
    CreateDynamicObject(829,3145.3000000,-2385.0000000,3.0000000,0.0000000,0.0000000,210.0000000); //convertffs(83)
    CreateDynamicObject(829,3144.1001000,-2385.0000000,3.0000000,0.0000000,0.0000000,209.9980000); //convertffs(84)
    CreateDynamicObject(829,3142.8999000,-2385.0000000,3.0000000,0.0000000,0.0000000,209.9980000); //convertffs(85)
    CreateDynamicObject(829,3142.8999000,-2385.0000000,3.8000000,0.0000000,0.0000000,209.9980000); //convertffs(86)
    CreateDynamicObject(829,3144.1001000,-2385.0000000,3.8000000,0.0000000,0.0000000,209.9980000); //convertffs(87)
    CreateDynamicObject(829,3145.1001000,-2385.0000000,3.8000000,0.0000000,0.0000000,209.9980000); //convertffs(88)
    CreateDynamicObject(2628,3143.3999000,-2385.5000000,4.3000000,0.0000000,0.0000000,90.0000000); //convertffs(89)
    CreateDynamicObject(2628,3143.3999000,-2384.8999000,4.3000000,0.0000000,0.0000000,90.0000000); //convertffs(90)
    CreateDynamicObject(2629,3143.8000000,-2385.1699000,4.3000000,0.0000000,0.0000000,270.0000000); //convertffs(91)
    CreateDynamicObject(1131,3144.3999000,-2385.2000000,5.7000000,346.0000000,0.0000000,270.0000000); //convertffs(92)
    CreateDynamicObject(3947,3171.6006000,-2396.2998000,3.3000000,0.0000000,0.0000000,163.9760000); //convertffs(93)
    CreateDynamicObject(3947,3154.5000000,-2420.7998000,3.3000000,0.0000000,0.0000000,151.9740000); //convertffs(94)
    CreateDynamicObject(3947,3216.8999000,-2412.2000000,3.3000000,0.0000000,0.0000000,281.9810000); //convertffs(95)
    CreateDynamicObject(3947,3167.2002000,-2401.2998000,3.3000000,0.0000000,0.0000000,333.9730000); //convertffs(96)
    CreateDynamicObject(3947,3183.9004000,-2373.7998000,3.3000000,0.0000000,0.0000000,343.9710000); //convertffs(97)
    CreateDynamicObject(3947,3188.2000000,-2445.8000000,3.3000000,0.0000000,0.0000000,89.9810000); //convertffs(98)
    CreateDynamicObject(829,3194.1001000,-2436.5000000,3.9000000,6.4090000,277.6930000,219.5610000); //convertffs(99)
    CreateDynamicObject(829,3193.6001000,-2436.2000000,5.2000000,6.4050000,277.6900000,233.5560000); //convertffs(100)
    CreateDynamicObject(829,3193.7000000,-2435.8999000,3.2000000,6.4050000,277.6900000,243.5560000); //convertffs(101)
    CreateDynamicObject(829,3213.6001000,-2423.3000000,5.4000000,6.4000000,277.6900000,37.5530000); //convertffs(102)
    CreateDynamicObject(829,3213.2000000,-2422.3999000,4.7000000,6.3940000,277.6900000,37.5510000); //convertffs(103)
    CreateDynamicObject(829,3212.6001000,-2422.3999000,3.4000000,45.6810000,83.7620000,224.7250000); //convertffs(104)
    CreateDynamicObject(829,3213.8000000,-2423.2000000,3.4000000,45.6760000,83.7600000,274.7200000); //convertffs(105)
    CreateDynamicObject(829,3191.3000000,-2382.1001000,3.4000000,45.6760000,83.7600000,288.7200000); //convertffs(106)
    CreateDynamicObject(829,3191.1001000,-2381.6001000,4.7000000,45.6760000,83.7540000,288.7150000); //convertffs(107)
    CreateDynamicObject(829,3190.2000000,-2381.5000000,2.9000000,45.6760000,83.7540000,288.7150000); //convertffs(108)
    CreateDynamicObject(829,3191.0000000,-2382.1001000,4.7000000,45.6760000,83.7540000,288.7150000); //convertffs(109)
    CreateDynamicObject(18228,3158.6006000,-2395.5996000,-15.9000000,47.0380000,345.2340000,48.9000000); //convertffs(110)
    CreateDynamicObject(3947,3132.8000000,-2408.8999000,3.3000000,0.0000000,0.0000000,35.9910000); //convertffs(111)
    CreateDynamicObject(3947,3166.3000000,-2462.8999000,3.3000000,0.0000000,0.0000000,9.9780000); //convertffs(112)
    CreateDynamicObject(10757,3194.8999000,-2418.1001000,4.5000000,21.9420000,21.6350000,263.6570000); //convertffs(113)
    CreateDynamicObject(1451,3179.0000000,-2447.3000000,3.4000000,0.0000000,0.0000000,0.0000000); //convertffs(115)
    CreateDynamicObject(1410,3178.8999000,-2446.0000000,3.3000000,0.0000000,0.0000000,0.0000000); //convertffs(116)
    CreateDynamicObject(1410,3175.0000000,-2447.5000000,3.3000000,0.0000000,0.0000000,45.0000000); //convertffs(117)
    CreateDynamicObject(1410,3182.8000000,-2447.6001000,3.3000000,0.0000000,0.0000000,315.0000000); //convertffs(118)
    CreateDynamicObject(1410,3184.5000000,-2451.5000000,3.3000000,0.0000000,0.0000000,270.0000000); //convertffs(119)
    CreateDynamicObject(1410,3173.3999000,-2451.5000000,3.3000000,0.0000000,0.0000000,90.0000000); //convertffs(120)
    CreateDynamicObject(1410,3182.8000000,-2455.5000000,3.3000000,0.0000000,0.0000000,225.0000000); //convertffs(121)
    CreateDynamicObject(1410,3175.0000000,-2455.5000000,3.3000000,0.0000000,0.0000000,135.0000000); //convertffs(122)
    CreateDynamicObject(1410,3178.8000000,-2457.2000000,3.3000000,0.0000000,0.0000000,180.0000000); //convertffs(123)
    CreateDynamicObject(1410,3201.3999000,-2449.0000000,4.6000000,324.0260000,270.0000000,0.0000000); //convertffs(124)
    CreateDynamicObject(1410,3199.6001000,-2448.6001000,4.6000000,324.0250000,270.0000000,332.0000000); //convertffs(125)
    CreateDynamicObject(1410,3198.2000000,-2447.3000000,4.6000000,324.0250000,270.0000000,305.9960000); //convertffs(126)
    CreateDynamicObject(1410,3197.6001000,-2443.6001000,4.6000000,324.0250000,270.0000000,249.9870000); //convertffs(127)
    CreateDynamicObject(1410,3198.7000000,-2442.0000000,4.6000000,324.0250000,270.0000000,223.9830000); //convertffs(128)
    CreateDynamicObject(1410,3200.3999000,-2441.1001000,4.6000000,324.0250000,270.0000000,195.9780000); //convertffs(129)
    CreateDynamicObject(1410,3202.3000000,-2441.0000000,4.6000000,324.0250000,270.0000000,169.9740000); //convertffs(130)
    CreateDynamicObject(1410,3204.1001000,-2441.8000000,4.6000000,324.0250000,270.0000000,141.9690000); //convertffs(131)
    CreateDynamicObject(1410,3205.3000000,-2443.3999000,4.6000000,324.0250000,270.0000000,111.9650000); //convertffs(132)
    CreateDynamicObject(1410,3205.3000000,-2445.5000000,4.6000000,324.0250000,270.0000000,71.9620000); //convertffs(133)
    CreateDynamicObject(1410,3201.3999000,-2446.8000000,7.1000000,310.0250000,270.0000000,0.0000000); //convertffs(134)
    CreateDynamicObject(1410,3200.7000000,-2446.5000000,7.1000000,310.0230000,270.0000000,334.0000000); //convertffs(135)
    CreateDynamicObject(1410,3200.0000000,-2445.8000000,7.1000000,310.0180000,270.0000000,309.9950000); //convertffs(136)
    CreateDynamicObject(1410,3199.6001000,-2445.1001000,7.1000000,310.0180000,270.0000000,275.9900000); //convertffs(137)
    CreateDynamicObject(1410,3199.8000000,-2444.3999000,7.1000000,310.0180000,270.0000000,253.9880000); //convertffs(138)
    CreateDynamicObject(1410,3200.3999000,-2443.6001000,7.1000000,310.0180000,270.0000000,227.9870000); //convertffs(139)
    CreateDynamicObject(1410,3201.1001000,-2443.2000000,7.1000000,310.0180000,270.0000000,197.9830000); //convertffs(140)
    CreateDynamicObject(1410,3201.8999000,-2443.2000000,7.1000000,310.0180000,270.0000000,171.9790000); //convertffs(141)
    CreateDynamicObject(1410,3202.8000000,-2443.5000000,7.1000000,310.0180000,270.0000000,143.9740000); //convertffs(142)
    CreateDynamicObject(1410,3203.2000000,-2444.2000000,7.1000000,310.0180000,270.0000000,111.9700000); //convertffs(143)
    CreateDynamicObject(1410,3203.3000000,-2444.8999000,7.1000000,310.0180000,270.0000000,71.9670000); //convertffs(144)
    CreateDynamicObject(1410,3204.3999000,-2447.1001000,4.6000000,324.0250000,270.0000000,49.9600000); //convertffs(145)
    CreateDynamicObject(1410,3202.7000000,-2445.7000000,7.1000000,310.0180000,270.0000000,47.9660000); //convertffs(146)
    CreateDynamicObject(1410,3203.1001000,-2448.3999000,4.6000000,324.0250000,270.0000000,23.9560000); //convertffs(147)
    CreateDynamicObject(1410,3202.0000000,-2446.3000000,7.1000000,310.0180000,270.0000000,25.9620000); //convertffs(148)
    CreateDynamicObject(1410,3197.6001000,-2446.2000000,4.6000000,324.0250000,270.0000000,289.9870000); //convertffs(149)
    CreateDynamicObject(1410,3198.8999000,-2447.8999000,4.6000000,324.0250000,270.0000000,325.9840000); //convertffs(150)
    CreateDynamicObject(1410,3200.3999000,-2448.7000000,4.6000000,324.0250000,270.0000000,347.9810000); //convertffs(151)
    CreateDynamicObject(1410,3202.1001000,-2448.7000000,4.6000000,324.0250000,270.0000000,25.9750000); //convertffs(152)
    CreateDynamicObject(1410,3203.6001000,-2447.8000000,4.6000000,324.0250000,270.0000000,45.9720000); //convertffs(153)
    CreateDynamicObject(1410,3204.7000000,-2446.2000000,4.6000000,324.0250000,270.0000000,67.9670000); //convertffs(154)
    CreateDynamicObject(1410,3205.3999000,-2444.3999000,4.6000000,324.0250000,270.0000000,89.9610000); //convertffs(155)
    CreateDynamicObject(1410,3204.6001000,-2442.3999000,4.6000000,324.0250000,270.0000000,121.9560000); //convertffs(156)
    CreateDynamicObject(1410,3203.2000000,-2441.3999000,4.6000000,324.0250000,270.0000000,157.9540000); //convertffs(157)
    CreateDynamicObject(1410,3201.3000000,-2440.8999000,4.6000000,324.0250000,270.0000000,183.9500000); //convertffs(158)
    CreateDynamicObject(1410,3199.3999000,-2441.5000000,4.6000000,324.4290000,275.7690000,205.8010000); //convertffs(159)
    CreateDynamicObject(1410,3198.0000000,-2442.8000000,4.6000000,324.4260000,275.7680000,241.8010000); //convertffs(160)
    CreateDynamicObject(3920,3145.8999000,-2386.6001000,3.1000000,340.0000000,180.0000000,354.0000000); //convertffs(161)
    CreateDynamicObject(3920,3149.3999000,-2383.8000000,2.6000000,274.0050000,89.9910000,285.9890000); //convertffs(162)
    CreateDynamicObject(3920,3148.2000000,-2377.3000000,2.8000000,278.0010000,0.0320000,100.0280000); //convertffs(163)
    CreateDynamicObject(4206,3182.6006000,-2397.3994000,2.5500000,0.0000000,0.0000000,0.0000000); //convertffs(164)
    CreateDynamicObject(1608,3154.3999000,-2422.0000000,-1.0000000,0.0000000,0.0000000,140.0000000); //convertffs(165)
    CreateDynamicObject(833,3151.3000000,-2385.8999000,3.2000000,3.7460000,62.2320000,352.9260000); //convertffs(166)
    CreateDynamicObject(833,3151.7000000,-2385.8999000,3.2000000,357.2750000,250.1750000,7.4980000); //convertffs(167)
    CreateDynamicObject(833,3151.7000000,-2383.3000000,3.2000000,357.2750000,250.1700000,7.4930000); //convertffs(168)
    CreateDynamicObject(833,3151.7002000,-2383.2998000,3.2000000,6.2860000,38.2620000,355.0480000); //convertffs(169)
    CreateDynamicObject(839,3153.0000000,-2384.3999000,3.0000000,342.0450000,4.2050000,17.2980000); //convertffs(170)
    CreateDynamicObject(731,3177.5000000,-2415.8994000,-10.3000000,0.0000000,0.0000000,0.0000000); //convertffs(172)
    CreateDynamicObject(731,3177.5000000,-2415.8999000,7.6000000,0.0000000,0.0000000,0.0000000); //convertffs(173)
    CreateDynamicObject(731,3177.5000000,-2415.8999000,18.9000000,0.0000000,0.0000000,0.0000000); //convertffs(174)
    CreateDynamicObject(1410,3185.7000000,-2413.8000000,5.6000000,270.0000000,0.0000000,270.0000000); //convertffs(175)
    CreateDynamicObject(1410,3184.8000000,-2418.6001000,5.6000000,270.0000000,180.0000000,68.0000000); //convertffs(176)
    CreateDynamicObject(1410,3181.7000000,-2422.2000000,5.6000000,270.0000000,359.9960000,210.0020000); //convertffs(177)
    CreateDynamicObject(1410,3177.1001000,-2423.5000000,5.6000000,270.0000000,180.0000000,2.0040000); //convertffs(178)
    CreateDynamicObject(1410,3172.8000000,-2421.8000000,5.6000000,270.0000000,359.9960000,134.0010000); //convertffs(179)
    CreateDynamicObject(1410,3170.2000000,-2417.8000000,5.6000000,270.0000000,180.0000000,292.0060000); //convertffs(180)
    CreateDynamicObject(1410,3170.1001000,-2413.2000000,5.6000000,270.0000000,359.9960000,70.0080000); //convertffs(181)
    CreateDynamicObject(1410,3182.0000000,-2422.6001000,4.8000000,358.0000000,180.0000000,30.0040000); //convertffs(182)
    CreateDynamicObject(1410,3170.7000000,-2411.8000000,5.6000000,286.0000000,270.0000000,340.0100000); //convertffs(183)
    CreateDynamicObject(1410,3186.2000000,-2413.8000000,4.8000000,357.9950000,179.9950000,87.9980000); //convertffs(184)
    CreateDynamicObject(1410,3172.3999000,-2422.2000000,4.8000000,357.9950000,179.9950000,313.9980000); //convertffs(185)
    CreateDynamicObject(1410,3170.1001000,-2411.3999000,4.9000000,358.0440000,194.0030000,244.4830000); //convertffs(186)
    CreateDynamicObject(1410,3170.1001000,-2413.2000000,8.6000000,270.0000000,359.9950000,70.0050000); //convertffs(187)
    CreateDynamicObject(1410,3170.2000000,-2417.8000000,8.6000000,270.0000000,179.9950000,292.0060000); //convertffs(188)
    CreateDynamicObject(1410,3172.8000000,-2421.8000000,8.6000000,270.0000000,359.9950000,134.0000000); //convertffs(189)
    CreateDynamicObject(1410,3177.1001000,-2423.5000000,8.6000000,270.0000000,179.9950000,2.0000000); //convertffs(190)
    CreateDynamicObject(1410,3181.7002000,-2422.2002000,8.6000000,270.0000000,359.9950000,209.9930000); //convertffs(191)
    CreateDynamicObject(1410,3184.8000000,-2418.6001000,8.6000000,270.0000000,179.9950000,68.0000000); //convertffs(192)
    CreateDynamicObject(1410,3185.7000000,-2413.8000000,8.6000000,270.0000000,0.0000000,270.0000000); //convertffs(193)
    CreateDynamicObject(1410,3177.1001000,-2424.0000000,7.8000000,358.0000000,180.0000000,4.0040000); //convertffs(194)
    CreateDynamicObject(1410,3169.7000000,-2418.2000000,7.8000000,357.9900000,179.9950000,291.9950000); //convertffs(195)
    CreateDynamicObject(1410,3185.3999000,-2418.8000000,7.8000000,357.9950000,179.9950000,67.9990000); //convertffs(196)
    CreateDynamicObject(1410,3185.7000000,-2409.1001000,8.6000000,270.0000000,0.0000000,270.0000000); //convertffs(197)
    CreateDynamicObject(1410,3185.7000000,-2413.8000000,11.6000000,270.0000000,0.0000000,270.0000000); //convertffs(198)
    CreateDynamicObject(1410,3184.8000000,-2418.6001000,11.6000000,270.0000000,179.9950000,68.0000000); //convertffs(199)
    CreateDynamicObject(1410,3181.7000000,-2422.2000000,11.6000000,270.0000000,359.9950000,209.9980000); //convertffs(200)
    CreateDynamicObject(1410,3177.1001000,-2423.5000000,11.6000000,270.0000000,179.9950000,2.0000000); //convertffs(201)
    CreateDynamicObject(1410,3172.8000000,-2421.8000000,11.6000000,270.0000000,359.9950000,134.0000000); //convertffs(202)
    CreateDynamicObject(1410,3170.2000000,-2417.8000000,11.6000000,270.0000000,179.9950000,292.0060000); //convertffs(203)
    CreateDynamicObject(1410,3170.1001000,-2413.2000000,11.6000000,270.0000000,359.9950000,70.0050000); //convertffs(204)
    CreateDynamicObject(1410,3169.6001000,-2413.0000000,10.8000000,0.0000000,180.0000000,249.9890000); //convertffs(205)
    CreateDynamicObject(1410,3172.3999000,-2422.2000000,10.8000000,357.9900000,179.9950000,313.9950000); //convertffs(206)
    CreateDynamicObject(1410,3182.0000000,-2422.6001000,10.8000000,357.9950000,179.9950000,29.9980000); //convertffs(207)
    CreateDynamicObject(1410,3186.2000000,-2413.8000000,10.8000000,357.9900000,179.9950000,87.9950000); //convertffs(208)
    CreateDynamicObject(1410,3185.7000000,-2413.8000000,14.6000000,270.0000000,0.0000000,270.0000000); //convertffs(209)
    CreateDynamicObject(1410,3184.8000000,-2418.6001000,14.6000000,270.0000000,179.9950000,68.0000000); //convertffs(210)
    CreateDynamicObject(1410,3181.7000000,-2422.2000000,14.6000000,270.0000000,359.9950000,209.9980000); //convertffs(211)
    CreateDynamicObject(1410,3177.1001000,-2423.5000000,14.6000000,270.0000000,179.9950000,2.0000000); //convertffs(212)
    CreateDynamicObject(1410,3172.8000000,-2421.8000000,14.6000000,270.0000000,359.9950000,134.0000000); //convertffs(213)
    CreateDynamicObject(1410,3170.2000000,-2417.8000000,14.6000000,270.0000000,179.9950000,292.0060000); //convertffs(214)
    CreateDynamicObject(1410,3170.1001000,-2413.2000000,14.6000000,270.0000000,359.9950000,70.0050000); //convertffs(215)
    CreateDynamicObject(1410,3185.7000000,-2413.8000000,17.6000000,270.0000000,0.0000000,270.0000000); //convertffs(216)
    CreateDynamicObject(1410,3185.7000000,-2413.8000000,20.6000000,270.0000000,0.0000000,270.0000000); //convertffs(217)
    CreateDynamicObject(1410,3185.7000000,-2413.8000000,23.6000000,270.0000000,0.0000000,270.0000000); //convertffs(218)
    CreateDynamicObject(1410,3185.7000000,-2413.8000000,26.6000000,270.0000000,0.0000000,270.0000000); //convertffs(219)
    CreateDynamicObject(1410,3185.7000000,-2413.8000000,29.6000000,270.0000000,0.0000000,270.0000000); //convertffs(220)
    CreateDynamicObject(1410,3184.8000000,-2418.6001000,17.6000000,270.0000000,179.9950000,68.0000000); //convertffs(221)
    CreateDynamicObject(1410,3184.8000000,-2418.6001000,20.6000000,270.0000000,179.9950000,68.0000000); //convertffs(222)
    CreateDynamicObject(1410,3184.8000000,-2418.6001000,23.6000000,270.0000000,179.9950000,68.0000000); //convertffs(223)
    CreateDynamicObject(1410,3184.8000000,-2418.6001000,26.6000000,270.0000000,179.9950000,68.0000000); //convertffs(224)
    CreateDynamicObject(1410,3184.8000000,-2418.6001000,29.6000000,270.0000000,179.9950000,68.0000000); //convertffs(225)
    CreateDynamicObject(1410,3181.7000000,-2422.2000000,17.6000000,270.0000000,359.9950000,209.9980000); //convertffs(226)
    CreateDynamicObject(1410,3181.7000000,-2422.2000000,20.6000000,270.0000000,359.9950000,209.9980000); //convertffs(227)
    CreateDynamicObject(1410,3181.7000000,-2422.2000000,23.6000000,270.0000000,359.9950000,209.9980000); //convertffs(228)
    CreateDynamicObject(1410,3181.7000000,-2422.2000000,26.6000000,270.0000000,359.9950000,209.9980000); //convertffs(229)
    CreateDynamicObject(1410,3181.7000000,-2422.2000000,29.6000000,270.0000000,359.9950000,209.9980000); //convertffs(230)
    CreateDynamicObject(1410,3177.1001000,-2423.5000000,17.6000000,270.0000000,179.9950000,2.0000000); //convertffs(231)
    CreateDynamicObject(1410,3177.1001000,-2423.5000000,20.6000000,270.0000000,179.9950000,2.0000000); //convertffs(232)
    CreateDynamicObject(1410,3177.1001000,-2423.5000000,23.6000000,270.0000000,179.9950000,2.0000000); //convertffs(233)
    CreateDynamicObject(1410,3177.1001000,-2423.5000000,26.6000000,270.0000000,179.9950000,2.0000000); //convertffs(234)
    CreateDynamicObject(1410,3177.1001000,-2423.5000000,29.6000000,270.0000000,179.9950000,2.0000000); //convertffs(235)
    CreateDynamicObject(1410,3172.8000000,-2421.8000000,17.6000000,270.0000000,359.9950000,134.0000000); //convertffs(236)
    CreateDynamicObject(1410,3172.8000000,-2421.8000000,20.6000000,270.0000000,359.9950000,134.0000000); //convertffs(237)
    CreateDynamicObject(1410,3172.8000000,-2421.8000000,23.6000000,270.0000000,359.9950000,134.0000000); //convertffs(238)
    CreateDynamicObject(1410,3172.8000000,-2421.8000000,26.6000000,270.0000000,359.9950000,134.0000000); //convertffs(239)
    CreateDynamicObject(1410,3172.8000000,-2421.8000000,29.6000000,270.0000000,359.9950000,134.0000000); //convertffs(240)
    CreateDynamicObject(1410,3170.2000000,-2417.8000000,17.6000000,270.0000000,179.9950000,292.0060000); //convertffs(241)
    CreateDynamicObject(1410,3170.2000000,-2417.8000000,20.6000000,270.0000000,179.9950000,292.0060000); //convertffs(242)
    CreateDynamicObject(1410,3170.2000000,-2417.8000000,23.6000000,270.0000000,179.9950000,292.0060000); //convertffs(243)
    CreateDynamicObject(1410,3170.2000000,-2417.8000000,26.6000000,270.0000000,179.9950000,292.0060000); //convertffs(244)
    CreateDynamicObject(1410,3170.2000000,-2417.8000000,29.6000000,270.0000000,179.9950000,292.0060000); //convertffs(245)
    CreateDynamicObject(1410,3170.1001000,-2413.2000000,17.6000000,270.0000000,359.9950000,70.0050000); //convertffs(246)
    CreateDynamicObject(1410,3170.1001000,-2413.2000000,20.6000000,270.0000000,359.9950000,70.0050000); //convertffs(247)
    CreateDynamicObject(1410,3170.1001000,-2413.2000000,23.6000000,270.0000000,359.9950000,70.0050000); //convertffs(248)
    CreateDynamicObject(1410,3170.1001000,-2413.2000000,26.6000000,270.0000000,359.9950000,70.0050000); //convertffs(249)
    CreateDynamicObject(1410,3170.1001000,-2413.2000000,29.6000000,270.0000000,359.9950000,70.0050000); //convertffs(250)
    CreateDynamicObject(1410,3182.0000000,-2422.6001000,16.8000000,357.9900000,179.9890000,29.9930000); //convertffs(251)
    CreateDynamicObject(1410,3182.0000000,-2422.6001000,22.8000000,357.9850000,179.9840000,29.9870000); //convertffs(252)
    CreateDynamicObject(1410,3182.0000000,-2422.6001000,28.8000000,357.9800000,179.9780000,29.9820000); //convertffs(253)
    CreateDynamicObject(1410,3177.1001000,-2424.0000000,13.8000000,357.9950000,179.9950000,3.9990000); //convertffs(254)
    CreateDynamicObject(1410,3172.3999000,-2422.2000000,16.8000000,357.9840000,179.9950000,313.9910000); //convertffs(255)
    CreateDynamicObject(1410,3172.3999000,-2422.2000000,22.8000000,357.9790000,179.9950000,313.9880000); //convertffs(256)
    CreateDynamicObject(1410,3172.3999000,-2422.2000000,28.8000000,357.9730000,179.9950000,313.9850000); //convertffs(257)
    CreateDynamicObject(1410,3177.1001000,-2424.0000000,19.8000000,357.9900000,179.9890000,3.9940000); //convertffs(258)
    CreateDynamicObject(1410,3177.1001000,-2424.0000000,25.8000000,357.9850000,179.9840000,3.9900000); //convertffs(259)
    CreateDynamicObject(1410,3185.3999000,-2418.8000000,13.8000000,357.9900000,179.9950000,67.9940000); //convertffs(260)
    CreateDynamicObject(1410,3185.3999000,-2418.8000000,19.8000000,357.9840000,179.9950000,67.9900000); //convertffs(261)
    CreateDynamicObject(1410,3185.3999000,-2418.8000000,25.8000000,357.9790000,179.9950000,67.9850000); //convertffs(262)
    CreateDynamicObject(1410,3186.2000000,-2413.8000000,16.8000000,357.9840000,179.9950000,87.9920000); //convertffs(263)
    CreateDynamicObject(1410,3186.2000000,-2413.8000000,22.8000000,357.9790000,179.9950000,87.9890000); //convertffs(264)
    CreateDynamicObject(1410,3186.2000000,-2413.8000000,28.8000000,357.9730000,179.9950000,87.9850000); //convertffs(265)
    CreateDynamicObject(1410,3169.7000000,-2418.2000000,13.8000000,357.9840000,179.9950000,291.9950000); //convertffs(266)
    CreateDynamicObject(1410,3169.7000000,-2418.2000000,19.8000000,357.9790000,179.9950000,291.9950000); //convertffs(267)
    CreateDynamicObject(1410,3169.7000000,-2418.2000000,25.8000000,357.9730000,179.9950000,291.9940000); //convertffs(268)
    CreateDynamicObject(1410,3169.6001000,-2413.0000000,4.8000000,0.0000000,179.9950000,249.9880000); //convertffs(269)
    CreateDynamicObject(1410,3169.6001000,-2413.0000000,16.8000000,0.0000000,180.0050000,249.9900000); //convertffs(270)
    CreateDynamicObject(1410,3169.6001000,-2413.0000000,22.8000000,0.0000000,180.0110000,249.9910000); //convertffs(271)
    CreateDynamicObject(1410,3169.6001000,-2413.0000000,28.8000000,0.0000000,180.0160000,249.9920000); //convertffs(272)
    CreateDynamicObject(1410,3185.7000000,-2409.1001000,14.6000000,270.0000000,0.0000000,270.0000000); //convertffs(273)
    CreateDynamicObject(1410,3185.7000000,-2409.1001000,20.6000000,270.0000000,0.0000000,270.0000000); //convertffs(274)
    CreateDynamicObject(1410,3185.7000000,-2409.1001000,26.6000000,270.0000000,0.0000000,270.0000000); //convertffs(275)
    CreateDynamicObject(1410,3171.6001000,-2408.8999000,11.6000000,270.0000000,359.9950000,70.0050000); //convertffs(276)
    CreateDynamicObject(1410,3171.6001000,-2408.8999000,17.6000000,270.0000000,359.9950000,70.0050000); //convertffs(277)
    CreateDynamicObject(1410,3171.6001000,-2408.8999000,23.6000000,270.0000000,359.9950000,70.0050000); //convertffs(278)
    CreateDynamicObject(1410,3171.6001000,-2408.8999000,29.6000000,270.0000000,359.9950000,70.0050000); //convertffs(279)
    CreateDynamicObject(645,3200.0000000,-2398.7000000,4.9000000,0.0000000,0.0000000,0.0000000); //convertffs(281)
    CreateDynamicObject(645,3148.7002000,-2406.0000000,5.7000000,0.0000000,0.0000000,0.0000000); //convertffs(282)
    CreateDynamicObject(645,3135.6001000,-2435.6001000,3.4000000,0.0000000,0.0000000,0.0000000); //convertffs(283)
    CreateDynamicObject(645,3143.1001000,-2461.1001000,-0.3000000,0.0000000,0.0000000,0.0000000); //convertffs(284)
    CreateDynamicObject(645,3166.7998000,-2452.2998000,6.2000000,0.0000000,0.0000000,0.0000000); //convertffs(285)
    CreateDynamicObject(645,3202.7002000,-2435.2002000,-0.6000000,0.0000000,0.0000000,0.0000000); //convertffs(286)
    CreateDynamicObject(645,3203.7998000,-2454.0996000,-3.4000000,0.0000000,0.0000000,0.0000000); //convertffs(287)
    CreateDynamicObject(645,3137.2998000,-2381.2002000,-2.6000000,0.0000000,0.0000000,0.0000000); //convertffs(288)
    CreateDynamicObject(645,3159.8999000,-2374.3000000,0.2000000,0.0000000,0.0000000,0.0000000); //convertffs(289)
    CreateDynamicObject(3047,3161.1001000,-2389.5000000,4.6000000,318.2820000,275.3770000,122.0500000); //convertffs(290)
    CreateDynamicObject(3047,3160.3000000,-2391.3000000,4.6000000,51.2880000,259.9050000,210.8530000); //convertffs(291)
    CreateDynamicObject(3047,3160.7000000,-2389.8000000,4.1000000,298.1410000,232.5790000,25.0550000); //convertffs(292)
    CreateDynamicObject(3047,3160.2000000,-2385.5000000,4.1000000,288.4260000,192.7270000,76.1000000); //convertffs(293)
    CreateDynamicObject(3047,3160.5000000,-2384.1001000,5.3000000,280.1990000,168.5810000,50.7640000); //convertffs(294)
    CreateDynamicObject(3047,3159.6001000,-2387.0000000,3.6000000,330.9690000,262.0470000,119.9470000); //convertffs(295)
    CreateDynamicObject(3047,3160.1999500,-2388.1001000,3.4000000,34.7640000,279.9650000,300.8790000); //convertffs(296)
    CreateDynamicObject(3047,3159.1001000,-2383.5000000,3.1000000,312.3400000,240.7510000,98.8570000); //convertffs(297)
    CreateDynamicObject(3047,3158.6001000,-2391.0000000,3.3000000,345.5180000,217.3640000,56.8140000); //convertffs(298)
    CreateDynamicObject(3047,3158.2000000,-2391.3000000,3.3000000,28.3110000,216.9840000,224.3440000); //convertffs(299)
    CreateDynamicObject(3047,3159.7000000,-2390.0000000,3.3000000,28.3060000,216.9800000,320.3410000); //convertffs(300)
    CreateDynamicObject(3047,3157.1001000,-2387.7000000,3.0000000,23.8480000,288.7250000,268.0140000); //convertffs(301)
    CreateDynamicObject(16305,3148.6001000,-2390.3000000,-1.3000000,2.6750000,311.9310000,0.9750000); //convertffs(302)
    CreateDynamicObject(3047,3158.3999000,-2389.3000000,3.3000000,331.5970000,259.8810000,99.4390000); //convertffs(303)
    CreateDynamicObject(3047,3159.0000000,-2391.6001000,3.8000000,323.0200000,248.4470000,126.7220000); //convertffs(304)
    CreateDynamicObject(3047,3157.8999000,-2389.0000000,3.3000000,359.1240000,243.9950000,355.8050000); //convertffs(305)
    CreateDynamicObject(3047,3158.0000000,-2391.3999000,3.5000000,350.5390000,245.6440000,13.9600000); //convertffs(306)
    CreateDynamicObject(3047,3158.5000000,-2393.1001000,3.5000000,336.3670000,258.7710000,113.6490000); //convertffs(307)
    CreateDynamicObject(3047,3157.8999000,-2393.5000000,3.5000000,321.4400000,242.6050000,56.2600000); //convertffs(308)
    CreateDynamicObject(1591,3203.3999000,-2453.2000000,7.4000000,45.5660000,270.0000000,359.9950000); //convertffs(309)
    CreateDynamicObject(4185,3138.8999000,-2449.3000000,3.5000000,0.0000000,0.0000000,12.0000000); //convertffs(310)
    CreateDynamicObject(4185,3147.2002000,-2418.5000000,5.5000000,5.8680000,347.9360000,337.2490000); //convertffs(311)
    CreateDynamicObject(2247,2974.2000000,-2394.3999000,4.3000000,0.0000000,0.0000000,70.0000000); //convertffs(342)
    CreateDynamicObject(2247,2976.3999000,-2390.2000000,-5.8000000,0.0000000,0.0000000,217.9990000); //convertffs(343)
    CreateDynamicObject(1591,3203.4004000,-2453.2002000,7.3300000,328.4340000,90.0000000,179.9890000); //convertffs(344)
    CreateDynamicObject(1591,3203.3000000,-2453.0000000,7.9000000,61.5660000,270.0000000,359.9890000); //convertffs(345)
    CreateDynamicObject(1591,3203.2998000,-2453.0000000,7.8400000,318.4380000,90.0000000,179.9890000); //convertffs(346)
    CreateDynamicObject(1591,3203.2000000,-2454.8999000,7.4000000,299.5660000,270.0000000,359.9890000); //convertffs(347)
    CreateDynamicObject(1591,3203.2002000,-2454.8994000,7.4500000,36.4360000,90.0000000,179.9890000); //convertffs(348)
    CreateDynamicObject(1591,3203.1001000,-2455.1001000,7.9000000,291.5640000,270.0000000,359.9890000); //convertffs(349)
    CreateDynamicObject(1591,3203.1006000,-2455.0996000,7.9600000,50.4380000,90.0000000,179.9840000); //convertffs(350)
    CreateDynamicObject(12814,3234.4004000,-2447.6006000,2.5000000,0.0000000,0.0000000,349.9970000); //objeto(cuntyeland04) (3)
    CreateDynamicObject(12814,3264.3999000,-2450.2000000,2.5000000,0.0000000,0.0000000,349.9970000); //objeto(cuntyeland04) (1)
    CreateDynamicObject(12814,3294.2002000,-2453.2998000,2.5000000,0.0000000,0.0000000,349.9970000); //objeto(cuntyeland04) (2)
    CreateDynamicObject(12814,3243.0000000,-2398.5000000,2.5000000,0.0000000,0.0000000,349.9970000); //objeto(cuntyeland04) (4)
    CreateDynamicObject(3947,3214.6999500,-2442.1999500,3.3000000,0.0000000,0.0000000,35.9810000); //objeto(rc_track_a) (1)
    CreateDynamicObject(12814,3272.5000000,-2403.6001000,2.5100000,0.0000000,0.0000000,349.9970000); //objeto(cuntyeland04) (5)
    CreateDynamicObject(3947,3235.1006000,-2427.7002000,3.3000000,0.0000000,0.0000000,71.9770000); //objeto(rc_track_a) (2)
    CreateDynamicObject(3947,3230.2998000,-2386.8994000,3.3000000,0.0000000,0.0000000,35.9750000); //objeto(rc_track_a) (3)
    CreateDynamicObject(726,3211.0000000,-2393.3999000,3.2000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly19) (1)
    CreateDynamicObject(734,3236.7000000,-2373.8999000,2.5000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly14) (1)
    CreateDynamicObject(11353,3256.8000000,-2383.3000000,7.0000000,8.0000000,0.0000000,246.0000000); //objeto(estaÃ§Ã£o5nova) (1)
    CreateDynamicObject(11353,3256.5000000,-2386.3000000,33.0000000,5.3910000,26.1240000,247.3570000); //objeto(estaÃ§Ã£o5nova) (5)
    CreateDynamicObject(734,3246.5000000,-2378.7000000,2.5000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly14) (2)
    CreateDynamicObject(11353,3256.8000000,-2383.3000000,19.0000000,7.9980000,0.0000000,245.9950000); //objeto(estaÃ§Ã£o5nova) (6)
    CreateDynamicObject(734,3256.3000000,-2383.3000000,-7.3000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly14) (3)
    CreateDynamicObject(734,3266.3000000,-2386.8999000,0.2000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly14) (4)
    CreateDynamicObject(734,3276.5000000,-2391.7000000,2.3000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly14) (5)
    CreateDynamicObject(734,3276.7000000,-2391.2000000,12.6000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly14) (6)
    CreateDynamicObject(734,3266.3000000,-2386.8999000,10.6000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly14) (8)
    CreateDynamicObject(734,3256.7000000,-2382.3999000,10.6000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly14) (10)
    CreateDynamicObject(734,3236.7002000,-2373.8994000,11.5000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly14) (11)
    CreateDynamicObject(726,3211.0000000,-2393.3994000,3.2000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly19) (3)
    CreateDynamicObject(11353,3215.5000000,-2388.2002000,6.9000000,13.8540000,8.2340000,312.0010000); //objeto(estaÃ§Ã£o5nova) (7)
    CreateDynamicObject(9812,3254.3000000,-2381.3000000,4.5000000,0.0000000,352.0000000,336.0000000); //objeto(veg_ivy_balcny_kb08) (1)
    CreateDynamicObject(9812,3254.5000000,-2381.2000000,15.6000000,0.0000000,351.9960000,335.9950000); //objeto(veg_ivy_balcny_kb08) (2)
    CreateDynamicObject(9812,3253.3000000,-2385.8000000,29.8000000,0.0000000,355.9960000,335.9950000); //objeto(veg_ivy_balcny_kb08) (3)
    CreateDynamicObject(12814,3302.8000000,-2404.2000000,2.5000000,0.0000000,0.0000000,349.9970000); //objeto(cuntyeland04) (6)
    CreateDynamicObject(16406,3236.7000000,-2428.8999000,6.8000000,0.0000000,0.0000000,0.0000000); //objeto(desn2_weemineb) (1)
    CreateDynamicObject(16406,3250.4004000,-2428.8994000,6.8000000,0.0000000,0.0000000,179.9950000); //objeto(desn2_weemineb) (2)
    CreateDynamicObject(16406,3228.8999000,-2368.3999000,9.1000000,0.0000000,0.0000000,338.0000000); //objeto(desn2_weemineb) (6)
    CreateDynamicObject(3947,3265.6001000,-2443.5000000,3.3000000,0.0000000,0.0000000,327.9770000); //objeto(rc_track_a) (4)
    CreateDynamicObject(3947,3260.6001000,-2408.1001000,3.4000000,0.0000000,0.0000000,77.9700000); //objeto(rc_track_a) (5)
    CreateDynamicObject(3947,3281.2002000,-2405.7002000,3.3000000,0.0000000,0.0000000,41.9680000); //objeto(rc_track_a) (7)
    CreateDynamicObject(726,3290.1006000,-2399.0000000,3.0000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly19) (4)
    CreateDynamicObject(726,3290.1006000,-2399.0000000,15.7000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly19) (5)
    CreateDynamicObject(645,3262.0000000,-2448.3999000,1.6000000,0.0000000,0.0000000,0.0000000); //objeto(veg_palmbig14) (1)
    CreateDynamicObject(645,3262.1006000,-2448.3994000,1.6000000,0.0000000,0.0000000,326.0000000); //objeto(veg_palmbig14) (2)
    CreateDynamicObject(4206,3227.1001000,-2428.7000000,2.6000000,0.0000000,0.0000000,0.0000000); //objeto(pershingpool_lan) (1)
    CreateDynamicObject(3947,3235.7998000,-2446.8994100,3.3000000,0.0000000,0.0000000,79.9770000); //objeto(rc_track_a) (9)
    CreateDynamicObject(18228,3229.5000000,-2475.1001000,-6.2000000,353.9960000,0.0000000,133.9950000); //objeto(cunt_rockgp2_21) (1)
    CreateDynamicObject(18228,3216.6001000,-2478.6001000,-6.2000000,353.9960000,0.0000000,125.9950000); //objeto(cunt_rockgp2_21) (2)
    CreateDynamicObject(18228,3208.2000000,-2354.3999000,5.8000000,353.9960000,0.0000000,295.9830000); //objeto(cunt_rockgp2_21) (3)
    CreateDynamicObject(18228,3243.7000000,-2359.0000000,12.7000000,355.6420000,74.5900000,289.3970000); //objeto(cunt_rockgp2_21) (4)
    CreateDynamicObject(18228,3275.1001000,-2364.6001000,12.7000000,1.6510000,95.7640000,283.9040000); //objeto(cunt_rockgp2_21) (5)
    CreateDynamicObject(18228,3304.8999000,-2379.8000000,12.7000000,1.6480000,95.7620000,279.9030000); //objeto(cunt_rockgp2_21) (6)
    CreateDynamicObject(18228,3255.0000000,-2478.5000000,-6.2000000,353.9960000,0.0000000,133.9950000); //objeto(cunt_rockgp2_21) (7)
    CreateDynamicObject(3054,3279.8999000,-2416.3999000,9.9000000,332.0000000,0.0000000,0.0000000); //objeto(dyn_wreking_ball) (3)
    CreateDynamicObject(3054,3137.0000000,-2380.3999000,8.5000000,31.9960000,0.0000000,0.0000000); //objeto(dyn_wreking_ball) (4)
    CreateDynamicObject(18228,3287.5000000,-2464.2000000,-6.2000000,353.9960000,0.0000000,151.9950000); //objeto(cunt_rockgp2_21) (8)
    CreateDynamicObject(18228,3305.0000000,-2451.1001000,-6.2000000,353.9960000,0.0000000,225.9910000); //objeto(cunt_rockgp2_21) (9)
    CreateDynamicObject(18228,3309.6001000,-2420.3000000,-6.2000000,353.9960000,0.0000000,211.9890000); //objeto(cunt_rockgp2_21) (10)
    CreateDynamicObject(3054,3202.2000000,-2435.7000000,10.7000000,331.9960000,0.0000000,0.0000000); //objeto(dyn_wreking_ball) (5)
    CreateDynamicObject(3054,3202.3000000,-2434.7000000,10.9000000,39.9960000,0.0000000,0.0000000); //objeto(dyn_wreking_ball) (6)
    CreateDynamicObject(645,3202.7002000,-2435.2002000,-0.6000000,0.0000000,0.0000000,306.0000000); //objeto(veg_palmbig14) (3)
    CreateDynamicObject(750,3225.1001000,-2441.3000000,3.1000000,0.0000000,100.0000000,0.0000000); //objeto(sm_scrb_column2) (1)
    CreateDynamicObject(750,3229.0000000,-2441.3000000,2.1000000,0.0000000,0.0000000,0.0000000); //objeto(sm_scrb_column2) (3)
    CreateDynamicObject(750,3229.0000000,-2441.3000000,6.6000000,0.0000000,0.0000000,0.0000000); //objeto(sm_scrb_column2) (5)
    CreateDynamicObject(750,3229.0000000,-2441.2998000,6.6000000,0.0000000,88.0000000,0.0000000); //objeto(sm_scrb_column2) (6)
    CreateDynamicObject(750,3229.0000000,-2441.2998000,6.6000000,0.0000000,279.9950000,0.0000000); //objeto(sm_scrb_column2) (7)
    CreateDynamicObject(17563,3290.1001000,-2437.8999000,-0.9000000,0.0000000,0.0000000,0.0000000); //objeto(wattspark1_lae2) (1)
    CreateDynamicObject(734,3250.1001000,-2429.8999000,-6.9000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly14) (7)
    CreateDynamicObject(734,3250.1006000,-2429.8994000,-6.9000000,0.0000000,0.0000000,176.0000000); //objeto(Ã¡rvore_hipoly14) (9)
    CreateDynamicObject(734,3236.6001000,-2427.8999000,-6.9000000,0.0000000,0.0000000,175.9950000); //objeto(Ã¡rvore_hipoly14) (12)
    CreateDynamicObject(734,3236.6006000,-2427.8994000,-6.9000000,0.0000000,0.0000000,259.9950000); //objeto(Ã¡rvore_hipoly14) (13)
    CreateDynamicObject(726,3295.0000000,-2420.3000000,-3.1000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly19) (2)
    CreateDynamicObject(726,3293.1001000,-2450.0000000,1.6000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly19) (6)
    CreateDynamicObject(726,3274.1001000,-2469.8999000,-4.8000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly19) (7)
    CreateDynamicObject(8655,3289.5000000,-2378.8999000,1.5000000,0.0000000,0.0000000,271.9930000); //objeto(vgseland24_lvs) (2)
    CreateDynamicObject(3947,3256.8000000,-2392.7000000,3.3000000,0.0000000,0.0000000,347.9700000); //objeto(rc_track_a) (8)
    CreateDynamicObject(18228,3280.7000000,-2480.8999000,3.4000000,353.9960000,0.0000000,175.9950000); //objeto(cunt_rockgp2_21) (11)
    CreateDynamicObject(18228,3247.2000000,-2492.8000000,3.4000000,353.9960000,0.0000000,149.9900000); //objeto(cunt_rockgp2_21) (12)
    CreateDynamicObject(18228,3313.3000000,-2450.5000000,3.7000000,353.9960000,0.0000000,217.9890000); //objeto(cunt_rockgp2_21) (13)
    CreateDynamicObject(18228,3323.6001000,-2413.2000000,9.2000000,353.9960000,0.0000000,217.9850000); //objeto(cunt_rockgp2_21) (14)
    CreateDynamicObject(8655,3272.3999000,-2368.3000000,1.5000000,0.0000000,0.0000000,227.9890000); //objeto(vgseland24_lvs) (4)
    CreateDynamicObject(734,3250.5000000,-2458.5000000,0.7000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly14) (14)
    CreateDynamicObject(734,3250.5000000,-2458.5000000,0.7000000,0.0000000,0.0000000,298.0000000); //objeto(Ã¡rvore_hipoly14) (15)
    CreateDynamicObject(734,3221.7000000,-2472.2000000,0.7000000,0.0000000,0.0000000,0.0000000); //objeto(Ã¡rvore_hipoly14) (16)
    CreateDynamicObject(734,3221.7000000,-2472.2000000,7.5000000,0.0000000,0.0000000,312.0000000); //objeto(Ã¡rvore_hipoly14) (17)
    CreateDynamicObject(18228,3197.8999000,-2488.0000000,2.3000000,353.9960000,0.0000000,133.9950000); //objeto(cunt_rockgp2_21) (15)
    CreateDynamicObject(18228,3154.3999000,-2485.7000000,4.3000000,353.9960000,0.0000000,133.9950000); //objeto(cunt_rockgp2_21) (16)
    CreateDynamicObject(18228,3120.5000000,-2474.5000000,6.6000000,353.9960000,0.0000000,97.9950000); //objeto(cunt_rockgp2_21) (17)
    CreateDynamicObject(18228,3107.1001000,-2433.3000000,6.6000000,353.9960000,0.0000000,53.9930000); //objeto(cunt_rockgp2_21) (18)
    CreateDynamicObject(18228,3105.3000000,-2394.0000000,6.6000000,353.9960000,0.0000000,43.9920000); //objeto(cunt_rockgp2_21) (19)
    CreateDynamicObject(18228,3167.8999000,-2345.2000000,6.6000000,353.9960000,0.0000000,331.9890000); //objeto(cunt_rockgp2_21) (20)
    CreateDynamicObject(18228,3129.2998000,-2355.0996000,6.6000000,353.9960000,0.0000000,7.9870000); //objeto(cunt_rockgp2_21) (21)
    CreateDynamicObject(18228,3202.6001000,-2333.2000000,6.6000000,353.9960000,0.0000000,7.9870000); //objeto(cunt_rockgp2_21) (22)
    CreateDynamicObject(1591,3261.8999000,-2449.2000000,11.7000000,304.8930000,278.6680000,24.5120000); //objeto(tar_downleft) (1)
    CreateDynamicObject(1591,3261.8999000,-2449.2000000,11.8000000,45.2430000,96.0810000,185.4550000); //objeto(tar_downleft) (2)
    CreateDynamicObject(1591,3261.8999000,-2449.0000000,11.2000000,45.2420000,96.0810000,185.4550000); //objeto(tar_downleft) (3)
    CreateDynamicObject(1591,3261.9004000,-2449.0000000,11.2000000,308.8330000,277.4980000,23.5770000); //objeto(tar_downleft) (5)
    CreateDynamicObject(1591,3261.7000000,-2447.3999000,11.4000000,44.1320000,264.1560000,22.3560000); //objeto(tar_downleft) (6)
    CreateDynamicObject(1591,3261.7000000,-2447.5000000,11.4000000,323.7930000,85.5930000,186.5550000); //objeto(tar_downleft) (8)
    CreateDynamicObject(1591,3261.7000000,-2447.3999000,10.6000000,44.1350000,264.1500000,22.3620000); //objeto(tar_downleft) (9)
    CreateDynamicObject(1591,3261.7000000,-2447.5000000,10.6000000,333.7170000,87.0260000,187.2940000); //objeto(tar_downleft) (10)
    CreateDynamicObject(645,3279.3000000,-2416.2000000,-1.6000000,0.0000000,0.0000000,300.0000000); //objeto(veg_palmbig14) (6)
    CreateDynamicObject(3054,3136.7002000,-2382.0996100,8.5000000,332.0000000,0.0000000,0.0000000); //objeto(dyn_wreking_ball) (7)
    CreateDynamicObject(3054,3279.1001000,-2415.5000000,8.8000000,41.9960000,0.0000000,28.0000000); //objeto(dyn_wreking_ball) (9)
    CreateDynamicObject(11353,3244.7000000,-2461.5000000,7.3000000,352.2320000,14.1250000,295.9340000); //objeto(estaÃ§Ã£o5nova) (3)
    CreateDynamicObject(11353,3244.8999000,-2462.8000000,17.0000000,354.0030000,4.0130000,296.4040000); //objeto(estaÃ§Ã£o5nova) (4)
    CreateDynamicObject(734,3234.8999000,-2464.0000000,-6.7000000,0.0000000,0.0000000,311.9950000); //objeto(Ã¡rvore_hipoly14) (19)
    CreateDynamicObject(734,3256.5000000,-2454.8000000,-6.7000000,0.0000000,0.0000000,311.9950000); //objeto(Ã¡rvore_hipoly14) (20)
    CreateDynamicObject(3947,3224.3999000,-2469.1001000,3.3000000,0.0000000,0.0000000,71.9770000); //objeto(rc_track_a) (10)
    CreateDynamicObject(3947,3269.5000000,-2443.2000000,3.3000000,0.0000000,0.0000000,41.9680000); //objeto(rc_track_a) (11)

    //ext
    CreateDynamicObject(2036, -91.11037, 1383.05054, 13.22096,   358.01501, 17.86499, 0.00000);
    CreateDynamicObject(2037, -91.80260, 1382.66504, 13.50337,   0.00000, 0.00000, 270.67499);
    CreateDynamicObject(3594, -91.74696, 1339.58838, 10.15110,   0.00000, 0.00000, 9.92499);
    CreateDynamicObject(3593, -85.13975, 1340.15918, 10.49299,   0.00000, 0.00000, 5.95499);
    CreateDynamicObject(3168, -101.23141, 1347.61768, 9.09984,   0.00000, 0.00000, 228.98997);
    //int 
    CreateDynamicObject(1512, -223.80293, 1403.81384, 27.90443,   0.00000, 0.00000, 258.76498);
    CreateDynamicObject(1517, -224.23372, 1404.90552, 27.90674,   0.00000, 0.00000, 344.12000);
    CreateDynamicObject(1520, -223.90775, 1404.36182, 27.70698,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1520, -223.87508, 1405.36011, 27.70698,   0.00000, 0.00000, 334.19495);
    CreateDynamicObject(1517, -224.07307, 1404.41833, 27.90674,   0.00000, 0.00000, 150.86005);
    CreateDynamicObject(1509, -224.10011, 1405.35376, 27.90444,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1509, -224.07031, 1403.74487, 27.90444,   0.00000, 0.00000, 328.23999);
    CreateDynamicObject(1509, -223.78235, 1404.98206, 27.90444,   0.00000, 0.00000, 300.44873);
    CreateDynamicObject(1551, -223.88438, 1405.53442, 27.94725,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1551, -224.27002, 1403.34790, 27.94725,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1664, -224.26146, 1405.53369, 27.87369,   0.00000, 0.00000, 346.10501);
    CreateDynamicObject(1664, -224.03491, 1404.95386, 27.87369,   0.00000, 0.00000, 296.47766);
    CreateDynamicObject(1669, -224.25798, 1404.23364, 27.87369,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1669, -223.77502, 1404.17822, 27.87369,   0.00000, 0.00000, 302.43500);
    CreateDynamicObject(1951, -224.04469, 1405.68665, 27.89515,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1950, -223.93890, 1403.07202, 27.89515,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1549, -229.00739, 1402.92053, 26.77344,   0.00000, 0.00000, 44.17001);
    CreateDynamicObject(2894, -223.19881, 1408.70837, 27.72698,   0.00000, 0.00000, 352.05994);
    CreateDynamicObject(2269, -221.36646, 1405.22327, 27.94952,   0.00000, 0.00000, 89.32501);
    CreateDynamicObject(2255, -223.41521, 1393.95227, 28.15990,   0.00000, 0.00000, 174.68005);
    CreateDynamicObject(2114, -225.12300, 1396.01904, 28.38201,   0.00000, 0.00000, 330.22501);
    CreateDynamicObject(2034, -224.24330, 1407.17468, 27.73780,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2033, -223.97598, 1407.23853, 27.73780,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1575, -224.12111, 1406.83472, 27.70241,   0.00000, 0.00000, 342.13501);
    CreateDynamicObject(2332, -221.46460, 1407.56470, 28.17800,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1829, -221.44196, 1407.14063, 27.23797,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1550, -220.81670, 1407.06714, 27.17052,   0.00000, 0.00000, 326.25500);
    CreateDynamicObject(1210, -224.16406, 1407.75879, 27.67602,   265.98450, 358.01147, 254.79492);
    CreateDynamicObject(1486, -228.81274, 1404.09692, 27.83640,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1486, -228.67470, 1404.32629, 27.83640,   0.00000, 0.00000, 330.22501);
    CreateDynamicObject(1510, -228.29089, 1404.65991, 27.71905,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1512, -228.64178, 1406.89709, 27.88890,   0.00000, 0.00000, 17.86499);
    CreateDynamicObject(1512, -229.05542, 1404.71716, 27.88890,   0.00000, 0.00000, 344.11877);
    CreateDynamicObject(1517, -228.12943, 1406.41248, 27.89121,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1520, -228.91440, 1406.46008, 27.69145,   0.00000, 0.00000, 342.13501);
    CreateDynamicObject(1520, -228.32159, 1408.75757, 27.69145,   0.00000, 0.00000, 326.25500);
    CreateDynamicObject(1509, -229.06757, 1409.26294, 27.88891,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1512, -228.24054, 1409.35242, 27.88890,   0.00000, 0.00000, 330.22501);
    CreateDynamicObject(1520, -228.88484, 1411.73816, 27.69145,   0.00000, 0.00000, 338.16504);
    CreateDynamicObject(1512, -228.25427, 1411.14502, 27.88890,   0.00000, 0.00000, 316.32999);
    CreateDynamicObject(1509, -229.10760, 1411.50049, 27.88891,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1520, -228.92615, 1411.06140, 27.69145,   0.00000, 0.00000, 286.55505);
    CreateDynamicObject(1665, -228.25746, 1411.52612, 27.70190,   0.00000, 0.00000, 43.67001);
    CreateDynamicObject(1748, -222.10390, 1407.31995, 28.63112,   0.00000, 0.00000, 262.73499);
    CreateDynamicObject(3106, -225.40170, 1396.45520, 28.27370,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3105, -226.13368, 1396.31494, 28.27370,   0.00000, 67.49002, 0.00000);
    CreateDynamicObject(3104, -225.93195, 1396.18738, 28.27370,   0.00000, 89.32501, 326.25500);
    CreateDynamicObject(3103, -225.88158, 1396.34070, 28.27370,   0.00000, 73.44501, 15.88000);
    CreateDynamicObject(3102, -225.54024, 1396.14832, 28.27370,   0.00000, 109.17502, 63.52002);
    CreateDynamicObject(3101, -226.50719, 1395.91272, 28.27370,   0.00000, 49.62500, 39.70001);
    CreateDynamicObject(3100, -226.51552, 1396.40173, 28.27370,   0.00000, 0.00000, 328.23999);
    CreateDynamicObject(3002, -225.79730, 1395.80505, 28.27370,   0.00000, 0.00000, 31.76001);
    CreateDynamicObject(3001, -226.21461, 1395.93164, 28.27370,   0.00000, 43.67001, 340.14999);
    CreateDynamicObject(3000, -225.68694, 1396.28955, 28.27370,   0.00000, 69.47501, 314.34500);
    CreateDynamicObject(2999, -225.10715, 1396.39111, 28.27370,   0.00000, 55.58002, 304.41998);
    CreateDynamicObject(2998, -225.68948, 1396.59070, 28.27370,   0.00000, 67.49002, 274.64499);
    CreateDynamicObject(2997, -226.24870, 1396.18042, 28.27370,   55.58002, 35.73001, 316.32999);
    CreateDynamicObject(2996, -225.51326, 1395.92151, 28.27370,   310.37500, 132.99503, 326.25500);
    CreateDynamicObject(2995, -226.49734, 1396.14844, 28.27370,   0.00000, 39.70001, 332.20999);
    CreateDynamicObject(3004, -225.97742, 1395.98926, 28.23570,   5.95499, 0.00000, 3.97000);
    CreateDynamicObject(3004, -225.29163, 1395.89160, 28.23570,   0.00000, 0.00000, 59.55002);
    CreateDynamicObject(1712, -228.91486, 1393.87048, 27.36347,   0.00000, 0.00000, 93.29501);
    CreateDynamicObject(1800, -222.58159, 1402.16492, 26.68377,   0.00000, 0.00000, 272.65997);
    CreateDynamicObject(3015, -218.73901, 1401.88062, 26.77344,   0.00000, 0.00000, 330.22501);
    CreateDynamicObject(3014, -218.72168, 1402.56116, 27.00962,   0.00000, 0.00000, 272.65997);
    CreateDynamicObject(2044, -218.31393, 1401.82446, 26.80097,   0.00000, 0.00000, 57.56500);
    CreateDynamicObject(2044, -218.31348, 1402.14148, 26.80097,   0.00000, 0.00000, 13.89285);
    CreateDynamicObject(2044, -218.72221, 1402.48218, 27.30528,   0.00000, 0.00000, 330.22501);
    CreateDynamicObject(2044, -218.34583, 1402.77112, 26.87749,   0.00000, 41.68500, 43.66602);
    CreateDynamicObject(2037, 172.58293, 111.94993, 493.37805,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2039, -223.88022, 1407.44629, 27.76093,   0.00000, 0.00000, 312.35999);
    CreateDynamicObject(2358, -220.31749, 1407.62842, 28.28635,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2035, -219.48869, 1407.58020, 28.19425,   0.00000, 0.00000, 336.17999);
    CreateDynamicObject(2058, -217.75267, 1401.77100, 26.77660,   0.00000, 0.00000, 0.00000);
    //favela LS
    CreateDynamicObject(17037, 2221.59, -1002.06, 62.28,   0.12, 3.06, -20.46);
    CreateDynamicObject(3260, 2203.71, -997.11, 67.36,   -101.70, -1.56, -102.72);
    CreateDynamicObject(3260, 2173.31, -989.93, 67.66,   -84.90, 3.84, -103.08);
    CreateDynamicObject(3260, 2179.39, -991.45, 71.93,   -105.42, 1.50, -100.26);
    CreateDynamicObject(3260, 2125.19, -1059.76, 28.76,   -64.80, -0.24, 56.40);
    CreateDynamicObject(1462, 2116.35, -1055.21, 28.58,   -112.34, 107.22, 351.96);
    CreateDynamicObject(3260, 2115.04, -1055.27, 29.39,   -71.58, 6.30, 50.16);
    CreateDynamicObject(919, 2107.08, -1049.51, 31.08,   0.00, 90.00, -40.16);
    CreateDynamicObject(1421, 2220.62, -1003.66, 63.54,   11.22, -0.84, 71.16);
    CreateDynamicObject(3594, 2175.81, -1086.71, 35.32,   2.10, -0.48, 92.52);
    CreateDynamicObject(3576, 2258.31, -1022.50, 59.71,   -0.48, 0.54, 49.44);
    CreateDynamicObject(1218, 2176.47, -1088.64, 34.90,   1.26, -90.84, 67.14);

    //interior shopping
    CreateDynamicObject(19326, 1155.34, -1446.73, 16.38,   0.00, 0.00, -89.82);
    CreateDynamicObject(19326, 1155.25, -1443.85, 16.36,   0.00, 0.00, -89.82);
    CreateDynamicObject(19326, 1155.37, -1436.32, 16.36,   0.00, 0.00, -89.82);
    CreateDynamicObject(19326, 1155.35, -1433.51, 16.36,   0.00, 0.00, -89.70);
    CreateDynamicObject(19329, 1155.18, -1440.22, 18.70,   0.00, 0.00, 89.04);
    CreateDynamicObject(19329, 1161.59, -1431.50, 17.93,   0.00, 0.00, 0.00);
    CreateDynamicObject(19329, 1160.40, -1448.79, 17.96,   0.00, 0.00, 0.00);
    CreateDynamicObject(2543, 1168.18, -1436.39, 14.79,   0.00, 0.00, 0.30);
    CreateDynamicObject(2535, 1182.74, -1448.30, 14.70,   0.00, 0.00, -90.96);
    CreateDynamicObject(2543, 1167.10, -1436.40, 14.79,   0.00, 0.00, 0.31);
    CreateDynamicObject(2538, 1172.31, -1435.32, 14.79,   0.00, 0.00, 180.34);
    CreateDynamicObject(2539, 1171.38, -1435.31, 14.79,   0.00, 0.00, 180.19);
    CreateDynamicObject(2540, 1169.56, -1435.36, 14.79,   0.00, 0.00, 180.17);
    CreateDynamicObject(1984, 1157.37, -1442.59, 14.79,   0.00, 0.00, -450.06);
    CreateDynamicObject(2012, 1163.25, -1448.31, 14.75,   0.00, 0.00, -179.16);
    CreateDynamicObject(2012, 1169.29, -1431.92, 14.75,   0.00, 0.00, 359.80);
    CreateDynamicObject(1987, 1163.13, -1436.34, 14.79,   0.00, 0.00, 361.06);
    CreateDynamicObject(1988, 1164.13, -1436.33, 14.79,   0.00, 0.00, 360.80);
    CreateDynamicObject(2871, 1164.79, -1443.96, 14.79,   0.00, 0.00, 177.73);
    CreateDynamicObject(2871, 1164.70, -1444.98, 14.79,   0.00, 0.00, 358.07);
    CreateDynamicObject(2942, 1155.52, -1464.68, 15.43,   0.00, 0.00, -71.22);
    CreateDynamicObject(1987, 1164.12, -1435.32, 14.77,   0.00, 0.00, 180.96);
    CreateDynamicObject(2530, 1171.13, -1443.79, 14.79,   0.00, 0.00, -182.16);
    CreateDynamicObject(1991, 1173.75, -1439.56, 14.79,   0.00, 0.00, 179.47);
    CreateDynamicObject(1996, 1169.82, -1439.50, 14.79,   0.00, 0.00, 179.10);
    CreateDynamicObject(1996, 1174.24, -1435.38, 14.79,   0.00, 0.00, 179.24);
    CreateDynamicObject(1991, 1175.23, -1435.39, 14.79,   0.00, 0.00, 179.57);
    CreateDynamicObject(1995, 1182.65, -1435.10, 14.79,   0.00, 0.00, 90.00);
    CreateDynamicObject(1994, 1182.66, -1438.07, 14.79,   0.00, 0.00, 90.00);
    CreateDynamicObject(1993, 1182.66, -1437.08, 14.79,   0.00, 0.00, 90.00);
    CreateDynamicObject(2542, 1163.78, -1443.92, 14.76,   0.00, 0.00, 178.77);
    CreateDynamicObject(2536, 1166.88, -1445.07, 14.70,   0.00, 0.00, -0.42);
    CreateDynamicObject(2542, 1163.70, -1444.93, 14.78,   0.00, 0.00, -1.74);
    CreateDynamicObject(1984, 1157.34, -1435.71, 14.79,   0.00, 0.00, -450.06);
    CreateDynamicObject(2012, 1166.31, -1448.28, 14.75,   0.00, 0.00, -180.12);
    CreateDynamicObject(2530, 1172.14, -1443.83, 14.79,   0.00, 0.00, -181.38);
    CreateDynamicObject(2530, 1173.14, -1443.85, 14.79,   0.00, 0.00, -180.96);
    CreateDynamicObject(2530, 1174.13, -1443.88, 14.79,   0.00, 0.00, -181.50);
    CreateDynamicObject(1981, 1170.76, -1439.52, 14.79,   0.00, 0.00, -181.74);
    CreateDynamicObject(1981, 1171.76, -1439.54, 14.79,   0.00, 0.00, -180.80);
    CreateDynamicObject(1981, 1172.75, -1439.55, 14.79,   0.00, 0.00, -180.84);
    CreateDynamicObject(2535, 1182.75, -1447.28, 14.70,   0.00, 0.00, -90.78);
    CreateDynamicObject(2535, 1182.74, -1446.28, 14.70,   0.00, 0.00, -90.78);
    CreateDynamicObject(2535, 1182.74, -1445.26, 14.70,   0.00, 0.00, -90.00);
    CreateDynamicObject(2541, 1182.75, -1444.22, 14.79,   0.00, 0.00, -90.06);
    CreateDynamicObject(2541, 1182.75, -1443.20, 14.79,   0.00, 0.00, -90.06);
    CreateDynamicObject(2541, 1182.74, -1442.16, 14.79,   0.00, 0.00, -90.06);
    CreateDynamicObject(2543, 1182.76, -1441.18, 14.79,   0.00, 0.00, -90.84);
    CreateDynamicObject(2541, 1182.79, -1440.17, 14.79,   0.00, 0.00, -90.06);
    CreateDynamicObject(2543, 1182.72, -1439.15, 14.79,   0.00, 0.00, -90.84);
    CreateDynamicObject(1990, 1182.66, -1431.67, 14.79,   0.00, 0.00, 3.30);
    CreateDynamicObject(1990, 1181.63, -1431.73, 14.79,   0.00, 0.00, 3.30);
    CreateDynamicObject(1990, 1180.61, -1431.81, 14.79,   0.00, 0.00, 3.30);
    CreateDynamicObject(1990, 1179.61, -1431.83, 14.79,   0.00, 0.00, 3.30);
    CreateDynamicObject(1990, 1178.61, -1431.89, 14.79,   0.00, 0.00, 3.30);
    CreateDynamicObject(1990, 1177.59, -1431.86, 14.79,   0.00, 0.00, 3.30);
    CreateDynamicObject(1993, 1182.66, -1436.09, 14.79,   0.00, 0.00, 90.00);
    CreateDynamicObject(2012, 1175.50, -1431.82, 14.75,   0.00, 0.00, 361.17);
    CreateDynamicObject(2012, 1172.42, -1431.87, 14.75,   0.00, 0.00, 359.93);
    CreateDynamicObject(2012, 1160.10, -1448.35, 14.75,   0.00, 0.00, -179.94);
    CreateDynamicObject(2539, 1170.45, -1435.33, 14.79,   0.00, 0.00, 181.26);
    CreateDynamicObject(2545, 1161.82, -1431.84, 14.91,   0.00, 0.00, -90.54);
    CreateDynamicObject(2545, 1160.82, -1431.83, 14.91,   0.00, 0.00, -90.54);
    CreateDynamicObject(2545, 1159.81, -1431.86, 14.91,   0.00, 0.00, -90.54);
    CreateDynamicObject(2545, 1162.82, -1431.87, 14.91,   0.00, 0.00, -90.54);
    CreateDynamicObject(1988, 1163.13, -1435.34, 14.79,   0.00, 0.00, 541.46);
    CreateDynamicObject(1988, 1166.07, -1436.32, 14.79,   0.00, 0.00, 360.80);
    CreateDynamicObject(1987, 1165.07, -1436.33, 14.79,   0.00, 0.00, 361.06);
    CreateDynamicObject(1987, 1166.11, -1435.30, 14.77,   0.00, 0.00, 180.96);
    CreateDynamicObject(1988, 1165.07, -1435.31, 14.79,   0.00, 0.00, 540.44);
    CreateDynamicObject(2536, 1165.79, -1445.07, 14.70,   0.00, 0.00, -1.20);
    CreateDynamicObject(2536, 1167.83, -1445.07, 14.70,   0.00, 0.00, -0.06);
    CreateDynamicObject(2871, 1165.79, -1444.00, 14.79,   0.00, 0.00, 178.27);
    CreateDynamicObject(2871, 1166.81, -1444.03, 14.79,   0.00, 0.00, 179.35);
    CreateDynamicObject(2871, 1167.79, -1444.04, 14.79,   0.00, 0.00, 179.89);
    CreateDynamicObject(2543, 1168.13, -1435.36, 14.79,   0.00, 0.00, 180.05);
    CreateDynamicObject(2543, 1167.10, -1435.37, 14.79,   0.00, 0.00, 180.35);
    CreateDynamicObject(2012, 1170.63, -1440.67, 14.75,   0.00, 0.00, 359.50);
    CreateDynamicObject(2012, 1173.77, -1440.72, 14.75,   0.00, 0.00, 359.82);
    CreateDynamicObject(2012, 1177.30, -1445.31, 14.75,   0.00, 0.00, 359.93);
    CreateDynamicObject(1996, 1173.36, -1448.30, 14.79,   0.00, 0.00, 179.10);
    CreateDynamicObject(1981, 1174.33, -1448.32, 14.79,   0.00, 0.00, -181.74);
    CreateDynamicObject(1981, 1175.32, -1448.35, 14.79,   0.00, 0.00, -180.84);
    CreateDynamicObject(1981, 1176.30, -1448.37, 14.79,   0.00, 0.00, -180.84);
    CreateDynamicObject(1991, 1177.28, -1448.37, 14.79,   0.00, 0.00, 179.47);
    CreateDynamicObject(1996, 1178.33, -1448.36, 14.79,   0.00, 0.00, 179.24);
    CreateDynamicObject(1991, 1179.33, -1448.37, 14.79,   0.00, 0.00, 179.57);
    CreateDynamicObject(1994, 1176.82, -1444.16, 14.79,   0.00, 0.00, -0.84);
    CreateDynamicObject(1995, 1178.81, -1444.20, 14.79,   0.00, 0.00, -1.26);
    CreateDynamicObject(2543, 1168.89, -1444.06, 14.79,   0.00, 0.00, 178.97);
    CreateDynamicObject(2543, 1169.91, -1444.07, 14.79,   0.00, 0.00, 179.69);
    CreateDynamicObject(2543, 1169.87, -1445.12, 14.79,   0.00, 0.00, -0.06);
    CreateDynamicObject(2543, 1168.86, -1445.11, 14.79,   0.00, 0.00, 0.31);
    CreateDynamicObject(2538, 1167.02, -1431.87, 14.79,   0.00, 0.00, 0.42);
    CreateDynamicObject(2539, 1166.03, -1431.89, 14.79,   0.00, 0.00, 0.70);
    CreateDynamicObject(2540, 1164.04, -1431.91, 14.79,   0.00, 0.00, 0.60);
    CreateDynamicObject(2539, 1165.03, -1431.91, 14.79,   0.00, 0.00, 1.02);
    CreateDynamicObject(2538, 1176.17, -1436.38, 14.79,   0.00, 0.00, 0.24);
    CreateDynamicObject(2539, 1174.22, -1436.37, 14.79,   0.00, 0.00, -0.06);
    CreateDynamicObject(2540, 1173.22, -1436.36, 14.79,   0.00, 0.00, 0.18);
    CreateDynamicObject(2539, 1175.20, -1436.38, 14.79,   0.00, 0.00, -2.06);
    CreateDynamicObject(2540, 1173.26, -1435.31, 14.79,   0.00, 0.00, 180.17);
    CreateDynamicObject(1991, 1175.74, -1439.58, 14.79,   0.00, 0.00, 179.57);
    CreateDynamicObject(1996, 1174.74, -1439.57, 14.79,   0.00, 0.00, 179.24);
    CreateDynamicObject(1996, 1176.17, -1435.37, 14.79,   0.00, 0.00, 179.24);
    CreateDynamicObject(1991, 1177.16, -1435.38, 14.79,   0.00, 0.00, 179.57);
    CreateDynamicObject(2540, 1169.44, -1436.35, 14.79,   0.00, 0.00, 0.18);
    CreateDynamicObject(2539, 1170.43, -1436.35, 14.79,   0.00, 0.00, 0.90);
    CreateDynamicObject(2539, 1171.34, -1436.33, 14.79,   0.00, 0.00, 0.58);
    CreateDynamicObject(2538, 1172.22, -1436.32, 14.79,   0.00, 0.00, 0.30);
    CreateDynamicObject(2871, 1163.40, -1440.68, 14.79,   0.00, 0.00, 360.41);
    CreateDynamicObject(2536, 1164.49, -1440.73, 14.70,   0.00, 0.00, -1.20);
    CreateDynamicObject(2536, 1165.49, -1440.75, 14.70,   0.00, 0.00, -0.42);
    CreateDynamicObject(2536, 1166.50, -1440.75, 14.70,   0.00, 0.00, -0.06);
    CreateDynamicObject(2543, 1167.61, -1440.64, 14.79,   0.00, 0.00, 0.31);
    CreateDynamicObject(2543, 1168.62, -1440.64, 14.79,   0.00, 0.00, 0.30);
    CreateDynamicObject(2543, 1168.64, -1439.60, 14.79,   0.00, 0.00, 180.05);
    CreateDynamicObject(2543, 1167.67, -1439.61, 14.79,   0.00, 0.00, 180.35);
    CreateDynamicObject(2871, 1163.65, -1439.67, 14.79,   0.00, 0.00, 180.61);
    CreateDynamicObject(2871, 1164.68, -1439.67, 14.79,   0.00, 0.00, 179.77);
    CreateDynamicObject(2871, 1165.68, -1439.68, 14.79,   0.00, 0.00, 180.61);
    CreateDynamicObject(2871, 1166.68, -1439.66, 14.79,   0.00, 0.00, 180.61);
    CreateDynamicObject(1990, 1175.09, -1444.97, 14.79,   0.00, 0.00, -2.46);
    CreateDynamicObject(1990, 1181.63, -1431.73, 14.79,   0.00, 0.00, 3.30);
    CreateDynamicObject(1990, 1174.07, -1444.94, 14.79,   0.00, 0.00, 0.48);
    CreateDynamicObject(1990, 1173.09, -1444.94, 14.79,   0.00, 0.00, -1.20);
    CreateDynamicObject(1990, 1172.11, -1444.92, 14.79,   0.00, 0.00, -1.14);
    CreateDynamicObject(1990, 1171.12, -1444.91, 14.79,   0.00, 0.00, -0.72);
    CreateDynamicObject(2530, 1168.54, -1448.31, 14.79,   0.00, 0.00, -178.98);
    CreateDynamicObject(2530, 1169.60, -1448.29, 14.79,   0.00, 0.00, -178.98);
    CreateDynamicObject(2530, 1170.67, -1448.30, 14.79,   0.00, 0.00, -178.98);
    CreateDynamicObject(2530, 1171.72, -1448.32, 14.79,   0.00, 0.00, -181.50);
    CreateDynamicObject(2530, 1175.13, -1443.91, 14.79,   0.00, 0.00, -181.50);
    CreateDynamicObject(2012, 1176.82, -1440.75, 14.75,   0.00, 0.00, 359.93);
    CreateDynamicObject(1995, 1177.71, -1439.63, 14.79,   0.00, 0.00, 0.00);
    CreateDynamicObject(1994, 1176.73, -1439.63, 14.79,   0.00, 0.00, 0.06);
    CreateDynamicObject(1993, 1177.83, -1444.15, 14.79,   0.00, 0.00, 179.46);
    //exterior shopping
    CreateDynamicObject(19322, 1117.580, -1490.01, 32.72,   0.00, 0.00, 0.00);
    CreateDynamicObject(19323, 1117.580, -1490.01, 32.72,   0.00, 0.00, 0.00);
    CreateDynamicObject(19325, 1155.40, -1434.89, 16.49,   0.00, 0.00, 0.30);
    CreateDynamicObject(19325, 1155.37, -1445.41, 16.31,   0.00, 0.00, 0.00);
    CreateDynamicObject(19325, 1155.29, -1452.38, 16.31,   0.00, 0.00, 0.00);
    CreateDynamicObject(19325, 1157.36, -1468.35, 16.31,   0.00, 0.00, 18.66);
    CreateDynamicObject(19325, 1160.64, -1478.37, 16.31,   0.00, 0.00, 17.76);
    CreateDynamicObject(19325, 1159.84, -1502.06, 16.31,   0.00, 0.00, -19.92);
    CreateDynamicObject(19325, 1139.28, -1523.71, 16.31,   0.00, 0.00, -69.36);
    CreateDynamicObject(19325, 1117.06, -1523.43, 16.51,   0.00, 0.00, -109.44);
    CreateDynamicObject(19325, 1097.18, -1502.43, 16.51,   0.00, 0.00, -158.58);
    CreateDynamicObject(19325, 1096.47, -1478.29, 16.51,   0.00, 0.00, -197.94);
    CreateDynamicObject(19325, 1099.70, -1468.27, 16.51,   0.00, 0.00, -197.94);
    CreateDynamicObject(19325, 1101.81, -1445.45, 16.22,   0.00, 0.00, -180.24);
    CreateDynamicObject(19325, 1101.76, -1452.47, 16.22,   0.00, 0.00, -181.62);
    CreateDynamicObject(19325, 1101.77, -1434.88, 16.22,   0.00, 0.00, -180.24);
    CreateDynamicObject(19325, 1094.31, -1444.92, 23.47,   0.00, 0.00, -180.24);
    CreateDynamicObject(19325, 1094.37, -1458.37, 23.47,   0.00, 0.00, -179.46);
    CreateDynamicObject(19325, 1093.01, -1517.44, 23.44,   0.00, 0.00, -138.72);
    CreateDynamicObject(19325, 1101.08, -1526.64, 23.42,   0.00, 0.00, -137.34);
    CreateDynamicObject(19325, 1155.12, -1526.38, 23.46,   0.00, 0.00, -42.12);
    CreateDynamicObject(19325, 1163.09, -1517.25, 23.46,   0.00, 0.00, -40.74);
    CreateDynamicObject(19325, 1163.04, -1442.06, 23.40,   0.00, 0.00, -0.12);
    CreateDynamicObject(19325, 1163.09, -1428.47, 23.50,   0.00, 0.00, 0.54);

    //house LV
    CreateDynamicObject(19497, 1842.382812, 690.281250, 12.109375, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19498, 1842.382812, 690.281250, 12.109375, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 1844.002807, 691.271240, 10.379375, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(1502, 1836.822753, 695.611267, 10.409375, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1492, 1832.932861, 698.361267, 10.449375, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 1846.842773, 686.041259, 12.409375, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1846.842773, 681.791259, 12.409375, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1832.782836, 681.291259, 12.569375, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1832.782836, 689.961242, 12.099374, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1844.132812, 694.211242, 12.119375, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19497, 2043.148437, 778.250000, 12.109375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19498, 2043.148437, 778.250000, 12.109375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, 2044.138427, 776.630004, 10.379375, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1491, 2048.478515, 783.809997, 10.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, 2051.228515, 787.700012, 10.449375, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2038.908447, 773.789978, 12.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2034.658447, 773.789978, 12.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2034.158447, 787.849975, 12.569375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2042.828491, 787.849975, 12.099374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2047.078491, 776.500000, 12.119375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19497, 2123.210937, 778.250000, 12.101562, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19498, 2123.210937, 778.250000, 12.101562, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1502, 2124.200927, 776.630004, 10.371562, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1502, 2128.541015, 783.809997, 10.401562, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, 2131.291015, 787.700012, 10.441562, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2118.970947, 773.789978, 12.401562, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2114.720947, 773.789978, 12.401562, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2114.220947, 787.849975, 12.561562, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2122.890869, 787.849975, 12.091562, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2127.140869, 776.500000, 12.111562, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19497, 2177.468750, 738.250000, 12.117187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19498, 2177.468750, 738.250000, 12.117187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, 2178.458740, 736.630004, 10.387187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1499, 2182.798828, 743.809997, 10.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1502, 2185.548828, 747.700012, 10.457187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2173.228759, 733.789978, 12.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2168.978759, 733.789978, 12.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2168.478759, 747.849975, 12.577187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2177.148681, 747.849975, 12.107187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2181.398681, 736.500000, 12.127187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19497, 2040.570312, 698.242187, 12.109375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19498, 2040.570312, 698.242187, 12.109375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, 2041.560302, 696.622192, 10.379375, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1492, 2045.900268, 703.802185, 10.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1494, 2048.650390, 707.692199, 10.449375, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2036.330322, 693.782165, 12.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2032.080322, 693.782165, 12.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2031.580322, 707.842163, 12.569375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2040.250366, 707.842163, 12.099374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2044.500366, 696.492187, 12.119375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19497, 2257.460937, 738.257812, 12.117187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19498, 2257.460937, 738.257812, 12.117187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, 2258.450927, 736.637817, 10.387187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1502, 2262.791015, 743.817810, 10.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, 2265.541015, 747.707824, 10.457187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2253.220947, 733.797790, 12.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2248.970947, 733.797790, 12.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2248.470947, 747.857788, 12.577187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2257.140869, 747.857788, 12.107187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2261.390869, 736.507812, 12.127187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19497, 2398.210937, 738.250000, 12.117187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19498, 2398.210937, 738.250000, 12.117187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1494, 2399.200927, 736.630004, 10.387187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1499, 2403.541015, 743.809997, 10.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1494, 2406.291015, 747.700012, 10.457187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2393.970947, 733.789978, 12.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2389.720947, 733.789978, 12.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2389.220947, 747.849975, 12.577187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2397.890869, 747.849975, 12.107187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2402.140869, 736.500000, 12.127187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19497, 2452.421875, 742.789062, 12.117187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19498, 2452.421875, 742.789062, 12.117187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1491, 2450.801757, 741.799072, 10.387187, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1494, 2457.981933, 737.459045, 10.417187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1499, 2461.871826, 734.709045, 10.457187, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2447.961914, 747.029052, 12.417187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2447.961914, 751.279052, 12.417187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2462.021972, 751.779052, 12.577187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2462.021972, 743.109069, 12.107187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2450.671875, 738.859069, 12.127187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19497, 2317.726562, 658.250000, 12.109375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19498, 2317.726562, 658.250000, 12.109375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, 2318.716552, 656.630004, 10.379375, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1499, 2323.056640, 663.809997, 10.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, 2325.806640, 667.700012, 10.449375, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2313.486572, 653.789978, 12.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2309.236572, 653.789978, 12.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2308.736572, 667.849975, 12.569375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2317.406494, 667.849975, 12.099374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2321.656494, 656.500000, 12.119375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19497, 2452.421875, 662.726562, 12.117187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19498, 2452.421875, 662.726562, 12.117187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 2450.801757, 661.736572, 10.387187, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1502, 2457.981933, 657.396545, 10.417187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, 2461.871826, 654.646545, 10.457187, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2447.961914, 666.966552, 12.417187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2447.961914, 671.216552, 12.417187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2462.021972, 671.716552, 12.577187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2462.021972, 663.046569, 12.107187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2450.671875, 658.796569, 12.127187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19497, 2397.382812, 658.257812, 12.117187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19498, 2397.382812, 658.257812, 12.117187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, 2398.372802, 656.637817, 10.387187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1491, 2402.712890, 663.817810, 10.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, 2405.462890, 667.707824, 10.457187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2393.142822, 653.797790, 12.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2388.892822, 653.797790, 12.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2388.392822, 667.857788, 12.577187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2397.062744, 667.857788, 12.107187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2401.312744, 656.507812, 12.127187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19497, 2258.007812, 658.125000, 12.109375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19498, 2258.007812, 658.125000, 12.109375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, 2258.997802, 656.505004, 10.379375, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1492, 2263.337890, 663.684997, 10.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, 2266.087890, 667.575012, 10.449375, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2253.767822, 653.664978, 12.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2249.517822, 653.664978, 12.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2249.017822, 667.724975, 12.569375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2257.687744, 667.724975, 12.099374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2261.937744, 656.375000, 12.119375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19497, 2177.945312, 658.140625, 12.117187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19498, 2177.945312, 658.140625, 12.117187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1502, 2178.935302, 656.520629, 10.387187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1491, 2183.275390, 663.700622, 10.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, 2186.025390, 667.590637, 10.457187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2173.705322, 653.680603, 12.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2169.455322, 653.680603, 12.417187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2168.955322, 667.740600, 12.577187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2177.625244, 667.740600, 12.107187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2181.875244, 656.390625, 12.127187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19497, 2093.460937, 728.210937, 12.109375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19498, 2093.460937, 728.210937, 12.109375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1492, 2092.470947, 729.830932, 10.379375, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1494, 2088.130859, 722.650939, 10.409375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 2085.380859, 718.760925, 10.449375, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2097.700927, 732.670959, 12.409375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2101.950927, 732.670959, 12.409375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2102.450927, 718.610961, 12.569375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2093.781005, 718.610961, 12.099374, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2089.531005, 729.960937, 12.119375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19497, 2120.312500, 698.242187, 12.109375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19498, 2120.312500, 698.242187, 12.109375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, 2121.302490, 696.622192, 10.379375, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1491, 2125.642578, 703.802185, 10.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, 2128.392578, 707.692199, 10.449375, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2116.072509, 693.782165, 12.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2111.822509, 693.782165, 12.409375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2111.322509, 707.842163, 12.569375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2119.992431, 707.842163, 12.099374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2124.242431, 696.492187, 12.119375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19497, 2013.398437, 728.210937, 12.109375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19498, 2013.398437, 728.210937, 12.109375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1491, 2012.408447, 729.830932, 10.379375, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1494, 2008.068481, 722.650939, 10.409375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1502, 2005.318481, 718.760925, 10.449375, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2017.638427, 732.670959, 12.409375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2021.888427, 732.670959, 12.409375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2022.388427, 718.610961, 12.569375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2013.718383, 718.610961, 12.099374, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2009.468383, 729.960937, 12.119375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19497, 2094.210937, 648.257812, 12.117187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19498, 2094.210937, 648.257812, 12.117187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1499, 2093.220947, 649.877807, 10.387187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1502, 2088.880859, 642.697814, 10.417187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1499, 2086.130859, 638.807800, 10.457187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2098.450927, 652.717834, 12.417187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2102.700927, 652.717834, 12.417187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2103.200927, 638.657836, 12.577187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2094.531005, 638.657836, 12.107187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2090.281005, 650.007812, 12.127187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19497, 2014.148437, 648.257812, 12.117187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19498, 2014.148437, 648.257812, 12.117187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1499, 2013.158447, 649.877807, 10.387187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1502, 2008.818481, 642.697814, 10.417187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1499, 2006.068481, 638.807800, 10.457187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2018.388427, 652.717834, 12.417187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2022.638427, 652.717834, 12.417187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2023.138427, 638.657836, 12.577187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2014.468383, 638.657836, 12.107187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2010.218383, 650.007812, 12.127187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19497, 2397.031250, 688.195312, 12.109375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19498, 2397.031250, 688.195312, 12.109375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1491, 2396.041259, 689.815307, 10.379375, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1491, 2391.701171, 682.635314, 10.409375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 2388.951171, 678.745300, 10.449375, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2401.271240, 692.655334, 12.409375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2405.521240, 692.655334, 12.409375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2406.021240, 678.595336, 12.569375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2397.351318, 678.595336, 12.099374, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2393.101318, 689.945312, 12.119375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19497, 2317.312500, 688.203125, 12.117187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19498, 2317.312500, 688.203125, 12.117187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1492, 2316.322509, 689.823120, 10.387187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1492, 2311.982421, 682.643127, 10.417187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1502, 2309.232421, 678.753112, 10.457187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2321.552490, 692.663146, 12.417187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2325.802490, 692.663146, 12.417187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2326.302490, 678.603149, 12.577187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2317.632568, 678.603149, 12.107187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2313.382568, 689.953125, 12.127187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19497, 2257.039062, 688.195312, 12.109375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19498, 2257.039062, 688.195312, 12.109375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 2256.049072, 689.815307, 10.379375, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1502, 2251.708984, 682.635314, 10.409375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 2248.958984, 678.745300, 10.449375, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2261.279052, 692.655334, 12.409375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2265.529052, 692.655334, 12.409375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2266.029052, 678.595336, 12.569375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2257.359130, 678.595336, 12.099374, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2253.109130, 689.945312, 12.119375, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19497, 2177.390625, 688.203125, 12.117187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19498, 2177.390625, 688.203125, 12.117187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 2176.400634, 689.823120, 10.387187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1494, 2172.060546, 682.643127, 10.417187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1499, 2169.310546, 678.753112, 10.457187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2181.630615, 692.663146, 12.417187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2185.880615, 692.663146, 12.417187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2186.380615, 678.603149, 12.577187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2177.710693, 678.603149, 12.107187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2173.460693, 689.953125, 12.127187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19497, 1362.359375, 1896.562500, 12.125000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19498, 1362.359375, 1896.562500, 12.125000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 1363.979370, 1897.552490, 10.395000, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(1502, 1356.799316, 1901.892456, 10.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1492, 1352.909423, 1904.642456, 10.465000, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 1366.819335, 1892.322509, 12.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1366.819335, 1888.072509, 12.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1352.759399, 1887.572509, 12.585000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1352.759399, 1896.242553, 12.114999, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1364.109375, 1900.492553, 12.135000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19497, 1593.351562, 2123.093750, 12.117187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19498, 1593.351562, 2123.093750, 12.117187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 1594.971557, 2124.083740, 10.387187, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(1499, 1587.791503, 2128.423828, 10.417187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1491, 1583.901611, 2131.173828, 10.457187, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 1597.811523, 2118.853759, 12.417187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1597.811523, 2114.603759, 12.417187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1583.751586, 2114.103759, 12.577187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1583.751586, 2122.773681, 12.107187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1595.101562, 2127.023681, 12.127187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19497, 1593.351562, 2038.234375, 12.125000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19498, 1593.351562, 2038.234375, 12.125000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 1594.971557, 2039.224365, 10.395000, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(1492, 1587.791503, 2043.564331, 10.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1491, 1583.901611, 2046.314331, 10.465000, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 1597.811523, 2033.994384, 12.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1597.811523, 2029.744384, 12.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1583.751586, 2029.244384, 12.585000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1583.751586, 2037.914428, 12.114999, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1595.101562, 2042.164428, 12.135000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19497, 1643.406250, 2149.890625, 11.968750, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19498, 1643.406250, 2149.890625, 11.968750, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1499, 1641.786254, 2148.900634, 10.238750, 0.000000, 0.000000, 90.000007);
    CreateDynamicObject(1492, 1648.966308, 2144.560546, 10.268750, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1652.856201, 2141.810546, 10.308750, 0.000000, 0.000000, 90.000007);
    CreateDynamicObject(19466, 1638.946289, 2154.130615, 12.268750, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1638.946289, 2158.380615, 12.268750, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1653.006225, 2158.880615, 12.428750, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1653.006225, 2150.210693, 11.958749, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1641.656250, 2145.960693, 11.978750, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19497, 1682.359375, 2123.226562, 12.117187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19498, 1682.359375, 2123.226562, 12.117187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1491, 1683.979370, 2124.216552, 10.387187, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(1502, 1676.799316, 2128.556640, 10.417187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1491, 1672.909423, 2131.306640, 10.457187, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 1686.819335, 2118.986572, 12.417187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1686.819335, 2114.736572, 12.417187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1672.759399, 2114.236572, 12.577187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1672.759399, 2122.906494, 12.107187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1684.109375, 2127.156494, 12.127187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19497, 1682.359375, 2046.421875, 12.125000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19498, 1682.359375, 2046.421875, 12.125000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1491, 1683.979370, 2047.411865, 10.395000, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(1502, 1676.799316, 2051.751953, 10.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 1672.909423, 2054.501953, 10.465000, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 1686.819335, 2042.181884, 12.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1686.819335, 2037.931884, 12.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1672.759399, 2037.431884, 12.585000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1672.759399, 2046.101928, 12.114999, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1684.109375, 2050.351806, 12.135000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19497, 1411.507812, 1920.156250, 12.125000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19498, 1411.507812, 1920.156250, 12.125000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1491, 1409.887817, 1919.166259, 10.395000, 0.000000, 0.000000, 90.000007);
    CreateDynamicObject(1491, 1417.067871, 1914.826293, 10.425000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1420.957763, 1912.076293, 10.465000, 0.000000, 0.000000, 90.000007);
    CreateDynamicObject(19466, 1407.047851, 1924.396240, 12.425000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1407.047851, 1928.646240, 12.425000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1421.107788, 1929.146240, 12.585000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1421.107788, 1920.476196, 12.114999, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1409.757812, 1916.226196, 12.135000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19497, 1462.351562, 1919.890625, 12.117187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19498, 1462.351562, 1919.890625, 12.117187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 1463.971557, 1920.880615, 10.387187, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(1502, 1456.791503, 1925.220581, 10.417187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 1452.901611, 1927.970581, 10.457187, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 1466.811523, 1915.650634, 12.417187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1466.811523, 1911.400634, 12.417187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1452.751586, 1910.900634, 12.577187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1452.751586, 1919.570678, 12.107187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1464.101562, 1923.820678, 12.127187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19497, 1552.414062, 2096.554687, 12.117187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19498, 1552.414062, 2096.554687, 12.117187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1499, 1550.794067, 2095.564697, 10.387187, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1492, 1557.974121, 2091.224609, 10.417187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, 1561.864013, 2088.474609, 10.457187, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1547.954101, 2100.794677, 12.417187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1547.954101, 2105.044677, 12.417187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1562.014038, 2105.544677, 12.577187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1562.014038, 2096.874755, 12.107187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1550.664062, 2092.624755, 12.127187, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19497, 1362.242187, 2003.609375, 12.117187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19498, 1362.242187, 2003.609375, 12.117187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 1363.862182, 2004.599365, 10.387187, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(1494, 1356.682128, 2008.939331, 10.417187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 1352.792236, 2011.689331, 10.457187, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 1366.702148, 1999.369384, 12.417187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1366.702148, 1995.119384, 12.417187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1352.642211, 1994.619384, 12.577187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1352.642211, 2003.289428, 12.107187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1363.992187, 2007.539428, 12.127187, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19497, 1322.359375, 1976.257812, 12.125000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19498, 1322.359375, 1976.257812, 12.125000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, 1320.739379, 1975.267822, 10.395000, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1494, 1327.919433, 1970.927856, 10.425000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1331.809326, 1968.177856, 10.465000, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1317.899414, 1980.497802, 12.425000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1317.899414, 1984.747802, 12.425000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1331.959350, 1985.247802, 12.585000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1331.959350, 1976.577758, 12.114999, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1320.609375, 1972.327758, 12.135000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19497, 1032.421875, 1976.250000, 12.125000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19498, 1032.421875, 1976.250000, 12.125000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1491, 1030.801879, 1975.260009, 10.395000, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1491, 1037.981933, 1970.920043, 10.425000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, 1041.871826, 1968.170043, 10.465000, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1027.961914, 1980.489990, 12.425000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1027.961914, 1984.739990, 12.425000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1042.021850, 1985.239990, 12.585000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1042.021850, 1976.569946, 12.114999, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1030.671875, 1972.319946, 12.135000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19497, 1082.359375, 1976.562500, 12.125000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19498, 1082.359375, 1976.562500, 12.125000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 1083.979370, 1977.552490, 10.395000, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(1491, 1076.799316, 1981.892456, 10.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 1072.909423, 1984.642456, 10.465000, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 1086.819335, 1972.322509, 12.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1086.819335, 1968.072509, 12.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1072.759399, 1967.572509, 12.585000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1072.759399, 1976.242553, 12.114999, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1084.109375, 1980.492553, 12.135000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19497, 1032.515625, 1876.500000, 12.125000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19498, 1032.515625, 1876.500000, 12.125000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1491, 1030.895629, 1875.510009, 10.395000, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1494, 1038.075683, 1871.170043, 10.425000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1491, 1041.965576, 1868.420043, 10.465000, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1028.055664, 1880.739990, 12.425000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1028.055664, 1884.989990, 12.425000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1042.115600, 1885.489990, 12.585000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1042.115600, 1876.819946, 12.114999, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1030.765625, 1872.569946, 12.135000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19497, 982.359375, 2030.007812, 12.125000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19498, 982.359375, 2030.007812, 12.125000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 983.979370, 2030.997802, 10.395000, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(1492, 976.799377, 2035.337768, 10.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 972.909362, 2038.087768, 10.465000, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 986.819396, 2025.767822, 12.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 986.819396, 2021.517822, 12.425000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 972.759399, 2021.017822, 12.585000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 972.759399, 2029.687866, 12.114999, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 984.109375, 2033.937866, 12.135000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19497, 982.554687, 1930.515625, 12.125000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19498, 982.554687, 1930.515625, 12.125000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1491, 984.174682, 1931.505615, 10.395000, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(1499, 976.994689, 1935.845581, 10.425000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1499, 973.104675, 1938.595581, 10.465000, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 987.014709, 1926.275634, 12.425000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 987.014709, 1922.025634, 12.425000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 972.954711, 1921.525634, 12.585000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 972.954711, 1930.195678, 12.114999, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 984.304687, 1934.445678, 12.135000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19497, 957.078125, 2268.125000, 12.125000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19498, 957.078125, 2268.125000, 12.125000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1502, 956.088134, 2269.745117, 10.395000, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1494, 951.748107, 2262.564941, 10.425000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1499, 948.998107, 2258.675048, 10.465000, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 961.318115, 2272.584960, 12.425000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 965.568115, 2272.584960, 12.425000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 966.068115, 2258.524902, 12.585000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 957.398132, 2258.524902, 12.114999, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 953.148132, 2269.875000, 12.135000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19497, 982.320312, 2343.546875, 12.125000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19498, 982.320312, 2343.546875, 12.125000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1502, 983.940307, 2344.536865, 10.395000, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(1502, 976.760314, 2348.876953, 10.425000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1494, 972.870300, 2351.626953, 10.465000, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 986.780334, 2339.306884, 12.425000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 986.780334, 2335.056884, 12.425000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 972.720336, 2334.556884, 12.585000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 972.720336, 2343.226806, 12.114999, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 984.070312, 2347.476806, 12.135000, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19501, 1649.906250, 2757.703125, 12.835937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19502, 1649.906250, 2757.703125, 12.835937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1502, 1642.996215, 2754.073242, 9.735937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1644.026245, 2766.553222, 9.875937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1647.026245, 2766.553222, 9.875937, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 1642.606201, 2758.603027, 11.435937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1642.606201, 2756.363037, 11.315937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1642.606201, 2760.923095, 11.455937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1642.606201, 2763.163085, 11.455937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1656.976196, 2755.433105, 11.515937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1656.976196, 2757.673095, 11.515937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1656.976196, 2753.193115, 11.515937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1656.976196, 2762.703125, 11.425937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1656.976196, 2760.463134, 11.425937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19501, 1569.031250, 2770.429687, 12.835937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19502, 1569.031250, 2770.429687, 12.835937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1502, 1565.401245, 2777.339599, 9.735937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 1577.881225, 2776.309570, 9.875937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 1577.881225, 2773.309570, 9.875937, 0.000000, 0.000000, 90.000007);
    CreateDynamicObject(19466, 1569.931274, 2777.729736, 11.435937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1567.691284, 2777.729736, 11.315937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1572.251220, 2777.729736, 11.455937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1574.491210, 2777.729736, 11.455937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1566.761230, 2763.359619, 11.515937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1569.001220, 2763.359619, 11.515937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1564.521240, 2763.359619, 11.515937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1574.031250, 2763.359619, 11.425937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1571.791259, 2763.359619, 11.425937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19501, 1631.679687, 2797.226562, 12.835937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19502, 1631.679687, 2797.226562, 12.835937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 1638.589721, 2800.856445, 9.735937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1637.559692, 2788.376464, 9.875937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1634.559692, 2788.376464, 9.875937, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 1638.979736, 2796.326660, 11.435937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1638.979736, 2798.566650, 11.315937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1638.979736, 2794.006591, 11.455937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1638.979736, 2791.766601, 11.455937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1624.609741, 2799.496582, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1624.609741, 2797.256591, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1624.609741, 2801.736572, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1624.609741, 2792.226562, 11.425937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1624.609741, 2794.466552, 11.425937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19501, 1541.203125, 2614.281250, 12.835937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19502, 1541.203125, 2614.281250, 12.835937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, 1534.293090, 2610.651367, 9.735937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1535.323120, 2623.131347, 9.875937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1538.323120, 2623.131347, 9.875937, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 1533.903076, 2615.181152, 11.435937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1533.903076, 2612.941162, 11.315937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1533.903076, 2617.501220, 11.455937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1533.903076, 2619.741210, 11.455937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1548.273071, 2612.011230, 11.515937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1548.273071, 2614.251220, 11.515937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1548.273071, 2609.771240, 11.515937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1548.273071, 2619.281250, 11.425937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1548.273071, 2617.041259, 11.425937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19501, 1271.617187, 2614.281250, 12.835937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19502, 1271.617187, 2614.281250, 12.835937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1502, 1264.707153, 2610.651367, 9.735937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1265.737182, 2623.131347, 9.875937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1268.737182, 2623.131347, 9.875937, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 1264.317138, 2615.181152, 11.435937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1264.317138, 2612.941162, 11.315937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1264.317138, 2617.501220, 11.455937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1264.317138, 2619.741210, 11.455937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1278.687133, 2612.011230, 11.515937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1278.687133, 2614.251220, 11.515937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1278.687133, 2609.771240, 11.515937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1278.687133, 2619.281250, 11.425937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1278.687133, 2617.041259, 11.425937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19501, 1640.312500, 2565.335937, 12.835937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19502, 1640.312500, 2565.335937, 12.835937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 1647.222534, 2568.965820, 9.735937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1646.192504, 2556.485839, 9.875937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1643.192504, 2556.485839, 9.875937, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 1647.612548, 2564.436035, 11.435937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1647.612548, 2566.676025, 11.315937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1647.612548, 2562.115966, 11.455937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1647.612548, 2559.875976, 11.455937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1633.242553, 2567.605957, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1633.242553, 2565.365966, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1633.242553, 2569.845947, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1633.242553, 2560.335937, 11.425937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1633.242553, 2562.575927, 11.425937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19501, 1606.648437, 2614.281250, 12.835937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19502, 1606.648437, 2614.281250, 12.835937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1599.738403, 2610.651367, 9.735937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1600.768432, 2623.131347, 9.875937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1603.768432, 2623.131347, 9.875937, 0.000000, 0.000000, 180.000015);
    CreateDynamicObject(19466, 1599.348388, 2615.181152, 11.435937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1599.348388, 2612.941162, 11.315937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1599.348388, 2617.501220, 11.455937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1599.348388, 2619.741210, 11.455937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1613.718383, 2612.011230, 11.515937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1613.718383, 2614.251220, 11.515937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1613.718383, 2609.771240, 11.515937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1613.718383, 2619.281250, 11.425937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1613.718383, 2617.041259, 11.425937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19501, 1624.875000, 2614.281250, 12.835937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19502, 1624.875000, 2614.281250, 12.835937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1502, 1617.964965, 2610.651367, 9.735937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1618.994995, 2623.131347, 9.875937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1621.994995, 2623.131347, 9.875937, 0.000000, 0.000000, 180.000015);
    CreateDynamicObject(19466, 1617.574951, 2615.181152, 11.435937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1617.574951, 2612.941162, 11.315937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1617.574951, 2617.501220, 11.455937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1617.574951, 2619.741210, 11.455937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1631.944946, 2612.011230, 11.515937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1631.944946, 2614.251220, 11.515937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1631.944946, 2609.771240, 11.515937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1631.944946, 2619.281250, 11.425937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1631.944946, 2617.041259, 11.425937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19501, 1944.593750, 2717.695312, 12.835937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19502, 1944.593750, 2717.695312, 12.835937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1492, 1951.503784, 2721.325195, 9.735937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1950.473754, 2708.845214, 9.875937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1947.473754, 2708.845214, 9.875937, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 1951.893798, 2716.795410, 11.435937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1951.893798, 2719.035400, 11.315937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1951.893798, 2714.475341, 11.455937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1951.893798, 2712.235351, 11.455937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1937.523803, 2719.965332, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1937.523803, 2717.725341, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1937.523803, 2722.205322, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1937.523803, 2712.695312, 11.425937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1937.523803, 2714.935302, 11.425937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19501, 2011.992187, 2717.695312, 12.835937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19502, 2011.992187, 2717.695312, 12.835937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 2018.902221, 2721.325195, 9.735937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 2017.872192, 2708.845214, 9.875937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 2014.872192, 2708.845214, 9.875937, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 2019.292236, 2716.795410, 11.435937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2019.292236, 2719.035400, 11.315937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2019.292236, 2714.475341, 11.455937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2019.292236, 2712.235351, 11.455937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2004.922241, 2719.965332, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2004.922241, 2717.725341, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2004.922241, 2722.205322, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2004.922241, 2712.695312, 11.425937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2004.922241, 2714.935302, 11.425937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19501, 2043.210937, 2668.757812, 12.835937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19502, 2043.210937, 2668.757812, 12.835937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1492, 2036.300903, 2665.127929, 9.735937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 2037.330932, 2677.607910, 9.875937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 2040.330932, 2677.607910, 9.875937, 0.000000, 0.000000, 180.000015);
    CreateDynamicObject(19466, 2035.910888, 2669.657714, 11.435937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2035.910888, 2667.417724, 11.315937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2035.910888, 2671.977783, 11.455937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2035.910888, 2674.217773, 11.455937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2050.281005, 2666.487792, 11.515937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2050.281005, 2668.727783, 11.515937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2050.281005, 2664.247802, 11.515937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2050.281005, 2673.757812, 11.425937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2050.281005, 2671.517822, 11.425937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19501, 1975.812500, 2668.757812, 12.835937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19502, 1975.812500, 2668.757812, 12.835937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1502, 1968.902465, 2665.127929, 9.735937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1969.932495, 2677.607910, 9.875937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1972.932495, 2677.607910, 9.875937, 0.000000, 0.000000, 180.000015);
    CreateDynamicObject(19466, 1968.512451, 2669.657714, 11.435937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1968.512451, 2667.417724, 11.315937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1968.512451, 2671.977783, 11.455937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1968.512451, 2674.217773, 11.455937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1982.882446, 2666.487792, 11.515937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1982.882446, 2668.727783, 11.515937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1982.882446, 2664.247802, 11.515937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1982.882446, 2673.757812, 11.425937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1982.882446, 2671.517822, 11.425937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19501, 1611.859375, 2673.218750, 12.835937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19502, 1611.859375, 2673.218750, 12.835937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1491, 1608.229370, 2680.128662, 9.735937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 1620.709350, 2679.098632, 9.875937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 1620.709350, 2676.098632, 9.875937, 0.000000, 0.000000, 90.000007);
    CreateDynamicObject(19466, 1612.759399, 2680.518798, 11.435937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1610.519409, 2680.518798, 11.315937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1615.079345, 2680.518798, 11.455937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1617.319335, 2680.518798, 11.455937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1609.589355, 2666.148681, 11.515937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1611.829345, 2666.148681, 11.515937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1607.349365, 2666.148681, 11.515937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1616.859375, 2666.148681, 11.425937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1614.619384, 2666.148681, 11.425937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19501, 1549.898437, 2654.265625, 12.835937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19502, 1549.898437, 2654.265625, 12.835937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 1556.808471, 2657.895507, 9.735937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1555.778442, 2645.415527, 9.875937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1552.778442, 2645.415527, 9.875937, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 1557.198486, 2653.365722, 11.435937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1557.198486, 2655.605712, 11.315937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1557.198486, 2651.045654, 11.455937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1557.198486, 2648.805664, 11.455937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1542.828491, 2656.535644, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1542.828491, 2654.295654, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1542.828491, 2658.775634, 11.515937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1542.828491, 2649.265625, 11.425937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1542.828491, 2651.505615, 11.425937, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19499, 1668.132812, 2757.703125, 13.250000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19500, 1668.132812, 2757.703125, 13.250000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1491, 1662.482788, 2754.753173, 9.890000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1670.552856, 2764.003173, 9.859999, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1673.572753, 2764.003173, 9.859999, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 1662.062866, 2756.703125, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1662.062866, 2758.943115, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1662.062866, 2761.183105, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1675.162841, 2759.623046, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1675.162841, 2761.863037, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1675.172851, 2752.833007, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1675.172851, 2755.063232, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1675.172851, 2750.593017, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19499, 1631.679687, 2757.703125, 13.250000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19500, 1631.679687, 2757.703125, 13.250000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, 1626.029663, 2754.753173, 9.890000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1634.099731, 2764.003173, 9.859999, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1637.119628, 2764.003173, 9.859999, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 1625.609741, 2756.703125, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1625.609741, 2758.943115, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1625.609741, 2761.183105, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1638.709716, 2759.623046, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1638.709716, 2761.863037, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1638.719726, 2752.833007, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1638.719726, 2755.063232, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1638.719726, 2750.593017, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19499, 1613.445312, 2757.703125, 13.250000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19500, 1613.445312, 2757.703125, 13.250000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1607.795288, 2754.753173, 9.890000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1615.865356, 2764.003173, 9.859999, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1618.885253, 2764.003173, 9.859999, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 1607.375366, 2756.703125, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1607.375366, 2758.943115, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1607.375366, 2761.183105, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1620.475341, 2759.623046, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1620.475341, 2761.863037, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1620.485351, 2752.833007, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1620.485351, 2755.063232, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1620.485351, 2750.593017, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19499, 1569.031250, 2752.203125, 13.250000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19500, 1569.031250, 2752.203125, 13.250000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1502, 1566.081298, 2757.853027, 9.890000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 1575.331298, 2749.783203, 9.859999, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 1575.331298, 2746.763183, 9.859999, 0.000000, 0.000000, 90.000007);
    CreateDynamicObject(19466, 1568.031250, 2758.273193, 11.470000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1570.271240, 2758.273193, 11.470000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1572.511230, 2758.273193, 11.470000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1570.951293, 2745.173095, 11.520000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1573.191284, 2745.173095, 11.520000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1564.161254, 2745.163085, 11.520000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1566.391235, 2745.163085, 11.520000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1561.921264, 2745.163085, 11.520000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19499, 1569.031250, 2788.656250, 13.250000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19500, 1569.031250, 2788.656250, 13.250000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1491, 1566.081298, 2794.306152, 9.890000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 1575.331298, 2786.236328, 9.859999, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1494, 1575.331298, 2783.216308, 9.859999, 0.000000, 0.000000, 90.000007);
    CreateDynamicObject(19466, 1568.031250, 2794.726318, 11.470000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1570.271240, 2794.726318, 11.470000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1572.511230, 2794.726318, 11.470000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1570.951293, 2781.626220, 11.520000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1573.191284, 2781.626220, 11.520000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1564.161254, 2781.616210, 11.520000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1566.391235, 2781.616210, 11.520000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 1561.921264, 2781.616210, 11.520000, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19499, 1668.132812, 2797.226562, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19500, 1668.132812, 2797.226562, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 1673.782836, 2800.176513, 9.890000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1665.712768, 2790.926513, 9.859999, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1662.692871, 2790.926513, 9.859999, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 1674.202758, 2798.226562, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1674.202758, 2795.986572, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1674.202758, 2793.746582, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1661.102783, 2795.306640, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1661.102783, 2793.066650, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1661.092773, 2802.096679, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1661.092773, 2799.866455, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1661.092773, 2804.336669, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19499, 1649.906250, 2797.226562, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19500, 1649.906250, 2797.226562, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1491, 1655.556274, 2800.176513, 9.890000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1647.486206, 2790.926513, 9.859999, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1644.466308, 2790.926513, 9.859999, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 1655.976196, 2798.226562, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1655.976196, 2795.986572, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1655.976196, 2793.746582, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1642.876220, 2795.306640, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1642.876220, 2793.066650, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1642.866210, 2802.096679, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1642.866210, 2799.866455, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1642.866210, 2804.336669, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19499, 1613.445312, 2797.226562, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19500, 1613.445312, 2797.226562, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 1619.095336, 2800.176513, 9.890000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1611.025268, 2790.926513, 9.859999, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1608.005371, 2790.926513, 9.859999, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 1619.515258, 2798.226562, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1619.515258, 2795.986572, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1619.515258, 2793.746582, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1606.415283, 2795.306640, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1606.415283, 2793.066650, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1606.405273, 2802.096679, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1606.405273, 2799.866455, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1606.405273, 2804.336669, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19499, 1559.429687, 2614.281250, 13.250000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19500, 1559.429687, 2614.281250, 13.250000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1553.779663, 2611.331298, 9.890000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1561.849731, 2620.581298, 9.859999, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1564.869628, 2620.581298, 9.859999, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 1553.359741, 2613.281250, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1553.359741, 2615.521240, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1553.359741, 2617.761230, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1566.459716, 2616.201171, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1566.459716, 2618.441162, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1566.469726, 2609.411132, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1566.469726, 2611.641357, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1566.469726, 2607.171142, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19499, 1289.843750, 2614.281250, 13.250000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19500, 1289.843750, 2614.281250, 13.250000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1502, 1284.193725, 2611.331298, 9.890000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1292.263793, 2620.581298, 9.859999, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1295.283691, 2620.581298, 9.859999, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 1283.773803, 2613.281250, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1283.773803, 2615.521240, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1283.773803, 2617.761230, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1296.873779, 2616.201171, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1296.873779, 2618.441162, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1296.883789, 2609.411132, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1296.883789, 2611.641357, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1296.883789, 2607.171142, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19499, 1643.101562, 2614.281250, 13.250000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19500, 1643.101562, 2614.281250, 13.250000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1502, 1637.451538, 2611.331298, 9.890000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1645.521606, 2620.581298, 9.859999, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1648.541503, 2620.581298, 9.859999, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 1637.031616, 2613.281250, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1637.031616, 2615.521240, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1637.031616, 2617.761230, 11.470000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1650.131591, 2616.201171, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1650.131591, 2618.441162, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1650.141601, 2609.411132, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1650.141601, 2611.641357, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1650.141601, 2607.171142, 11.520000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19499, 1926.367187, 2717.695312, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19500, 1926.367187, 2717.695312, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 1932.017211, 2720.645263, 9.890000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1923.947143, 2711.395263, 9.859999, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1920.927246, 2711.395263, 9.859999, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 1932.437133, 2718.695312, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1932.437133, 2716.455322, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1932.437133, 2714.215332, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1919.337158, 2715.775390, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1919.337158, 2713.535400, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1919.327148, 2722.565429, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1919.327148, 2720.335205, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1919.327148, 2724.805419, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19499, 1993.757812, 2717.695312, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19500, 1993.757812, 2717.695312, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 1999.407836, 2720.645263, 9.890000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1991.337768, 2711.395263, 9.859999, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1988.317871, 2711.395263, 9.859999, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 1999.827758, 2718.695312, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1999.827758, 2716.455322, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1999.827758, 2714.215332, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1986.727783, 2715.775390, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1986.727783, 2713.535400, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1986.717773, 2722.565429, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1986.717773, 2720.335205, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1986.717773, 2724.805419, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19499, 2061.156250, 2717.695312, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19500, 2061.156250, 2717.695312, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1491, 2066.806152, 2720.645263, 9.890000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 2058.736328, 2711.395263, 9.859999, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 2055.716308, 2711.395263, 9.859999, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 2067.226318, 2718.695312, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2067.226318, 2716.455322, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2067.226318, 2714.215332, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2054.126220, 2715.775390, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2054.126220, 2713.535400, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2054.116210, 2722.565429, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2054.116210, 2720.335205, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2054.116210, 2724.805419, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19499, 2061.437500, 2668.757812, 13.250000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19500, 2061.437500, 2668.757812, 13.250000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 2055.787597, 2665.807861, 9.890000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 2063.857421, 2675.057861, 9.859999, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 2066.877441, 2675.057861, 9.859999, 0.000000, 0.000000, 180.000015);
    CreateDynamicObject(19466, 2055.367431, 2667.757812, 11.470000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2055.367431, 2669.997802, 11.470000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2055.367431, 2672.237792, 11.470000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2068.467529, 2670.677734, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2068.467529, 2672.917724, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2068.477539, 2663.887695, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2068.477539, 2666.117919, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2068.477539, 2661.647705, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19499, 1994.046875, 2668.757812, 13.250000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19500, 1994.046875, 2668.757812, 13.250000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1502, 1988.396850, 2665.807861, 9.890000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1996.466918, 2675.057861, 9.859999, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1999.486816, 2675.057861, 9.859999, 0.000000, 0.000000, 180.000015);
    CreateDynamicObject(19466, 1987.976928, 2667.757812, 11.470000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1987.976928, 2669.997802, 11.470000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1987.976928, 2672.237792, 11.470000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2001.076904, 2670.677734, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2001.076904, 2672.917724, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2001.086914, 2663.887695, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2001.086914, 2666.117919, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2001.086914, 2661.647705, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19499, 1926.648437, 2668.757812, 13.250000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19500, 1926.648437, 2668.757812, 13.250000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1491, 1920.998413, 2665.807861, 9.890000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1929.068481, 2675.057861, 9.859999, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1494, 1932.088378, 2675.057861, 9.859999, 0.000000, 0.000000, 180.000015);
    CreateDynamicObject(19466, 1920.578491, 2667.757812, 11.470000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1920.578491, 2669.997802, 11.470000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1920.578491, 2672.237792, 11.470000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1933.678466, 2670.677734, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1933.678466, 2672.917724, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1933.688476, 2663.887695, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1933.688476, 2666.117919, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 1933.688476, 2661.647705, 11.520000, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19499, 1568.132812, 2654.265625, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19500, 1568.132812, 2654.265625, 13.250000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 1573.782836, 2657.215576, 9.890000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1565.712768, 2647.965576, 9.859999, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 1562.692871, 2647.965576, 9.859999, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 1574.202758, 2655.265625, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1574.202758, 2653.025634, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1574.202758, 2650.785644, 11.470000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1561.102783, 2652.345703, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1561.102783, 2650.105712, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1561.092773, 2659.135742, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1561.092773, 2656.905517, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 1561.092773, 2661.375732, 11.520000, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19503, 1314.179687, 2612.570312, 12.687500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19504, 1314.179687, 2612.570312, 12.687500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1491, 1312.919677, 2610.700195, 10.467499, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1502, 1317.999633, 2610.790283, 10.537500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19363, 1316.029663, 2610.690429, 11.187500, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1306.399658, 2603.470214, 11.167499, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1302.109741, 2603.470214, 11.837499, 90.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1301.239746, 2607.480224, 11.317500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19325, 1301.239746, 2612.930419, 11.397500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19325, 1305.859741, 2620.570312, 11.727499, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1314.989746, 2620.570312, 10.957500, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19503, 1345.117187, 2612.570312, 12.687500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19504, 1345.117187, 2612.570312, 12.687500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1499, 1343.857177, 2610.700195, 10.467499, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1348.937133, 2610.790283, 10.537500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19363, 1346.967163, 2610.690429, 11.187500, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1337.337158, 2603.470214, 11.167499, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1333.047241, 2603.470214, 11.837499, 90.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1332.177246, 2607.480224, 11.317500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19325, 1332.177246, 2612.930419, 11.397500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19325, 1336.797241, 2620.570312, 11.727499, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1345.927246, 2620.570312, 10.957500, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19503, 1516.367187, 2612.570312, 12.687500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19504, 1516.367187, 2612.570312, 12.687500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1491, 1515.107177, 2610.700195, 10.467499, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, 1520.187133, 2610.790283, 10.537500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19363, 1518.217163, 2610.690429, 11.187500, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1508.587158, 2603.470214, 11.167499, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1504.297241, 2603.470214, 11.837499, 90.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1503.427246, 2607.480224, 11.317500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19325, 1503.427246, 2612.930419, 11.397500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19325, 1508.047241, 2620.570312, 11.727499, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1517.177246, 2620.570312, 10.957500, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19503, 1667.437500, 2612.570312, 12.687500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19504, 1667.437500, 2612.570312, 12.687500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1502, 1666.177490, 2610.700195, 10.467499, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1671.257446, 2610.790283, 10.537500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19363, 1669.287475, 2610.690429, 11.187500, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1659.657470, 2603.470214, 11.167499, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1655.367553, 2603.470214, 11.837499, 90.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1654.497558, 2607.480224, 11.317500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19325, 1654.497558, 2612.930419, 11.397500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19325, 1659.117553, 2620.570312, 11.727499, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1668.247558, 2620.570312, 10.957500, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19503, 1665.140625, 2567.039062, 12.687500, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19504, 1665.140625, 2567.039062, 12.687500, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1494, 1666.400634, 2568.909179, 10.467499, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1494, 1661.320678, 2568.819091, 10.537500, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19363, 1663.290649, 2568.918945, 11.187500, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19325, 1672.920654, 2576.139160, 11.167499, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 1677.210571, 2576.139160, 11.837499, 90.000000, 0.000000, 270.000000);
    CreateDynamicObject(19325, 1678.080566, 2572.129150, 11.317500, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19325, 1678.080566, 2566.678955, 11.397500, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19325, 1673.460571, 2559.039062, 11.727499, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19325, 1664.330566, 2559.039062, 10.957500, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19503, 1969.414062, 2719.398437, 12.687500, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19504, 1969.414062, 2719.398437, 12.687500, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1502, 1970.674072, 2721.268554, 10.467499, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1494, 1965.594116, 2721.178466, 10.537500, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19363, 1967.564086, 2721.278320, 11.187500, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19325, 1977.194091, 2728.498535, 11.167499, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 1981.484008, 2728.498535, 11.837499, 90.000000, 0.000000, 270.000000);
    CreateDynamicObject(19325, 1982.354003, 2724.488525, 11.317500, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19325, 1982.354003, 2719.038330, 11.397500, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19325, 1977.734008, 2711.398437, 11.727499, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19325, 1968.604003, 2711.398437, 10.957500, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19503, 1950.984375, 2667.046875, 12.687500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19504, 1950.984375, 2667.046875, 12.687500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, 1949.724365, 2665.176757, 10.467499, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, 1954.804321, 2665.266845, 10.537500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19363, 1952.834350, 2665.166992, 11.187500, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1943.204345, 2657.946777, 11.167499, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1938.914428, 2657.946777, 11.837499, 90.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1938.044433, 2661.956787, 11.317500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19325, 1938.044433, 2667.406982, 11.397500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19325, 1942.664428, 2675.046875, 11.727499, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 1951.794433, 2675.046875, 10.957500, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19503, 2018.375000, 2667.046875, 12.687500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19504, 2018.375000, 2667.046875, 12.687500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1491, 2017.114990, 2665.176757, 10.467499, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1499, 2022.194946, 2665.266845, 10.537500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19363, 2020.224975, 2665.166992, 11.187500, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 2010.594970, 2657.946777, 11.167499, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2006.305053, 2657.946777, 11.837499, 90.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 2005.435058, 2661.956787, 11.317500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19325, 2005.435058, 2667.406982, 11.397500, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19325, 2010.055053, 2675.046875, 11.727499, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19325, 2019.185058, 2675.046875, 10.957500, 0.000000, 0.000000, 90.000000);

    //house ls
    CreateDynamicObject(19509, 2632.273437, -2014.984375, 15.210937, 0.000000, 0.000000, -54.999938);
    CreateDynamicObject(19510, 2632.273437, -2014.984375, 15.210937, 0.000000, 0.000000, -54.999938);
    CreateDynamicObject(1492, 2634.452392, -2012.238037, 13.080937, 0.000000, 0.000000, -54.999938);
    CreateDynamicObject(1502, 2627.392822, -2018.108764, 12.400938, 0.000000, 0.000000, -54.999938);
    CreateDynamicObject(19466, 2636.485839, -2015.159912, 14.740937, 0.000000, 0.000000, 35.000061);
    CreateDynamicObject(19466, 2633.455078, -2010.848754, 14.740937, 0.000000, 0.000000, 35.000061);
    CreateDynamicObject(19505, 2695.085937, -1983.773437, 15.062500, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19506, 2695.085937, -1983.773437, 15.062500, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(1502, 2699.365966, -1976.063476, 12.922499, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1499, 2695.395996, -1989.813476, 12.922499, 0.000000, 0.000000, 359.999969);
    CreateDynamicObject(19466, 2691.156005, -1976.013427, 14.542499, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19466, 2693.385986, -1976.013427, 14.542499, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19466, 2692.885986, -1989.913452, 14.342499, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19466, 2690.645996, -1989.913452, 14.342499, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19466, 2689.406005, -1987.103393, 14.562500, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2701.315917, -1988.343383, 14.602499, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2701.315917, -1984.723388, 14.602499, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2701.315917, -1981.053466, 14.602499, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2701.315917, -1977.863403, 14.602499, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2698.525878, -1989.913452, 14.622500, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19505, 2674.554687, -2026.875000, 15.007812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19506, 2674.554687, -2026.875000, 15.007812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(1499, 2670.274658, -2034.584960, 12.867812, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(1499, 2674.244628, -2020.834960, 12.867812, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2678.484619, -2034.635009, 14.487812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19466, 2676.254638, -2034.635009, 14.487812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19466, 2676.754638, -2020.734985, 14.287812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19466, 2678.994628, -2020.734985, 14.287812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19466, 2680.234619, -2023.545043, 14.507812, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(19466, 2668.324707, -2022.305053, 14.547812, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(19466, 2668.324707, -2025.925048, 14.547812, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(19466, 2668.324707, -2029.594970, 14.547812, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(19466, 2668.324707, -2032.785034, 14.547812, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(19466, 2671.114746, -2020.734985, 14.567812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19509, 2672.546875, -1985.546875, 15.390625, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19510, 2672.546875, -1985.546875, 15.390625, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 2673.546875, -1988.906860, 13.260624, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 2672.786865, -1979.756835, 12.580625, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2669.986816, -1988.896850, 14.920624, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 2675.256835, -1988.886840, 14.920624, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19507, 2694.015625, -2026.078125, 15.265625, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19508, 2694.015625, -2026.078125, 15.265625, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, 2693.605712, -2031.108154, 12.715624, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1491, 2691.485595, -2019.718139, 12.725625, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2687.495605, -2029.998168, 14.235625, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2687.495605, -2026.868164, 14.235625, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2687.495605, -2024.088134, 14.235625, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2687.495605, -2021.088134, 14.235625, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2695.905517, -2019.668090, 14.345624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2697.905517, -2019.668090, 14.345624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2699.965576, -2028.878173, 14.275625, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2690.425537, -2031.158081, 14.355625, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2697.935546, -2031.158081, 14.355625, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19507, 2654.148437, -1983.898437, 15.242187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19508, 2654.148437, -1983.898437, 15.242187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1491, 2654.558349, -1978.868408, 12.692187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1502, 2656.678466, -1990.258422, 12.702187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2660.668457, -1979.978393, 14.212187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2660.668457, -1983.108398, 14.212187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2660.668457, -1985.888427, 14.212187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2660.668457, -1988.888427, 14.212187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2652.258544, -1990.308471, 14.322187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2650.258544, -1990.308471, 14.322187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2648.198486, -1981.098388, 14.252187, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2657.738525, -1978.818481, 14.332187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2650.228515, -1978.818481, 14.332187, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19509, 2634.171875, -1989.054687, 15.390625, 0.000000, 0.000000, -134.999969);
    CreateDynamicObject(19510, 2634.171875, -1989.054687, 15.390625, 0.000000, 0.000000, -134.999969);
    CreateDynamicObject(1502, 2637.254882, -1990.723388, 13.260624, 0.000000, 0.000000, -134.999969);
    CreateDynamicObject(1499, 2630.247314, -1984.790893, 12.580625, 0.000000, 0.000000, -134.999969);
    CreateDynamicObject(19466, 2634.730468, -1993.233642, 14.920624, 0.000000, 0.000000, -44.999969);
    CreateDynamicObject(19466, 2638.449951, -1989.500122, 14.920624, 0.000000, 0.000000, -44.999969);
    CreateDynamicObject(19505, 2506.976562, -1991.781250, 14.742187, 0.000000, 0.000000, 89.999954);
    CreateDynamicObject(19506, 2506.976562, -1991.781250, 14.742187, 0.000000, 0.000000, 89.999954);
    CreateDynamicObject(1502, 2511.256591, -1984.071289, 12.602187, 0.000000, 0.000000, 179.999954);
    CreateDynamicObject(1494, 2507.286621, -1997.821289, 12.602187, 0.000000, 0.000000, 359.999938);
    CreateDynamicObject(19466, 2503.046630, -1984.021240, 14.222187, 0.000000, 0.000000, 89.999954);
    CreateDynamicObject(19466, 2505.276611, -1984.021240, 14.222187, 0.000000, 0.000000, 89.999954);
    CreateDynamicObject(19466, 2504.776611, -1997.921264, 14.022187, 0.000000, 0.000000, 89.999954);
    CreateDynamicObject(19466, 2502.536621, -1997.921264, 14.022187, 0.000000, 0.000000, 89.999954);
    CreateDynamicObject(19466, 2501.296630, -1995.111206, 14.242187, 0.000000, 0.000000, 179.999954);
    CreateDynamicObject(19466, 2513.206542, -1996.351196, 14.282187, 0.000000, 0.000000, 179.999954);
    CreateDynamicObject(19466, 2513.206542, -1992.731201, 14.282187, 0.000000, 0.000000, 179.999954);
    CreateDynamicObject(19466, 2513.206542, -1989.061279, 14.282187, 0.000000, 0.000000, 179.999954);
    CreateDynamicObject(19466, 2513.206542, -1985.871215, 14.282187, 0.000000, 0.000000, 179.999954);
    CreateDynamicObject(19466, 2510.416503, -1997.921264, 14.302187, 0.000000, 0.000000, 89.999954);
    CreateDynamicObject(19507, 2485.109375, -2027.078125, 15.242187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19508, 2485.109375, -2027.078125, 15.242187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, 2484.699462, -2032.108154, 12.692187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1492, 2482.579345, -2020.718139, 12.702187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2478.589355, -2030.998168, 14.212187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2478.589355, -2027.868164, 14.212187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2478.589355, -2025.088134, 14.212187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2478.589355, -2022.088134, 14.212187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2486.999267, -2020.668090, 14.322187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2488.999267, -2020.668090, 14.322187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2491.059326, -2029.878173, 14.252187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2481.519287, -2032.158081, 14.332187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2489.029296, -2032.158081, 14.332187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19509, 2465.289062, -1991.835937, 15.085937, 0.000000, 0.000000, -179.999938);
    CreateDynamicObject(19510, 2465.289062, -1991.835937, 15.085937, 0.000000, 0.000000, -179.999938);
    CreateDynamicObject(1499, 2466.289062, -1995.195922, 12.955937, 0.000000, 0.000000, -179.999938);
    CreateDynamicObject(1499, 2465.529052, -1986.045898, 12.275938, 0.000000, 0.000000, -179.999938);
    CreateDynamicObject(19466, 2462.729003, -1995.185913, 14.615937, 0.000000, 0.000000, -89.999938);
    CreateDynamicObject(19466, 2467.999023, -1995.175903, 14.615937, 0.000000, 0.000000, -89.999938);
    CreateDynamicObject(19505, 2439.195312, -2027.429687, 14.742187, 0.000000, 0.000000, -90.000045);
    CreateDynamicObject(19506, 2439.195312, -2027.429687, 14.742187, 0.000000, 0.000000, -90.000045);
    CreateDynamicObject(1492, 2434.915283, -2035.139648, 12.602187, 0.000000, 0.000000, -0.000045);
    CreateDynamicObject(1494, 2438.885253, -2021.389648, 12.602187, 0.000000, 0.000000, 179.999954);
    CreateDynamicObject(19466, 2443.125244, -2035.189697, 14.222187, 0.000000, 0.000000, -90.000045);
    CreateDynamicObject(19466, 2440.895263, -2035.189697, 14.222187, 0.000000, 0.000000, -90.000045);
    CreateDynamicObject(19466, 2441.395263, -2021.289672, 14.022187, 0.000000, 0.000000, -90.000045);
    CreateDynamicObject(19466, 2443.635253, -2021.289672, 14.022187, 0.000000, 0.000000, -90.000045);
    CreateDynamicObject(19466, 2444.875244, -2024.099731, 14.242187, 0.000000, 0.000000, -0.000045);
    CreateDynamicObject(19466, 2432.965332, -2022.859741, 14.282187, 0.000000, 0.000000, -0.000045);
    CreateDynamicObject(19466, 2432.965332, -2026.479736, 14.282187, 0.000000, 0.000000, -0.000045);
    CreateDynamicObject(19466, 2432.965332, -2030.149658, 14.282187, 0.000000, 0.000000, -0.000045);
    CreateDynamicObject(19466, 2432.965332, -2033.339721, 14.282187, 0.000000, 0.000000, -0.000045);
    CreateDynamicObject(19466, 2435.755371, -2021.289672, 14.302187, 0.000000, 0.000000, -90.000045);
    CreateDynamicObject(19505, 2466.617187, -2027.367187, 14.960937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19506, 2466.617187, -2027.367187, 14.960937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1499, 2462.337158, -2035.077148, 12.820937, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1499, 2466.307128, -2021.327148, 12.820937, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2470.547119, -2035.127197, 14.440937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2468.317138, -2035.127197, 14.440937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2468.817138, -2021.227172, 14.240937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2471.057128, -2021.227172, 14.240937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2472.297119, -2024.037231, 14.460937, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2460.387207, -2022.797241, 14.500937, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2460.387207, -2026.417236, 14.500937, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2460.387207, -2030.087158, 14.500937, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2460.387207, -2033.277221, 14.500937, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2463.177246, -2021.227172, 14.520937, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19505, 2509.117187, -2027.625000, 15.046875, 0.000000, 0.000000, -90.000022);
    CreateDynamicObject(19506, 2509.117187, -2027.625000, 15.046875, 0.000000, 0.000000, -90.000022);
    CreateDynamicObject(1502, 2504.837158, -2035.334960, 12.906874, 0.000000, 0.000000, -0.000022);
    CreateDynamicObject(1499, 2508.807128, -2021.584960, 12.906874, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2513.047119, -2035.385009, 14.526874, 0.000000, 0.000000, -90.000022);
    CreateDynamicObject(19466, 2510.817138, -2035.385009, 14.526874, 0.000000, 0.000000, -90.000022);
    CreateDynamicObject(19466, 2511.317138, -2021.484985, 14.326874, 0.000000, 0.000000, -90.000022);
    CreateDynamicObject(19466, 2513.557128, -2021.484985, 14.326874, 0.000000, 0.000000, -90.000022);
    CreateDynamicObject(19466, 2514.797119, -2024.295043, 14.546875, 0.000000, 0.000000, -0.000022);
    CreateDynamicObject(19466, 2502.887207, -2023.055053, 14.586874, 0.000000, 0.000000, -0.000022);
    CreateDynamicObject(19466, 2502.887207, -2026.675048, 14.586874, 0.000000, 0.000000, -0.000022);
    CreateDynamicObject(19466, 2502.887207, -2030.344970, 14.586874, 0.000000, 0.000000, -0.000022);
    CreateDynamicObject(19466, 2502.887207, -2033.535034, 14.586874, 0.000000, 0.000000, -0.000022);
    CreateDynamicObject(19466, 2505.677246, -2021.484985, 14.606875, 0.000000, 0.000000, -90.000022);
    CreateDynamicObject(19505, 2528.296875, -2022.765625, 14.914062, 0.000000, 0.000000, -45.000061);
    CreateDynamicObject(19506, 2528.296875, -2022.765625, 14.914062, 0.000000, 0.000000, -45.000061);
    CreateDynamicObject(1502, 2530.722412, -2031.243774, 12.774062, 0.000000, 0.000000, 44.999938);
    CreateDynamicObject(1494, 2523.806640, -2018.713989, 12.774062, 0.000000, 0.000000, 224.999938);
    CreateDynamicObject(19466, 2536.562988, -2025.473876, 14.394062, 0.000000, 0.000000, -45.000061);
    CreateDynamicObject(19466, 2534.986083, -2027.050781, 14.394062, 0.000000, 0.000000, -45.000061);
    CreateDynamicObject(19466, 2525.510986, -2016.868286, 14.194062, 0.000000, 0.000000, -45.000061);
    CreateDynamicObject(19466, 2527.094970, -2015.284423, 14.194062, 0.000000, 0.000000, -45.000061);
    CreateDynamicObject(19466, 2529.958496, -2016.394653, 14.414062, 0.000000, 0.000000, 44.999938);
    CreateDynamicObject(19466, 2520.660156, -2023.939453, 14.454062, 0.000000, 0.000000, 44.999938);
    CreateDynamicObject(19466, 2523.219970, -2026.499145, 14.454062, 0.000000, 0.000000, 44.999938);
    CreateDynamicObject(19466, 2525.814941, -2029.094238, 14.454062, 0.000000, 0.000000, 44.999938);
    CreateDynamicObject(19466, 2528.070556, -2031.349853, 14.454062, 0.000000, 0.000000, 44.999938);
    CreateDynamicObject(19466, 2521.522949, -2020.856445, 14.474062, 0.000000, 0.000000, -45.000061);
    CreateDynamicObject(19509, 2527.242187, -1995.664062, 15.179687, 0.000000, 0.000000, 135.000030);
    CreateDynamicObject(19510, 2527.242187, -1995.664062, 15.179687, 0.000000, 0.000000, 135.000030);
    CreateDynamicObject(1494, 2525.573242, -1998.747070, 13.049687, 0.000000, 0.000000, 135.000030);
    CreateDynamicObject(1499, 2531.506103, -1991.739624, 12.369688, 0.000000, 0.000000, 135.000030);
    CreateDynamicObject(19466, 2523.062988, -1996.222656, 14.709687, 0.000000, 0.000000, 225.000030);
    CreateDynamicObject(19466, 2526.796630, -1999.942016, 14.709687, 0.000000, 0.000000, 225.000030);
    CreateDynamicObject(19509, 2063.132812, -1731.781250, 15.273437, 0.000000, 0.000000, -90.000015);
    CreateDynamicObject(19510, 2063.132812, -1731.781250, 15.273437, 0.000000, 0.000000, -90.000015);
    CreateDynamicObject(1499, 2066.492919, -1730.781250, 13.143437, 0.000000, 0.000000, -90.000015);
    CreateDynamicObject(1494, 2057.342773, -1731.541259, 12.463438, 0.000000, 0.000000, -90.000015);
    CreateDynamicObject(19466, 2066.482910, -1734.341308, 14.803437, 0.000000, 0.000000, -0.000015);
    CreateDynamicObject(19466, 2066.472900, -1729.071289, 14.803437, 0.000000, 0.000000, -0.000015);
    CreateDynamicObject(19509, 2020.460937, -1641.507812, 15.179687, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(19510, 2020.460937, -1641.507812, 15.179687, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(1492, 2017.100952, -1642.507812, 13.049687, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(1499, 2026.250976, -1641.747802, 12.369688, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(19466, 2017.110961, -1638.947753, 14.709687, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2017.120971, -1644.217773, 14.709687, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19509, 2155.101562, -1400.468750, 27.195312, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(19510, 2155.101562, -1400.468750, 27.195312, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(1502, 2151.741455, -1401.468750, 25.065311, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(1491, 2160.891601, -1400.708740, 24.385313, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(19466, 2151.751464, -1397.908691, 26.725313, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2151.761474, -1403.178710, 26.725313, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19509, 2156.132812, -1446.187500, 27.171875, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19510, 2156.132812, -1446.187500, 27.171875, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, 2152.772705, -1447.187500, 25.041873, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1502, 2161.922851, -1446.427490, 24.361875, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2152.782714, -1443.627441, 26.701875, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2152.792724, -1448.897460, 26.701875, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19509, 2192.296875, -1404.273437, 27.015625, 0.000000, 0.000000, -89.999954);
    CreateDynamicObject(19510, 2192.296875, -1404.273437, 27.015625, 0.000000, 0.000000, -89.999954);
    CreateDynamicObject(1491, 2195.656982, -1403.273437, 24.885623, 0.000000, 0.000000, -89.999954);
    CreateDynamicObject(1492, 2186.506835, -1404.033447, 24.205625, 0.000000, 0.000000, -89.999954);
    CreateDynamicObject(19466, 2195.646972, -1406.833496, 26.545625, 0.000000, 0.000000, 0.000045);
    CreateDynamicObject(19466, 2195.636962, -1401.563476, 26.545625, 0.000000, 0.000000, 0.000045);
    CreateDynamicObject(19509, 2150.039062, -1281.125000, 25.593750, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19510, 2150.039062, -1281.125000, 25.593750, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 2151.039062, -1284.484985, 23.463748, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1491, 2150.279052, -1275.334960, 22.783750, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2147.479003, -1284.474975, 25.123750, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 2152.749023, -1284.464965, 25.123750, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19509, 2209.929687, -1244.164062, 25.546875, 0.000000, 0.000000, 0.000002);
    CreateDynamicObject(19510, 2209.929687, -1244.164062, 25.546875, 0.000000, 0.000000, 0.000002);
    CreateDynamicObject(1492, 2208.929687, -1240.804077, 23.416873, 0.000000, 0.000000, 0.000002);
    CreateDynamicObject(1502, 2209.689697, -1249.954101, 22.736875, 0.000000, 0.000000, 0.000002);
    CreateDynamicObject(19466, 2212.489746, -1240.814086, 25.076875, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2207.219726, -1240.824096, 25.076875, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19509, 2229.921875, -1276.148437, 26.695312, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19510, 2229.921875, -1276.148437, 26.695312, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 2230.921875, -1279.508422, 24.565311, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1492, 2230.161865, -1270.358398, 23.885313, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2227.361816, -1279.498413, 26.225313, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 2232.631835, -1279.488403, 26.225313, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19509, 2184.976562, -1359.789062, 27.226562, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19510, 2184.976562, -1359.789062, 27.226562, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 2185.976562, -1363.149047, 25.096561, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1494, 2185.216552, -1353.999023, 24.416563, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2182.416503, -1363.139038, 26.756563, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 2187.686523, -1363.129028, 26.756563, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19509, 2148.710937, -1324.000000, 27.140625, 0.000000, 0.000000, 0.000020);
    CreateDynamicObject(19510, 2148.710937, -1324.000000, 27.140625, 0.000000, 0.000000, 0.000020);
    CreateDynamicObject(1491, 2147.710937, -1320.640014, 25.010623, 0.000000, 0.000000, 0.000020);
    CreateDynamicObject(1491, 2148.470947, -1329.790039, 24.330625, 0.000000, 0.000000, 0.000020);
    CreateDynamicObject(19466, 2151.270996, -1320.650024, 26.670625, 0.000000, 0.000000, 90.000022);
    CreateDynamicObject(19466, 2146.000976, -1320.660034, 26.670625, 0.000000, 0.000000, 90.000022);
    CreateDynamicObject(19509, 2147.515625, -1362.203125, 27.039062, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19510, 2147.515625, -1362.203125, 27.039062, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1492, 2148.515625, -1365.563110, 24.909061, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1494, 2147.755615, -1356.413085, 24.229063, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2144.955566, -1365.553100, 26.569063, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, 2150.225585, -1365.543090, 26.569063, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19511, 1955.765625, -1110.796875, 28.781250, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19512, 1955.765625, -1110.796875, 28.781250, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1502, 1954.645629, -1116.146850, 26.731250, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1494, 1958.415649, -1104.866821, 26.821250, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1957.035644, -1104.836914, 28.521249, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1953.635620, -1104.836914, 28.521249, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1960.925659, -1107.476928, 28.381250, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1960.925659, -1112.596923, 28.381250, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1960.925659, -1110.146850, 28.381250, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1956.955566, -1114.156860, 28.211250, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1952.735595, -1116.716918, 28.231250, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19511, 1921.945312, -1110.585937, 28.039062, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19512, 1921.945312, -1110.585937, 28.039062, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, 1920.825317, -1115.935913, 25.989063, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1494, 1924.595336, -1104.655883, 26.079063, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1923.215332, -1104.625976, 27.779062, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1919.815307, -1104.625976, 27.779062, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1927.105346, -1107.265991, 27.639062, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1927.105346, -1112.385986, 27.639062, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1927.105346, -1109.935913, 27.639062, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1923.135253, -1113.945922, 27.469062, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1918.915283, -1116.505981, 27.489063, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19511, 1886.523437, -1109.085937, 27.226562, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19512, 1886.523437, -1109.085937, 27.226562, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, 1885.403442, -1114.435913, 25.176563, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1499, 1889.173461, -1103.155883, 25.266563, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1887.793457, -1103.125976, 26.966562, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1884.393432, -1103.125976, 26.966562, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1891.683471, -1105.765991, 26.826562, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1891.683471, -1110.885986, 26.826562, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1891.683471, -1108.435913, 26.826562, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 1887.713378, -1112.445922, 26.656562, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 1883.493408, -1115.005981, 26.676563, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19511, 2053.257812, -1061.843750, 26.734375, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19512, 2053.257812, -1061.843750, 26.734375, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(1499, 2049.981689, -1066.219116, 24.684375, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(1499, 2058.165527, -1057.589355, 24.774375, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19466, 2056.927734, -1056.978881, 26.474374, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(19466, 2053.846191, -1055.541992, 26.474374, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(19466, 2059.337402, -1061.015502, 26.334375, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19466, 2057.173583, -1065.655761, 26.334375, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19466, 2058.208984, -1063.435302, 26.334375, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19466, 2052.916503, -1065.391845, 26.164375, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(19466, 2048.009765, -1065.928588, 26.184375, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(19511, 2038.359375, -1055.390625, 26.601562, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19512, 2038.359375, -1055.390625, 26.601562, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(1499, 2035.083374, -1059.765991, 24.551563, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(1502, 2043.267211, -1051.136230, 24.641563, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19466, 2042.029174, -1050.525756, 26.341562, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(19466, 2038.947753, -1049.088867, 26.341562, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(19466, 2044.438964, -1054.562377, 26.201562, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19466, 2042.275146, -1059.202636, 26.201562, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19466, 2043.310546, -1056.982177, 26.201562, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19466, 2038.017822, -1058.938720, 26.031562, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(19466, 2033.111328, -1059.475463, 26.051563, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(19511, 2025.523437, -1049.085937, 26.546875, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19512, 2025.523437, -1049.085937, 26.546875, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(1494, 2022.247436, -1053.461303, 24.496875, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(1494, 2030.431274, -1044.831542, 24.586875, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19466, 2029.193237, -1044.221069, 26.286874, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(19466, 2026.111816, -1042.784179, 26.286874, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(19466, 2031.603027, -1048.257690, 26.146875, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19466, 2029.439208, -1052.897949, 26.146875, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19466, 2030.474609, -1050.677490, 26.146875, 0.000000, 0.000000, -24.999996);
    CreateDynamicObject(19466, 2025.181884, -1052.634033, 25.976875, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(19466, 2020.275390, -1053.170776, 25.996875, 0.000000, 0.000000, 65.000000);
    CreateDynamicObject(19511, 2096.179687, -1184.937500, 28.007812, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19512, 2096.179687, -1184.937500, 28.007812, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1492, 2090.829589, -1183.817504, 25.957813, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1494, 2102.109619, -1187.587524, 26.047813, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2102.139648, -1186.207519, 27.747812, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2102.139648, -1182.807495, 27.747812, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2099.499755, -1190.097534, 27.607812, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2094.379638, -1190.097534, 27.607812, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2096.829589, -1190.097534, 27.607812, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2092.819580, -1186.127441, 27.437812, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2090.259765, -1181.907470, 27.457813, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19511, 2098.562500, -1123.312500, 28.640625, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19512, 2098.562500, -1123.312500, 28.640625, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1491, 2093.212402, -1122.192504, 26.590625, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1492, 2104.492431, -1125.962524, 26.680625, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2104.522460, -1124.582519, 28.380624, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2104.522460, -1121.182495, 28.380624, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2101.882568, -1128.472534, 28.240625, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2096.762451, -1128.472534, 28.240625, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2099.212402, -1128.472534, 28.240625, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2095.202392, -1124.502441, 28.070625, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2092.642578, -1120.282470, 28.090625, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19509, 2186.398437, -1487.828125, 27.171875, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19510, 2186.398437, -1487.828125, 27.171875, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(1502, 2189.758544, -1486.828125, 25.041873, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(1491, 2180.608398, -1487.588134, 24.361875, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19466, 2189.748535, -1490.388183, 26.701875, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(19466, 2189.738525, -1485.118164, 26.701875, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(19509, 2111.242187, -1275.156250, 27.085937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19510, 2111.242187, -1275.156250, 27.085937, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1502, 2110.242187, -1271.796264, 24.955936, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(1491, 2111.002197, -1280.946289, 24.275938, 0.000000, 0.000000, 0.000010);
    CreateDynamicObject(19466, 2113.802246, -1271.806274, 26.615938, 0.000000, 0.000000, 90.000007);
    CreateDynamicObject(19466, 2108.532226, -1271.816284, 26.615938, 0.000000, 0.000000, 90.000007);
    CreateDynamicObject(19511, 2040.929687, -1116.007812, 27.312500, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19512, 2040.929687, -1116.007812, 27.312500, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, 2046.279663, -1117.127807, 25.262500, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1499, 2034.999633, -1113.357788, 25.352500, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2034.969726, -1114.737792, 27.052499, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2034.969726, -1118.137817, 27.052499, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2037.609741, -1110.847778, 26.912500, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2042.729736, -1110.847778, 26.912500, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2040.279663, -1110.847778, 26.912500, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2044.289672, -1114.817871, 26.742500, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2046.849731, -1119.037841, 26.762500, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19509, 2063.781250, -1629.054687, 15.273437, 0.000000, 0.000000, -90.000015);
    CreateDynamicObject(19510, 2063.781250, -1629.054687, 15.273437, 0.000000, 0.000000, -90.000015);
    CreateDynamicObject(1492, 2067.141357, -1628.054687, 13.143437, 0.000000, 0.000000, -90.000015);
    CreateDynamicObject(1492, 2057.991210, -1628.814697, 12.463438, 0.000000, 0.000000, -90.000015);
    CreateDynamicObject(19466, 2067.131347, -1631.614746, 14.803437, 0.000000, 0.000000, -0.000015);
    CreateDynamicObject(19466, 2067.121337, -1626.344726, 14.803437, 0.000000, 0.000000, -0.000015);
    CreateDynamicObject(19505, 2134.695312, -1239.531250, 25.265625, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19506, 2134.695312, -1239.531250, 25.265625, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(1494, 2130.415283, -1247.241210, 23.125625, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(1502, 2134.385253, -1233.491210, 23.125625, 0.000000, 0.000000, 180.000015);
    CreateDynamicObject(19466, 2138.625244, -1247.291259, 24.745624, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 2136.395263, -1247.291259, 24.745624, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 2136.895263, -1233.391235, 24.545625, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 2139.135253, -1233.391235, 24.545625, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 2140.375244, -1236.201293, 24.765625, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 2128.465332, -1234.961303, 24.805625, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 2128.465332, -1238.581298, 24.805625, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 2128.465332, -1242.251220, 24.805625, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 2128.465332, -1245.441284, 24.805625, 0.000000, 0.000000, 0.000015);
    CreateDynamicObject(19466, 2131.255371, -1233.391235, 24.825624, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19505, 2428.218750, -1290.585937, 26.187500, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19506, 2428.218750, -1290.585937, 26.187500, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1492, 2420.508789, -1286.305908, 24.047500, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1502, 2434.258789, -1290.275878, 24.047500, 0.000000, 0.000000, 449.999969);
    CreateDynamicObject(19466, 2420.458740, -1294.515991, 25.667499, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2420.458740, -1292.285888, 25.667499, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2434.358642, -1292.785888, 25.467500, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2434.358642, -1295.025878, 25.467500, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2431.548828, -1296.265991, 25.687500, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, 2432.788818, -1284.355957, 25.727500, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, 2429.168701, -1284.355957, 25.727500, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, 2425.498779, -1284.355957, 25.727500, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, 2422.308837, -1284.355957, 25.727500, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, 2434.358642, -1287.145996, 25.747499, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19507, 2428.078125, -1273.664062, 26.000000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19508, 2428.078125, -1273.664062, 26.000000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, 2423.048095, -1273.254028, 23.450000, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1499, 2434.438232, -1271.134033, 23.459999, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2424.158203, -1267.144042, 24.969999, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2427.288085, -1267.144042, 24.969999, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2430.068115, -1267.144042, 24.969999, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2433.068115, -1267.144042, 24.969999, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2434.488037, -1275.554077, 25.079999, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2434.488037, -1277.554077, 25.079999, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2425.278076, -1279.614013, 25.010000, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2422.998046, -1270.074096, 25.090000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2422.998046, -1277.584106, 25.090000, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19505, 2395.007812, -1278.375000, 25.968750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19506, 2395.007812, -1278.375000, 25.968750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, 2402.717773, -1282.655029, 23.828750, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, 2388.967773, -1278.685058, 23.828750, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2402.767822, -1274.444946, 25.448749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, 2402.767822, -1276.675048, 25.448749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, 2388.867919, -1276.175048, 25.248750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, 2388.867919, -1273.935058, 25.248750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, 2391.677734, -1272.694946, 25.468750, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2390.437744, -1284.604980, 25.508750, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2394.057861, -1284.604980, 25.508750, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2397.727783, -1284.604980, 25.508750, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2400.917724, -1284.604980, 25.508750, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2388.867919, -1281.814941, 25.528749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19507, 2395.257812, -1347.460937, 26.320312, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19508, 2395.257812, -1347.460937, 26.320312, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1494, 2400.287841, -1347.870971, 23.770313, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(1494, 2388.897705, -1349.990966, 23.780311, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2399.177734, -1353.980957, 25.290311, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2396.047851, -1353.980957, 25.290311, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2393.267822, -1353.980957, 25.290311, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2390.267822, -1353.980957, 25.290311, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2388.847900, -1345.570922, 25.400312, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2388.847900, -1343.570922, 25.400312, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2398.057861, -1341.510986, 25.330312, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2400.337890, -1351.050903, 25.410312, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2400.337890, -1343.540893, 25.410312, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19507, 2475.898437, -1296.828125, 31.476562, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19508, 2475.898437, -1296.828125, 31.476562, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1492, 2480.928466, -1297.238159, 28.926563, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(1502, 2469.538330, -1299.358154, 28.936561, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2479.818359, -1303.348144, 30.446561, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2476.688476, -1303.348144, 30.446561, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2473.908447, -1303.348144, 30.446561, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2470.908447, -1303.348144, 30.446561, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2469.488525, -1294.938110, 30.556562, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2469.488525, -1292.938110, 30.556562, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2478.698486, -1290.878173, 30.486562, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2480.978515, -1300.418090, 30.566562, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2480.978515, -1292.908081, 30.566562, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19505, 2583.265625, -1069.429687, 70.671875, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19506, 2583.265625, -1069.429687, 70.671875, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1502, 2590.975585, -1073.709716, 68.531875, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1494, 2577.225585, -1069.739746, 68.531875, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2591.025634, -1065.499633, 70.151878, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, 2591.025634, -1067.729736, 70.151878, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, 2577.125732, -1067.229736, 69.951873, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, 2577.125732, -1064.989746, 69.951873, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, 2579.935546, -1063.749633, 70.171875, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2578.695556, -1075.659667, 70.211875, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2582.315673, -1075.659667, 70.211875, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2585.985595, -1075.659667, 70.211875, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2589.175537, -1075.659667, 70.211875, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2577.125732, -1072.869628, 70.231872, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19507, 2513.468750, -1111.828125, 57.835937, 0.000000, 0.000000, 1.499998);
    CreateDynamicObject(19508, 2513.468750, -1111.828125, 57.835937, 0.000000, 0.000000, 1.499998);
    CreateDynamicObject(1502, 2508.429687, -1111.549926, 55.285938, 0.000000, 0.000000, 91.500000);
    CreateDynamicObject(1499, 2519.760498, -1109.132446, 55.295936, 0.000000, 0.000000, 91.500000);
    CreateDynamicObject(19466, 2509.379394, -1105.412963, 56.805938, 0.000000, 0.000000, 91.500000);
    CreateDynamicObject(19466, 2512.508300, -1105.330932, 56.805938, 0.000000, 0.000000, 91.500000);
    CreateDynamicObject(19466, 2515.287353, -1105.258178, 56.805938, 0.000000, 0.000000, 91.500000);
    CreateDynamicObject(19466, 2518.286376, -1105.179687, 56.805938, 0.000000, 0.000000, 91.500000);
    CreateDynamicObject(19466, 2519.926025, -1113.549682, 56.915939, 0.000000, 0.000000, 1.499998);
    CreateDynamicObject(19466, 2519.978271, -1115.548950, 56.915939, 0.000000, 0.000000, 1.499998);
    CreateDynamicObject(19466, 2510.825439, -1117.849365, 56.845935, 0.000000, 0.000000, 91.500000);
    CreateDynamicObject(19466, 2508.296386, -1108.372314, 56.925937, 0.000000, 0.000000, 1.499998);
    CreateDynamicObject(19466, 2508.492919, -1115.879760, 56.925937, 0.000000, 0.000000, 1.499998);
    CreateDynamicObject(19507, 2406.546875, -1112.500000, 41.539062, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19508, 2406.546875, -1112.500000, 41.539062, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, 2406.136962, -1117.530029, 38.989063, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1492, 2404.016845, -1106.140014, 38.999061, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2400.026855, -1116.420043, 40.509063, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2400.026855, -1113.290039, 40.509063, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2400.026855, -1110.510009, 40.509063, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2400.026855, -1107.510009, 40.509063, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2408.436767, -1106.089965, 40.619064, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2410.436767, -1106.089965, 40.619064, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2412.496826, -1115.300048, 40.549060, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2402.956787, -1117.579956, 40.629062, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2410.466796, -1117.579956, 40.629062, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19505, 2372.687500, -1132.335937, 29.898437, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19506, 2372.687500, -1132.335937, 29.898437, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(1492, 2376.967529, -1124.625976, 27.758438, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1491, 2372.997558, -1138.375976, 27.758438, 0.000000, 0.000000, 359.999969);
    CreateDynamicObject(19466, 2368.757568, -1124.575927, 29.378437, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19466, 2370.987548, -1124.575927, 29.378437, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19466, 2370.487548, -1138.475952, 29.178438, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19466, 2368.247558, -1138.475952, 29.178438, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19466, 2367.007568, -1135.665893, 29.398437, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2378.917480, -1136.905883, 29.438438, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2378.917480, -1133.285888, 29.438438, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2378.917480, -1129.615966, 29.438438, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2378.917480, -1126.425903, 29.438438, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2376.127441, -1138.475952, 29.458436, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19505, 2475.757812, -1277.070312, 31.203125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19506, 2475.757812, -1277.070312, 31.203125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1502, 2483.467773, -1281.350341, 29.063125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1492, 2469.717773, -1277.380371, 29.063125, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2483.517822, -1273.140258, 30.683124, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2483.517822, -1275.370361, 30.683124, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2469.617919, -1274.870361, 30.483125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2469.617919, -1272.630371, 30.483125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2472.427734, -1271.390258, 30.703125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2471.187744, -1283.300292, 30.743125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2474.807861, -1283.300292, 30.743125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2478.477783, -1283.300292, 30.743125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2481.667724, -1283.300292, 30.743125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2469.617919, -1280.510253, 30.763124, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19505, 2490.820312, -1232.437500, 38.742187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19506, 2490.820312, -1232.437500, 38.742187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, 2495.100341, -1224.727539, 36.602188, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1502, 2491.130371, -1238.477539, 36.602188, 0.000000, 0.000000, 360.000000);
    CreateDynamicObject(19466, 2486.890380, -1224.677490, 38.222187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2489.120361, -1224.677490, 38.222187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2488.620361, -1238.577514, 38.022186, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2486.380371, -1238.577514, 38.022186, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2485.140380, -1235.767456, 38.242187, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2497.050292, -1237.007446, 38.282188, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2497.050292, -1233.387451, 38.282188, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2497.050292, -1229.717529, 38.282188, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2497.050292, -1226.527465, 38.282188, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2494.260253, -1238.577514, 38.302188, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19505, 2471.632812, -1231.546875, 33.406250, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19506, 2471.632812, -1231.546875, 33.406250, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1502, 2475.912841, -1223.836914, 31.266250, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1502, 2471.942871, -1237.586914, 31.266250, 0.000000, 0.000000, 360.000000);
    CreateDynamicObject(19466, 2467.702880, -1223.786865, 32.886249, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2469.932861, -1223.786865, 32.886249, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2469.432861, -1237.686889, 32.686248, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2467.192871, -1237.686889, 32.686248, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 2465.952880, -1234.876831, 32.906250, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2477.862792, -1236.116821, 32.946250, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2477.862792, -1232.496826, 32.946250, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2477.862792, -1228.826904, 32.946250, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2477.862792, -1225.636840, 32.946250, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2475.072753, -1237.686889, 32.966251, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19505, 2468.937500, -1206.984375, 37.648437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19506, 2468.937500, -1206.984375, 37.648437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1499, 2464.657470, -1214.694335, 35.508438, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1502, 2468.627441, -1200.944335, 35.508438, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 2472.867431, -1214.744384, 37.128437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2470.637451, -1214.744384, 37.128437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2471.137451, -1200.844360, 36.928436, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2473.377441, -1200.844360, 36.928436, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2474.617431, -1203.654418, 37.148437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2462.707519, -1202.414428, 37.188438, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2462.707519, -1206.034423, 37.188438, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2462.707519, -1209.704345, 37.188438, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2462.707519, -1212.894409, 37.188438, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2465.497558, -1200.844360, 37.208438, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19505, 2577.898437, -1095.554687, 68.062500, 0.000000, 0.000000, -44.999992);
    CreateDynamicObject(19506, 2577.898437, -1095.554687, 68.062500, 0.000000, 0.000000, -44.999992);
    CreateDynamicObject(1492, 2580.323974, -1104.032836, 65.922500, 0.000000, 0.000000, 45.000007);
    CreateDynamicObject(1499, 2573.408203, -1091.503051, 65.922500, 0.000000, 0.000000, 225.000000);
    CreateDynamicObject(19466, 2586.164306, -1098.262939, 67.542503, 0.000000, 0.000000, -44.999992);
    CreateDynamicObject(19466, 2584.587646, -1099.839843, 67.542503, 0.000000, 0.000000, -44.999992);
    CreateDynamicObject(19466, 2575.112548, -1089.657348, 67.342498, 0.000000, 0.000000, -44.999992);
    CreateDynamicObject(19466, 2576.696533, -1088.073486, 67.342498, 0.000000, 0.000000, -44.999992);
    CreateDynamicObject(19466, 2579.560058, -1089.183715, 67.562500, 0.000000, 0.000000, 45.000007);
    CreateDynamicObject(19466, 2570.261718, -1096.728515, 67.602500, 0.000000, 0.000000, 45.000007);
    CreateDynamicObject(19466, 2572.821533, -1099.288208, 67.602500, 0.000000, 0.000000, 45.000007);
    CreateDynamicObject(19466, 2575.416503, -1101.883300, 67.602500, 0.000000, 0.000000, 45.000007);
    CreateDynamicObject(19466, 2577.672119, -1104.138916, 67.602500, 0.000000, 0.000000, 45.000007);
    CreateDynamicObject(19466, 2571.124511, -1093.645507, 67.622497, 0.000000, 0.000000, -44.999992);
    CreateDynamicObject(19505, 2394.437500, -1327.117187, 25.960937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19506, 2394.437500, -1327.117187, 25.960937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1502, 2402.147460, -1331.397216, 23.820938, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1502, 2388.397460, -1327.427246, 23.820938, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2402.197509, -1323.187133, 25.440937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2402.197509, -1325.417236, 25.440937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2388.297607, -1324.917236, 25.240938, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2388.297607, -1322.677246, 25.240938, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2391.107421, -1321.437133, 25.460937, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2389.867431, -1333.347167, 25.500938, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2393.487548, -1333.347167, 25.500938, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2397.157470, -1333.347167, 25.500938, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2400.347412, -1333.347167, 25.500938, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2388.297607, -1330.557128, 25.520936, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19505, 2412.585937, -1640.203125, 14.851562, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19506, 2412.585937, -1640.203125, 14.851562, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(1499, 2416.865966, -1632.493164, 12.711562, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1499, 2412.895996, -1646.243164, 12.711562, 0.000000, 0.000000, 359.999969);
    CreateDynamicObject(19466, 2408.656005, -1632.443115, 14.331562, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19466, 2410.885986, -1632.443115, 14.331562, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19466, 2410.385986, -1646.343139, 14.131562, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19466, 2408.145996, -1646.343139, 14.131562, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19466, 2406.906005, -1643.533081, 14.351562, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2418.815917, -1644.773071, 14.391562, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2418.815917, -1641.153076, 14.391562, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2418.815917, -1637.483154, 14.391562, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2418.815917, -1634.293090, 14.391562, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2416.025878, -1646.343139, 14.411562, 0.000000, 0.000000, 89.999969);
    CreateDynamicObject(19505, 2369.554687, -1681.929687, 15.007812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19506, 2369.554687, -1681.929687, 15.007812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(1502, 2365.274658, -1689.639648, 12.867812, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(1499, 2369.244628, -1675.889648, 12.867812, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, 2373.484619, -1689.689697, 14.487812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19466, 2371.254638, -1689.689697, 14.487812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19466, 2371.754638, -1675.789672, 14.287812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19466, 2373.994628, -1675.789672, 14.287812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19466, 2375.234619, -1678.599731, 14.507812, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(19466, 2363.324707, -1677.359741, 14.547812, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(19466, 2363.324707, -1680.979736, 14.547812, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(19466, 2363.324707, -1684.649658, 14.547812, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(19466, 2363.324707, -1687.839721, 14.547812, 0.000000, 0.000000, -0.000030);
    CreateDynamicObject(19466, 2366.114746, -1675.789672, 14.567812, 0.000000, 0.000000, -90.000030);
    CreateDynamicObject(19505, 2517.476562, -1644.695312, 15.195312, 0.000000, 0.000000, 44.999977);
    CreateDynamicObject(19506, 2517.476562, -1644.695312, 15.195312, 0.000000, 0.000000, 44.999977);
    CreateDynamicObject(1502, 2525.954833, -1642.269897, 13.055312, 0.000000, 0.000000, 134.999969);
    CreateDynamicObject(1502, 2513.424804, -1649.185424, 13.055312, 0.000000, 0.000000, 314.999969);
    CreateDynamicObject(19466, 2520.184814, -1636.429199, 14.675312, 0.000000, 0.000000, 44.999977);
    CreateDynamicObject(19466, 2521.761474, -1638.006103, 14.675312, 0.000000, 0.000000, 44.999977);
    CreateDynamicObject(19466, 2511.579345, -1647.481323, 14.475312, 0.000000, 0.000000, 44.999977);
    CreateDynamicObject(19466, 2509.995361, -1645.897460, 14.475312, 0.000000, 0.000000, 44.999977);
    CreateDynamicObject(19466, 2511.105468, -1643.033569, 14.695312, 0.000000, 0.000000, 134.999969);
    CreateDynamicObject(19466, 2518.650390, -1652.332031, 14.735312, 0.000000, 0.000000, 134.999969);
    CreateDynamicObject(19466, 2521.210205, -1649.772338, 14.735312, 0.000000, 0.000000, 134.999969);
    CreateDynamicObject(19466, 2523.805175, -1647.177246, 14.735312, 0.000000, 0.000000, 134.999969);
    CreateDynamicObject(19466, 2526.060791, -1644.921630, 14.735312, 0.000000, 0.000000, 134.999969);
    CreateDynamicObject(19466, 2515.567382, -1651.469482, 14.755312, 0.000000, 0.000000, 44.999977);
    CreateDynamicObject(19509, 2308.703125, -1710.414062, 16.046875, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19510, 2308.703125, -1710.414062, 16.046875, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 2309.703125, -1713.774047, 13.916874, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1491, 2308.943115, -1704.624023, 13.236875, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2306.143066, -1713.764038, 15.576874, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 2311.413085, -1713.754028, 15.576874, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19509, 2307.171875, -1683.117187, 15.398437, 0.000000, 0.000000, -0.000034);
    CreateDynamicObject(19510, 2307.171875, -1683.117187, 15.398437, 0.000000, 0.000000, -0.000034);
    CreateDynamicObject(1491, 2306.171875, -1679.757202, 13.268437, 0.000000, 0.000000, -0.000034);
    CreateDynamicObject(1494, 2306.931884, -1688.907226, 12.588438, 0.000000, 0.000000, -0.000034);
    CreateDynamicObject(19466, 2309.731933, -1679.767211, 14.928437, 0.000000, 0.000000, 89.999961);
    CreateDynamicObject(19466, 2304.461914, -1679.777221, 14.928437, 0.000000, 0.000000, 89.999961);
    CreateDynamicObject(19509, 2438.789062, -1109.710937, 44.148437, 0.000000, 0.000000, -0.000034);
    CreateDynamicObject(19510, 2438.789062, -1109.710937, 44.148437, 0.000000, 0.000000, -0.000034);
    CreateDynamicObject(1502, 2437.789062, -1106.350952, 42.018436, 0.000000, 0.000000, -0.000034);
    CreateDynamicObject(1492, 2438.549072, -1115.500976, 41.338436, 0.000000, 0.000000, -0.000034);
    CreateDynamicObject(19466, 2441.349121, -1106.360961, 43.678436, 0.000000, 0.000000, 89.999961);
    CreateDynamicObject(19466, 2436.079101, -1106.370971, 43.678436, 0.000000, 0.000000, 89.999961);
    CreateDynamicObject(19507, 2394.523437, -1640.507812, 15.148437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19508, 2394.523437, -1640.507812, 15.148437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1491, 2394.933349, -1635.477783, 12.598437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1491, 2397.053466, -1646.867797, 12.608437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2401.043457, -1636.587768, 14.118437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2401.043457, -1639.717773, 14.118437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2401.043457, -1642.497802, 14.118437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2401.043457, -1645.497802, 14.118437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2392.633544, -1646.917846, 14.228437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2390.633544, -1646.917846, 14.228437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2388.573486, -1637.707763, 14.158437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2398.113525, -1635.427856, 14.238437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2390.603515, -1635.427856, 14.238437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19507, 2470.820312, -1640.820312, 15.023437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19508, 2470.820312, -1640.820312, 15.023437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1502, 2471.230224, -1635.790283, 12.473437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1494, 2473.350341, -1647.180297, 12.483437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2477.340332, -1636.900268, 13.993437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2477.340332, -1640.030273, 13.993437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2477.340332, -1642.810302, 13.993437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2477.340332, -1645.810302, 13.993437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2468.930419, -1647.230346, 14.103437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2466.930419, -1647.230346, 14.103437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2464.870361, -1638.020263, 14.033437, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 2474.410400, -1635.740356, 14.113437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 2466.900390, -1635.740356, 14.113437, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19509, 2451.734375, -1637.484375, 15.132812, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19510, 2451.734375, -1637.484375, 15.132812, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1491, 2452.734375, -1640.844360, 13.002812, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1491, 2451.974365, -1631.694335, 12.322813, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2449.174316, -1640.834350, 14.662812, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 2454.444335, -1640.824340, 14.662812, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19509, 2498.304687, -1638.328125, 15.179687, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19510, 2498.304687, -1638.328125, 15.179687, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1502, 2499.304687, -1641.688110, 13.049687, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 2498.544677, -1632.538085, 12.369688, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2495.744628, -1641.678100, 14.709687, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 2501.014648, -1641.668090, 14.709687, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19509, 2528.632812, -1658.445312, 16.890625, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(19510, 2528.632812, -1658.445312, 16.890625, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(1492, 2525.272705, -1659.445312, 14.760624, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(1494, 2534.422851, -1658.685302, 14.080625, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(19466, 2525.282714, -1655.885253, 16.420625, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2525.292724, -1661.155273, 16.420625, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19509, 2550.812500, -1229.867187, 50.398437, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19510, 2550.812500, -1229.867187, 50.398437, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1499, 2551.812500, -1233.227172, 48.268436, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(1492, 2551.052490, -1224.077148, 47.588436, 0.000000, 0.000000, -179.999984);
    CreateDynamicObject(19466, 2548.252441, -1233.217163, 49.928436, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19466, 2553.522460, -1233.207153, 49.928436, 0.000000, 0.000000, -89.999984);
    CreateDynamicObject(19505, 2520.187500, -1694.851562, 14.882812, 0.000000, 0.000000, -40.000011);
    CreateDynamicObject(19506, 2520.187500, -1694.851562, 14.882812, 0.000000, 0.000000, -40.000011);
    CreateDynamicObject(1502, 2523.342529, -1703.086181, 12.742812, 0.000000, 0.000000, 49.999988);
    CreateDynamicObject(1494, 2515.361328, -1691.206542, 12.742812, 0.000000, 0.000000, 229.999984);
    CreateDynamicObject(19466, 2528.658203, -1696.829101, 14.362812, 0.000000, 0.000000, -40.000011);
    CreateDynamicObject(19466, 2527.224853, -1698.537353, 14.362812, 0.000000, 0.000000, -40.000011);
    CreateDynamicObject(19466, 2516.897949, -1689.219482, 14.162812, 0.000000, 0.000000, -40.000011);
    CreateDynamicObject(19466, 2518.337890, -1687.503540, 14.162812, 0.000000, 0.000000, -40.000011);
    CreateDynamicObject(19466, 2521.287597, -1688.359985, 14.382812, 0.000000, 0.000000, 49.999988);
    CreateDynamicObject(19466, 2512.682128, -1696.686523, 14.422812, 0.000000, 0.000000, 49.999988);
    CreateDynamicObject(19466, 2515.455078, -1699.013427, 14.422812, 0.000000, 0.000000, 49.999988);
    CreateDynamicObject(19466, 2518.266601, -1701.372436, 14.422812, 0.000000, 0.000000, 49.999988);
    CreateDynamicObject(19466, 2520.710205, -1703.422851, 14.422812, 0.000000, 0.000000, 49.999988);
    CreateDynamicObject(19466, 2513.272705, -1693.539916, 14.442812, 0.000000, 0.000000, -40.000011);
    CreateDynamicObject(19505, 2281.031250, -1634.640625, 16.726562, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(19506, 2281.031250, -1634.640625, 16.726562, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(1491, 2285.311279, -1626.930664, 14.586562, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1499, 2281.341308, -1640.680664, 14.586562, 0.000000, 0.000000, 360.000000);
    CreateDynamicObject(19466, 2277.101318, -1626.880615, 16.206562, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(19466, 2279.331298, -1626.880615, 16.206562, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(19466, 2278.831298, -1640.780639, 16.006563, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(19466, 2276.591308, -1640.780639, 16.006563, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(19466, 2275.351318, -1637.970581, 16.226562, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2287.261230, -1639.210571, 16.266563, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2287.261230, -1635.590576, 16.266563, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2287.261230, -1631.920654, 16.266563, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2287.261230, -1628.730590, 16.266563, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, 2284.471191, -1640.780639, 16.286561, 0.000000, 0.000000, 89.999984);
    CreateDynamicObject(19509, 2245.734375, -1633.906250, 17.304687, 0.000000, 0.000000, 158.999877);
    CreateDynamicObject(19510, 2245.734375, -1633.906250, 17.304687, 0.000000, 0.000000, 158.999877);
    CreateDynamicObject(1502, 2245.463867, -1637.401489, 15.174687, 0.000000, 0.000000, 158.999877);
    CreateDynamicObject(1494, 2248.033447, -1628.586914, 14.494688, 0.000000, 0.000000, 158.999877);
    CreateDynamicObject(19466, 2242.144042, -1636.116210, 16.834688, 0.000000, 0.000000, 248.999877);
    CreateDynamicObject(19466, 2247.067382, -1637.995605, 16.834688, 0.000000, 0.000000, 248.999877);
    CreateDynamicObject(19505, 2390.109375, -1365.007812, 25.328125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19506, 2390.109375, -1365.007812, 25.328125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1499, 2397.819335, -1369.287841, 23.188125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1494, 2384.069335, -1365.317871, 23.188125, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, 2397.869384, -1361.077758, 24.808124, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2397.869384, -1363.307861, 24.808124, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2383.969482, -1362.807861, 24.608125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2383.969482, -1360.567871, 24.608125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, 2386.779296, -1359.327758, 24.828125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2385.539306, -1371.237792, 24.868125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2389.159423, -1371.237792, 24.868125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2392.829345, -1371.237792, 24.868125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2396.019287, -1371.237792, 24.868125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, 2383.969482, -1368.447753, 24.888124, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19511, 660.593750, -1636.507812, 16.812500, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19512, 660.593750, -1636.507812, 16.812500, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1499, 655.243774, -1635.387817, 14.762499, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1502, 666.523742, -1639.157836, 14.852499, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 666.553771, -1637.777832, 16.552499, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 666.553771, -1634.377807, 16.552499, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 663.913757, -1641.667846, 16.412500, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 658.793762, -1641.667846, 16.412500, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 661.243774, -1641.667846, 16.412500, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 657.233764, -1637.697753, 16.242500, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 654.673767, -1633.477783, 16.262500, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19511, 690.281250, -1690.093750, 5.296875, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19512, 690.281250, -1690.093750, 5.296875, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, 695.631225, -1691.213745, 3.246875, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1502, 684.351257, -1687.443725, 3.336874, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 684.321228, -1688.823730, 5.036874, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 684.321228, -1692.223754, 5.036874, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 686.961242, -1684.933715, 4.896874, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 692.081237, -1684.933715, 4.896874, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 689.631225, -1684.933715, 4.896874, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 693.641235, -1688.903808, 4.726874, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 696.201232, -1693.123779, 4.746874, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19511, 773.625000, -1726.875000, 14.382812, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19512, 773.625000, -1726.875000, 14.382812, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(1492, 768.275024, -1725.755004, 12.332812, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(1491, 779.554992, -1729.525024, 12.422812, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 779.585021, -1728.145019, 14.122812, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 779.585021, -1724.744995, 14.122812, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 776.945007, -1732.035034, 13.982812, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 771.825012, -1732.035034, 13.982812, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 774.275024, -1732.035034, 13.982812, 0.000000, 0.000000, -89.999992);
    CreateDynamicObject(19466, 770.265014, -1728.064941, 13.812812, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19466, 767.705017, -1723.844970, 13.832812, 0.000000, 0.000000, 0.000007);
    CreateDynamicObject(19511, 790.335937, -1691.453125, 15.414062, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19512, 790.335937, -1691.453125, 15.414062, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, 795.685913, -1692.573120, 13.364062, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1499, 784.405944, -1688.803100, 13.454062, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 784.375915, -1690.183105, 15.154062, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 784.375915, -1693.583129, 15.154062, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 787.015930, -1686.293090, 15.014062, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 792.135925, -1686.293090, 15.014062, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 789.685913, -1686.293090, 15.014062, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, 793.695922, -1690.263183, 14.844062, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, 796.255920, -1694.483154, 14.864062, 0.000000, 0.000000, 180.000000);
    //house 1 sf
    CreateDynamicObject(19600, -2719.02, 861.211, 72.1562, 0, 0, 0);
    CreateDynamicObject(19598, -2719.02, 861.211, 72.1562, 0, 0, 0);
    CreateDynamicObject(19599, -2719.02, 861.211, 72.1562, 0, 0, 0);
    //HOUSES sf
    CreateDynamicObject(19491, -2786.679687, 124.132812, 11.000000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19492, -2786.679687, 124.132812, 11.000000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1491, -2789.869628, 126.092811, 6.059999, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, -2780.539794, 121.372810, 6.219999, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1494, -2786.339599, 120.732810, 8.869999, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, -2792.729736, 122.372810, 7.720000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.729736, 124.602813, 7.720000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.209716, 127.962814, 7.949999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.229736, 125.732810, 7.949999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.279785, 124.462814, 7.949999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.239746, 125.692810, 10.460000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.239746, 127.872810, 10.460000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.239746, 122.872810, 10.460000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.739746, 125.202812, 10.579999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.739746, 122.972808, 10.579999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.739746, 127.442810, 10.579999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19491, -2786.679687, -171.039062, 11.000000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19492, -2786.679687, -171.039062, 11.000000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1492, -2789.869628, -169.079055, 6.059999, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, -2780.539794, -173.799057, 6.219999, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, -2786.339599, -174.439056, 8.869999, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, -2792.729736, -172.799057, 7.720000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.729736, -170.569061, 7.720000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.209716, -167.209060, 7.949999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.229736, -169.439056, 7.949999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.279785, -170.709060, 7.949999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.239746, -169.479064, 10.460000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.239746, -167.299057, 10.460000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.239746, -172.299057, 10.460000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.739746, -169.969055, 10.579999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.739746, -172.199066, 10.579999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.739746, -167.729064, 10.579999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19489, -2787.593750, -161.039062, 9.551562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19490, -2787.593750, -161.039062, 9.551562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1502, -2794.253662, -160.029067, 9.131562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2786.233642, -166.029067, 9.071562, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2792.723632, -162.929061, 10.721562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2794.243652, -157.319061, 10.011562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2794.243652, -158.699066, 10.011562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2794.253662, -158.649063, 11.051562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2794.243652, -157.199066, 11.051562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.933837, -158.949066, 10.671562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.933837, -157.349060, 10.671562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.493652, -161.139068, 10.591562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.473632, -163.319061, 10.591562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.873779, -162.849060, 7.941562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.893798, -160.739059, 7.941562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.913818, -157.289062, 7.941562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.903808, -159.519058, 7.941562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19493, -2787.648437, -143.187500, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19494, -2787.648437, -143.187500, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1491, -2790.698486, -146.907501, 6.550624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, -2782.308349, -146.707504, 6.220624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2781.948486, -143.787506, 8.000624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.968505, -142.117492, 7.640625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.968505, -139.957504, 7.740624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.268554, -143.767501, 7.930624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.948486, -145.477493, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.978515, -140.237503, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.978515, -142.477493, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.838378, -145.117492, 10.700625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.798339, -140.157501, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.798339, -142.387496, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19495, -2787.843750, -123.929687, 10.578125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19496, -2787.843750, -123.929687, 10.578125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1502, -2782.163818, -128.339691, 6.248125, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, -2784.543701, -124.159690, 5.918125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1492, -2789.793701, -127.849685, 6.078125, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2781.843750, -120.519683, 7.758125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, -122.759689, 7.758125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, -125.489685, 7.738124, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, -120.589691, 10.508125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, -122.829689, 10.508125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, -126.979690, 10.558124, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.843750, -124.409690, 10.808124, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.843750, -126.649688, 10.808124, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.683837, -120.929687, 9.748125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.693847, -120.929687, 11.038125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(6959, -2802.705322, -109.514785, 5.904224, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19491, -2786.679687, -113.929687, 11.000000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19492, -2786.679687, -113.929687, 11.000000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2789.869628, -111.969688, 6.059999, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, -2780.539794, -116.689689, 6.219999, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, -2786.339599, -117.329689, 8.869999, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, -2792.729736, -115.689689, 7.720000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.729736, -113.459686, 7.720000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.209716, -110.099685, 7.949999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.229736, -112.329689, 7.949999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.279785, -113.599685, 7.949999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.239746, -112.369689, 10.460000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.239746, -110.189689, 10.460000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.239746, -115.189689, 10.460000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.739746, -112.859687, 10.579999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.739746, -115.089691, 10.579999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.739746, -110.619689, 10.579999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19493, -2788.101562, -104.632812, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19494, -2788.101562, -104.632812, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1492, -2791.151611, -108.352813, 6.550624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, -2782.761474, -108.152809, 6.220624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2782.401611, -105.232810, 8.000624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.421630, -103.562812, 7.640625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.421630, -101.402809, 7.740624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.721679, -105.212814, 7.930624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.401611, -106.922813, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.431640, -101.682815, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.431640, -103.922813, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.291503, -106.562812, 10.700625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.251464, -101.602813, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.251464, -103.832809, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19489, -2786.039062, -95.351562, 9.468750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19490, -2786.039062, -95.351562, 9.468750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2792.698974, -94.341560, 9.048749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1494, -2784.678955, -100.341560, 8.988750, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2791.168945, -97.241561, 10.638750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.688964, -91.631561, 9.928750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.688964, -93.011566, 9.928750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.698974, -92.961563, 10.968750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.688964, -91.511566, 10.968750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.379150, -93.261566, 10.588749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.379150, -91.661560, 10.588749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.938964, -95.451560, 10.508749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.918945, -97.631561, 10.508749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.319091, -97.161560, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.339111, -95.051559, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.359130, -91.601562, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.349121, -93.831565, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19489, -2786.039062, -42.382812, 9.468750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19490, -2786.039062, -42.382812, 9.468750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2792.698974, -41.372814, 9.048749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2784.678955, -47.372810, 8.988750, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2791.168945, -44.272811, 10.638750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.688964, -38.662811, 9.928750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.688964, -40.042812, 9.928750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.698974, -39.992813, 10.968750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.688964, -38.542812, 10.968750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.379150, -40.292812, 10.588749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.379150, -38.692813, 10.588749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.938964, -42.482810, 10.508749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.918945, -44.662811, 10.508749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.319091, -44.192813, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.339111, -42.082813, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.359130, -38.632812, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.349121, -40.862812, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19493, -2787.648437, -33.109375, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19494, -2787.648437, -33.109375, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2790.698486, -36.829376, 6.550624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, -2782.308349, -36.629375, 6.220624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2781.948486, -33.709373, 8.000624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.968505, -32.039375, 7.640625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.968505, -29.879375, 7.740624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.268554, -33.689376, 7.930624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.948486, -35.399375, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.978515, -30.159374, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.978515, -32.399375, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.838378, -35.039375, 10.700625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.798339, -30.079374, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.798339, -32.309375, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19493, -2788.101562, -14.976562, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19494, -2788.101562, -14.976562, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2791.151611, -18.696561, 6.550624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, -2782.761474, -18.496562, 6.220624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2782.401611, -15.576563, 8.000624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.421630, -13.906563, 7.640625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.421630, -11.746562, 7.740624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.721679, -15.556561, 7.930624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.401611, -17.266563, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.431640, -12.026563, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.431640, -14.266563, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.291503, -16.906560, 10.700625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.251464, -11.946561, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.251464, -14.176561, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19495, -2787.843750, 24.507812, 10.578125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19496, -2787.843750, 24.507812, 10.578125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1502, -2782.163818, 20.097810, 6.248125, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, -2784.543701, 24.277812, 5.918125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1492, -2789.793701, 20.587812, 6.078125, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2781.843750, 27.917810, 7.758125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, 25.677810, 7.758125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, 22.947811, 7.738124, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, 27.847810, 10.508125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, 25.607810, 10.508125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, 21.457811, 10.558124, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.843750, 24.027814, 10.808124, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.843750, 21.787815, 10.808124, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.683837, 27.507812, 9.748125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.693847, 27.507812, 11.038125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(6959, -2802.705322, 38.922714, 5.904224, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19489, -2786.039062, 142.703125, 9.468750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19490, -2786.039062, 142.703125, 9.468750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2792.698974, 143.713119, 9.048749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1502, -2784.678955, 137.713119, 8.988750, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2791.168945, 140.813125, 10.638750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.688964, 146.423126, 9.928750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.688964, 145.043121, 9.928750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.698974, 145.093124, 10.968750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.688964, 146.543121, 10.968750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.379150, 144.793121, 10.588749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.379150, 146.393127, 10.588749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.938964, 142.603118, 10.508749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.918945, 140.423126, 10.508749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.319091, 140.893127, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.339111, 143.003128, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.359130, 146.453125, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.349121, 144.223129, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19493, -2788.101562, 133.429687, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19494, -2788.101562, 133.429687, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1502, -2791.151611, 129.709686, 6.550624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, -2782.761474, 129.909683, 6.220624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2782.401611, 132.829681, 8.000624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.421630, 134.499694, 7.640625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.421630, 136.659683, 7.740624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.721679, 132.849685, 7.930624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.401611, 131.139694, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.431640, 136.379684, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.431640, 134.139694, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.291503, 131.499694, 10.700625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.251464, 136.459686, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.251464, 134.229690, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19495, -2787.843750, 114.125000, 10.578125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19496, -2787.843750, 114.125000, 10.578125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1492, -2782.163818, 109.714996, 6.248125, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1494, -2784.543701, 113.894996, 5.918125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2789.793701, 110.205001, 6.078125, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2781.843750, 117.535003, 7.758125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, 115.294998, 7.758125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, 112.565002, 7.738124, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, 117.464996, 10.508125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, 115.224998, 10.508125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.843750, 111.074996, 10.558124, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.843750, 113.644996, 10.808124, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.843750, 111.404998, 10.808124, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.683837, 117.125000, 9.748125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.693847, 117.125000, 11.038125, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(6959, -2802.705322, 128.539901, 5.904224, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19493, -2787.648437, 94.875000, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19494, -2787.648437, 94.875000, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1492, -2790.698486, 91.154998, 6.550624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, -2782.308349, 91.355003, 6.220624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2781.948486, 94.275001, 8.000624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.968505, 95.944999, 7.640625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.968505, 98.105003, 7.740624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.268554, 94.294998, 7.930624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.948486, 92.584999, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.978515, 97.824996, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.978515, 95.584999, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.838378, 92.944999, 10.700625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.798339, 97.904998, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.798339, 95.675003, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19489, -2787.593750, 77.023437, 9.551562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19490, -2787.593750, 77.023437, 9.551562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1491, -2794.253662, 78.033439, 9.131562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1494, -2786.233642, 72.033439, 9.071562, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2792.723632, 75.133438, 10.721562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2794.243652, 80.743438, 10.011562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2794.243652, 79.363433, 10.011562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2794.253662, 79.413436, 11.051562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2794.243652, 80.863433, 11.051562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.933837, 79.113433, 10.671562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.933837, 80.713439, 10.671562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.493652, 76.923439, 10.591562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.473632, 74.743438, 10.591562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.873779, 75.213439, 7.941562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.893798, 77.323440, 7.941562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.913818, 80.773437, 7.941562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.903808, 78.543434, 7.941562, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19491, -2786.679687, 67.023437, 11.000000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19492, -2786.679687, 67.023437, 11.000000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1491, -2789.869628, 68.983436, 6.059999, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1494, -2780.539794, 64.263435, 6.219999, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1502, -2786.339599, 63.623435, 8.869999, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, -2792.729736, 65.263435, 7.720000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.729736, 67.493438, 7.720000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.209716, 70.853439, 7.949999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.229736, 68.623435, 7.949999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.279785, 67.353439, 7.949999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.239746, 68.583435, 10.460000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.239746, 70.763435, 10.460000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.239746, 65.763435, 10.460000, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.739746, 68.093437, 10.579999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.739746, 65.863433, 10.579999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.739746, 70.333435, 10.579999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19489, -2786.054687, 194.007812, 9.468750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19490, -2786.054687, 194.007812, 9.468750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2792.714599, 195.017807, 9.048749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1494, -2784.694580, 189.017807, 8.988750, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2791.184570, 192.117813, 10.638750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.704589, 197.727813, 9.928750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.704589, 196.347808, 9.928750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.714599, 196.397811, 10.968750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.704589, 197.847808, 10.968750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.394775, 196.097808, 10.588749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.394775, 197.697814, 10.588749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.954589, 193.907806, 10.508749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2780.934570, 191.727813, 10.508749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.334716, 192.197814, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.354736, 194.307815, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.374755, 197.757812, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2779.364746, 195.527816, 7.858749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19493, -2787.656250, 203.289062, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19494, -2787.656250, 203.289062, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1491, -2790.706298, 199.569061, 6.550624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, -2782.316162, 199.769058, 6.220624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2781.956298, 202.689056, 8.000624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.976318, 204.359069, 7.640625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.976318, 206.519058, 7.740624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.276367, 202.709060, 7.930624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.956298, 200.999069, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.986328, 206.239059, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2781.986328, 203.999069, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.846191, 201.359069, 10.700625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.806152, 206.319061, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.806152, 204.089065, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19493, -2788.117187, 221.414062, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19494, -2788.117187, 221.414062, 10.890625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1494, -2791.167236, 217.694061, 6.550624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, -2782.777099, 217.894058, 6.220624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2782.417236, 220.814056, 8.000624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.437255, 222.484069, 7.640625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.437255, 224.644058, 7.740624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2792.737304, 220.834060, 7.930624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.417236, 219.124069, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.447265, 224.364059, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2782.447265, 222.124069, 10.620624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.307128, 219.484069, 10.700625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.267089, 224.444061, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2793.267089, 222.214065, 10.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19491, -2684.312500, 134.328125, 8.140625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19492, -2684.312500, 134.328125, 8.140625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1492, -2687.502441, 136.288131, 3.200624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1502, -2678.172607, 131.568130, 3.360624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, -2683.972412, 130.928131, 6.010624, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, -2690.362548, 132.568130, 4.860625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.362548, 134.798126, 4.860625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.842529, 138.158126, 5.090624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.862548, 135.928131, 5.090624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.912597, 134.658126, 5.090624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.872558, 135.888122, 7.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.872558, 138.068130, 7.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.872558, 133.068130, 7.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.372558, 135.398132, 7.720624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.372558, 133.168121, 7.720624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.372558, 137.638122, 7.720624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19489, -2683.671875, 95.750000, 6.617187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19490, -2683.671875, 95.750000, 6.617187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1491, -2690.331787, 96.760002, 6.197187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2682.311767, 90.760002, 6.137187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2688.801757, 93.860000, 7.787187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.321777, 99.470001, 7.077187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.321777, 98.089996, 7.077187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.331787, 98.139999, 8.117187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.321777, 99.589996, 8.117187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.011962, 97.839996, 7.737187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.011962, 99.440002, 7.737187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.571777, 95.650001, 7.657187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.551757, 93.470001, 7.657187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2676.951904, 93.940002, 5.007187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2676.971923, 96.050003, 5.007187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2676.991943, 99.500000, 5.007187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2676.981933, 97.269996, 5.007187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19489, -2685.234375, 56.515625, 6.699999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19490, -2685.234375, 56.515625, 6.699999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1491, -2691.894287, 57.525623, 6.279999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1502, -2683.874267, 51.525627, 6.219999, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2690.364257, 54.625625, 7.869999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2691.884277, 60.235626, 7.159999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2691.884277, 58.855625, 7.159999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2691.894287, 58.905624, 8.199999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2691.884277, 60.355625, 8.199999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.574462, 58.605625, 7.819999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.574462, 60.205623, 7.819999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2680.134277, 56.415626, 7.739999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2680.114257, 54.235626, 7.739999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.514404, 54.705623, 5.089999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.534423, 56.815624, 5.089999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.554443, 60.265625, 5.089999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.544433, 58.035625, 5.089999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19491, -2684.328125, -177.859375, 8.140625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19492, -2684.328125, -177.859375, 8.140625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2687.518066, -175.899368, 3.200624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, -2678.188232, -180.619369, 3.360624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, -2683.988037, -181.259368, 6.010624, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, -2690.378173, -179.619369, 4.860625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.378173, -177.389373, 4.860625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.858154, -174.029373, 5.090624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.878173, -176.259368, 5.090624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.928222, -177.529373, 5.090624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.888183, -176.299377, 7.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.888183, -174.119369, 7.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.888183, -179.119369, 7.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.388183, -176.789367, 7.720624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.388183, -179.019378, 7.720624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.388183, -174.549377, 7.720624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19489, -2685.242187, -167.859375, 6.699999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19490, -2685.242187, -167.859375, 6.699999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1491, -2691.902099, -166.849380, 6.279999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1492, -2683.882080, -172.849380, 6.219999, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2690.372070, -169.749374, 7.869999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2691.892089, -164.139373, 7.159999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2691.892089, -165.519378, 7.159999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2691.902099, -165.469375, 8.199999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2691.892089, -164.019378, 8.199999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.582275, -165.769378, 7.819999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.582275, -164.169372, 7.819999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2680.142089, -167.959381, 7.739999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2680.122070, -170.139373, 7.739999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.522216, -169.669372, 5.089999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.542236, -167.559371, 5.089999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.562255, -164.109375, 5.089999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.552246, -166.339370, 5.089999, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19493, -2685.296875, -150.000000, 8.031250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19494, -2685.296875, -150.000000, 8.031250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2688.346923, -153.720001, 3.691249, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1494, -2679.956787, -153.520004, 3.361249, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2679.596923, -150.600006, 5.141249, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2679.616943, -148.929992, 4.781250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2679.616943, -146.770004, 4.881249, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2689.916992, -150.580001, 5.071249, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2679.596923, -152.289993, 7.761250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2679.626953, -147.050003, 7.761250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2679.626953, -149.289993, 7.761250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.486816, -151.929992, 7.841249, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.446777, -146.970001, 7.741250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.446777, -149.199996, 7.741250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19495, -2685.492187, -130.750000, 7.718750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19496, -2685.492187, -130.750000, 7.718750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1492, -2679.812255, -135.160003, 3.388750, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1494, -2682.192138, -130.979995, 3.058750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1494, -2687.442138, -134.669998, 3.218750, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2679.492187, -127.339996, 4.898750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2679.492187, -129.580001, 4.898750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2679.492187, -132.309997, 4.878749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2679.492187, -127.410003, 7.648749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2679.492187, -129.649993, 7.648749, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2679.492187, -133.800003, 7.698750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2691.492187, -131.229995, 7.948750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2691.492187, -133.470001, 7.948750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.332275, -127.750000, 6.888750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.342285, -127.750000, 8.178750, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(6959, -2700.353759, -116.335098, 3.044849, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19491, -2684.328125, -120.750000, 8.140625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19492, -2684.328125, -120.750000, 8.140625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1491, -2687.518066, -118.790000, 3.200624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1491, -2678.188232, -123.510002, 3.360624, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1494, -2683.988037, -124.150001, 6.010624, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, -2690.378173, -122.510002, 4.860625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.378173, -120.279998, 4.860625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.858154, -116.919998, 5.090624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.878173, -119.150001, 5.090624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.928222, -120.419998, 5.090624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.888183, -119.190002, 7.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.888183, -117.010002, 7.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.888183, -122.010002, 7.600625, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.388183, -119.680000, 7.720624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.388183, -121.910003, 7.720624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.388183, -117.440002, 7.720624, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19493, -2685.757812, -111.445312, 8.031250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19494, -2685.757812, -111.445312, 8.031250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1492, -2688.807861, -115.165313, 3.691249, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1502, -2680.417724, -114.965309, 3.361249, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2680.057861, -112.045310, 5.141249, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2680.077880, -110.375312, 4.781250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2680.077880, -108.215309, 4.881249, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.377929, -112.025314, 5.071249, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2680.057861, -113.735313, 7.761250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2680.087890, -108.495315, 7.761250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2680.087890, -110.735313, 7.761250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.947753, -113.375312, 7.841249, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.907714, -108.415313, 7.741250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.907714, -110.645309, 7.741250, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19489, -2683.687500, -102.171875, 6.617187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19490, -2683.687500, -102.171875, 6.617187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1499, -2690.347412, -101.161872, 6.197187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1494, -2682.327392, -107.161872, 6.137187, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2688.817382, -104.061874, 7.787187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.337402, -98.451873, 7.077187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.337402, -99.831878, 7.077187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.347412, -99.781875, 8.117187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2690.337402, -98.331878, 8.117187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.027587, -100.081878, 7.737187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.027587, -98.481872, 7.737187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.587402, -102.271873, 7.657187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2678.567382, -104.451873, 7.657187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2676.967529, -103.981872, 5.007187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2676.987548, -101.871871, 5.007187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2677.007568, -98.421875, 5.007187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2676.997558, -100.651878, 5.007187, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19491, -2625.921875, -109.640625, 8.140625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19492, -2625.921875, -109.640625, 8.140625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1494, -2622.731933, -111.600624, 3.200624, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1494, -2632.061767, -106.880622, 3.360624, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1499, -2626.261962, -106.240623, 6.010624, 0.000000, 0.000000, 449.999969);
    CreateDynamicObject(19466, -2619.871826, -107.880622, 4.860625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.871826, -110.110626, 4.860625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2632.391845, -113.470626, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2632.371826, -111.240623, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2632.321777, -109.970626, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2632.361816, -111.200622, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2632.361816, -113.380622, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2632.361816, -108.380622, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.861816, -110.710624, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.861816, -108.480621, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.861816, -112.950622, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19489, -2625.007812, -119.640625, 6.699999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19490, -2625.007812, -119.640625, 6.699999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1492, -2618.347900, -120.650627, 6.279999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1502, -2626.367919, -114.650627, 6.219999, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2619.877929, -117.750625, 7.869999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2618.357910, -123.360626, 7.159999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2618.357910, -121.980621, 7.159999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2618.347900, -122.030624, 8.199999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2618.357910, -123.480621, 8.199999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2631.667724, -121.730621, 7.819999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2631.667724, -123.330627, 7.819999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.107910, -119.540626, 7.739999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.127929, -117.360626, 7.739999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2631.727783, -117.830627, 5.089999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2631.707763, -119.940628, 5.089999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2631.687744, -123.390625, 5.089999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2631.697753, -121.160621, 5.089999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19495, -2624.757812, -156.742187, 7.718750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19496, -2624.757812, -156.742187, 7.718750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1502, -2630.437744, -152.332183, 3.388750, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1492, -2628.057861, -156.512191, 3.058750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1494, -2622.807861, -152.822189, 3.218750, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2630.757812, -160.152191, 4.898750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.757812, -157.912185, 4.898750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.757812, -155.182189, 4.878749, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.757812, -160.082183, 7.648749, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.757812, -157.842193, 7.648749, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.757812, -153.692184, 7.698750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2618.757812, -156.262191, 7.948750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2618.757812, -154.022186, 7.948750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.917724, -159.742187, 6.888750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.907714, -159.742187, 8.178750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(6959, -2609.896240, -171.157104, 3.044849, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19491, -2625.921875, -166.750000, 8.140625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19492, -2625.921875, -166.750000, 8.140625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1491, -2622.731933, -168.710006, 3.200624, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1499, -2632.061767, -163.990005, 3.360624, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1499, -2626.261962, -163.350006, 6.010624, 0.000000, 0.000000, 449.999969);
    CreateDynamicObject(19466, -2619.871826, -164.990005, 4.860625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.871826, -167.220001, 4.860625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2632.391845, -170.580001, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2632.371826, -168.350006, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2632.321777, -167.080001, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2632.361816, -168.309997, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2632.361816, -170.490005, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2632.361816, -165.490005, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.861816, -167.820007, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.861816, -165.589996, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.861816, -170.059997, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19493, -2624.492187, -176.046875, 8.031250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19494, -2624.492187, -176.046875, 8.031250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1491, -2621.442138, -172.326873, 3.691249, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1494, -2629.832275, -172.526870, 3.361249, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2630.192138, -175.446868, 5.141249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.172119, -177.116882, 4.781250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.172119, -179.276870, 4.881249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.872070, -175.466873, 5.071249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.192138, -173.756881, 7.761250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.162109, -178.996871, 7.761250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.162109, -176.756881, 7.761250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.302246, -174.116882, 7.841249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.342285, -179.076873, 7.741250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.342285, -176.846878, 7.741250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19489, -2626.562500, -185.328125, 6.617187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19490, -2626.562500, -185.328125, 6.617187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1492, -2619.902587, -186.338119, 6.197187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1502, -2627.922607, -180.338119, 6.137187, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2621.432617, -183.438125, 7.787187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.912597, -189.048126, 7.077187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.912597, -187.668121, 7.077187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.902587, -187.718124, 8.117187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.912597, -189.168121, 8.117187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2633.222412, -187.418121, 7.737187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2633.222412, -189.018127, 7.737187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2631.662597, -185.228118, 7.657187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2631.682617, -183.048126, 7.657187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2633.282470, -183.518127, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2633.262451, -185.628128, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2633.242431, -189.078125, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2633.252441, -186.848129, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19489, -2728.882812, -178.507812, 6.617187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19490, -2728.882812, -178.507812, 6.617187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1499, -2722.222900, -179.517807, 6.197187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1492, -2730.242919, -173.517807, 6.137187, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2723.752929, -176.617813, 7.787187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.232910, -182.227813, 7.077187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.232910, -180.847808, 7.077187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.222900, -180.897811, 8.117187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.232910, -182.347808, 8.117187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2735.542724, -180.597808, 7.737187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2735.542724, -182.197814, 7.737187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2733.982910, -178.407806, 7.657187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.002929, -176.227813, 7.657187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2735.602783, -176.697814, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2735.582763, -178.807815, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2735.562744, -182.257812, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2735.572753, -180.027816, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19493, -2727.273437, -130.671875, 8.031250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19494, -2727.273437, -130.671875, 8.031250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1494, -2724.223388, -126.951873, 3.691249, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1502, -2732.613525, -127.151878, 3.361249, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2732.973388, -130.071868, 5.141249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.953369, -131.741882, 4.781250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.953369, -133.901870, 4.881249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.653320, -130.091873, 5.071249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.973388, -128.381881, 7.761250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.943359, -133.621871, 7.761250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.943359, -131.381881, 7.761250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.083496, -128.741882, 7.841249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.123535, -133.701873, 7.741250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.123535, -131.471878, 7.741250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19491, -2728.242187, -102.820312, 8.140625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19492, -2728.242187, -102.820312, 8.140625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1492, -2725.052246, -104.780311, 3.200624, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1499, -2734.382080, -100.060310, 3.360624, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1492, -2728.582275, -99.420310, 6.010624, 0.000000, 0.000000, 449.999969);
    CreateDynamicObject(19466, -2722.192138, -101.060310, 4.860625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.192138, -103.290313, 4.860625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.712158, -106.650314, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.692138, -104.420310, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.642089, -103.150314, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.682128, -104.380310, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.682128, -106.560310, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.682128, -101.560310, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.182128, -103.890312, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.182128, -101.660308, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.182128, -106.130310, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19489, -2727.328125, -112.820312, 6.699999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19490, -2727.328125, -112.820312, 6.699999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1492, -2720.668212, -113.830314, 6.279999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1492, -2728.688232, -107.830314, 6.219999, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2722.198242, -110.930313, 7.869999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2720.678222, -116.540313, 7.159999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2720.678222, -115.160308, 7.159999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2720.668212, -115.210311, 8.199999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2720.678222, -116.660308, 8.199999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2733.988037, -114.910308, 7.819999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2733.988037, -116.510314, 7.819999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.428222, -112.720314, 7.739999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.448242, -110.540313, 7.739999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.048095, -111.010314, 5.089999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.028076, -113.120315, 5.089999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.008056, -116.570312, 5.089999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.018066, -114.340309, 5.089999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19495, -2727.078125, -149.929687, 7.718750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19496, -2727.078125, -149.929687, 7.718750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1491, -2732.758056, -145.519683, 3.388750, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1491, -2730.378173, -149.699691, 3.058750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1499, -2725.128173, -146.009689, 3.218750, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2733.078125, -153.339691, 4.898750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2733.078125, -151.099685, 4.898750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2733.078125, -148.369689, 4.878749, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2733.078125, -153.269683, 7.648749, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2733.078125, -151.029693, 7.648749, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2733.078125, -146.879684, 7.698750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2721.078125, -149.449691, 7.948750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2721.078125, -147.209686, 7.948750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.238037, -152.929687, 6.888750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.228027, -152.929687, 8.178750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(6959, -2712.216552, -164.344604, 3.044849, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19491, -2728.242187, -159.929687, 8.140625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19492, -2728.242187, -159.929687, 8.140625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1491, -2725.052246, -161.889694, 3.200624, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1499, -2734.382080, -157.169692, 3.360624, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1492, -2728.582275, -156.529693, 6.010624, 0.000000, 0.000000, 449.999969);
    CreateDynamicObject(19466, -2722.192138, -158.169692, 4.860625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.192138, -160.399688, 4.860625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.712158, -163.759689, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.692138, -161.529693, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.642089, -160.259689, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.682128, -161.489685, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.682128, -163.669692, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.682128, -158.669692, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.182128, -160.999694, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.182128, -158.769683, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.182128, -163.239685, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19493, -2726.812500, -169.226562, 8.031250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19494, -2726.812500, -169.226562, 8.031250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1499, -2723.762451, -165.506561, 3.691249, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1491, -2732.152587, -165.706558, 3.361249, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2732.512451, -168.626556, 5.141249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.492431, -170.296569, 4.781250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.492431, -172.456558, 4.881249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.192382, -168.646560, 5.071249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.512451, -166.936569, 7.761250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.482421, -172.176559, 7.761250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.482421, -169.936569, 7.761250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2721.622558, -167.296569, 7.841249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2721.662597, -172.256561, 7.741250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2721.662597, -170.026565, 7.741250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19491, -2728.273437, -55.328125, 8.140625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19492, -2728.273437, -55.328125, 8.140625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1499, -2725.083496, -57.288124, 3.200624, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1499, -2734.413330, -52.568122, 3.360624, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1499, -2728.613525, -51.928123, 6.010624, 0.000000, 0.000000, 449.999969);
    CreateDynamicObject(19466, -2722.223388, -53.568130, 4.860625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.223388, -55.798130, 4.860625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.743408, -59.158119, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.723388, -56.928119, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.673339, -55.658123, 5.090624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.713378, -56.888122, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.713378, -59.068122, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.713378, -54.068122, 7.600625, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.213378, -56.398128, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.213378, -54.168128, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.213378, -58.638130, 7.720624, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19489, -2727.359375, 22.476562, 6.699999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19490, -2727.359375, 22.476562, 6.699999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1499, -2720.699462, 21.466558, 6.279999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1491, -2728.719482, 27.466562, 6.219999, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2722.229492, 24.366559, 7.869999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2720.709472, 18.756559, 7.159999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2720.709472, 20.136558, 7.159999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2720.699462, 20.086559, 8.199999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2720.709472, 18.636558, 8.199999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.019287, 20.386566, 7.819999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.019287, 18.786565, 7.819999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.459472, 22.576564, 7.739999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2732.479492, 24.756565, 7.739999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.079345, 24.286565, 5.089999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.059326, 22.176567, 5.089999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.039306, 18.726566, 5.089999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.049316, 20.956565, 5.089999, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19489, -2728.914062, -16.750000, 6.617187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19490, -2728.914062, -16.750000, 6.617187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1499, -2722.254150, -17.760004, 6.197187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1499, -2730.274169, -11.760000, 6.137187, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2723.784179, -14.860001, 7.787187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.264160, -20.470003, 7.077187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.264160, -19.090003, 7.077187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.254150, -19.140003, 8.117187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2722.264160, -20.590003, 8.117187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2735.573974, -18.839996, 7.737187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2735.573974, -20.439996, 7.737187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.014160, -16.649997, 7.657187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2734.034179, -14.469998, 7.657187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2735.634033, -14.939996, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2735.614013, -17.049995, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2735.593994, -20.499996, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2735.604003, -18.269996, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19489, -2626.585937, 121.382812, 6.617187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19490, -2626.585937, 121.382812, 6.617187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1494, -2619.926025, 120.372810, 6.197187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1499, -2627.946044, 126.372810, 6.137187, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2621.456054, 123.272811, 7.787187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.936035, 117.662811, 7.077187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.936035, 119.042816, 7.077187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.926025, 118.992813, 8.117187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.936035, 117.542816, 8.117187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2633.245849, 119.292816, 7.737187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2633.245849, 117.692810, 7.737187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2631.686035, 121.482810, 7.657187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2631.706054, 123.662811, 7.657187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2633.305908, 123.192810, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2633.285888, 121.082809, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2633.265869, 117.632812, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2633.275878, 119.862815, 5.007187, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19493, -2624.976562, 112.101562, 8.031250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19494, -2624.976562, 112.101562, 8.031250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1499, -2621.926513, 115.821563, 3.691249, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1492, -2630.316650, 115.621559, 3.361249, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2630.676513, 112.701560, 5.141249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.656494, 111.031562, 4.781250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.656494, 108.871559, 4.881249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2620.356445, 112.681564, 5.071249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.676513, 114.391563, 7.761250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.646484, 109.151565, 7.761250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.646484, 111.391563, 7.761250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.786621, 114.031562, 7.841249, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.826660, 109.071563, 7.741250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.826660, 111.301559, 7.741250, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19495, -2624.781250, 54.492187, 7.718750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19496, -2624.781250, 54.492187, 7.718750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1492, -2630.461181, 58.902191, 3.388750, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(1492, -2628.081298, 54.722187, 3.058750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(1494, -2622.831298, 58.412185, 3.218750, 0.000000, 0.000000, 269.999969);
    CreateDynamicObject(19466, -2630.781250, 51.082191, 4.898750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.781250, 53.322193, 4.898750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.781250, 56.052192, 4.878749, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.781250, 51.152191, 7.648749, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.781250, 53.392192, 7.648749, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2630.781250, 57.542190, 7.698750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2618.781250, 54.972183, 7.948750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2618.781250, 57.212184, 7.948750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.941162, 51.492183, 6.888750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19466, -2619.931152, 51.492183, 8.178750, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(6959, -2609.919677, 40.077278, 3.044849, 0.000000, 0.000000, 179.999969);
    CreateDynamicObject(19495, -2787.023437, 14.531250, 10.578125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19496, -2787.023437, 14.531250, 10.578125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, -2781.343505, 10.121250, 6.248125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1502, -2783.723388, 14.301250, 5.918125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, -2788.973388, 10.611249, 6.078125, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, -2781.023437, 17.941249, 7.758125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2781.023437, 15.701250, 7.758125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2781.023437, 12.971250, 7.738124, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2781.023437, 17.871250, 10.508125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2781.023437, 15.631250, 10.508125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2781.023437, 11.481249, 10.558124, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2793.023437, 14.051250, 10.808124, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2793.023437, 11.811249, 10.808124, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2791.863525, 17.531250, 9.748125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2791.873535, 17.531250, 11.038125, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(6959, -2801.885009, 28.946149, 5.904224, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19495, -2684.656250, 105.726562, 7.718750, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19496, -2684.656250, 105.726562, 7.718750, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1492, -2678.976318, 101.316558, 3.388750, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1502, -2681.356201, 105.496559, 3.058750, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, -2686.606201, 101.806564, 3.218750, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, -2678.656250, 109.136566, 4.898750, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2678.656250, 106.896560, 4.898750, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2678.656250, 104.166564, 4.878749, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2678.656250, 109.066558, 7.648749, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2678.656250, 106.826560, 7.648749, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2678.656250, 102.676559, 7.698750, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2690.656250, 105.246559, 7.948750, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2690.656250, 103.006561, 7.948750, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2689.496337, 108.726562, 6.888750, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2689.506347, 108.726562, 8.178750, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(6959, -2699.517822, 120.141464, 3.044849, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19495, -2625.601562, 64.460937, 7.718750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19496, -2625.601562, 64.460937, 7.718750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1499, -2631.281494, 68.870941, 3.388750, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(1494, -2628.901611, 64.690940, 3.058750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1491, -2623.651611, 68.380935, 3.218750, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, -2631.601562, 61.050937, 4.898750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2631.601562, 63.290939, 4.898750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2631.601562, 66.020935, 4.878749, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2631.601562, 61.120937, 7.648749, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2631.601562, 63.360939, 7.648749, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2631.601562, 67.510940, 7.698750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2619.601562, 64.940940, 7.948750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2619.601562, 67.180938, 7.948750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2620.761474, 61.460937, 6.888750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2620.751464, 61.460937, 8.178750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(6959, -2610.739990, 50.046028, 3.044849, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19495, -2727.929687, -26.734375, 7.718750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19496, -2727.929687, -26.734375, 7.718750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1502, -2733.609619, -22.324373, 3.388750, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(1502, -2731.229736, -26.504375, 3.058750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1494, -2725.979736, -22.814374, 3.218750, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, -2733.929687, -30.144372, 4.898750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2733.929687, -27.904373, 4.898750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2733.929687, -25.174373, 4.878749, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2733.929687, -30.074373, 7.648749, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2733.929687, -27.834373, 7.648749, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2733.929687, -23.684373, 7.698750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2721.929687, -26.254377, 7.948750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2721.929687, -24.014377, 7.948750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2723.089599, -29.734376, 6.888750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2723.079589, -29.734376, 8.178750, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(6959, -2713.068115, -41.149276, 3.044849, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19493, -2624.953125, -137.492187, 8.031250, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19494, -2624.953125, -137.492187, 8.031250, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(1499, -2621.903076, -133.772186, 3.691249, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(1494, -2630.293212, -133.972183, 3.361249, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, -2630.653076, -136.892181, 5.141249, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2630.633056, -138.562194, 4.781250, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2630.633056, -140.722183, 4.881249, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2620.333007, -136.912185, 5.071249, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2630.653076, -135.202194, 7.761250, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2630.623046, -140.442184, 7.761250, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2630.623046, -138.202194, 7.761250, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2619.763183, -135.562194, 7.841249, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2619.803222, -140.522186, 7.741250, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19466, -2619.803222, -138.292190, 7.741250, 0.000000, 0.000000, 179.999984);
    CreateDynamicObject(19489, -2678.726562, 194.695312, 6.609375, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19490, -2678.726562, 194.695312, 6.609375, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(1494, -2677.716552, 201.355316, 6.189374, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(1499, -2683.716552, 193.335311, 6.129374, 0.000000, 0.000000, -0.000007);
    CreateDynamicObject(19466, -2680.616455, 199.825317, 7.779375, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2675.006591, 201.345306, 7.069375, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2676.386474, 201.345306, 7.069375, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2676.336669, 201.355316, 8.109375, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2674.886474, 201.345306, 8.109375, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2676.636474, 188.035308, 7.729374, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2675.036621, 188.035308, 7.729374, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2678.826660, 189.595306, 7.649374, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2681.006591, 189.575317, 7.649374, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2680.536621, 187.975311, 4.999374, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2678.426513, 187.995315, 4.999374, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2674.976562, 188.015319, 4.999374, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2677.206542, 188.005310, 4.999374, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19493, -2669.445312, 196.296875, 8.031250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19494, -2669.445312, 196.296875, 8.031250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(1499, -2673.165283, 199.346878, 3.691249, 0.000000, 0.000000, -0.000007);
    CreateDynamicObject(1494, -2672.965332, 190.956878, 3.361249, 0.000000, 0.000000, -0.000007);
    CreateDynamicObject(19466, -2670.045410, 190.596878, 5.141249, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2668.375244, 190.616882, 4.781250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2666.215332, 190.616882, 4.881249, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2670.025390, 200.916870, 5.071249, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2671.735351, 190.596878, 7.761250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2666.495361, 190.626876, 7.761250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2668.735351, 190.626876, 7.761250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2671.375244, 201.486877, 7.841249, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2666.415283, 201.446868, 7.741250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2668.645263, 201.446868, 7.741250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19493, -2651.320312, 196.757812, 8.031250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19494, -2651.320312, 196.757812, 8.031250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(1499, -2655.040283, 199.807815, 3.691249, 0.000000, 0.000000, -0.000007);
    CreateDynamicObject(1499, -2654.840332, 191.417816, 3.361249, 0.000000, 0.000000, -0.000007);
    CreateDynamicObject(19466, -2651.920410, 191.057815, 5.141249, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2650.250244, 191.077819, 4.781250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2648.090332, 191.077819, 4.881249, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2651.900390, 201.377807, 5.071249, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2653.610351, 191.057815, 7.761250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2648.370361, 191.087814, 7.761250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2650.610351, 191.087814, 7.761250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2653.250244, 201.947814, 7.841249, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2648.290283, 201.907806, 7.741250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19466, -2650.520263, 201.907806, 7.741250, 0.000000, 0.000000, -90.000007);
    CreateDynamicObject(19491, -2628.437500, 271.718750, 8.132812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19492, -2628.437500, 271.718750, 8.132812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(1491, -2631.627441, 273.678741, 3.192812, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1494, -2622.297607, 268.958740, 3.352812, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1492, -2628.097412, 268.318756, 6.002812, 0.000000, 0.000000, 270.000000);
    CreateDynamicObject(19466, -2634.487548, 269.958740, 4.852812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2634.487548, 272.188751, 4.852812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2621.967529, 275.548736, 5.082812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2621.987548, 273.318756, 5.082812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2622.037597, 272.048736, 5.082812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2621.997558, 273.278747, 7.592812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2621.997558, 275.458740, 7.592812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2621.997558, 270.458740, 7.592812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2634.497558, 272.788757, 7.712812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2634.497558, 270.558746, 7.712812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19466, -2634.497558, 275.028747, 7.712812, 0.000000, 0.000000, -0.000010);
    CreateDynamicObject(19495, -2628.781250, 243.117187, 7.710937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19496, -2628.781250, 243.117187, 7.710937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1499, -2623.101318, 238.707183, 3.380937, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(1492, -2625.481201, 242.887191, 3.050937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(1494, -2630.731201, 239.197189, 3.210937, 0.000000, 0.000000, 90.000000);
    CreateDynamicObject(19466, -2622.781250, 246.527191, 4.890937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2622.781250, 244.287185, 4.890937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2622.781250, 241.557189, 4.870937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2622.781250, 246.457183, 7.640937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2622.781250, 244.217193, 7.640937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2622.781250, 240.067184, 7.690937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2634.781250, 242.637191, 7.940937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2634.781250, 240.397186, 7.940937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2633.621337, 246.117187, 6.880937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19466, -2633.631347, 246.117187, 8.170937, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(6959, -2643.642822, 257.532073, 3.037037, 0.000000, 0.000000, 0.000000);
    CreateDynamicObject(19493, -2630.687500, 172.843750, 8.031250, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19494, -2630.687500, 172.843750, 8.031250, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1502, -2626.967529, 169.793746, 3.691249, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(1492, -2627.167480, 178.183746, 3.361249, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, -2630.087402, 178.543746, 5.141249, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2631.757568, 178.523742, 4.781250, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2633.917480, 178.523742, 4.881249, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2630.107421, 168.223754, 5.071249, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2628.397460, 178.543746, 7.761250, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2633.637451, 178.513748, 7.761250, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2631.397460, 178.513748, 7.761250, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2628.757568, 167.653747, 7.841249, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2633.717529, 167.693756, 7.741250, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2631.487548, 167.693756, 7.741250, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19489, -2621.406250, 174.445312, 6.609375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19490, -2621.406250, 174.445312, 6.609375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, -2622.416259, 167.785308, 6.189374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(1499, -2616.416259, 175.805313, 6.129374, 0.000000, 0.000000, 180.000000);
    CreateDynamicObject(19466, -2619.516357, 169.315307, 7.779375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2625.126220, 167.795318, 7.069375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2623.746337, 167.795318, 7.069375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2623.796142, 167.785308, 8.109375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2625.246337, 167.795318, 8.109375, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2623.496337, 181.105316, 7.729374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2625.096191, 181.105316, 7.729374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2621.306152, 179.545318, 7.649374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2619.126220, 179.565307, 7.649374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2619.596191, 181.165313, 4.999374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2621.706298, 181.145309, 4.999374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2625.156250, 181.125305, 4.999374, 0.000000, 0.000000, 89.999992);
    CreateDynamicObject(19466, -2622.926269, 181.135314, 4.999374, 0.000000, 0.000000, 89.999992);

    new Vegaurius, BlackMarket_V, BaseBPS[86];
	BaseBPS[0] = CreateDynamicObject(18259, 384.4723, 2538.6650, 16.8845, 0.0000, 0.0000, 178.2999); //logcabinn01
	BaseBPS[1] = CreateDynamicObject(3749, 378.8235, 2508.4260, 20.6050, 0.0000, 0.0000, -89.8000); //ClubGate01_LAx
	BaseBPS[2] = CreateDynamicObject(10841, 378.7444, 2487.3383, 23.3141, 0.5999, 0.0000, 90.8000); //drydock1_SFSe01
	BaseBPS[3] = CreateDynamicObject(10841, 378.1564, 2529.4921, 23.3141, 0.5999, 0.0000, 90.8000); //drydock1_SFSe01
	BaseBPS[4] = CreateDynamicObject(10841, 377.9500, 2544.2246, 23.3141, 0.5999, 0.0000, 90.8000); //drydock1_SFSe01
	BaseBPS[5] = CreateDynamicObject(10841, 430.5708, 2487.5161, 23.3264, 0.5999, 0.0000, 90.8000); //drydock1_SFSe01
	BaseBPS[6] = CreateDynamicObject(10841, 430.2551, 2510.1350, 23.3214, 0.5999, 0.0000, 90.8000); //drydock1_SFSe01
	BaseBPS[7] = CreateDynamicObject(10841, 429.9404, 2532.7163, 23.3114, 0.5999, 0.0000, 90.8000); //drydock1_SFSe01
	BaseBPS[8] = CreateDynamicObject(10841, 388.0642, 2554.7827, 23.3129, 0.5999, 0.0000, 0.3000); //drydock1_SFSe01
	BaseBPS[9] = CreateDynamicObject(10841, 410.7586, 2554.9106, 23.3129, 0.5999, 0.0000, 0.3000); //drydock1_SFSe01
	BaseBPS[10] = CreateDynamicObject(10841, 419.3568, 2554.9521, 23.3129, 0.5999, 0.0000, 0.3000); //drydock1_SFSe01
	BaseBPS[11] = CreateDynamicObject(10841, 429.7792, 2544.2165, 23.3014, 0.5999, 0.0000, 90.8000); //drydock1_SFSe01
	BaseBPS[12] = CreateDynamicObject(636, 377.1874, 2536.8183, 23.3966, 0.0000, -90.7000, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[13] = CreateDynamicObject(636, 377.1874, 2533.6062, 23.3966, 0.0000, -90.7000, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[14] = CreateDynamicObject(636, 377.2674, 2530.1765, 23.3975, 0.0000, -90.7000, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[15] = CreateDynamicObject(636, 377.3475, 2526.7937, 23.3985, 0.0000, -90.7000, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[16] = CreateDynamicObject(636, 377.3975, 2523.3002, 23.3991, 0.0000, -90.7000, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[17] = CreateDynamicObject(636, 377.3975, 2520.3239, 23.3991, 0.0000, -90.7000, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[18] = CreateDynamicObject(636, 377.1874, 2540.0212, 23.3966, 0.0000, -90.7000, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[19] = CreateDynamicObject(636, 377.1874, 2543.1340, 23.3966, 0.0000, -90.7000, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[20] = CreateDynamicObject(636, 377.1874, 2546.4965, 23.3966, 0.0000, -90.7000, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[21] = CreateDynamicObject(636, 377.0073, 2549.4895, 23.3944, 0.0000, -90.7000, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[22] = CreateDynamicObject(636, 376.9172, 2553.1704, 23.3933, 0.0000, -90.7000, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[23] = CreateDynamicObject(636, 379.6894, 2555.4489, 23.4123, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[24] = CreateDynamicObject(636, 382.8362, 2555.5878, 23.2124, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[25] = CreateDynamicObject(636, 386.6824, 2555.7568, 23.2124, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[26] = CreateDynamicObject(636, 390.3278, 2555.7141, 23.2148, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[27] = CreateDynamicObject(636, 393.8767, 2555.8107, 23.2155, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[28] = CreateDynamicObject(636, 397.1375, 2555.8637, 23.2166, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[29] = CreateDynamicObject(636, 400.4745, 2555.7805, 23.2194, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[30] = CreateDynamicObject(636, 404.0074, 2555.7875, 23.2213, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[31] = CreateDynamicObject(636, 407.8511, 2555.7761, 23.2235, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[32] = CreateDynamicObject(636, 412.0526, 2555.8327, 23.2250, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[33] = CreateDynamicObject(636, 416.0472, 2555.8081, 23.2275, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[34] = CreateDynamicObject(636, 420.1072, 2555.8974, 23.2286, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[35] = CreateDynamicObject(636, 424.3982, 2555.9675, 23.2301, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[36] = CreateDynamicObject(636, 428.4497, 2556.0168, 23.2316, 0.0000, -90.7000, -87.4999); //veg_fern_balcny_kb2
	BaseBPS[37] = CreateDynamicObject(636, 430.4571, 2554.2988, 23.0278, -1.9000, -90.7000, 178.1998); //veg_fern_balcny_kb2
	BaseBPS[38] = CreateDynamicObject(636, 430.4397, 2551.3862, 23.2504, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[39] = CreateDynamicObject(636, 430.4343, 2547.7915, 23.2540, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[40] = CreateDynamicObject(636, 430.5169, 2544.0102, 23.1436, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[41] = CreateDynamicObject(636, 430.4913, 2540.7734, 23.1531, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[42] = CreateDynamicObject(636, 430.4843, 2537.0800, 23.0952, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[43] = CreateDynamicObject(636, 430.6200, 2533.8879, 23.1433, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[44] = CreateDynamicObject(636, 430.6143, 2530.6757, 23.1029, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[45] = CreateDynamicObject(636, 430.6092, 2527.2612, 23.1494, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[46] = CreateDynamicObject(636, 430.7330, 2523.5812, 23.1300, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[47] = CreateDynamicObject(636, 430.7467, 2519.4785, 23.1553, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[48] = CreateDynamicObject(636, 430.8402, 2515.7263, 23.1152, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[49] = CreateDynamicObject(636, 430.8340, 2512.1333, 23.0588, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[50] = CreateDynamicObject(636, 430.9165, 2508.0104, 22.9930, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[51] = CreateDynamicObject(636, 430.9498, 2504.3391, 22.9349, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[52] = CreateDynamicObject(636, 431.0133, 2500.7463, 22.8777, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[53] = CreateDynamicObject(636, 431.1268, 2495.3566, 23.0717, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[54] = CreateDynamicObject(636, 431.2007, 2491.3220, 23.0774, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[55] = CreateDynamicObject(636, 431.2442, 2487.7102, 23.0201, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[56] = CreateDynamicObject(636, 431.1967, 2483.6599, 22.9570, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[57] = CreateDynamicObject(636, 431.2701, 2480.2766, 22.9029, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[58] = CreateDynamicObject(636, 431.4251, 2477.5649, 22.8584, -0.9000, -90.7000, 179.8999); //veg_fern_balcny_kb2
	BaseBPS[59] = CreateDynamicObject(636, 377.8629, 2496.2045, 23.1301, 0.0000, -87.3999, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[60] = CreateDynamicObject(636, 377.8629, 2492.6831, 23.1301, 0.0000, -87.3999, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[61] = CreateDynamicObject(636, 377.8629, 2489.2033, 23.1301, 0.0000, -87.3999, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[62] = CreateDynamicObject(636, 377.8629, 2485.5532, 23.1301, 0.0000, -87.3999, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[63] = CreateDynamicObject(636, 378.0327, 2482.0925, 23.1224, 0.0000, -87.3999, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[64] = CreateDynamicObject(636, 378.0327, 2478.7229, 23.1224, 0.0000, -87.3999, 0.0000); //veg_fern_balcny_kb2
	BaseBPS[65] = CreateDynamicObject(9241, 413.0705, 2512.4614, 17.4372, 0.0000, 0.1999, 1.4000); //copbits_sfn
	BaseBPS[66] = CreateDynamicObject(19128, 381.8018, 2533.8879, 16.9253, 0.0000, 0.0000, 0.0000); //DanceFloor1
	BaseBPS[67] = CreateDynamicObject(19128, 385.7816, 2533.8879, 16.9253, 0.0000, 0.0000, 0.0000); //DanceFloor1
	BaseBPS[68] = CreateDynamicObject(19128, 387.7108, 2533.8879, 16.9253, 0.0000, 0.0000, 0.0000); //DanceFloor1
	BaseBPS[69] = CreateDynamicObject(19128, 387.6207, 2537.8305, 16.9253, 0.0000, 0.0000, 0.0000); //DanceFloor1
	BaseBPS[70] = CreateDynamicObject(19128, 383.6706, 2537.8305, 16.9253, 0.0000, 0.0000, 0.0000); //DanceFloor1
	BaseBPS[71] = CreateDynamicObject(19128, 381.7404, 2537.8305, 16.9253, 0.0000, 0.0000, 0.0000); //DanceFloor1
	BaseBPS[72] = CreateDynamicObject(19128, 381.6203, 2541.8527, 16.9253, 0.0000, 0.0000, 0.0000); //DanceFloor1
	BaseBPS[73] = CreateDynamicObject(19128, 381.6403, 2545.8356, 16.9253, 0.0000, 0.0000, 0.0000); //DanceFloor1
	BaseBPS[74] = CreateDynamicObject(19128, 385.5800, 2541.8127, 16.9253, 0.0000, 0.0000, 0.0000); //DanceFloor1
	BaseBPS[75] = CreateDynamicObject(19128, 387.6101, 2541.8127, 16.9253, 0.0000, 0.0000, 0.0000); //DanceFloor1
	BaseBPS[76] = CreateDynamicObject(19128, 387.5400, 2545.7663, 16.9253, 0.0000, 0.0000, 0.0000); //DanceFloor1
	BaseBPS[77] = CreateDynamicObject(19128, 385.5901, 2545.7663, 16.9253, 0.0000, 0.0000, 0.0000); //DanceFloor1
	BaseBPS[78] = CreateDynamicObject(14866, 380.7310, 2533.0942, 17.3677, 0.0000, 0.0000, -179.9999); //bobbie-bed01
	BaseBPS[79] = CreateDynamicObject(1757, 380.1085, 2542.6533, 16.8799, 0.0000, 0.0000, 90.1999); //LOW_COUCH_5
	BaseBPS[80] = CreateDynamicObject(11724, 388.7932, 2542.1992, 17.3993, 0.0000, 0.0000, -90.1000); //FireplaceSurround1
	BaseBPS[81] = CreateDynamicObject(19786, 389.0065, 2542.1755, 19.1407, 0.0000, 0.0000, -89.6000); //LCDTVBig1
	BaseBPS[82] = CreateDynamicObject(2708, 388.9102, 2537.3315, 16.6844, 0.0000, 0.0000, -88.6999); //ZIP_SHELF1
	BaseBPS[83] = CreateDynamicObject(2401, 388.8724, 2537.3435, 18.5077, 0.0000, 0.0000, -90.6001); //CJ_TRACKIES_WHITE
	BaseBPS[84] = CreateDynamicObject(2390, 388.9066, 2536.1333, 18.5137, 0.0000, 0.0000, -81.7999); //CJ_4way_clothes
	BaseBPS[85] = CreateDynamicObject(1824, 384.9712, 2535.8527, 17.6467, 0.0000, 0.0000, 91.2999); //craps_table

    Vegaurius = CreateDynamicObject(19853, 1567.973022, -897.616027, 1248.641723, -0.000000, 0.000059, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1690.143066, -1024.853027, 1248.641723, -0.000000, 0.000059, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1596.485351, -1022.888427, 1248.641723, -0.000000, 0.000068, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1595.194091, -1085.099853, 1248.621704, -0.000000, 0.000091, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1630.292846, -898.915954, 1248.641723, -0.000000, 0.000075, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1565.380493, -1022.241943, 1248.641723, -0.000000, 0.000052, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1564.089233, -1084.453369, 1248.621704, -0.000000, 0.000075, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1566.681762, -959.827453, 1248.621704, -0.000000, 0.000082, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19356, 1572.475097, -987.789855, 1253.481079, 0.000000, -55.900016, 0.099999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
    Vegaurius = CreateDynamicObject(19356, 1575.366088, -987.785217, 1251.524169, 0.000000, -55.900016, 0.099999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1658.928100, -1024.199462, 1248.641723, -0.000000, 0.000059, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19356, 1578.259155, -987.781555, 1249.565795, 0.000000, -55.900016, 0.099999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1688.851806, -1087.064453, 1248.621704, -0.000000, 0.000082, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1657.636840, -1086.410888, 1248.621704, -0.000000, 0.000082, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1627.700317, -1023.541748, 1248.641723, -0.000000, 0.000068, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19356, 1578.254028, -984.581115, 1249.565795, 0.000000, -55.900016, 0.099999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
    Vegaurius = CreateDynamicObject(19356, 1575.379028, -984.585937, 1251.512451, 0.000000, -55.900016, 0.099999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
    Vegaurius = CreateDynamicObject(19356, 1572.479858, -984.590454, 1253.474975, 0.000000, -55.900016, 0.099999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1626.409057, -1085.753173, 1248.621704, -0.000000, 0.000091, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1692.735595, -900.227111, 1248.641723, -0.000000, 0.000068, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1661.520629, -899.573669, 1248.641723, -0.000000, 0.000068, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1691.444335, -962.438537, 1248.621704, -0.000000, 0.000091, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1660.229370, -961.785095, 1248.621704, -0.000000, 0.000091, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1599.077880, -898.262512, 1248.641723, -0.000000, 0.000075, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1629.001586, -961.127380, 1248.621704, -0.000000, 0.000097, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19853, 1597.786621, -960.473937, 1248.621704, -0.000000, 0.000097, -1.199995, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14651, "ab_trukstpd", "Bow_bar_pool_tablebase", 0x00000000);
    Vegaurius = CreateDynamicObject(19356, 1693.898193, -876.611083, 1250.401855, 0.000000, 0.000000, 6.799997, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterialText(Vegaurius, 0, "{00BFFF} TomS", 130, "Ariel", 50, 0, 0x00000000, 0x00000000, 1);
    Vegaurius = CreateDynamicObject(19356, 1693.692504, -875.648559, 1250.081542, 0.000000, 0.000000, 6.799997, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterialText(Vegaurius, 0, "{98FB98} Lopes", 130, "Ariel", 50, 0, 0x00000000, 0x00000000, 1);
    Vegaurius = CreateDynamicObject(19356, 1687.526489, -878.327514, 1249.581298, 0.000000, 0.000000, 6.799997, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterialText(Vegaurius, 0, "{FF1493} Farias", 130, "Ariel", 50, 0, 0x00000000, 0x00000000, 1);
    Vegaurius = CreateDynamicObject(19356, 1691.012573, -884.908386, 1249.581298, 0.000000, 0.000000, 92.599990, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterialText(Vegaurius, 0, "{FF1493} Walk", 130, "Ariel", 50, 0, 0x00000000, 0x00000000, 1);
    Vegaurius = CreateDynamicObject(19356, 1681.269409, -888.333618, 1249.581298, 0.000000, 0.000000, 172.300018, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterialText(Vegaurius, 0, "{8B0000} Rt_", 130, "Ariel", 50, 0, 0x00000000, 0x00000000, 1);
    Vegaurius = CreateDynamicObject(19356, 1700.726806, -883.871215, 1249.901611, 0.000000, 0.000000, -158.299972, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterialText(Vegaurius, 0, "{8B0000} Kaique", 130, "Ariel", 50, 0, 0x00000000, 0x00000000, 1);
    Vegaurius = CreateDynamicObject(19356, 1698.239624, -877.455261, 1254.372558, 0.000000, 0.000000, -174.699966, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterialText(Vegaurius, 0, "{8B0000} Joaozin", 130, "Ariel", 150, 0, 0x00000000, 0x00000000, 1);
    Vegaurius = CreateDynamicObject(3279, 1631.135986, -872.035217, 1248.641723, 0.000000, 0.000000, 3.199999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(Vegaurius, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    Vegaurius = CreateDynamicObject(8210, 1675.642822, -1117.225341, 1251.084594, 178.999557, -179.799804, 178.499954, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1623.981689, -1115.874633, 1251.255371, 178.999557, -179.799804, 178.499954, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1575.296875, -1115.234985, 1251.384521, 178.999557, 179.900177, 179.099929, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1548.536499, -1087.490600, 1251.760986, 178.999557, 179.800201, 88.800003, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1549.614013, -1035.899169, 1251.850708, 178.999557, 179.800201, 88.800003, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1551.368530, -984.674133, 1251.933349, 178.999557, 179.800201, 88.400009, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1552.280395, -945.254089, 1251.818847, 178.999557, 179.800201, 89.000000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1552.903442, -893.935485, 1251.632934, 178.999557, 179.800201, 89.199996, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1580.664672, -867.067932, 1251.368652, 178.999557, 179.800201, -0.899995, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1617.356079, -867.774902, 1251.263183, 178.999557, 179.800201, -0.899995, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1683.375122, -869.149353, 1251.027832, 178.999557, 179.800201, -0.899995, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(6285, 1680.966552, -1104.820068, 1254.081298, 0.000000, 0.000000, 178.900039, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3603, 1639.358520, -1104.997558, 1253.804077, 0.000000, -0.200000, -2.700000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(7929, 1558.511352, -1095.687011, 1255.442382, 0.000000, 0.000000, 177.100082, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3605, 1597.011108, -1100.446289, 1254.480224, 0.000000, 0.000000, -3.899998, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3607, 1565.686401, -1043.837280, 1254.822143, 0.000000, 0.000000, -93.500076, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8493, 1567.006469, -976.337524, 1266.825439, 0.000000, 0.000000, -1.299998, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(19129, 1562.686401, -876.346618, 1248.581665, 0.000000, 0.000000, -1.999999, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(1594, 1567.916748, -869.099365, 1249.102172, 0.000000, 0.000000, -2.299998, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(2229, 1558.306030, -879.523864, 1248.651977, 0.000000, 0.000000, 86.699989, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(2229, 1558.933105, -868.631713, 1248.651977, 0.000000, 0.000000, 86.699989, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(19608, 1556.449584, -874.618469, 1248.662231, 0.000000, 0.000000, 87.600021, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(1594, 1567.657348, -875.553894, 1249.102172, 0.000000, 0.000000, -2.299998, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(1594, 1567.308349, -884.267211, 1249.102172, 0.000000, 0.000000, -2.299998, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(1594, 1571.125976, -884.420410, 1249.102172, 0.000000, 0.000000, -2.299998, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(1594, 1571.467895, -875.886962, 1249.102172, 0.000000, 0.000000, -2.299998, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(1594, 1569.270751, -880.732543, 1249.102172, 0.000000, 0.000000, -2.299998, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(19611, 1557.780639, -874.652160, 1248.721801, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(19610, 1557.679565, -874.624633, 1250.397949, 25.700000, 0.000000, 75.199974, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3524, 1572.243286, -886.573547, 1248.641723, 0.000000, 0.000000, 84.100006, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3524, 1572.934448, -867.643310, 1248.641723, 0.000000, 0.000000, 84.100006, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(18761, 1572.138183, -876.721923, 1248.616088, 0.899998, 0.000000, -92.300010, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(19609, 1557.562622, -872.269592, 1248.651977, 0.000000, 0.000000, 86.699943, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(1484, 1571.327270, -875.988708, 1249.675415, -10.099992, 22.900005, 0.199999, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(1484, 1568.953979, -881.014953, 1249.675170, -10.099992, 22.900005, 0.199999, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(9482, 1650.287841, -867.958801, 1254.691894, 0.000000, 0.000000, 88.499954, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(18750, 1649.847167, -833.017028, 1322.601440, 85.100006, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(11470, 1700.305419, -876.602905, 1253.482666, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1708.044921, -897.391357, 1250.934814, 178.999557, -179.999801, -91.100006, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1707.046875, -949.412231, 1251.004882, 178.999557, -179.999801, -91.100006, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1706.053222, -1001.301818, 1251.044921, 178.999557, -179.999801, -91.400001, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1704.777832, -1053.486816, 1251.044921, 178.999557, -179.999801, -91.400001, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8210, 1703.868896, -1090.675292, 1251.004882, 178.999557, -179.999801, -91.400001, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3276, 1678.337890, -874.738403, 1249.422119, 0.000000, 0.000000, 87.700088, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3276, 1677.910278, -885.400024, 1249.422119, 0.000000, 0.000000, 87.700088, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3276, 1683.412353, -891.880615, 1249.422119, 0.000000, 0.000000, -7.500038, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3276, 1694.773925, -893.376464, 1249.422119, 0.000000, 0.000000, -7.500038, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3276, 1702.645141, -894.412841, 1249.422119, 0.000000, 0.000000, -7.500038, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(19833, 1681.434204, -888.549804, 1248.641723, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(19833, 1693.866210, -875.557250, 1249.062988, 0.000000, -2.999999, -154.499969, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(19833, 1700.766967, -883.666931, 1248.919433, 0.000000, -2.999999, -154.499969, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(19833, 1690.760009, -885.137817, 1248.694335, 0.000000, -2.999999, -85.899971, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(19833, 1693.830200, -876.029296, 1249.640747, -37.500000, -2.999999, -154.899948, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(19833, 1687.727172, -878.213317, 1248.604125, 5.600004, 0.600000, -165.599945, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(19333, 1708.032958, -913.069580, 1269.311645, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(16776, 1702.308349, -939.672119, 1248.641723, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(14780, 1691.631225, -997.291625, 1249.702392, 0.000000, 0.000000, -3.099998, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3471, 1655.940429, -869.501892, 1249.527587, 0.000000, 0.000000, -93.199989, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3471, 1644.478149, -868.860656, 1249.527587, 0.000000, 0.000000, -93.199989, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(10757, 1701.219482, -1036.167968, 1263.481689, 12.999999, 0.000000, -114.699989, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(9241, 1690.725463, -1023.165832, 1250.781982, 0.000000, 0.000000, -4.400000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(725, 1561.994262, -912.664672, 1241.621582, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(725, 1702.094116, -977.984741, 1241.621582, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(18788, 1651.240844, -849.079956, 1247.971557, 0.499998, -0.899999, 86.799949, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(18788, 1653.442260, -809.805908, 1248.588989, 0.499998, -0.899999, 86.799949, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(18788, 1655.645141, -770.501770, 1249.206176, 0.499998, -0.899999, 86.799949, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(18788, 1657.833129, -731.467773, 1249.820556, 0.499998, -0.899999, 86.799949, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3444, 1689.065185, -1073.119873, 1251.060791, 0.000000, 0.000000, -1.899986, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(6965, 1633.863159, -976.483764, 1252.351928, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(1584, 1704.494262, -1045.380859, 1248.540771, 0.000000, 0.000000, 82.599937, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(18801, 1669.099609, -708.061279, 1273.282592, 1.200000, 7.800023, 89.499977, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(18788, 1680.016845, -692.785522, 1249.393066, 1.099998, 0.199999, 84.799957, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(18788, 1683.564941, -653.766540, 1249.256958, 1.099998, 0.199999, 84.799957, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(18788, 1686.258666, -623.182067, 1249.411254, 1.099998, -0.900000, 85.299919, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(8040, 1692.392944, -570.695983, 1251.477905, -0.699999, 0.000000, -96.500000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(3383, 1705.884155, -959.141723, 1248.681396, 0.000000, 0.000000, 89.100021, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(359, 1705.229858, -960.078063, 1249.682006, 0.000000, 0.000000, 88.899978, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(349, 1705.119628, -958.958557, 1249.790405, 91.300010, 0.000000, 88.099975, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(321, 1705.886108, -957.732177, 1249.701660, 86.200027, 3.299999, 0.000000, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(2985, 1706.347412, -962.437927, 1248.621704, 0.000000, 0.000000, 176.299972, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(2985, 1706.829223, -954.984924, 1248.621704, 0.000000, 0.000000, 176.299972, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(1584, 1706.467041, -959.222656, 1249.892211, 0.000000, 0.000000, -91.399986, -1, -1, -1, 300.00, 300.00);
    Vegaurius = CreateDynamicObject(350, 1705.828613, -959.851318, 1249.772094, 82.100021, -2.900000, 89.299995, -1, -1, -1, 300.00, 300.00);

    BlackMarket_V = CreateDynamicObject(19449, -1965.324340, 303.662017, 41.789321, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.324340, 302.032012, 41.789321, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.324340, 302.032012, 42.389312, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.324340, 303.691894, 42.389312, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.324340, 302.032012, 36.169334, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.324340, 303.721984, 36.169334, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.324340, 303.721984, 36.749305, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.324340, 302.032012, 36.719314, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 284.211822, 36.269325, 0.000000, 0.000029, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 285.901794, 36.269325, 0.000000, 0.000029, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 285.901794, 36.849296, 0.000000, 0.000029, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 284.211822, 36.719310, 0.000000, 0.000029, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 284.211822, 41.849311, 0.000000, 0.000037, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 285.901794, 41.849311, 0.000000, 0.000037, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 285.901794, 42.429283, 0.000000, 0.000037, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 284.211822, 42.299297, 0.000000, 0.000037, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 271.031921, 41.849311, 0.000000, 0.000052, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 272.721893, 41.849311, 0.000000, 0.000052, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 272.721893, 42.429283, 0.000000, 0.000052, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 271.031921, 42.299297, 0.000000, 0.000052, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 271.031921, 36.259311, 0.000000, 0.000060, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 272.721893, 36.259311, 0.000000, 0.000060, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 272.721893, 36.839282, 0.000000, 0.000060, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 271.031921, 36.709297, 0.000000, 0.000060, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 257.981811, 36.259311, 0.000000, 0.000068, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 259.671783, 36.259311, 0.000000, 0.000068, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 259.671783, 36.839282, 0.000000, 0.000068, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 257.981811, 36.709297, 0.000000, 0.000068, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 257.981811, 41.829311, 0.000000, 0.000082, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 259.671783, 41.829311, 0.000000, 0.000082, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 259.671783, 42.409282, 0.000000, 0.000082, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1965.304321, 257.981811, 42.279296, 0.000000, 0.000082, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1941.524169, 257.941772, 41.829311, 0.000000, 0.000091, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1941.524169, 259.631744, 41.829311, 0.000000, 0.000091, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1941.524169, 259.631744, 42.409282, 0.000000, 0.000091, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1941.524169, 257.941772, 42.279296, 0.000000, 0.000091, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1941.524169, 271.071777, 41.829311, 0.000000, 0.000098, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1941.524169, 272.761749, 41.829311, 0.000000, 0.000098, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1941.524169, 272.761749, 42.409282, 0.000000, 0.000098, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1941.524169, 271.071777, 42.279296, 0.000000, 0.000098, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1946.370483, 252.998641, 41.829311, 0.000000, 0.000105, 89.799980, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1948.060424, 253.004547, 41.829311, 0.000000, 0.000105, 89.799980, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1948.060424, 253.004547, 42.409282, 0.000000, 0.000105, 89.799980, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    BlackMarket_V = CreateDynamicObject(19449, -1946.370483, 252.998641, 42.279296, 0.000000, 0.000105, 89.799980, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(BlackMarket_V, 0, 16640, "a51", "sw_olddrum1", 0x00000000);
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    BlackMarket_V = CreateDynamicObject(3861, -1951.492797, 306.051300, 41.237098, 0.000000, 0.000000, -89.499961, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(3861, -1951.521240, 297.781738, 41.237098, -0.000007, 0.000000, -89.499938, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2358, -1951.868652, 307.006500, 40.987079, 0.000000, 0.000000, -90.299995, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(18862, -1977.669799, 251.464096, 34.478748, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(18862, -1986.149536, 256.154052, 34.478748, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(18862, -1977.379516, 304.053894, 34.548748, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(11392, -1955.398437, 302.733886, 34.488758, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1574, -1950.453002, 308.211029, 34.447082, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(11392, -1955.398437, 302.733886, 34.488758, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(11392, -1955.398437, 302.733886, 34.488758, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(11392, -1958.098632, 282.313842, 34.488754, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(11392, -1958.098632, 282.313842, 34.488754, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(11392, -1958.098632, 282.313842, 34.488754, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(11392, -1948.547119, 266.358428, 34.468750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1951.857177, 266.749633, 40.107055, 0.000000, 0.000000, -1.299998, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1949.466674, 266.749633, 40.107055, 0.000000, 0.000007, -1.299998, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1948.794921, 267.953033, 40.107055, 0.000000, 0.000007, 155.199981, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1950.987182, 268.906250, 40.107055, 0.000000, 0.000014, 155.199981, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1951.857177, 271.919464, 40.107055, 0.000000, 0.000007, -1.299998, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1949.466674, 271.919464, 40.107055, 0.000000, 0.000014, -1.299998, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1948.794921, 273.122863, 40.107055, 0.000003, 0.000000, 155.199935, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1950.987182, 274.076080, 40.107055, 0.000001, 0.000007, 155.199935, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(11392, -1950.066528, 263.618408, 40.058761, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1954.856689, 295.979583, 40.107055, 0.000000, 0.000007, -1.299998, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1952.466186, 295.979583, 40.107055, 0.000000, 0.000014, -1.299998, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1951.794433, 297.182983, 40.107055, 0.000003, 0.000000, 155.199935, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1953.986694, 298.136199, 40.107055, 0.000001, 0.000007, 155.199935, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1954.856689, 301.149414, 40.107055, 0.000000, 0.000014, -1.299998, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1952.466186, 301.149414, 40.107055, 0.000000, 0.000023, -1.299998, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1951.794433, 302.352813, 40.107055, 0.000006, -0.000006, 155.199890, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19898, -1953.986694, 303.306030, 40.107055, 0.000006, 0.000000, 155.199890, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(11392, -1953.066040, 292.848358, 40.058761, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2670, -1953.749145, 274.378448, 34.687088, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2670, -1953.749145, 262.978424, 34.687088, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2671, -1954.327758, 258.767730, 34.497062, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2671, -1946.817016, 260.727722, 34.497062, 0.000000, 0.000029, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2671, -1954.811035, 288.658935, 34.497062, 0.000007, 0.000022, 90.799926, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2671, -1956.875732, 296.141571, 34.497062, 0.000007, 0.000029, 90.799926, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2672, -1950.946533, 262.353424, 40.407131, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2672, -1953.966430, 268.783386, 40.407131, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2672, -1947.246215, 268.783386, 40.407131, 0.000000, 0.000029, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2672, -1953.946533, 293.763458, 40.407131, 0.000000, 0.000037, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2672, -1956.987182, 304.243347, 40.407131, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2675, -1950.238037, 268.622436, 34.687126, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2672, -1958.356445, 262.353424, 34.777137, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2672, -1961.376342, 268.783386, 34.777137, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2672, -1954.656127, 268.783386, 34.777137, 0.000000, 0.000037, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2672, -1961.356445, 293.763458, 34.777137, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2672, -1964.397094, 304.243347, 34.777137, 0.000000, 0.000052, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2670, -1953.749145, 274.378448, 34.687088, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2670, -1953.749145, 262.978424, 34.687088, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2670, -1949.458862, 274.378448, 34.747093, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2670, -1949.458862, 262.978424, 34.747093, 0.000000, 0.000029, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2670, -1949.458862, 274.378448, 34.747093, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2670, -1949.458862, 262.978424, 34.747093, 0.000000, 0.000029, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2677, -1958.043579, 294.287628, 34.768741, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2677, -1958.043579, 305.927673, 34.768741, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2677, -1953.403686, 305.927673, 34.768741, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(926, -1950.563354, 307.047058, 34.758754, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2677, -1953.403686, 305.927673, 34.768741, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(926, -1951.974243, 308.277191, 34.758754, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(928, -1950.503784, 306.025085, 34.698753, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1358, -1992.984985, 256.230804, 35.359325, 0.000000, 0.000000, 85.400001, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1358, -1992.293457, 264.822998, 35.359325, 0.000000, 0.000000, 85.400001, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1712, -1943.858642, 273.292663, 34.511272, -1.099998, 0.000000, 172.999954, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(18099, -1955.009033, 272.999969, 34.468750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(18100, -1954.269165, 276.203399, 34.488746, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1712, -1941.919433, 275.381195, 34.470287, -1.099998, 0.000000, -90.099983, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2115, -1944.332641, 274.942657, 34.083938, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1442, -1968.125976, 252.759307, 35.023918, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1518, -1944.444091, 277.338531, 35.223907, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1582, -1944.568481, 275.047393, 34.403923, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2702, -1945.213134, 273.583923, 35.028129, 4.299999, -101.099983, 75.500015, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2702, -1944.019531, 273.319091, 35.015544, 4.199998, -99.199989, 95.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(3048, -1953.817260, 296.200134, 34.298755, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(3048, -1953.817260, 267.020263, 34.298755, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2056, -1955.118408, 308.512817, 36.728740, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2049, -1957.714843, 308.498321, 36.758747, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2055, -1956.445922, 308.481872, 41.527088, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2672, -1943.670532, 275.048034, 34.748355, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2358, -1951.858520, 305.126434, 40.987079, 0.000000, 0.000000, -90.299995, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2358, -1951.863525, 306.056488, 40.987079, 0.000000, 0.000000, -90.299995, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(356, -1952.390136, 307.222808, 40.948505, 0.000000, -14.499992, 5.799997, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(356, -1952.348632, 307.005889, 40.953506, 0.000000, -14.499992, 5.799997, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(356, -1952.345947, 306.785064, 40.948501, 0.000000, -14.499992, 5.799997, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(355, -1952.414306, 306.278625, 40.980876, 0.000000, -9.800000, 4.399999, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(355, -1952.393554, 306.009429, 40.980876, 0.000000, -9.800000, 4.399999, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(355, -1952.375122, 305.770141, 40.980876, 0.000000, -9.800000, 4.399999, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(357, -1952.305053, 305.258239, 40.977088, 0.000000, -5.599998, 8.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(357, -1952.269775, 305.020935, 40.977088, 0.000000, -5.599998, 8.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(357, -1952.247802, 304.872619, 40.977088, 0.000000, -5.599998, 8.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(348, -1952.232666, 304.767944, 40.889492, 108.700004, 2.099998, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(348, -1952.382812, 304.762756, 40.887725, 84.199951, -33.100002, 36.600002, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(348, -1952.542602, 304.688171, 40.937080, 0.000000, 10.899996, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2064, -1951.680664, 302.236877, 40.624080, 5.699996, 1.100000, -155.900070, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2061, -1952.762329, 304.248748, 40.317092, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2061, -1952.762329, 304.388702, 40.347091, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2040, -1952.226806, 304.639007, 40.107063, 0.000000, 0.000000, 89.599952, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2040, -1952.225219, 304.848999, 40.107074, 0.000000, 0.000000, 89.599952, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2039, -1953.976928, 304.752868, 40.087085, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19087, -1952.762817, 296.274993, 42.019058, 90.000022, -3.299998, 3.200001, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19087, -1952.762329, 296.814941, 42.019058, 90.000022, -3.299998, 3.200001, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19559, -1952.772949, 297.629364, 41.717090, -0.000007, 0.000000, -91.499977, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2673, -1944.487182, 274.793487, 34.619083, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1670, -1944.275634, 275.138122, 34.913925, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2313, -1944.988037, 277.079925, 34.473926, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2800, -1943.738891, 274.793640, 34.743919, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1310, -1952.852783, 296.497100, 41.557083, -0.000007, 0.000000, -93.899993, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(12957, -1982.461791, 301.285644, 34.531867, 0.000000, 0.000000, -105.099990, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(3014, -1952.700439, 307.033538, 40.257076, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(3014, -1952.700439, 306.423583, 40.257076, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(3014, -1952.700439, 305.863616, 40.257076, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(3014, -1952.700439, 305.263580, 40.257076, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(3026, -1952.915405, 297.031036, 41.598926, -4.900005, -89.699996, -85.599960, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1310, -1952.433959, 296.468505, 41.037097, -0.000007, 0.000000, -93.899993, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1310, -1952.168823, 296.510772, 40.998279, -12.000005, 0.299998, -93.899993, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1310, -1951.913574, 296.513305, 40.944328, -12.000005, 0.299998, -93.899993, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(3026, -1952.814086, 297.037963, 40.875049, -87.800010, 97.899955, 94.400009, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(3026, -1952.425292, 297.014160, 40.860221, -87.800010, 97.899955, 94.400009, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19559, -1952.531494, 297.582763, 40.886531, -83.899978, -179.999984, 88.500015, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1550, -1952.551757, 298.222778, 41.202568, 0.699995, -11.199992, -26.000064, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1550, -1952.174438, 298.160797, 41.205150, 0.699995, -11.199992, -26.000064, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1242, -1952.674316, 299.045471, 41.047088, -0.799992, 0.000000, 87.499992, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19142, -1952.479736, 298.665985, 41.104579, 4.100009, -91.299995, 89.699966, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19142, -1952.170898, 298.664459, 41.082420, 4.100009, -91.299995, 89.699966, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1242, -1952.484375, 299.037200, 41.049743, -0.799992, 0.000000, 87.499992, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1242, -1952.274169, 299.028045, 41.052684, -0.799992, 0.000000, 87.499992, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2056, -1950.135009, 298.908325, 41.847076, 0.000000, 0.000000, -88.899993, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2056, -1950.131591, 298.752990, 41.721534, 0.000000, -47.599994, -88.899993, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2056, -1950.135131, 297.321075, 41.687427, 0.000000, -47.599994, -88.899993, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2056, -1950.138793, 297.515625, 41.852054, 0.000000, -1.599998, -88.899993, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2056, -1950.107543, 305.092651, 41.565830, 0.000000, 0.000000, -89.099983, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2056, -1950.091186, 305.326202, 41.701648, 0.000000, 30.199995, -89.099983, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2056, -1950.120971, 307.196441, 41.763130, 0.000000, -3.100008, -89.099983, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2056, -1950.121826, 307.254119, 41.899547, 0.000000, -53.800006, -89.099983, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2685, -1948.026855, 253.143753, 35.978752, 0.000000, 0.000000, 179.200103, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1776, -1942.091308, 253.417129, 35.508731, 0.000000, 0.000000, 178.300033, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1342, -1946.031005, 254.747116, 35.578754, 0.000000, 0.000000, 91.700004, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19087, -1946.276000, 255.867401, 41.712394, 18.799978, 90.200042, -1.399999, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1362, -1950.968627, 253.538085, 35.023910, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1220, -1955.656616, 253.500869, 34.848751, 0.000000, 0.000000, 90.900032, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1220, -1956.386352, 253.489410, 34.848751, 0.000000, 0.000000, 90.900032, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1220, -1956.397094, 254.159362, 34.848751, 0.000000, 0.000000, 90.900032, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1220, -1955.666870, 254.170837, 34.848751, 0.000000, 0.000000, 90.900032, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(1220, -1955.977661, 253.862380, 35.507263, 0.000000, 0.000000, 90.900032, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(3040, -1943.500366, 274.224945, 42.543403, 0.000000, 0.000000, -0.000007, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(3863, -1947.198120, 254.508544, 40.967082, 0.000000, 0.000000, 179.599945, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19087, -1945.665771, 255.853210, 41.710365, 18.799978, 90.200042, -1.399999, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2805, -1947.768066, 255.873489, 41.017089, 0.000000, 0.000000, 82.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2805, -1948.352539, 255.950592, 41.017089, 0.000000, 0.000000, 82.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2805, -1945.874389, 255.856185, 41.007091, 0.000000, 0.000000, 82.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2805, -1946.290039, 255.911087, 41.007091, 0.000000, 0.000000, 82.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19560, -1945.895751, 255.376708, 40.637092, 0.000007, 0.000000, 92.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19560, -1945.881713, 255.057052, 40.637092, 0.000007, 0.000000, 92.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19560, -1945.870117, 254.797332, 40.637092, 0.000007, 0.000000, 92.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19560, -1946.020263, 254.790725, 40.637092, 0.000007, 0.000000, 92.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19560, -1946.034301, 255.110397, 40.637092, 0.000007, 0.000000, 92.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19560, -1946.045654, 255.370101, 40.637092, 0.000007, 0.000000, 92.500000, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19560, -1948.387084, 255.376708, 40.637092, 0.000014, 0.000000, 92.499977, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19560, -1948.373046, 255.057052, 40.637092, 0.000014, 0.000000, 92.499977, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19560, -1948.361450, 254.797332, 40.637092, 0.000014, 0.000000, 92.499977, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19560, -1948.511596, 254.790725, 40.637092, 0.000014, 0.000000, 92.499977, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19560, -1948.525634, 255.110397, 40.637092, 0.000014, 0.000000, 92.499977, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(19560, -1948.536987, 255.370101, 40.637092, 0.000014, 0.000000, 92.499977, -1, -1, -1, 300.00, 300.00);
    BlackMarket_V = CreateDynamicObject(2803, -1947.089721, 254.966384, 40.917083, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);

    return 1;
}
stock LoadTextDrawGlob()
{
    EditMob[0] = TextDrawCreate(514.000000, 156.000000, "Preview_Model");
    TextDrawFont(EditMob[0], 5);
    TextDrawLetterSize(EditMob[0], 0.600000, 2.000000);
    TextDrawTextSize(EditMob[0], 102.500000, 16.000000);
    TextDrawSetOutline(EditMob[0], 0);
    TextDrawSetShadow(EditMob[0], 0);
    TextDrawAlignment(EditMob[0], 1);
    TextDrawColor(EditMob[0], -1);
    TextDrawBackgroundColor(EditMob[0], -1962934017);
    TextDrawBoxColor(EditMob[0], 255);
    TextDrawUseBox(EditMob[0], 0);
    TextDrawSetProportional(EditMob[0], 1);
    TextDrawSetSelectable(EditMob[0], 1);
    TextDrawSetPreviewModel(EditMob[0], 0);
    TextDrawSetPreviewRot(EditMob[0], -10.000000, 0.000000, -20.000000, 15.000000);
    TextDrawSetPreviewVehCol(EditMob[0], 1, 1);

    EditMob[1] = TextDrawCreate(514.000000, 193.000000, "Preview_Model");
    TextDrawFont(EditMob[1], 5);
    TextDrawLetterSize(EditMob[1], 0.600000, 2.000000);
    TextDrawTextSize(EditMob[1], 102.500000, 16.000000);
    TextDrawSetOutline(EditMob[1], 0);
    TextDrawSetShadow(EditMob[1], 0);
    TextDrawAlignment(EditMob[1], 1);
    TextDrawColor(EditMob[1], -1);
    TextDrawBackgroundColor(EditMob[1], 1296911741);
    TextDrawBoxColor(EditMob[1], 255);
    TextDrawUseBox(EditMob[1], 0);
    TextDrawSetProportional(EditMob[1], 1);
    TextDrawSetSelectable(EditMob[1], 1);
    TextDrawSetPreviewModel(EditMob[1], 0);
    TextDrawSetPreviewRot(EditMob[1], -10.000000, 0.000000, -20.000000, 15.000000);
    TextDrawSetPreviewVehCol(EditMob[1], 1, 1);

    EditMob[2] = TextDrawCreate(514.000000, 211.000000, "Preview_Model");
    TextDrawFont(EditMob[2], 5);
    TextDrawLetterSize(EditMob[2], 0.600000, 2.000000);
    TextDrawTextSize(EditMob[2], 102.500000, 16.000000);
    TextDrawSetOutline(EditMob[2], 0);
    TextDrawSetShadow(EditMob[2], 0);
    TextDrawAlignment(EditMob[2], 1);
    TextDrawColor(EditMob[2], -1);
    TextDrawBackgroundColor(EditMob[2], 1296911741);
    TextDrawBoxColor(EditMob[2], 255);
    TextDrawUseBox(EditMob[2], 0);
    TextDrawSetProportional(EditMob[2], 1);
    TextDrawSetSelectable(EditMob[2], 1);
    TextDrawSetPreviewModel(EditMob[2], 0);
    TextDrawSetPreviewRot(EditMob[2], -10.000000, 0.000000, -20.000000, 15.000000);
    TextDrawSetPreviewVehCol(EditMob[2], 1, 1);

    EditMob[3] = TextDrawCreate(564.000000, 213.000000, "velocidade");
    TextDrawFont(EditMob[3], 2);
    TextDrawLetterSize(EditMob[3], 0.191666, 1.149999);
    TextDrawTextSize(EditMob[3], 400.000000, 17.000000);
    TextDrawSetOutline(EditMob[3], 0);
    TextDrawSetShadow(EditMob[3], 0);
    TextDrawAlignment(EditMob[3], 2);
    TextDrawColor(EditMob[3], -1);
    TextDrawBackgroundColor(EditMob[3], 255);
    TextDrawBoxColor(EditMob[3], 50);
    TextDrawUseBox(EditMob[3], 0);
    TextDrawSetProportional(EditMob[3], 1);
    TextDrawSetSelectable(EditMob[3], 0);

    EditMob[4] = TextDrawCreate(497.000000, 241.000000, "ld_beat:left");
    TextDrawFont(EditMob[4], 4);
    TextDrawLetterSize(EditMob[4], 0.600000, 2.000000);
    TextDrawTextSize(EditMob[4], 40.000000, 40.000000);
    TextDrawSetOutline(EditMob[4], 1);
    TextDrawSetShadow(EditMob[4], 0);
    TextDrawAlignment(EditMob[4], 1);
    TextDrawColor(EditMob[4], -1);
    TextDrawBackgroundColor(EditMob[4], 255);
    TextDrawBoxColor(EditMob[4], 50);
    TextDrawUseBox(EditMob[4], 1);
    TextDrawSetProportional(EditMob[4], 1);
    TextDrawSetSelectable(EditMob[4], 1);

    EditMob[5] = TextDrawCreate(497.000000, 287.000000, "ld_beat:left");
    TextDrawFont(EditMob[5], 4);
    TextDrawLetterSize(EditMob[5], 0.600000, 2.000000);
    TextDrawTextSize(EditMob[5], 40.000000, 40.000000);
    TextDrawSetOutline(EditMob[5], 1);
    TextDrawSetShadow(EditMob[5], 0);
    TextDrawAlignment(EditMob[5], 1);
    TextDrawColor(EditMob[5], -1);
    TextDrawBackgroundColor(EditMob[5], 255);
    TextDrawBoxColor(EditMob[5], 50);
    TextDrawUseBox(EditMob[5], 1);
    TextDrawSetProportional(EditMob[5], 1);
    TextDrawSetSelectable(EditMob[5], 1);

    EditMob[6] = TextDrawCreate(497.000000, 334.000000, "ld_beat:left");
    TextDrawFont(EditMob[6], 4);
    TextDrawLetterSize(EditMob[6], 0.600000, 2.000000);
    TextDrawTextSize(EditMob[6], 40.000000, 40.000000);
    TextDrawSetOutline(EditMob[6], 1);
    TextDrawSetShadow(EditMob[6], 0);
    TextDrawAlignment(EditMob[6], 1);
    TextDrawColor(EditMob[6], -1);
    TextDrawBackgroundColor(EditMob[6], 255);
    TextDrawBoxColor(EditMob[6], 50);
    TextDrawUseBox(EditMob[6], 1);
    TextDrawSetProportional(EditMob[6], 1);
    TextDrawSetSelectable(EditMob[6], 1);

    EditMob[7] = TextDrawCreate(598.000000, 241.000000, "ld_beat:right");
    TextDrawFont(EditMob[7], 4);
    TextDrawLetterSize(EditMob[7], 0.600000, 2.000000);
    TextDrawTextSize(EditMob[7], 40.000000, 40.000000);
    TextDrawSetOutline(EditMob[7], 1);
    TextDrawSetShadow(EditMob[7], 0);
    TextDrawAlignment(EditMob[7], 1);
    TextDrawColor(EditMob[7], -1);
    TextDrawBackgroundColor(EditMob[7], 255);
    TextDrawBoxColor(EditMob[7], 50);
    TextDrawUseBox(EditMob[7], 1);
    TextDrawSetProportional(EditMob[7], 1);
    TextDrawSetSelectable(EditMob[7], 1);

    EditMob[8] = TextDrawCreate(598.000000, 287.000000, "ld_beat:right");
    TextDrawFont(EditMob[8], 4);
    TextDrawLetterSize(EditMob[8], 0.600000, 2.000000);
    TextDrawTextSize(EditMob[8], 40.000000, 40.000000);
    TextDrawSetOutline(EditMob[8], 1);
    TextDrawSetShadow(EditMob[8], 0);
    TextDrawAlignment(EditMob[8], 1);
    TextDrawColor(EditMob[8], -1);
    TextDrawBackgroundColor(EditMob[8], 255);
    TextDrawBoxColor(EditMob[8], 50);
    TextDrawUseBox(EditMob[8], 1);
    TextDrawSetProportional(EditMob[8], 1);
    TextDrawSetSelectable(EditMob[8], 1);

    EditMob[9] = TextDrawCreate(598.000000, 334.000000, "ld_beat:right");
    TextDrawFont(EditMob[9], 4);
    TextDrawLetterSize(EditMob[9], 0.600000, 2.000000);
    TextDrawTextSize(EditMob[9], 40.000000, 40.000000);
    TextDrawSetOutline(EditMob[9], 1);
    TextDrawSetShadow(EditMob[9], 0);
    TextDrawAlignment(EditMob[9], 1);
    TextDrawColor(EditMob[9], -1);
    TextDrawBackgroundColor(EditMob[9], 255);
    TextDrawBoxColor(EditMob[9], 50);
    TextDrawUseBox(EditMob[9], 1);
    TextDrawSetProportional(EditMob[9], 1);
    TextDrawSetSelectable(EditMob[9], 1);

    EditMob[10] = TextDrawCreate(565.000000, 158.000000, "Fechar_Editor");
    TextDrawFont(EditMob[10], 2);
    TextDrawLetterSize(EditMob[10], 0.191666, 1.149999);
    TextDrawTextSize(EditMob[10], 400.000000, 17.000000);
    TextDrawSetOutline(EditMob[10], 0);
    TextDrawSetShadow(EditMob[10], 0);
    TextDrawAlignment(EditMob[10], 2);
    TextDrawColor(EditMob[10], -1);
    TextDrawBackgroundColor(EditMob[10], 255);
    TextDrawBoxColor(EditMob[10], 50);
    TextDrawUseBox(EditMob[10], 0);
    TextDrawSetProportional(EditMob[10], 1);
    TextDrawSetSelectable(EditMob[10], 0);

    EditMob[11] = TextDrawCreate(549.000000, 248.000000, "X+");
    TextDrawFont(EditMob[11], 2);
    TextDrawLetterSize(EditMob[11], 0.391665, 2.249999);
    TextDrawTextSize(EditMob[11], 400.000000, 17.000000);
    TextDrawSetOutline(EditMob[11], 0);
    TextDrawSetShadow(EditMob[11], 0);
    TextDrawAlignment(EditMob[11], 2);
    TextDrawColor(EditMob[11], -1061109505);
    TextDrawBackgroundColor(EditMob[11], 255);
    TextDrawBoxColor(EditMob[11], 50);
    TextDrawUseBox(EditMob[11], 0);
    TextDrawSetProportional(EditMob[11], 1);
    TextDrawSetSelectable(EditMob[11], 0);

    EditMob[12] = TextDrawCreate(549.000000, 294.000000, "Y+");
    TextDrawFont(EditMob[12], 2);
    TextDrawLetterSize(EditMob[12], 0.391665, 2.249999);
    TextDrawTextSize(EditMob[12], 400.000000, 17.000000);
    TextDrawSetOutline(EditMob[12], 0);
    TextDrawSetShadow(EditMob[12], 0);
    TextDrawAlignment(EditMob[12], 2);
    TextDrawColor(EditMob[12], -1061109505);
    TextDrawBackgroundColor(EditMob[12], 255);
    TextDrawBoxColor(EditMob[12], 50);
    TextDrawUseBox(EditMob[12], 0);
    TextDrawSetProportional(EditMob[12], 1);
    TextDrawSetSelectable(EditMob[12], 0);

    EditMob[13] = TextDrawCreate(549.000000, 341.000000, "Z+");
    TextDrawFont(EditMob[13], 2);
    TextDrawLetterSize(EditMob[13], 0.391665, 2.249999);
    TextDrawTextSize(EditMob[13], 400.000000, 17.000000);
    TextDrawSetOutline(EditMob[13], 0);
    TextDrawSetShadow(EditMob[13], 0);
    TextDrawAlignment(EditMob[13], 2);
    TextDrawColor(EditMob[13], -1061109505);
    TextDrawBackgroundColor(EditMob[13], 255);
    TextDrawBoxColor(EditMob[13], 50);
    TextDrawUseBox(EditMob[13], 0);
    TextDrawSetProportional(EditMob[13], 1);
    TextDrawSetSelectable(EditMob[13], 0);

    EditMob[14] = TextDrawCreate(587.000000, 248.000000, "X-");
    TextDrawFont(EditMob[14], 2);
    TextDrawLetterSize(EditMob[14], 0.391665, 2.249999);
    TextDrawTextSize(EditMob[14], 400.000000, 17.000000);
    TextDrawSetOutline(EditMob[14], 0);
    TextDrawSetShadow(EditMob[14], 0);
    TextDrawAlignment(EditMob[14], 2);
    TextDrawColor(EditMob[14], -1061109505);
    TextDrawBackgroundColor(EditMob[14], 255);
    TextDrawBoxColor(EditMob[14], 50);
    TextDrawUseBox(EditMob[14], 0);
    TextDrawSetProportional(EditMob[14], 1);
    TextDrawSetSelectable(EditMob[14], 0);

    EditMob[15] = TextDrawCreate(587.000000, 294.000000, "Y-");
    TextDrawFont(EditMob[15], 2);
    TextDrawLetterSize(EditMob[15], 0.391665, 2.249999);
    TextDrawTextSize(EditMob[15], 400.000000, 17.000000);
    TextDrawSetOutline(EditMob[15], 0);
    TextDrawSetShadow(EditMob[15], 0);
    TextDrawAlignment(EditMob[15], 2);
    TextDrawColor(EditMob[15], -1061109505);
    TextDrawBackgroundColor(EditMob[15], 255);
    TextDrawBoxColor(EditMob[15], 50);
    TextDrawUseBox(EditMob[15], 0);
    TextDrawSetProportional(EditMob[15], 1);
    TextDrawSetSelectable(EditMob[15], 0);

    EditMob[16] = TextDrawCreate(587.000000, 341.000000, "Z-");
    TextDrawFont(EditMob[16], 2);
    TextDrawLetterSize(EditMob[16], 0.391665, 2.249999);
    TextDrawTextSize(EditMob[16], 400.000000, 17.000000);
    TextDrawSetOutline(EditMob[16], 0);
    TextDrawSetShadow(EditMob[16], 0);
    TextDrawAlignment(EditMob[16], 2);
    TextDrawColor(EditMob[16], -1061109505);
    TextDrawBackgroundColor(EditMob[16], 255);
    TextDrawBoxColor(EditMob[16], 50);
    TextDrawUseBox(EditMob[16], 0);
    TextDrawSetProportional(EditMob[16], 1);
    TextDrawSetSelectable(EditMob[16], 0);
    return 1;
}
public OnGameModeInit()
{
	MapAndreas_Init(MAP_ANDREAS_MODE_FULL);
    g_DS_LogBox = DCC_FindChannelById("1115025873859526766"); // Discord logs caixa
    //g_DS_LogsAll = DCC_FindChannelById("1115027015947538453"); //todos
    ChannelCLogs = DCC_FindChannelById("1115027166913106030");//Logs clan
	if((IpsDB = db_open("ips.db")) == DB:0) {
	    print("Falha ao abrir o banco de dados ''ips.db'' !");
	}
	else {
	    db_query(IpsDB, "CREATE TABLE IF NOT EXISTS ips ('id' INTEGER PRIMARY KEY AUTOINCREMENT,\
        'nome' VARCHAR(24),\
        'ip' VARCHAR(22))");
	    print("[SQL] ''ips.db'' carregado com sucesso.");
	}

    ServerReiniciando = false;
    format(TipoReiniciamento, 11, "N/A");
    format(QuemReiniciou, MAX_PLAYER_NAME, "N/A");

    //RESET CLAN VARIABLE
    format(ClanInfo[0][NomeC], MAX_CLAN_NAME, "Sem Clan");
    format(ClanInfo[0][CorC], MAX_CLAN_COR, "FFFFFF");

    Channels_Init();
    CreateTablesSql();
    MapAndreas_Init(MAP_ANDREAS_MODE_FULL);
    SpawnarZumbis();

    CreateNumberPag();

    ShowNameTags(true);
	ManualVehicleEngineAndLights();
    CarregarAdmins();
    LoadTextDrawGlob();
    LoadMapas();

    LoadItensAeroBox();

	EventoCriado = false;EventoAberto = false;EventoRolando = false;//eventoType = INVALID_ID_EVENTO;
    //skinscomprar = LoadModelSelectionMenu("skinscomprar.ini");
	Votos_Yes = 0; Votos_Not = 0; EnqueteAberta = false;
	segundosrespawnL = 0;MinutosrespawnL = 30;horarespawnL = 1;
    /*======WEAPON - CONFIG ======
    SetVehiclePassengerDamage(true);
    SetDisableSyncBugs(true);
    ============================*/
    GatePrivateOpen[PORTAO_SALA_AREA51] = false;
    GatePrivateOpen[PORTAO_AREA_AEROPORTO] = false;
	segundosdrop = 0;
	//==============================================================================================//
    //load clans
    for(new c=1; c < MAX_CLANS; c++){
        LoadClan(c);
    }
	for(new i = 1; i < MAX_CRAFTS; i ++)
	{
        MesaSendoUsada[i] = false;
    	LoadCraft(i);
	}
	for(new i = 0; i < MAX_CAIXA; i ++)
	{
		CarregarCaixa(i);
	}
	for(new i = 0; i < MAX_ARVORES; i ++)
	{
		CarregarArvore(i);
	}
	for(new i = 0; i < MAX_PEDRAS; i ++)
	{
		CarregarPedra(i);
	}
	/*for(new i = 0; i < MAX_PORTA; i ++)
	{
		CarregarPorta(i);
	}*/
    for(new i = 0; i < MAX_TRITU; i ++)
	{
    	CarregarTritu(i);
	}
	for(new f; f < MAX_ARMAS; f++)
	{
        ArmaInfo[f][ArmaX] = 0.0;
	    ArmaInfo[f][ArmaY] = 0.0;
	    ArmaInfo[f][ArmaZ] = 0.0;
	    ArmaInfo[f][ArmaExiste] = false;
	}
    //SISTEMA DE CRIAR CARRO
	for(new i = 0; i < sizeof(CarrosCriados); i++)
	{
	    CarrosCriados[i] = 0;
	}
	for(new a; a < 100; a++)
	{
        new file[64];
  	    format(file, sizeof(file), "Data/Veados/%d.ini", a);
  	    if(DOF2_FileExists(file))
  	    {
            InfoVeado[a][VeadoX] = DOF2_GetFloat(file, "VeadoX");
		    InfoVeado[a][VeadoY] = DOF2_GetFloat(file, "VeadoY");
		    InfoVeado[a][VeadoZ] = DOF2_GetFloat(file, "VeadoZ");
		    InfoVeado[a][RX] = DOF2_GetFloat(file, "RX");
		    InfoVeado[a][RY] = DOF2_GetFloat(file, "RY");
		    InfoVeado[a][RZ] = DOF2_GetFloat(file, "RZ");
			InfoVeado[a][VeadoID] = CreateDynamicObject (19315, InfoVeado[a][VeadoX], InfoVeado[a][VeadoY], InfoVeado[a][VeadoZ], InfoVeado[a][RX], InfoVeado[a][RY], InfoVeado[a][RZ]);
		    InfoVeado[a][StatusVeado] = 0;
		    InfoVeado[a][VeadoExiste] = 1;
		    new str[34];
		    format(str, sizeof(str), "Veado: %d\nStatus: Vivo", a);
		    InfoVeado[a][TextVeado] = CreateDynamic3DTextLabel(str, AMARELO, InfoVeado[a][VeadoX], InfoVeado[a][VeadoY], InfoVeado[a][VeadoZ], 2.0);
  	    }
	}
	CarroCriado = 0;
	ManualVehicleEngineAndLights();
    SendRconCommand(MODENAME), SendRconCommand(HOSTNAME), SendRconCommand(LANGUAGE), SendRconCommand(RCON), SendRconCommand(WEBURL);
	DisableInteriorEnterExits(), EnableStuntBonusForAll(false), ShowPlayerMarkers( PLAYER_MARKERS_MODE_OFF ), LimitPlayerMarkerRadius ( 30.0 );
    EnableVehicleFriendlyFire();

	SetNameTagDrawDistance(40.0);
    SpawnLoots();
	CarregarMapa();

	SetWorldTime(6);
	tempoatual = 1;
    TemperaturaAtual = 24;

    //temeperaturamundo = rand;
    SetTimer("AtualizarGasolina", 60000, true);
	SetTimer("SecundsCheck", 1000, true);
    SetTimer("AtualizarFS", 120000, true);
	SetTimer("AllCheater", 300, true);

	//mina
	/*objtextid[0] = CreateObject(19076, 2370.079345, -640.709594, 125.621253, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(objtextid[0], 3, 19480, "signsurf", "sign", 0x00000000);
	SetObjectMaterial(objtextid[0], 4, 19480, "signsurf", "sign", 0x00000000);
	SetObjectMaterial(objtextid[0], 5, 19480, "signsurf", "sign", 0x00000000);
	SetObjectMaterial(objtextid[0], 6, 19480, "signsurf", "sign", 0x00000000);
	SetObjectMaterial(objtextid[0], 7, 19480, "signsurf", "sign", 0x00000000);
	SetObjectMaterial(objtextid[0], 8, 19480, "signsurf", "sign", 0x00000000);

	objtextid[1] = CreateObject(3499, 2357.437744, -646.162902, 124.751556, 8.699995, 0.000000, 0.000000);
	SetObjectMaterial(objtextid[1], 0, 726, "gtatreesh", "oakbark64", 0x00000000);
	SetObjectMaterial(objtextid[1], 1, 726, "gtatreesh", "oakbark64", 0x00000000);

	objtextid[2] = CreateObject(3499, 2357.437744, -650.898864, 124.691574, -5.899999, 0.000000, 0.000000);
	SetObjectMaterial(objtextid[2], 0, 726, "gtatreesh", "oakbark64", 0x00000000);
	SetObjectMaterial(objtextid[2], 1, 726, "gtatreesh", "oakbark64", 0x00000000);

	objtextid[3] = CreateObject(19076, 2379.449218, -658.749511, 125.261245, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(objtextid[3], 3, 19480, "signsurf", "sign", 0x00000000);
	SetObjectMaterial(objtextid[3], 4, 19480, "signsurf", "sign", 0x00000000);
	SetObjectMaterial(objtextid[3], 5, 19480, "signsurf", "sign", 0x00000000);
	SetObjectMaterial(objtextid[3], 6, 19480, "signsurf", "sign", 0x00000000);
	SetObjectMaterial(objtextid[3], 7, 19480, "signsurf", "sign", 0x00000000);
	SetObjectMaterial(objtextid[3], 8, 19480, "signsurf", "sign", 0x00000000);*/

    //Area 51 - Area Restrita
    MapArea51[0] = CreateDynamicObject(3055, 268.8832, 1875.0258, 7.7869, 0.0000, 0.0000, 0.0000); //kmb_shutter
    MapArea51[1] = CreateDynamicObject(19273, 283.9862, 1867.0286, 9.3500, 0.1000, 0.0000, 179.3997); //KeypadNonDynamic
    MapArea51[2] = CreateDynamicObject(17951, 283.3451, 1869.4532, 9.5527, 0.0000, 0.0000, 0.0000); //cjgaragedoor

	//MAPA DO FARINHAAAAAAAAAA
	CreateDynamicObject(19588, 2814.38623, -2438.36353, 11.95437,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2824.36426, -2438.45605, 11.00672,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2825.74585, -2431.98755, 11.01885,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2825.74585, -2431.98755, 11.01885,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2823.41357, -2423.86426, 10.99440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2825.99121, -2417.95776, 10.99271,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2824.88135, -2416.00513, 10.99247,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2822.75586, -2415.30835, 10.99249,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2825.16772, -2410.74487, 10.98951,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2825.24487, -2403.82471, 10.98151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2671, 2825.32617, -2435.71118, 11.01811,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(12943, 2833.73999, -2416.57837, 10.93638,   0.00000, 0.00000, -90.12001);
	CreateDynamicObject(16782, 2833.83887, -2409.07910, 14.08933,   0.00000, 0.00000, -92.10001);
	CreateDynamicObject(3396, 2834.76465, -2409.68872, 10.90240,   0.00000, 0.00000, 83.76002);
	CreateDynamicObject(3395, 2830.69946, -2410.62573, 10.90279,   0.00000, 0.00000, -179.03995);
	CreateDynamicObject(3387, 2837.34570, -2412.42822, 11.00024,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3387, 2837.34351, -2413.42432, 11.00024,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3383, 2830.93970, -2415.91650, 10.92666,   0.00000, 0.00000, -89.70000);
	CreateDynamicObject(2907, 2831.00635, -2415.91553, 11.97958,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16656, 2840.09595, -2435.67920, 14.12940,   0.00000, 0.00000, -0.46000);
	CreateDynamicObject(3571, 2826.54858, -2426.05298, 12.25660,   0.00000, 0.00000, -89.94000);
	CreateDynamicObject(3571, 2826.54102, -2434.13062, 12.33730,   0.00000, 0.00000, -89.94000);
	CreateDynamicObject(3571, 2826.52881, -2417.99634, 12.25663,   0.00000, 0.00000, -89.93996);
	CreateDynamicObject(3571, 2829.46729, -2442.29565, 12.17730,   0.00000, 0.00000, -180.24001);
	CreateDynamicObject(3571, 2829.37817, -2442.38818, 14.83880,   0.00000, 0.00000, -180.24001);
	CreateDynamicObject(3571, 2826.81592, -2439.41479, 17.44271,   0.00000, 0.00000, -89.93996);
	CreateDynamicObject(3571, 2827.81982, -2442.19458, 15.74280,   -141.78011, -0.66000, -89.94000);
	CreateDynamicObject(3571, 2826.90137, -2439.27783, 17.44271,   -90.30002, 0.06000, -89.93996);
	CreateDynamicObject(3571, 2829.33545, -2444.75659, 12.17731,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2829.32495, -2447.38428, 12.15731,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2829.33276, -2449.97070, 12.17731,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2829.33545, -2444.75659, 12.17731,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2829.33545, -2444.75659, 14.68592,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2829.34644, -2447.36597, 14.83686,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2829.33276, -2449.97070, 17.51550,   0.00000, 0.00000, -180.24001);
	CreateDynamicObject(3571, 2835.11108, -2442.32056, 12.17730,   0.00000, 0.00000, -180.24001);
	CreateDynamicObject(3571, 2835.13110, -2442.42065, 14.80830,   0.00000, 0.00000, -180.24001);
	CreateDynamicObject(3571, 2835.12524, -2444.77222, 12.17731,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2835.13232, -2447.31372, 12.17731,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2835.12524, -2444.77222, 14.84496,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2835.13232, -2447.31372, 14.86323,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2839.56299, -2444.97827, 12.17730,   0.00000, 0.00000, -180.24001);
	CreateDynamicObject(3571, 2839.56299, -2444.77832, 14.84740,   0.00000, 0.00000, -180.24001);
	CreateDynamicObject(3571, 2839.57935, -2447.42969, 12.17731,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2839.57935, -2447.42969, 14.85945,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2846.63379, -2445.14478, 12.47730,   0.00000, 0.00000, -181.20000);
	CreateDynamicObject(3571, 2850.80225, -2445.23242, 12.17731,   0.00000, 0.00000, -181.19998);
	CreateDynamicObject(3571, 2852.28687, -2439.93140, 12.17731,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2853.59644, -2439.93164, 12.17731,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2852.34790, -2431.85107, 14.83567,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2853.68042, -2431.85205, 12.17731,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2852.30664, -2429.91235, 12.17731,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2853.64917, -2429.87451, 12.17731,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2850.67236, -2425.33691, 12.17730,   0.00000, 0.00000, -359.52011);
	CreateDynamicObject(3571, 2843.04004, -2425.39941, 12.23730,   0.00000, 0.00000, -359.52011);
	CreateDynamicObject(3571, 2843.03638, -2423.98022, 12.17731,   0.00000, 0.00000, -359.52005);
	CreateDynamicObject(3571, 2843.04004, -2425.73950, 14.88550,   0.00000, 0.00000, -359.52011);
	CreateDynamicObject(3571, 2843.03638, -2423.98022, 14.87161,   0.00000, 0.00000, -359.52005);
	CreateDynamicObject(3571, 2851.14282, -2423.75903, 12.17731,   0.00000, 0.00000, -359.52005);
	CreateDynamicObject(3571, 2851.14282, -2423.75903, 14.86666,   0.00000, 0.00000, -359.52005);
	CreateDynamicObject(3571, 2850.67236, -2425.63672, 14.86200,   0.00000, 0.00000, -359.52011);
	CreateDynamicObject(3571, 2852.30664, -2429.91235, 14.80282,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2853.64917, -2429.87451, 14.80282,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2852.28687, -2439.93140, 14.85551,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2853.68042, -2431.85205, 14.81583,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2853.59644, -2439.93164, 14.83568,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2846.63379, -2444.88452, 14.84240,   0.00000, 0.00000, -181.20000);
	CreateDynamicObject(3571, 2850.80225, -2445.23242, 14.78641,   0.00000, 0.00000, -181.19998);
	CreateDynamicObject(3571, 2849.61353, -2450.48779, 12.20152,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2849.66992, -2450.50635, 14.87191,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2847.00146, -2455.81812, 14.85945,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2847.09961, -2456.97363, 14.92671,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2847.09961, -2456.97363, 17.62202,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2851.34180, -2457.00317, 12.32016,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2851.34204, -2457.00293, 14.81695,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2851.40063, -2457.06982, 17.50025,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2839.14429, -2456.93652, 17.62202,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2831.46851, -2456.93408, 17.62202,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(5157, 2838.23950, -2532.40796, 16.47895,   0.00000, 0.00000, -88.74001);
	CreateDynamicObject(3571, 2829.33276, -2449.97070, 14.86140,   0.00000, 0.00000, -180.24001);
	CreateDynamicObject(3571, 2829.34644, -2447.36597, 14.83686,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2829.34644, -2447.36597, 17.27634,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2829.33545, -2444.75659, 17.33726,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(8674, 2820.94092, -2444.96948, 12.34737,   0.02000, 0.00000, -90.23998);
	CreateDynamicObject(8674, 2820.90210, -2449.24561, 12.34737,   0.02000, 0.00000, -90.23998);
	CreateDynamicObject(8674, 2820.90747, -2431.83545, 12.34737,   0.02000, 0.00000, -90.23998);
	CreateDynamicObject(3571, 2826.54785, -2409.95947, 12.25663,   0.00000, 0.00000, -90.17995);
	CreateDynamicObject(3571, 2841.91846, -2423.50024, 12.17731,   0.00000, 0.00000, -359.52005);
	CreateDynamicObject(3571, 2841.96973, -2423.37500, 14.87161,   0.00000, 0.00000, -359.52005);
	CreateDynamicObject(3571, 2852.30664, -2429.91235, 16.27025,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2850.67236, -2425.31689, 16.23932,   0.00000, 0.00000, -359.52005);
	CreateDynamicObject(3571, 2843.04004, -2425.39941, 16.23585,   0.00000, 0.00000, -359.52005);
	CreateDynamicObject(3571, 2852.34790, -2431.85107, 16.26707,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2852.28687, -2439.93140, 16.26945,   0.00000, 0.00000, -270.48001);
	CreateDynamicObject(3571, 2850.80225, -2445.23242, 16.25254,   0.00000, 0.00000, -181.19998);
	CreateDynamicObject(3571, 2846.63379, -2445.16455, 16.24570,   0.00000, 0.00000, -181.19998);
	CreateDynamicObject(3571, 2839.56299, -2445.03833, 16.24432,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(3571, 2835.31104, -2442.14063, 16.13766,   0.00000, 0.00000, -180.23997);
	CreateDynamicObject(16501, 2848.86084, -2430.10986, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2844.56909, -2430.13721, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2841.28955, -2430.20630, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(5156, 2837.90063, -2423.46899, 10.96209,   0.00000, 0.00000, -89.93999);
	CreateDynamicObject(16501, 2837.64185, -2430.22192, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2833.35132, -2430.28027, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2830.88403, -2430.32031, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2848.92188, -2437.01904, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2848.92822, -2440.41992, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2844.60400, -2437.11816, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2844.59839, -2440.42993, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2841.29785, -2437.29370, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2841.08545, -2440.22632, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2837.66040, -2437.20972, 17.41269,   -180.19981, 90.89993, -1.08000);
	CreateDynamicObject(16501, 2837.64233, -2440.19946, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2833.34912, -2437.26685, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2830.72119, -2431.04956, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(16501, 2830.63208, -2437.98804, 17.41269,   -180.19981, 90.89993, 0.06000);
	CreateDynamicObject(1689, 2826.56714, -2437.70166, 19.80698,   0.00000, 0.00000, 90.71993);
	CreateDynamicObject(3267, 2826.32861, -2431.63525, 17.99397,   0.00000, 0.00000, 39.11999);
	CreateDynamicObject(3267, 2826.09839, -2445.70972, 17.99397,   0.00000, 0.00000, 102.83998);
	CreateDynamicObject(1697, 2832.68896, -2437.81787, 18.73111,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1697, 2845.96924, -2437.71826, 18.73111,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1697, 2845.85010, -2430.67163, 18.73111,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1697, 2832.76001, -2430.72095, 18.73111,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3620, 2817.09888, -2393.01587, 25.63858,   0.00000, 0.00000, 88.86002);
	CreateDynamicObject(16662, 2845.64917, -2425.27075, 12.30920,   0.00000, 0.04000, -27.60000);
	CreateDynamicObject(3384, 2838.30396, -2425.32959, 12.06570,   0.00000, 0.00000, -270.06000);
	CreateDynamicObject(3384, 2840.17188, -2427.67627, 12.14570,   0.00000, 0.00000, -219.60001);
	CreateDynamicObject(3388, 2849.65259, -2427.55103, 11.12390,   0.00000, 0.00000, 47.16000);
	CreateDynamicObject(3389, 2844.98145, -2427.49243, 11.12480,   0.00000, 0.00000, 84.96000);
	CreateDynamicObject(3387, 2832.12329, -2424.92480, 10.94020,   0.00000, 0.00000, -272.82001);
	CreateDynamicObject(3389, 2835.27271, -2424.94971, 10.94480,   0.00000, 0.00000, 92.58000);
	CreateDynamicObject(3395, 2829.70386, -2436.78516, 11.12352,   0.00000, 0.00000, -90.23997);
	CreateDynamicObject(939, 2836.12231, -2436.19287, 11.82410,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1685, 2832.62231, -2436.46045, 11.88350,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19893, 2832.02319, -2435.75366, 12.62843,   0.00000, 0.00000, -205.92003);
	CreateDynamicObject(2061, 2832.83765, -2436.37500, 12.93190,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2040, 2832.39111, -2436.81641, 12.73150,   0.00000, 0.00000, 84.24000);
	CreateDynamicObject(3015, 2828.11206, -2425.68066, 11.24590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3015, 2828.53198, -2425.68066, 11.24590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3015, 2828.95190, -2425.68066, 11.24590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3015, 2829.39209, -2425.68066, 11.24590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3797, 2831.72266, -2393.61279, 29.68520,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1636, 2829.00244, -2425.79028, 11.94490,   0.00000, 0.00000, -90.36000);
	CreateDynamicObject(19526, 2828.66431, -2430.70557, 11.12490,   0.00000, 0.00000, 89.94000);
	CreateDynamicObject(3386, 2828.49756, -2429.72437, 11.12600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3796, 2848.69775, -2441.26904, 11.12560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(964, 2849.72534, -2442.18335, 11.22418,   0.00000, 0.00000, -181.98003);
	CreateDynamicObject(964, 2848.42456, -2442.13281, 11.22418,   0.00000, 0.00000, -181.98003);
	CreateDynamicObject(964, 2849.74585, -2440.86401, 11.22418,   0.00000, 0.00000, -91.08000);
	CreateDynamicObject(964, 2848.45776, -2440.67700, 11.22418,   0.00000, 0.00000, -91.08000);
	CreateDynamicObject(3015, 2847.45874, -2442.63135, 11.34550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3015, 2847.47729, -2442.01538, 11.34550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3015, 2847.44482, -2441.34888, 11.34550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3015, 2847.47412, -2440.69312, 11.34550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3015, 2848.23413, -2440.69312, 12.28550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1271, 2828.51929, -2426.43335, 11.48650,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1271, 2828.51636, -2427.11133, 11.48650,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(370, 2828.77173, -2426.63208, 12.10350,   0.00000, 0.00000, -143.88000);
	CreateDynamicObject(1654, 2828.59570, -2427.35181, 12.04340,   0.00000, 0.00000, 120.36000);
	CreateDynamicObject(346, 2837.65454, -2441.02783, 12.95650,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(347, 2837.60693, -2441.02832, 12.42310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(348, 2837.60767, -2441.04395, 11.72510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(349, 2835.40137, -2440.95923, 12.97650,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(351, 2835.16235, -2440.93921, 12.31590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(350, 2835.14697, -2440.98999, 11.69440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(352, 2833.80127, -2440.98828, 12.66000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(353, 2833.80420, -2440.95117, 11.81680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(355, 2832.01538, -2440.92554, 12.56860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(356, 2831.95435, -2440.93823, 11.97070,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(357, 2829.78320, -2440.97192, 12.57570,   0.00000, 0.00000, 3.42000);
	CreateDynamicObject(358, 2829.81763, -2441.00464, 11.97580,   0.00000, 0.00000, 4.92000);
	CreateDynamicObject(359, 2827.56543, -2440.96265, 12.61820,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(362, 2826.49219, -2441.00269, 11.42370,   0.00000, 0.00000, 4.20000);
	CreateDynamicObject(3383, 2836.86133, -2416.92578, 10.92670,   0.00000, 0.00000, -270.23999);
	CreateDynamicObject(3383, 2836.68115, -2421.72583, 10.92670,   0.00000, 0.00000, -269.04001);
	CreateDynamicObject(355, 2836.58105, -2421.91211, 11.99860,   83.57990, -14.34000, 97.62000);
	CreateDynamicObject(19893, 2836.52734, -2417.01465, 11.97950,   0.00000, 0.00000, -73.32000);
	CreateDynamicObject(964, 2840.74902, -2442.75610, 11.12460,   0.00000, 0.00000, -182.00000);
	CreateDynamicObject(964, 2842.22900, -2442.75610, 11.12460,   0.00000, 0.00000, -182.00000);
	CreateDynamicObject(19909, 2840.72266, -2393.49976, 10.99064,   0.00000, 0.00000, -0.54000);
	CreateDynamicObject(3571, 2844.01221, -2410.17212, 12.17730,   0.00000, 0.00000, -359.52011);
	CreateDynamicObject(3571, 2851.31226, -2410.17212, 12.17730,   0.00000, 0.00000, -359.52011);
	CreateDynamicObject(3571, 2851.31226, -2410.17212, 14.83730,   0.00000, 0.00000, -359.52011);
	CreateDynamicObject(3571, 2844.02881, -2410.18335, 14.83730,   0.00000, 0.00000, -359.52011);
	CreateDynamicObject(19526, 2835.38721, -2395.10400, 10.99410,   0.00000, 0.00000, 89.60000);
	CreateDynamicObject(3396, 2835.64966, -2397.59937, 10.99560,   0.00000, 0.00000, -180.60001);
	CreateDynamicObject(3388, 2839.86426, -2398.85425, 10.99480,   0.00000, 0.00000, -92.00000);
	CreateDynamicObject(3388, 2838.86426, -2398.85425, 10.99480,   0.00000, 0.00000, -182.71996);
	CreateDynamicObject(3388, 2837.84424, -2398.79419, 10.99480,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(16782, 2846.60278, -2393.53662, 13.31660,   0.00000, 0.00000, -180.30000);
	CreateDynamicObject(2977, 2845.76855, -2388.36230, 10.99720,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3388, 2846.30420, -2398.79419, 10.99480,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(3384, 2845.18555, -2398.44995, 12.05400,   0.00000, 0.00000, -89.34000);
	CreateDynamicObject(3386, 2844.21484, -2398.75781, 10.99390,   0.00000, 0.00000, -90.84000);
	CreateDynamicObject(2977, 2845.78857, -2389.38232, 10.99720,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2977, 2843.04858, -2398.18237, 10.99720,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1271, 2843.05493, -2398.10547, 12.51680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11730, 2835.17334, -2391.98169, 10.99660,   0.00000, 0.00000, 88.80000);
	CreateDynamicObject(11729, 2835.19165, -2391.34448, 10.99850,   0.00000, 0.00000, 88.14000);
	CreateDynamicObject(11729, 2835.21167, -2390.68457, 10.99850,   0.00000, 0.00000, 88.14000);
	CreateDynamicObject(11730, 2835.25342, -2390.02173, 10.99660,   0.00000, 0.00000, 88.80000);
	CreateDynamicObject(1685, 2835.81812, -2388.16431, 11.65840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1685, 2835.81812, -2388.16431, 13.15840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3796, 2840.88184, -2393.10376, 10.99803,   0.00000, 0.00000, -84.95999);
	CreateDynamicObject(345, 2830.40845, -2393.63184, 29.39990,   -9.18000, -252.72000, 87.30000);
	CreateDynamicObject(18013, 2834.23071, -2374.22803, 18.34520,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(18013, 2839.39648, -2374.28369, 18.34520,   0.00000, 0.00000, -0.24000);
	CreateDynamicObject(939, 2834.50879, -2375.42358, 13.37250,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3796, 2841.56738, -2376.37646, 10.99120,   0.00000, 0.00000, 90.36000);
	CreateDynamicObject(3267, 2841.58813, -2376.60376, 9.70260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(974, 2824.56567, -2451.30859, 10.99436,   0.00000, 0.00000, 0.66000);
	CreateDynamicObject(639, 2825.30298, -2409.01123, 14.24070,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3571, 2826.54785, -2409.95947, 14.93660,   0.00000, 0.00000, -90.17990);
	CreateDynamicObject(3571, 2826.55444, -2417.98438, 14.91660,   0.00000, 0.00000, -89.94000);
	CreateDynamicObject(3571, 2826.54858, -2426.05298, 14.93660,   0.00000, 0.00000, -89.94000);
	CreateDynamicObject(3571, 2826.54077, -2434.14111, 14.99730,   0.00000, 0.00000, -89.94000);
	CreateDynamicObject(639, 2825.21069, -2418.54370, 14.24070,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(639, 2825.26538, -2430.11206, 14.24070,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3571, 2826.54785, -2409.95947, 17.61660,   0.00000, 0.00000, -90.17990);
	CreateDynamicObject(3571, 2826.55444, -2417.98438, 17.59660,   0.00000, 0.00000, -89.94000);
	CreateDynamicObject(3571, 2826.54858, -2426.05298, 17.59660,   0.00000, 0.00000, -89.94000);
	CreateDynamicObject(3571, 2826.54077, -2434.14111, 17.63730,   0.00000, 0.00000, -89.94000);
	CreateDynamicObject(974, 2824.56567, -2451.30859, 16.51440,   0.00000, 0.00000, 0.66000);
	CreateDynamicObject(974, 2851.95313, -2408.44312, 17.51440,   -20.00000, 0.00000, 0.66000);
	CreateDynamicObject(974, 2844.52417, -2408.51880, 17.51440,   -20.00000, 0.00000, 0.66000);
	CreateDynamicObject(974, 2827.73608, -2411.28540, 12.75440,   0.00000, 0.00000, 55.62000);
	CreateDynamicObject(974, 2828.34790, -2419.53076, 12.75440,   0.00000, 0.00000, 113.76003);
	CreateDynamicObject(874, 2804.42871, -2435.48828, 12.62885,   0.00000, 0.00000, -17.70000);
	CreateDynamicObject(874, 2785.31421, -2436.50244, 12.62885,   0.00000, 0.00000, 51.35999);
	CreateDynamicObject(874, 2760.34741, -2419.30786, 12.62885,   0.00000, 0.00000, -35.94000);
	CreateDynamicObject(874, 2760.93652, -2456.13623, 12.62885,   0.00000, 0.00000, -54.06000);
	CreateDynamicObject(874, 2762.02783, -2482.65674, 12.62885,   0.00000, 0.00000, -112.49998);
	CreateDynamicObject(874, 2785.77563, -2476.32739, 12.62885,   0.00000, 0.00000, -118.25999);
	CreateDynamicObject(874, 2828.61230, -2394.47729, 10.99088,   0.00000, 0.00000, -15.42000);
	CreateDynamicObject(819, 2832.52197, -2410.87622, 17.48290,   0.00000, 0.00000, -138.66000);
	CreateDynamicObject(1697, 2843.62817, -2390.50342, 17.49110,   0.00000, 0.00000, 30.66000);
	CreateDynamicObject(728, 2823.54004, -2445.39478, 10.99596,   0.00000, 0.00000, -102.06001);
	CreateDynamicObject(1449, 2825.05640, -2422.95117, 11.51880,   0.00000, 0.00000, -87.42000);
	CreateDynamicObject(974, 2835.26074, -2424.43848, 17.34630,   80.00000, 0.00000, 0.00000);
	CreateDynamicObject(974, 2828.61475, -2424.45337, 17.34630,   80.00000, 0.00000, 0.00000);
	CreateDynamicObject(974, 2828.65210, -2425.13574, 13.73440,   0.00000, 0.00000, 181.08000);
	CreateDynamicObject(974, 2828.68848, -2425.07324, 14.57440,   0.00000, 0.00000, 181.08000);
	CreateDynamicObject(874, 2846.05566, -2415.22485, 11.00014,   0.00000, 0.00000, 38.52000);
	CreateDynamicObject(19944, 2840.02832, -2420.74707, 10.99790,   0.00000, 0.00000, 28.08000);
	CreateDynamicObject(19944, 2838.81250, -2420.92065, 10.99790,   0.00000, 0.00000, 6.06000);
	CreateDynamicObject(19944, 2841.79761, -2420.58667, 10.99790,   0.00000, 0.00000, -43.86001);
	CreateDynamicObject(974, 2844.17676, -2452.88745, 18.38680,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(974, 2844.17285, -2444.07788, 18.38680,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(974, 2824.52368, -2454.17358, 18.42680,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(1762, 2838.36011, -2367.87646, 29.99450,   0.00000, 0.00000, 32.64000);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/*CreateDynamicObject(897, 2352.507324, -658.537597, 124.601127, -88.899963, 0.000000, -72.999992);
	CreateDynamicObject(19429, 2357.654296, -650.570861, 130.260757, 0.000000, 69.100173, 92.699966);
	CreateDynamicObject(19429, 2356.052734, -650.645751, 130.260757, 0.000000, 69.100173, 92.699966);
	CreateDynamicObject(19429, 2357.521484, -647.626586, 130.509063, 0.000000, 106.800186, 92.699966);
	CreateDynamicObject(19429, 2357.505371, -647.324768, 130.229888, 0.000000, 106.800186, 92.699966);
	CreateDynamicObject(19429, 2357.651123, -650.503234, 130.083328, 0.000000, 69.100173, 92.699966);
	CreateDynamicObject(19429, 2356.050048, -650.578369, 130.083328, 0.000000, 69.100173, 92.699966);
	CreateDynamicObject(19429, 2355.914306, -647.399475, 130.229888, 0.000000, 106.800186, 92.699966);
	CreateDynamicObject(19429, 2355.932861, -647.778015, 130.532135, 0.000000, 106.800186, 92.699966);
	CreateDynamicObject(747, 2358.675781, -651.450744, 127.001846, 0.000000, 0.000000, 46.600021);
	CreateDynamicObject(747, 2358.094482, -645.134460, 127.001846, 0.000000, 0.000000, -132.599945);
	CreateDynamicObject(906, 2357.462158, -649.758300, 126.231803, -28.699850, 16.399980, 85.599868);
	CreateDynamicObject(906, 2354.494628, -648.820068, 124.619827, -11.799990, -12.500002, 0.000000);
	CreateDynamicObject(899, 2332.720458, -643.464782, 131.607162, -177.800109, -6.899999, -80.300132);
	CreateDynamicObject(899, 2334.810058, -655.600158, 131.881011, -177.800109, -6.899999, -92.200111);
	CreateDynamicObject(905, 2349.301025, -648.090759, 127.376693, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(906, 2349.854248, -649.310363, 122.278770, -11.799990, -12.500002, 0.000000);
	CreateDynamicObject(906, 2345.512939, -649.801513, 119.932319, -11.799990, -12.500002, 0.000000);
	CreateDynamicObject(897, 2354.976318, -655.788940, 125.424453, -88.899963, 0.000000, 103.100074);
	CreateDynamicObject(880, 2349.121093, -656.640991, 128.553497, 0.000000, 0.000000, 86.400077);
	CreateDynamicObject(906, 2347.892333, -651.747131, 128.136108, 151.499954, 5.599999, 0.000000);
	CreateDynamicObject(906, 2355.972412, -655.013244, 127.483825, 151.499954, 5.599999, 0.000000);
	CreateDynamicObject(901, 2348.552490, -643.443664, 129.808578, 0.000000, 0.000000, -1.200000);
	CreateDynamicObject(905, 2350.932861, -649.605712, 129.846649, 0.000000, 0.000000, -165.299987);
	CreateDynamicObject(905, 2352.105224, -651.178955, 129.516525, 0.000000, 0.000000, -165.299987);
	CreateDynamicObject(906, 2353.903564, -651.202819, 126.221076, -88.999855, 16.399980, 2.599903);
	CreateDynamicObject(906, 2346.786132, -648.912597, 128.725723, 151.499954, 5.599999, 0.000000);
	CreateDynamicObject(906, 2352.834960, -644.635681, 127.417861, 152.799987, 14.300003, 7.299979);
	CreateDynamicObject(906, 2351.422607, -647.561035, 129.760772, 152.799987, 14.300003, 33.199844);
	CreateDynamicObject(906, 2351.619384, -651.037902, 131.500961, -44.099853, 9.200003, 31.399835);
	CreateDynamicObject(906, 2356.363281, -652.961547, 129.686157, -44.099853, 9.200003, 175.299835);
	CreateDynamicObject(906, 2350.568359, -651.309753, 125.419914, -102.799766, 14.099980, 2.599903);
	CreateDynamicObject(906, 2347.607910, -651.791503, 122.980361, -103.699760, 9.999979, 2.599903);
	CreateDynamicObject(906, 2346.431640, -651.763183, 125.482078, -103.699760, 9.999979, 2.599903);
	CreateDynamicObject(906, 2344.645019, -652.094360, 121.650955, -99.699722, 8.899981, -1.400096);
	CreateDynamicObject(906, 2344.567626, -652.309265, 123.138732, -99.699722, 8.899981, -1.400096);
	CreateDynamicObject(906, 2353.666992, -646.327514, 125.725692, 83.300140, 16.399980, 4.799902);
	CreateDynamicObject(906, 2350.133056, -646.393188, 125.085937, 83.300140, 16.399980, -0.500096);
	CreateDynamicObject(906, 2347.760009, -646.678894, 122.259109, 83.300140, 16.399980, 4.699902);
	CreateDynamicObject(906, 2346.851318, -646.631347, 125.577583, 83.300140, 16.399980, 4.699902);
	CreateDynamicObject(906, 2345.022949, -646.969116, 124.371116, 83.300140, 16.399980, 4.699902);
	CreateDynamicObject(906, 2343.503906, -647.028381, 120.995529, 83.300140, 16.399980, -0.400097);
	CreateDynamicObject(905, 2348.615722, -647.590148, 121.936790, 0.000000, 0.000000, 94.600006);
	CreateDynamicObject(905, 2348.709228, -650.501708, 122.276817, 0.000000, 0.000000, 94.600006);
	CreateDynamicObject(905, 2351.801513, -647.192626, 124.066810, 0.000000, 0.000000, 94.600006);
	CreateDynamicObject(905, 2353.422851, -649.862182, 124.786819, 0.000000, 0.000000, 94.600006);
	CreateDynamicObject(905, 2353.441406, -647.352661, 124.416816, 0.000000, 0.000000, 94.600006);
	CreateDynamicObject(905, 2352.678466, -647.353393, 124.346824, 0.000000, 0.000000, 94.600006);
	CreateDynamicObject(906, 2344.925048, -649.205688, 127.108787, 178.300064, 25.800006, 0.000000);
	CreateDynamicObject(906, 2343.287841, -649.555541, 125.750854, 178.300064, 37.500003, 0.000000);
	CreateDynamicObject(905, 2346.651855, -647.562438, 127.006698, 0.000000, 0.000000, -87.400016);
	CreateDynamicObject(905, 2345.557861, -647.751953, 126.696708, 0.000000, 0.000000, -87.400016);
	CreateDynamicObject(905, 2345.077636, -647.783569, 126.056709, 0.000000, 0.000000, -87.400016);
	CreateDynamicObject(905, 2346.620605, -650.847229, 126.526702, 0.000000, 0.000000, -87.400016);
	CreateDynamicObject(4816, 2350.244873, -684.971618, 108.666328, 14.200006, -3.199999, -48.299991);
	CreateDynamicObject(906, 2343.049804, -646.897033, 123.882667, 86.400009, 19.699996, 0.000000);
	CreateDynamicObject(906, 2344.347412, -651.890380, 124.993339, -98.399940, 9.299998, 0.000000);
	CreateDynamicObject(901, 2345.187500, -637.627197, 123.478614, 0.000000, 0.000000, -117.099998);
	CreateDynamicObject(901, 2336.139648, -639.598571, 124.378089, 0.000000, -3.400000, 141.699981);
	CreateDynamicObject(901, 2326.727050, -644.961181, 122.025802, 0.000000, -3.400000, -89.799942);
	CreateDynamicObject(901, 2326.593750, -644.726379, 125.468902, 0.000000, 4.400000, 179.400054);
	CreateDynamicObject(901, 2328.678955, -662.085754, 119.180755, -10.599999, -12.900002, 82.599960);
	CreateDynamicObject(901, 2328.817138, -675.029602, 117.104873, -10.599999, -12.900002, 108.499923);
	CreateDynamicObject(901, 2332.520996, -686.401184, 117.619300, -10.599999, -12.900002, 108.499923);
	CreateDynamicObject(901, 2336.645263, -697.681396, 117.313804, -10.599999, -12.900002, 100.799957);
	CreateDynamicObject(901, 2340.115722, -710.055664, 115.505943, -10.599999, -6.199993, 92.999969);
	CreateDynamicObject(901, 2345.895751, -722.879577, 115.047126, -10.599999, -6.199993, 112.299987);
	CreateDynamicObject(901, 2351.927978, -737.623657, 114.250770, -10.599999, -6.199993, -95.899909);
	CreateDynamicObject(901, 2355.099853, -746.492248, 115.183113, -10.599999, -6.199993, 138.000106);
	CreateDynamicObject(901, 2359.496337, -753.053649, 114.345840, -10.599999, -6.199993, 141.700164);
	CreateDynamicObject(901, 2369.798583, -766.370178, 117.041290, -10.599999, 0.100005, 87.800140);
	CreateDynamicObject(693, 2346.395751, -684.695861, 140.022994, 0.000000, 0.000000, -148.648376);
	CreateDynamicObject(901, 2382.652587, -787.463562, 116.448326, -10.599999, 0.100005, 108.000129);
	CreateDynamicObject(901, 2397.614013, -784.449523, 118.766433, -11.400001, -32.399997, -2.399880);
	CreateDynamicObject(901, 2407.773681, -774.859252, 119.328865, -11.400001, -32.399997, -2.399880);
	CreateDynamicObject(901, 2410.138183, -767.181396, 114.431182, 26.599998, -32.399997, 108.900123);
	CreateDynamicObject(4816, 2363.172363, -685.080383, 109.496788, 2.200005, -3.199998, 142.200073);
	CreateDynamicObject(901, 2381.358642, -786.772338, 121.244476, -1.699999, -12.599996, 84.800094);
	CreateDynamicObject(901, 2374.512695, -774.292968, 121.722023, -1.699999, -12.599996, 84.800094);
	CreateDynamicObject(899, 2364.130859, -755.328796, 126.008621, -91.400001, 0.000000, -47.000030);
	CreateDynamicObject(899, 2348.360839, -733.037292, 125.931961, -91.400001, 0.000000, -55.000045);
	CreateDynamicObject(899, 2337.473876, -709.854980, 125.824516, -91.400001, 0.000000, -56.300048);
	CreateDynamicObject(899, 2328.894042, -685.012145, 125.654083, -91.400001, 0.000000, -55.800117);
	CreateDynamicObject(899, 2325.715820, -662.765747, 126.707405, -91.400001, 0.000000, -85.000152);
	CreateDynamicObject(899, 2377.103027, -775.005432, 126.104568, -91.400001, 0.000000, -47.000030);
	CreateDynamicObject(899, 2395.123779, -782.566345, 126.057449, -91.400001, 0.000000, 38.299964);
	CreateDynamicObject(899, 2409.878906, -766.651489, 126.022781, -91.400001, 0.000000, 92.099990);
	CreateDynamicObject(899, 2401.768310, -752.212768, 126.104087, -91.400001, 0.000000, 135.600067);
	CreateDynamicObject(899, 2395.714599, -737.884094, 123.079246, -91.300003, 0.000000, 109.300102);
	CreateDynamicObject(899, 2390.854980, -715.689819, 123.204582, -91.400001, 0.000000, 112.600090);
	CreateDynamicObject(899, 2385.358154, -693.459777, 123.284477, -91.400001, 0.000000, 114.800048);
	CreateDynamicObject(899, 2376.932373, -676.676330, 123.269584, -91.400001, 0.000000, 118.000015);
	CreateDynamicObject(899, 2376.932373, -676.676330, 123.269584, -91.400001, 0.000000, 118.000015);
	CreateDynamicObject(899, 2367.096435, -659.778564, 113.387626, -91.400001, 0.000000, 117.799964);
	CreateDynamicObject(899, 2340.175537, -674.674743, 135.534194, -175.100082, -5.599999, -92.200111);
	CreateDynamicObject(899, 2344.748291, -689.166809, 134.293624, -170.800125, -6.499999, -92.200111);
	CreateDynamicObject(899, 2349.244873, -710.401123, 134.794067, -170.800125, -6.499999, -92.200111);
	CreateDynamicObject(899, 2360.824707, -732.616943, 133.780807, 177.799972, -1.700001, -92.200111);
	CreateDynamicObject(899, 2374.925781, -752.950805, 135.204437, 177.799972, -1.700001, -92.200111);
	CreateDynamicObject(899, 2390.457519, -769.224975, 134.549163, 177.799972, -1.700001, -92.200111);
	CreateDynamicObject(899, 2396.703369, -757.583374, 137.462295, 177.799972, -1.700001, -92.200111);
	CreateDynamicObject(899, 2382.252197, -736.556945, 139.516967, 177.799972, -1.700001, -92.200111);
	CreateDynamicObject(899, 2387.987792, -730.161865, 136.196807, 160.200012, -1.700001, -92.200111);
	CreateDynamicObject(899, 2370.449951, -720.915954, 140.642669, -176.899993, -1.700001, -92.200111);
	CreateDynamicObject(899, 2365.424072, -699.452819, 139.534347, -176.899993, -1.700001, -92.200111);
	CreateDynamicObject(899, 2366.081787, -681.444885, 138.795272, -176.899993, -1.700001, -92.200111);
	CreateDynamicObject(899, 2355.545410, -666.263732, 135.906524, 153.799972, -1.700001, -39.200088);
	CreateDynamicObject(899, 2361.975341, -665.643127, 131.031280, 153.799972, -1.700001, -39.200088);
	CreateDynamicObject(880, 2346.869384, -654.225097, 129.313507, 0.000000, 0.000000, 86.400077);
	CreateDynamicObject(880, 2342.448974, -647.261291, 126.603500, 0.000000, 0.000000, 30.400072);
	CreateDynamicObject(880, 2349.241943, -659.077575, 129.773529, 0.000000, 0.000000, 30.400072);
	CreateDynamicObject(899, 2383.379394, -705.598449, 135.622955, 170.899948, -1.700001, -92.200111);
	CreateDynamicObject(899, 2375.580322, -688.374023, 136.817428, 170.899948, -1.700001, -92.200111);
	CreateDynamicObject(880, 2358.904296, -658.800720, 121.785484, 0.000000, -19.800003, 30.400072);
	CreateDynamicObject(899, 2351.026611, -680.000183, 136.765899, -170.800125, -6.499999, -92.200111);
	CreateDynamicObject(880, 2347.911376, -655.811706, 120.361885, 0.000000, -19.800003, 30.400072);
	CreateDynamicObject(906, 2354.738525, -645.167541, 128.438705, 152.799987, 14.300003, 7.299979);
	CreateDynamicObject(906, 2357.999023, -652.928955, 128.493713, -44.099853, 9.200003, 175.299835);
	CreateDynamicObject(3525, 2358.104736, -646.825134, 128.761688, 0.000000, 19.100004, 1.000002);
	CreateDynamicObject(3525, 2358.072265, -650.426452, 128.962799, 0.000000, 17.500005, 1.000002);
	CreateDynamicObject(3425, 2373.032226, -619.435607, 135.159439, 0.000000, 0.000000, -41.000022);*/
//fim da mina
	UsePlayerPedAnims();
	BlackMarketLv[0] = CreateDynamicObject(3861, 1412.5766, 2107.6853, 12.1815, 0.0000, 0.0000, -90.4000); //marketstall01_SFXRF
	BlackMarketLv[1] = CreateDynamicObject(1362, 1412.8485, 2101.8615, 11.6131, 0.0000, 0.0000, -61.3998); //CJ_FIREBIN_(L0)
	BlackMarketLv[2] = CreateDynamicObject(18693, 1412.8479, 2101.8669, 10.0214, 0.0000, 0.0000, 0.0000); //Flame99
	BlackMarketLv[3] = CreateDynamicObject(3861, 1409.2557, 2100.6088, 12.1815, 0.0000, 0.0000, 179.5999); //marketstall01_SFXRF
	BlackMarketLv[4] = CreateDynamicObject(3861, 1412.5512, 2131.0332, 12.1815, 0.0000, 0.0000, -90.4000); //marketstall01_SFXRF
	BlackMarketLv[5] = CreateDynamicObject(3861, 1412.6181, 2144.8161, 12.1815, 0.0000, 0.0000, -90.1000); //marketstall01_SFXRF
	BlackMarketLv[6] = CreateDynamicObject(3861, 1412.6210, 2157.9636, 12.1815, 0.0000, 0.0000, -90.1000); //marketstall01_SFXRF
	BlackMarketLv[7] = CreateDynamicObject(1362, 1413.7811, 2123.9741, 11.6131, 0.0000, 0.0000, -3.1999); //CJ_FIREBIN_(L0)
	BlackMarketLv[8] = CreateDynamicObject(18693, 1413.8015, 2123.9746, 10.0442, 0.0000, 0.0000, 0.0000); //Flame99
	BlackMarketLv[9] = CreateDynamicObject(1362, 1413.7811, 2123.9741, 11.6131, 0.0000, 0.0000, -3.1999); //CJ_FIREBIN_(L0)
	BlackMarketLv[10] = CreateDynamicObject(1362, 1413.6497, 2153.6677, 11.6131, 0.0000, 0.0000, -2.2999); //CJ_FIREBIN_(L0)
	BlackMarketLv[11] = CreateDynamicObject(18693, 1413.6489, 2153.6682, 10.0931, 0.0000, 0.0000, 0.0000); //Flame99
	BlackMarketLv[12] = CreateDynamicObject(19313, 1409.2993, 2165.6696, 11.0817, 0.0000, 0.0000, 0.0000); //a51fensin
	BlackMarketLv[13] = CreateDynamicObject(1369, 1412.8308, 2110.4611, 11.6156, 0.0000, 0.0000, -118.6999); //CJ_WHEELCHAIR1
	BlackMarketLv[14] = CreateDynamicObject(2671, 1412.0350, 2112.6347, 11.0211, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_3
	BlackMarketLv[15] = CreateDynamicObject(2671, 1408.7149, 2103.9108, 11.0211, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_3
	BlackMarketLv[16] = CreateDynamicObject(2671, 1408.7149, 2129.8317, 11.0211, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_3
	BlackMarketLv[17] = CreateDynamicObject(2671, 1411.7153, 2139.3828, 11.0211, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_3
	BlackMarketLv[18] = CreateDynamicObject(2671, 1409.7758, 2145.2065, 11.0211, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_3
	BlackMarketLv[19] = CreateDynamicObject(2670, 1412.3845, 2136.4997, 11.0992, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_1
	BlackMarketLv[20] = CreateDynamicObject(2670, 1410.7543, 2125.2377, 11.0992, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_1
	BlackMarketLv[21] = CreateDynamicObject(2670, 1409.4638, 2115.2836, 11.0992, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_1
	BlackMarketLv[22] = CreateDynamicObject(2670, 1409.4638, 2108.3605, 11.0992, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_1
	BlackMarketLv[23] = CreateDynamicObject(2672, 1411.4277, 2116.8623, 11.2905, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_4
	BlackMarketLv[24] = CreateDynamicObject(2672, 1408.1564, 2142.3332, 11.2905, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_4
	BlackMarketLv[25] = CreateDynamicObject(2672, 1408.4467, 2158.9780, 11.2905, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_4
	BlackMarketLv[26] = CreateDynamicObject(1728, 1413.6602, 2115.8547, 10.9907, 0.0000, 0.0000, -101.6999); //mrk_seating3
	BlackMarketLv[27] = CreateDynamicObject(1711, 1412.7076, 2118.0632, 10.9837, 0.0000, 0.0000, -13.0000); //kb_chair01
	BlackMarketLv[28] = CreateDynamicObject(1804, 1409.1511, 2116.5771, 10.9858, 0.0000, 0.0000, 90.3000); //MED_BED_1
	BlackMarketLv[29] = CreateDynamicObject(2812, 1412.5270, 2115.1857, 11.0175, 0.0000, 0.0000, 0.0000); //GB_platedirty01
	BlackMarketLv[30] = CreateDynamicObject(14491, 1419.7375, 2138.9472, 13.5893, 0.0000, 0.0000, 10.5000); //iwanfucker
	BlackMarketLv[31] = CreateDynamicObject(2812, 1411.5717, 2138.3598, 11.7385, 0.0000, 0.0000, -52.4999); //GB_platedirty01
	BlackMarketLv[32] = CreateDynamicObject(2813, 1412.0618, 2137.3984, 11.7385, 0.0000, 0.0000, 0.0000); //GB_novels01
	BlackMarketLv[33] = CreateDynamicObject(14520, 1410.4451, 2144.5317, 11.3288, 0.0000, 0.0000, -19.9000); //immy_clothes
	BlackMarketLv[34] = CreateDynamicObject(2844, 1413.7131, 2116.1481, 11.4915, 0.0000, 0.0000, -160.5997); //gb_bedclothes03
	BlackMarketLv[35] = CreateDynamicObject(2843, 1412.6878, 2138.5415, 11.6884, 0.0000, 0.0000, 0.0000); //gb_bedclothes02
	BlackMarketLv[36] = CreateDynamicObject(2845, 1406.7691, 2116.8698, 11.1137, 0.1999, -0.9000, -24.4000); //gb_bedclothes04
	BlackMarketLv[37] = CreateDynamicObject(1664, 1411.9110, 2114.8842, 11.1652, 0.0000, 0.0000, 0.0000); //propwinebotl2
	BlackMarketLv[38] = CreateDynamicObject(1664, 1412.8719, 2117.1855, 11.1752, 0.0000, 0.0000, 0.0000); //propwinebotl2
	BlackMarketLv[39] = CreateDynamicObject(1512, 1412.4929, 2116.1545, 11.2152, 0.0000, 0.0000, 0.0000); //DYN_WINE_03
	BlackMarketLv[40] = CreateDynamicObject(1510, 1412.1822, 2138.6491, 11.7703, 0.0000, 0.0000, 0.0000); //DYN_ASHTRY
	BlackMarketLv[41] = CreateDynamicObject(1485, 1411.9837, 2138.6955, 11.7891, 0.0000, 0.0000, 0.0000); //CJ_CIGGY
	BlackMarketLv[42] = CreateDynamicObject(1484, 1411.4803, 2137.2792, 11.9141, 0.0000, 33.0999, 0.0000); //CJ_BEAR_BOTTLE
	BlackMarketLv[43] = CreateDynamicObject(1950, 1412.1444, 2137.8120, 11.9222, 0.0000, 0.0000, 163.6999); //kb_beer
	BlackMarketLv[44] = CreateDynamicObject(1665, 1412.3747, 2118.0070, 11.8015, -0.4000, 3.9999, 109.9999); //propashtray1
	BlackMarketLv[45] = CreateDynamicObject(2068, 1410.6081, 2161.1127, 13.9075, 0.0000, 0.0000, 0.0000); //CJ_cammo_NET
	BlackMarketLv[46] = CreateDynamicObject(2068, 1410.6081, 2152.3874, 13.9075, 0.0000, 0.0000, 0.0000); //CJ_cammo_NET
	BlackMarketLv[47] = CreateDynamicObject(2068, 1410.6081, 2143.5341, 13.9075, 0.0000, 0.0000, 0.0000); //CJ_cammo_NET
	BlackMarketLv[48] = CreateDynamicObject(2068, 1410.6081, 2133.9902, 13.9075, 0.0000, 0.0000, 0.0000); //CJ_cammo_NET
	BlackMarketLv[49] = CreateDynamicObject(2068, 1410.6081, 2124.9072, 13.9075, 0.0000, 0.0000, 0.0000); //CJ_cammo_NET
	BlackMarketLv[50] = CreateDynamicObject(2068, 1410.6081, 2114.7922, 13.9075, 0.0000, 0.0000, 0.0000); //CJ_cammo_NET
	BlackMarketLv[51] = CreateDynamicObject(2068, 1410.6081, 2104.7861, 13.9075, 0.0000, 0.0000, 0.0000); //CJ_cammo_NET
	BlackMarketLv[52] = CreateDynamicObject(1242, 1410.4947, 2101.8041, 11.9822, 0.0000, 0.0000, 0.0000); //bodyarmour
	BlackMarketLv[53] = CreateDynamicObject(1242, 1410.4947, 2101.5039, 11.9822, 0.0000, 0.0000, 0.0000); //bodyarmour
	BlackMarketLv[54] = CreateDynamicObject(1242, 1410.4947, 2101.1435, 11.9822, 0.0000, 0.0000, 0.0000); //bodyarmour
	BlackMarketLv[55] = CreateDynamicObject(1550, 1409.5349, 2101.5683, 12.1853, 0.0000, 0.0000, 0.0000); //CJ_MONEY_BAG
	BlackMarketLv[56] = CreateDynamicObject(1550, 1409.5649, 2101.0278, 12.1853, 0.0000, 0.0000, 0.0000); //CJ_MONEY_BAG
	BlackMarketLv[57] = CreateDynamicObject(2058, 1410.0567, 2099.2011, 12.3949, -90.7999, 1.2999, 0.0000); //CJ_Gun_docs
	BlackMarketLv[58] = CreateDynamicObject(2058, 1408.7349, 2099.2133, 12.3948, -90.7999, 1.2999, 0.0000); //CJ_Gun_docs
	BlackMarketLv[59] = CreateDynamicObject(1310, 1407.9959, 2101.9667, 12.6098, 0.3001, 0.0000, -178.0998); //pikupparachute
	BlackMarketLv[60] = CreateDynamicObject(1310, 1408.0476, 2101.0664, 11.9245, 0.3001, 0.0000, -178.0998); //pikupparachute
	BlackMarketLv[61] = CreateDynamicObject(1310, 1408.0305, 2101.5769, 11.9218, 0.3001, 0.0000, -178.0998); //pikupparachute
	BlackMarketLv[62] = CreateDynamicObject(1254, 1409.4399, 2099.1208, 12.7481, 0.0000, 0.0000, 0.0000); //killfrenzy
	BlackMarketLv[63] = CreateDynamicObject(2064, 1412.3223, 2104.0378, 11.6321, 0.0000, 0.0000, -118.4000); //CJ_FEILDGUN
	BlackMarketLv[64] = CreateDynamicObject(2058, 1413.9538, 2108.7402, 12.6622, 92.1998, -3.8999, -86.0999); //CJ_Gun_docs
	BlackMarketLv[65] = CreateDynamicObject(2058, 1413.9538, 2107.0087, 12.6577, 92.1998, -3.8999, -86.0999); //CJ_Gun_docs
	BlackMarketLv[66] = CreateDynamicObject(1254, 1413.9989, 2107.8378, 12.7013, 0.0000, 0.0000, -90.0999); //killfrenzy
	BlackMarketLv[67] = CreateDynamicObject(1450, 1407.7586, 2107.7612, 11.5871, 0.0000, 0.0000, 89.9000); //DYN_CRATE_3
	BlackMarketLv[68] = CreateDynamicObject(1415, 1407.1177, 2146.4985, 11.1464, 0.0000, 0.0000, 89.7999); //DYN_DUMPSTER
	BlackMarketLv[69] = CreateDynamicObject(19087, 1410.1949, 2101.9746, 13.0411, -91.0998, 0.0000, -90.0999); //Rope1
	BlackMarketLv[70] = CreateDynamicObject(19087, 1410.7755, 2101.9545, 13.0299, -91.0998, 0.0000, -90.0999); //Rope1
	BlackMarketLv[71] = CreateDynamicObject(19142, 1410.1293, 2101.7038, 12.0411, 0.0000, -89.1999, 0.0000); //SWATArmour1
	BlackMarketLv[72] = CreateDynamicObject(19142, 1410.1293, 2101.2333, 12.0411, 0.0000, -89.1999, 0.0000); //SWATArmour1
	BlackMarketLv[73] = CreateDynamicObject(19559, 1409.0003, 2101.8789, 12.6884, 0.0000, -0.6999, -179.7999); //HikerBackpack1
	BlackMarketLv[74] = CreateDynamicObject(19559, 1409.0156, 2101.4987, 11.8111, -88.0999, -0.6999, -179.7999); //HikerBackpack1
	BlackMarketLv[75] = CreateDynamicObject(3026, 1408.4682, 2101.9704, 12.6337, 2.9000, -89.9999, 176.2997); //para_pack
	BlackMarketLv[76] = CreateDynamicObject(3026, 1408.5252, 2101.7741, 11.7924, -85.6999, -89.9999, 178.3997); //para_pack
	BlackMarketLv[77] = CreateDynamicObject(3026, 1408.5122, 2101.3041, 11.8276, -85.6999, -89.9999, 178.3997); //para_pack
	BlackMarketLv[78] = CreateDynamicObject(1571, 1412.4359, 2163.1569, 12.1029, 0.0000, 0.0000, -90.0999); //CJ_NOODLE_1
	BlackMarketLv[79] = CreateDynamicObject(1506, 1411.9645, 2161.1582, 10.6469, 0.0000, 0.0000, 0.0000); //Gen_doorEXT08
	BlackMarketLv[80] = CreateDynamicObject(2969, 1412.1505, 2108.6645, 11.9325, 0.0000, 0.0000, -90.6999); //level_ammobox
	BlackMarketLv[81] = CreateDynamicObject(2969, 1412.1407, 2107.8637, 11.9325, 0.0000, 0.0000, -90.6999); //level_ammobox
	BlackMarketLv[82] = CreateDynamicObject(2969, 1412.1308, 2107.0529, 11.9325, 0.0000, 0.0000, -90.6999); //level_ammobox
	BlackMarketLv[83] = CreateDynamicObject(356, 1411.5847, 2108.8288, 11.8955, 0.0000, -9.8999, 3.6999); //m4
	BlackMarketLv[84] = CreateDynamicObject(356, 1411.5959, 2108.6486, 11.8955, 0.0000, -9.8999, 3.6999); //m4
	BlackMarketLv[85] = CreateDynamicObject(356, 1411.6086, 2108.4484, 11.8955, 0.0000, -9.8999, 3.6999); //m4
	BlackMarketLv[86] = CreateDynamicObject(355, 1411.5762, 2108.0187, 11.9030, 0.0000, -8.4999, 5.0999); //AK-47
	BlackMarketLv[87] = CreateDynamicObject(355, 1411.5927, 2107.8286, 11.9030, 0.0000, -8.4999, 5.0999); //AK-47
	BlackMarketLv[88] = CreateDynamicObject(355, 1411.6092, 2107.6384, 11.9030, 0.0000, -8.4999, 5.0999); //AK-47
	BlackMarketLv[89] = CreateDynamicObject(357, 1411.5369, 2107.1945, 11.9097, 0.0000, -2.3999, 7.0999); //cuntgun
	BlackMarketLv[90] = CreateDynamicObject(357, 1411.5601, 2107.0053, 11.9097, 0.0000, -2.3999, 7.0999); //cuntgun
	BlackMarketLv[91] = CreateDynamicObject(357, 1411.5845, 2106.8061, 11.9097, 0.0000, -2.3999, 7.0999); //cuntgun
	BlackMarketLv[92] = CreateDynamicObject(348, 1411.3841, 2106.5151, 11.8269, 92.6999, 0.0000, 25.8000); //desert_eagle
	BlackMarketLv[93] = CreateDynamicObject(348, 1411.4849, 2106.3073, 11.8160, 92.6999, 0.0000, 25.8000); //desert_eagle
	BlackMarketLv[94] = CreateDynamicObject(348, 1411.8239, 2106.5056, 11.8174, 92.6999, 0.0000, 25.8000); //desert_eagle
	BlackMarketLv[95] = CreateDynamicObject(3014, 1411.2963, 2108.8415, 11.2236, 0.0000, 0.0000, 0.0000); //cr_guncrate
	BlackMarketLv[96] = CreateDynamicObject(3014, 1411.2963, 2108.1909, 11.2236, 0.0000, 0.0000, 0.0000); //cr_guncrate
	BlackMarketLv[97] = CreateDynamicObject(3014, 1411.2963, 2107.5402, 11.2236, 0.0000, 0.0000, 0.0000); //cr_guncrate
	BlackMarketLv[98] = CreateDynamicObject(3014, 1411.2963, 2106.9296, 11.2236, 0.0000, 0.0000, 0.0000); //cr_guncrate
	BlackMarketLv[99] = CreateDynamicObject(2041, 1411.3095, 2106.5629, 11.1813, 0.0000, 0.0000, -89.8000); //AMMO_BOX_M2
	BlackMarketLv[100] = CreateDynamicObject(2041, 1411.3100, 2106.3728, 11.1813, 0.0000, 0.0000, -89.8000); //AMMO_BOX_M2
	BlackMarketLv[101] = CreateDynamicObject(2041, 1411.7902, 2106.5637, 11.1813, 0.0000, 0.0000, -89.8000); //AMMO_BOX_M2
	BlackMarketLv[102] = CreateDynamicObject(2041, 1411.7905, 2106.3735, 11.1813, 0.0000, 0.0000, -89.8000); //AMMO_BOX_M2
	BlackMarketLv[103] = CreateDynamicObject(2061, 1411.2452, 2105.9792, 11.3051, 0.0000, 0.0000, -56.6000); //CJ_SHELLS1
	BlackMarketLv[104] = CreateDynamicObject(2061, 1411.4357, 2106.0000, 11.3051, 0.0000, 0.0000, -56.6000); //CJ_SHELLS1

	objtextid[4] = CreateDynamicObject(11301, -1914.050048, 274.281005, 40.015598, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(objtextid[4], 0, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[4], 1, 14584, "ab_abbatoir01", "ab_drainage", 0x00000000);
	SetObjectMaterial(objtextid[4], 2, 14584, "ab_abbatoir01", "ab_drainage", 0x00000000);
	SetObjectMaterial(objtextid[4], 3, 14584, "ab_abbatoir01", "ab_ceiling1", 0x00000000);
	SetObjectMaterial(objtextid[4], 4, 14803, "bdupsnew", "Bdup2_mask", 0x00000000);
	SetObjectMaterial(objtextid[4], 5, 14584, "ab_abbatoir01", "ab_drainage", 0x00000000);
	SetObjectMaterial(objtextid[4], 6, 18065, "ab_sfammumain", "carp20S", 0x00000000);
	SetObjectMaterial(objtextid[4], 7, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[4], 8, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[4], 9, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[4], 10, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[4], 11, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[4], 12, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[4], 13, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[4], 14, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[4], 15, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);

	objtextid[5] = CreateDynamicObject(11317, -1947.219970, 280.820007, 45.273399, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(objtextid[5], 0, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[5], 1, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[5], 2, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[5], 3, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[5], 4, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[5], 5, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[5], 6, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[5], 7, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[5], 8, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[5], 9, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[5], 10, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[5], 11, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0x00000000);
	SetObjectMaterial(objtextid[5], 12, 14584, "ab_abbatoir01", "ab_drainage", 0x00000000);
	SetObjectMaterial(objtextid[5], 13, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[5], 14, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[5], 15, 16640, "a51", "plaintarmac1", 0x00000000);

	objtextid[6] = CreateDynamicObject(11318, -1968.260009, 274.367004, 35.539100, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(objtextid[6], 0, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[6], 1, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[6], 2, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[6], 3, 18065, "ab_sfammumain", "carp20S", 0x00000000);
	SetObjectMaterial(objtextid[6], 4, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[6], 5, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[6], 6, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[6], 7, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[6], 8, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[6], 9, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[6], 10, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[6], 11, 16640, "a51", "plaintarmac1", 0x00000000);
	SetObjectMaterial(objtextid[6], 12, 16640, "a51", "plaintarmac1", 0x00000000);

	objtextid[7] = CreateDynamicObject(19909, -1952.620239, 303.043487, 40.064243, 0.000000, 0.000000, 179.899993);
	SetObjectMaterial(objtextid[7], 1, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
	SetObjectMaterial(objtextid[7], 4, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
	SetObjectMaterial(objtextid[7], 5, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
	SetObjectMaterial(objtextid[7], 6, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
	SetObjectMaterial(objtextid[7], 7, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
	SetObjectMaterial(objtextid[7], 8, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
	SetObjectMaterial(objtextid[7], 9, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
	SetObjectMaterial(objtextid[7], 10, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
	SetObjectMaterial(objtextid[7], 11, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
	SetObjectMaterial(objtextid[7], 12, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
	SetObjectMaterial(objtextid[7], 13, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
	SetObjectMaterial(objtextid[7], 14, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/*CreateDynamicObject(18862, -1981.165649, 253.622192, 37.497932, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18862, -1974.176269, 302.761810, 36.217926, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(660, -1912.677124, 268.284210, 37.206539, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18862, -1973.175903, 267.721740, 36.217926, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18862, -1922.754516, 267.721740, 42.397918, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18862, -1902.442138, 274.171661, 42.127925, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(660, -1926.596923, 251.554199, 37.986537, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18862, -1956.433837, 235.491744, 35.297988, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18766, -1919.110595, 238.899185, 42.788692, 0.000000, 0.000000, -0.099999);
	CreateDynamicObject(18766, -1929.110107, 238.916839, 42.788692, 0.000000, 0.000000, -0.099999);
	CreateDynamicObject(18766, -1939.111083, 238.934371, 42.788692, 0.000000, 0.000000, -0.099999);
	CreateDynamicObject(18766, -1949.111816, 238.951828, 42.788692, 0.000000, 0.000000, -0.099999);
	CreateDynamicObject(18766, -1959.111206, 238.969421, 40.268745, 0.000000, 0.000000, -0.099999);
	CreateDynamicObject(18766, -1969.113403, 238.986785, 37.878852, 0.000000, 0.000000, -0.099999);
	CreateDynamicObject(18766, -1979.093383, 239.004302, 36.588897, 0.000000, 0.000000, -0.099999);
	CreateDynamicObject(18766, -1985.511352, 239.015701, 36.588897, 0.000000, 0.000000, -0.099999);
	CreateDynamicObject(18766, -1991.943725, 239.026855, 36.588897, 0.000000, 0.000000, -0.099999);
	CreateDynamicObject(18766, -1995.793212, 244.360015, 36.588897, 0.000000, 0.000000, 82.800010);
	CreateDynamicObject(18766, -1994.540283, 254.261367, 36.588897, 0.000000, 0.000000, 82.800010);
	CreateDynamicObject(18766, -1993.560058, 264.172454, 36.588897, 0.000000, 0.000000, 85.799995);
	CreateDynamicObject(18766, -1992.855834, 273.294677, 36.588897, 0.000000, 0.000000, 85.300003);
	CreateDynamicObject(18766, -1991.062011, 303.415679, 36.588897, 0.000000, 0.000000, 89.499954);
	CreateDynamicObject(18766, -1991.046020, 305.265777, 36.588897, 0.000000, 0.000000, 89.499954);
	CreateDynamicObject(18766, -1985.625000, 309.755767, 36.588897, 0.000000, 0.000000, 179.899963);
	CreateDynamicObject(18766, -1975.643676, 309.737945, 38.278861, 0.000000, 0.000000, 179.899963);
	CreateDynamicObject(18766, -1971.763671, 309.841064, 38.278861, 0.000000, 0.000000, 179.899963);
	CreateDynamicObject(18766, -1905.052734, 309.874969, 41.538822, 0.000000, 0.000000, 179.899963);
	CreateDynamicObject(18766, -1905.052734, 309.874969, 41.538822, 0.000000, 0.000000, 179.899963);
	CreateDynamicObject(18766, -1895.626708, 307.975769, 41.538822, 0.000000, 0.000000, 158.100067);
	CreateDynamicObject(18766, -1886.618408, 304.353607, 41.538822, 0.000000, 0.000000, 158.100067);
	CreateDynamicObject(18766, -1883.065185, 302.925201, 41.538822, 0.000000, 0.000000, 158.100067);
	CreateDynamicObject(18766, -1880.101074, 296.871002, 41.538822, 0.000000, 0.000000, -107.199958);
	CreateDynamicObject(18766, -1883.049682, 287.347137, 41.538822, 0.000000, 0.000000, -107.199958);
	CreateDynamicObject(18766, -1885.783081, 277.776428, 41.538822, 0.000000, 0.000000, -104.899986);
	CreateDynamicObject(18766, -1888.355712, 268.185485, 41.538822, 0.000000, 0.000000, -104.899986);
	CreateDynamicObject(18766, -1888.355712, 268.185485, 41.538822, 0.000000, 0.000000, -104.899986);
	CreateDynamicObject(18766, -1888.355712, 268.185485, 41.538822, 0.000000, 0.000000, -104.899986);
	CreateDynamicObject(18766, -1890.779174, 258.529846, 41.538822, 0.000000, 0.000000, -102.600013);
	CreateDynamicObject(18766, -1892.937377, 248.868347, 41.538822, 0.000000, 0.000000, -102.600013);
	CreateDynamicObject(18766, -1894.160888, 243.393295, 41.538822, 0.000000, 0.000000, -102.100021);
	CreateDynamicObject(18766, -1897.150024, 238.891296, 40.326892, 0.000000, 90.400039, 0.099986);
	CreateDynamicObject(18766, -1899.512573, 238.887390, 40.303382, 0.000000, 90.400039, 0.099986);
	CreateDynamicObject(9812, -1924.769165, 238.959442, 39.044372, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(17055, -1912.868408, 284.054870, 42.133811, 0.000000, 0.000000, -90.800010);
	CreateDynamicObject(14782, -1957.951904, 308.212921, 35.414108, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(14782, -1950.473144, 297.856018, 35.472282, 0.000000, 0.000000, -89.999984);
	CreateDynamicObject(967, -1901.198974, 240.245635, 39.906196, 0.000000, 0.000000, -2.300026);
	CreateDynamicObject(3504, -1896.784179, 240.113357, 41.304653, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3504, -1898.854736, 240.113357, 41.304653, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19898, -1942.759521, 257.719329, 40.069133, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19906, -1908.640869, 277.609680, 42.911762, 0.000000, -89.400024, 0.000000);
	CreateDynamicObject(19906, -1905.510742, 277.609680, 42.878993, 0.000000, -89.400024, 0.000000);
	CreateDynamicObject(19906, -1902.439697, 277.609680, 42.846862, 0.000000, -89.400024, 0.000000);
	CreateDynamicObject(19905, -1942.019287, 269.782287, 33.558113, 0.000000, 0.000000, -91.000007);
	CreateDynamicObject(19903, -1945.068115, 277.200012, 34.383506, 0.000000, 0.000000, -97.799972);
	CreateDynamicObject(14782, -1941.942749, 274.015747, 35.472282, 0.000000, 0.000000, -89.999984);
	CreateDynamicObject(14782, -1941.942749, 266.895935, 35.472282, 0.000000, 0.000000, -89.999984);
	CreateDynamicObject(14782, -1941.942749, 258.815948, 35.472282, 0.000000, 0.000000, -89.999984);
	CreateDynamicObject(19899, -1948.002807, 277.120727, 34.394302, 0.000000, 0.000000, -89.800003);
	CreateDynamicObject(19900, -1946.156127, 277.102081, 34.403186, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19904, -1941.799560, 264.107879, 36.021350, 0.000000, 0.000000, -88.600013);
	CreateDynamicObject(19904, -1941.822509, 256.024780, 36.021350, 0.000000, 0.000000, -88.600013);
	CreateDynamicObject(19904, -1941.996337, 271.344909, 36.021350, 0.000000, 0.000000, -88.600013);
	CreateDynamicObject(19872, -1946.775024, 256.148651, 32.637973, 0.000000, 0.000000, 91.500030);
	CreateDynamicObject(19872, -1946.984252, 264.175994, 32.637973, 0.000000, 0.000000, 92.300018);
	CreateDynamicObject(19861, -1949.882446, 256.754730, 37.588642, 77.600036, 0.000000, 88.899993);
	CreateDynamicObject(19861, -1949.718750, 265.293029, 37.588642, 77.600036, 0.000000, 88.899993);
	CreateDynamicObject(19861, -1949.545532, 274.321319, 37.588642, 77.600036, 0.000000, 88.899993);
	CreateDynamicObject(19898, -1948.499877, 256.439331, 34.499160, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19898, -1944.219970, 262.229370, 34.489162, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19898, -1947.610107, 270.429290, 34.489162, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19898, -1947.610107, 270.429290, 34.489162, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19917, -1944.883911, 273.835174, 34.468967, 0.000000, 0.000000, -31.399997);
	CreateDynamicObject(19917, -1949.037231, 269.285888, 34.468967, 0.000000, 0.000000, 86.199989);
	CreateDynamicObject(19789, -1965.237182, 253.584060, 34.536239, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 254.573974, 34.536239, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 255.574005, 34.536239, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 256.563995, 34.536239, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 257.563903, 34.536239, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 258.563873, 34.536239, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 259.563873, 34.536239, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 260.543884, 34.536239, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 261.513854, 34.536239, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 262.513824, 34.536239, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 263.513824, 34.536239, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 264.463928, 34.536239, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 253.584060, 35.526241, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 254.573974, 35.526241, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 255.574005, 35.526241, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 256.563995, 35.526241, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 257.563903, 35.526241, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 258.563873, 35.526241, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 259.563873, 35.526241, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 260.543884, 35.526241, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 261.513854, 35.526241, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 262.513824, 35.526241, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 263.513824, 35.526241, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 264.463928, 35.526241, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 253.584060, 36.496215, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 254.573974, 36.496215, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 255.574005, 36.496215, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 256.563995, 36.496215, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 257.563903, 36.496215, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 258.563873, 36.496215, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 259.563873, 36.496215, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 260.543884, 36.496215, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 261.513854, 36.496215, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 262.513824, 36.496215, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 263.513824, 36.496215, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 264.463928, 36.496215, 0.000000, 0.000014, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 253.584060, 37.486217, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 254.573974, 37.486217, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 255.574005, 37.486217, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 256.563995, 37.486217, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 257.563903, 37.486217, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 258.563873, 37.486217, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 259.563873, 37.486217, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 260.543884, 37.486217, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 261.513854, 37.486217, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 262.513824, 37.486217, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 263.513824, 37.486217, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 264.463928, 37.486217, 0.000000, 0.000022, 0.000000);
	CreateDynamicObject(660, -1898.266845, 251.554199, 37.986537, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 266.714172, 34.536239, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 267.704071, 34.536239, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 268.704101, 34.536239, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 269.694091, 34.536239, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 270.694000, 34.536239, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 271.693969, 34.536239, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 272.693969, 34.536239, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 273.673980, 34.536239, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 274.643951, 34.536239, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 275.643920, 34.536239, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 276.643920, 34.536239, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 277.594024, 34.536239, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 266.714172, 35.526241, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 267.704071, 35.526241, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 268.704101, 35.526241, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 269.694091, 35.526241, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 270.694000, 35.526241, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 271.693969, 35.526241, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 272.693969, 35.526241, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 273.673980, 35.526241, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 274.643951, 35.526241, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 275.643920, 35.526241, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 276.643920, 35.526241, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 277.594024, 35.526241, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 266.714172, 36.496215, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 267.704071, 36.496215, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 268.704101, 36.496215, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 269.694091, 36.496215, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 270.694000, 36.496215, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 271.693969, 36.496215, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 272.693969, 36.496215, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 273.673980, 36.496215, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 274.643951, 36.496215, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 275.643920, 36.496215, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 276.643920, 36.496215, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 277.594024, 36.496215, 0.000000, 0.000029, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 266.714172, 37.486217, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 267.704071, 37.486217, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 268.704101, 37.486217, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 269.694091, 37.486217, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 270.694000, 37.486217, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 271.693969, 37.486217, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 272.693969, 37.486217, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 273.673980, 37.486217, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 274.643951, 37.486217, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 275.643920, 37.486217, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 276.643920, 37.486217, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 277.594024, 37.486217, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(660, -1971.706787, 251.554199, 32.316535, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 279.854309, 34.536239, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 280.844207, 34.536239, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 281.844238, 34.536239, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 282.834228, 34.536239, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 283.834136, 34.536239, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 284.834106, 34.536239, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 285.834106, 34.536239, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 286.814117, 34.536239, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 287.784088, 34.536239, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 288.784057, 34.536239, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 289.784057, 34.536239, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 290.734161, 34.536239, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 279.854309, 35.526241, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 280.844207, 35.526241, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 281.844238, 35.526241, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 282.834228, 35.526241, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 283.834136, 35.526241, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 284.834106, 35.526241, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 285.834106, 35.526241, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 286.814117, 35.526241, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 287.784088, 35.526241, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 288.784057, 35.526241, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 289.784057, 35.526241, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 290.734161, 35.526241, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 279.854309, 36.496215, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 280.844207, 36.496215, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 281.844238, 36.496215, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 282.834228, 36.496215, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 283.834136, 36.496215, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 284.834106, 36.496215, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 285.834106, 36.496215, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 286.814117, 36.496215, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 287.784088, 36.496215, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 288.784057, 36.496215, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 289.784057, 36.496215, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 290.734161, 36.496215, 0.000000, 0.000037, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 279.854309, 37.486217, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 280.844207, 37.486217, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 281.844238, 37.486217, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 282.834228, 37.486217, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 283.834136, 37.486217, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 284.834106, 37.486217, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 285.834106, 37.486217, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 286.814117, 37.486217, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 287.784088, 37.486217, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 288.784057, 37.486217, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 289.784057, 37.486217, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 290.734161, 37.486217, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(639, -1953.503906, 284.480651, 38.062519, 0.000000, 0.000000, -179.900024);
	CreateDynamicObject(19789, -1965.237182, 297.104400, 34.536239, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 298.094299, 34.536239, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 299.094329, 34.536239, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 300.084320, 34.536239, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 301.084228, 34.536239, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 302.084197, 34.536239, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 303.084197, 34.536239, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 304.064208, 34.536239, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 305.034179, 34.536239, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 306.034149, 34.536239, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.034149, 34.536239, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.984252, 34.536239, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 297.104400, 35.526241, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 298.094299, 35.526241, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 299.094329, 35.526241, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 300.084320, 35.526241, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 301.084228, 35.526241, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 302.084197, 35.526241, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 303.084197, 35.526241, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 304.064208, 35.526241, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 305.034179, 35.526241, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 306.034149, 35.526241, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.034149, 35.526241, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.984252, 35.526241, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 297.104400, 36.496215, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 298.094299, 36.496215, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 299.094329, 36.496215, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 300.084320, 36.496215, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 301.084228, 36.496215, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 302.084197, 36.496215, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 303.084197, 36.496215, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 304.064208, 36.496215, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 305.034179, 36.496215, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 306.034149, 36.496215, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.034149, 36.496215, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.984252, 36.496215, 0.000000, 0.000045, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 297.104400, 37.486217, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 298.094299, 37.486217, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 299.094329, 37.486217, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 300.084320, 37.486217, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 301.084228, 37.486217, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 302.084197, 37.486217, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 303.084197, 37.486217, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 304.064208, 37.486217, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 305.034179, 37.486217, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 306.034149, 37.486217, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.034149, 37.486217, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.984252, 37.486217, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(660, -1985.246826, 265.304168, 32.316535, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 297.104400, 40.026218, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 298.094299, 40.026218, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 299.094329, 40.026218, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 300.084320, 40.026218, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 301.084228, 40.026218, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 302.084197, 40.026218, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 303.084197, 40.026218, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 304.064208, 40.026218, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 305.034179, 40.026218, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 306.034149, 40.026218, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.034149, 40.026218, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.984252, 40.026218, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 297.104400, 41.016220, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 298.094299, 41.016220, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 299.094329, 41.016220, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 300.084320, 41.016220, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 301.084228, 41.016220, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 302.084197, 41.016220, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 303.084197, 41.016220, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 304.064208, 41.016220, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 305.034179, 41.016220, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 306.034149, 41.016220, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.034149, 41.016220, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.984252, 41.016220, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 297.104400, 41.986194, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 298.094299, 41.986194, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 299.094329, 41.986194, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 300.084320, 41.986194, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 301.084228, 41.986194, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 302.084197, 41.986194, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 303.084197, 41.986194, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 304.064208, 41.986194, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 305.034179, 41.986194, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 306.034149, 41.986194, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.034149, 41.986194, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.984252, 41.986194, 0.000000, 0.000052, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 297.104400, 42.976196, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 298.094299, 42.976196, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 299.094329, 42.976196, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 300.084320, 42.976196, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 301.084228, 42.976196, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 302.084197, 42.976196, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 303.084197, 42.976196, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 304.064208, 42.976196, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 305.034179, 42.976196, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 306.034149, 42.976196, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.034149, 42.976196, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 307.984252, 42.976196, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(657, -1974.871337, 273.819458, 31.351596, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 279.924438, 40.026218, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 280.914337, 40.026218, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 281.914367, 40.026218, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 282.904357, 40.026218, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 283.904266, 40.026218, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 284.904235, 40.026218, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 285.904235, 40.026218, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 286.884246, 40.026218, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 287.854217, 40.026218, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 288.854187, 40.026218, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 289.854187, 40.026218, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 290.804290, 40.026218, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 279.924438, 41.016220, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(639, -1953.497558, 280.760620, 38.032520, 0.000000, 0.000000, -179.900024);
	CreateDynamicObject(19789, -1965.237182, 281.914367, 41.016220, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 282.904357, 41.016220, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 283.904266, 41.016220, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 284.904235, 41.016220, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 285.904235, 41.016220, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 286.884246, 41.016220, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 287.854217, 41.016220, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 288.854187, 41.016220, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 289.854187, 41.016220, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 290.804290, 41.016220, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 279.924438, 41.986194, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 280.914337, 41.986194, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 281.914367, 41.986194, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 282.904357, 41.986194, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 283.904266, 41.986194, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 284.904235, 41.986194, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 285.904235, 41.986194, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 286.884246, 41.986194, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 287.854217, 41.986194, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 288.854187, 41.986194, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 289.854187, 41.986194, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 290.804290, 41.986194, 0.000000, 0.000060, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 279.924438, 42.976196, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 280.914337, 42.976196, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 281.914367, 42.976196, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 282.904357, 42.976196, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 283.904266, 42.976196, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 284.904235, 42.976196, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 285.904235, 42.976196, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 286.884246, 42.976196, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 287.854217, 42.976196, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 288.854187, 42.976196, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 289.854187, 42.976196, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 290.804290, 42.976196, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(657, -1985.251342, 302.939514, 31.351596, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 266.714569, 40.026218, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 267.704467, 40.026218, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 268.704498, 40.026218, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 269.694488, 40.026218, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 270.694396, 40.026218, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 271.694366, 40.026218, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 272.694366, 40.026218, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 273.674377, 40.026218, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 274.644348, 40.026218, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 275.644317, 40.026218, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 276.644317, 40.026218, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 277.594421, 40.026218, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 266.714569, 41.016220, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 267.704467, 41.016220, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 268.704498, 41.016220, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 269.694488, 41.016220, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 270.694396, 41.016220, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 271.694366, 41.016220, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 272.694366, 41.016220, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 273.674377, 41.016220, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 274.644348, 41.016220, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 275.644317, 41.016220, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 276.644317, 41.016220, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 277.594421, 41.016220, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 266.714569, 41.986194, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 267.704467, 41.986194, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 268.704498, 41.986194, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 269.694488, 41.986194, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 270.694396, 41.986194, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 271.694366, 41.986194, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 272.694366, 41.986194, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 273.674377, 41.986194, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 274.644348, 41.986194, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 275.644317, 41.986194, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 276.644317, 41.986194, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 277.594421, 41.986194, 0.000000, 0.000068, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 266.714569, 42.976196, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 267.704467, 42.976196, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 268.704498, 42.976196, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 269.694488, 42.976196, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 270.694396, 42.976196, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 271.694366, 42.976196, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 272.694366, 42.976196, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 273.674377, 42.976196, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 274.644348, 42.976196, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 275.644317, 42.976196, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 276.644317, 42.976196, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 277.594421, 42.976196, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(9812, -1887.881958, 270.448425, 37.974384, 0.000000, 0.000000, 75.400001);
	CreateDynamicObject(19789, -1965.237182, 253.544525, 40.026218, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 254.534423, 40.026218, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 255.534454, 40.026218, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 256.524444, 40.026218, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 257.524353, 40.026218, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 258.524322, 40.026218, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 259.524322, 40.026218, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 260.504333, 40.026218, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 261.474304, 40.026218, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 262.474273, 40.026218, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 263.474273, 40.026218, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 264.424377, 40.026218, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 253.544525, 41.016220, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 254.534423, 41.016220, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 255.534454, 41.016220, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 256.524444, 41.016220, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 257.524353, 41.016220, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 258.524322, 41.016220, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 259.524322, 41.016220, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 260.504333, 41.016220, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 261.474304, 41.016220, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 262.474273, 41.016220, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 263.474273, 41.016220, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 264.424377, 41.016220, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 253.544525, 41.986194, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 254.534423, 41.986194, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 255.534454, 41.986194, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 256.524444, 41.986194, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 257.524353, 41.986194, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 258.524322, 41.986194, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 259.524322, 41.986194, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 260.504333, 41.986194, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 261.474304, 41.986194, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 262.474273, 41.986194, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 263.474273, 41.986194, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 264.424377, 41.986194, 0.000000, 0.000075, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 253.544525, 42.976196, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 254.534423, 42.976196, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 255.534454, 42.976196, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 256.524444, 42.976196, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 257.524353, 42.976196, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 258.524322, 42.976196, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 259.524322, 42.976196, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 260.504333, 42.976196, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 261.474304, 42.976196, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 262.474273, 42.976196, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 263.474273, 42.976196, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1965.237182, 264.424377, 42.976196, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(9812, -1930.039184, 308.970123, 37.864372, 0.000000, 0.000000, 179.699981);
	CreateDynamicObject(19789, -1941.548339, 253.434616, 40.026218, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 254.424514, 40.026218, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 255.424545, 40.026218, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 256.414550, 40.026218, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 257.414428, 40.026218, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 258.414428, 40.026218, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 259.414428, 40.026218, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 260.394409, 40.026218, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 261.364379, 40.026218, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 262.364379, 40.026218, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 263.364379, 40.026218, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 264.314453, 40.026218, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 253.434616, 41.016220, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 254.424514, 41.016220, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 255.424545, 41.016220, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 256.414550, 41.016220, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 257.414428, 41.016220, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 258.414428, 41.016220, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 259.414428, 41.016220, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 260.394409, 41.016220, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 261.364379, 41.016220, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 262.364379, 41.016220, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 263.364379, 41.016220, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 264.314453, 41.016220, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 253.434616, 41.986194, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 254.424514, 41.986194, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 255.424545, 41.986194, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 256.414550, 41.986194, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 257.414428, 41.986194, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 258.414428, 41.986194, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 259.414428, 41.986194, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 260.394409, 41.986194, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 261.364379, 41.986194, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 262.364379, 41.986194, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 263.364379, 41.986194, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 264.314453, 41.986194, 0.000000, 0.000082, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 253.434616, 42.976196, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 254.424514, 42.976196, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 255.424545, 42.976196, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 256.414550, 42.976196, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 257.414428, 42.976196, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 258.414428, 42.976196, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 259.414428, 42.976196, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 260.394409, 42.976196, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 261.364379, 42.976196, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 262.364379, 42.976196, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 263.364379, 42.976196, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 264.314453, 42.976196, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(3252, -1916.316528, 244.491653, 40.288291, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 266.334472, 40.026218, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 267.324340, 40.026218, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 268.324401, 40.026218, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 269.314392, 40.026218, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 270.314270, 40.026218, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 271.314270, 40.026218, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 272.314270, 40.026218, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 273.294250, 40.026218, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 274.264221, 40.026218, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 275.264221, 40.026218, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 276.264221, 40.026218, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 277.214294, 40.026218, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 266.334472, 41.016220, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 267.324340, 41.016220, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 268.324401, 41.016220, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 269.314392, 41.016220, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 270.314270, 41.016220, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 271.314270, 41.016220, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 272.314270, 41.016220, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 273.294250, 41.016220, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 274.264221, 41.016220, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 275.264221, 41.016220, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 276.264221, 41.016220, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 277.214294, 41.016220, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 266.334472, 41.986194, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 267.324340, 41.986194, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 268.324401, 41.986194, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 269.314392, 41.986194, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 270.314270, 41.986194, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 271.314270, 41.986194, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 272.314270, 41.986194, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 273.294250, 41.986194, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 274.264221, 41.986194, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 275.264221, 41.986194, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 276.264221, 41.986194, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 277.214294, 41.986194, 0.000000, 0.000091, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 266.334472, 42.976196, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 267.324340, 42.976196, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 268.324401, 42.976196, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 269.314392, 42.976196, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 270.314270, 42.976196, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 271.314270, 42.976196, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 272.314270, 42.976196, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 273.294250, 42.976196, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 274.264221, 42.976196, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 275.264221, 42.976196, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 276.264221, 42.976196, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(19789, -1941.548339, 277.214294, 42.976196, 0.000000, 0.000098, 0.000000);
	CreateDynamicObject(1458, -1900.584960, 233.298568, 34.371692, 0.000000, 0.000000, -41.000000);
	CreateDynamicObject(19789, -1941.615478, 252.861236, 40.026218, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1942.605102, 252.880233, 40.026218, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1943.604980, 252.899444, 40.026218, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1944.594848, 252.918441, 40.026218, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1945.594482, 252.937637, 40.026218, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1946.594360, 252.956832, 40.026218, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1947.594116, 252.976028, 40.026218, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1948.573974, 252.994842, 40.026218, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1949.543701, 253.013473, 40.026218, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1950.543579, 253.032669, 40.026218, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1951.543334, 253.051864, 40.026218, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1952.493286, 253.070098, 40.026218, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1941.615478, 252.861236, 41.016220, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1942.605102, 252.880233, 41.016220, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1943.604980, 252.899444, 41.016220, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1944.594848, 252.918441, 41.016220, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1945.594482, 252.937637, 41.016220, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1946.594360, 252.956832, 41.016220, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1947.594116, 252.976028, 41.016220, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1948.573974, 252.994842, 41.016220, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1949.543701, 253.013473, 41.016220, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1950.543579, 253.032669, 41.016220, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1951.543334, 253.051864, 41.016220, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1952.493286, 253.070098, 41.016220, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1941.615478, 252.861236, 41.986194, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1942.605102, 252.880233, 41.986194, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1943.604980, 252.899444, 41.986194, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1944.594848, 252.918441, 41.986194, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1945.594482, 252.937637, 41.986194, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1946.594360, 252.956832, 41.986194, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1947.594116, 252.976028, 41.986194, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1948.573974, 252.994842, 41.986194, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1949.543701, 253.013473, 41.986194, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1950.543579, 253.032669, 41.986194, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1951.543334, 253.051864, 41.986194, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1952.493286, 253.070098, 41.986194, 0.000000, 0.000098, 88.899963);
	CreateDynamicObject(19789, -1941.615478, 252.861236, 42.976196, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1942.605102, 252.880233, 42.976196, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1943.604980, 252.899444, 42.976196, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1944.594848, 252.918441, 42.976196, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1945.594482, 252.937637, 42.976196, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1946.594360, 252.956832, 42.976196, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1947.594116, 252.976028, 42.976196, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1948.573974, 252.994842, 42.976196, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1949.543701, 253.013473, 42.976196, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1950.543579, 253.032669, 42.976196, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1951.543334, 253.051864, 42.976196, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(19789, -1952.493286, 253.070098, 42.976196, 0.000000, 0.000105, 88.899963);
	CreateDynamicObject(3364, -1896.421142, 261.726623, 40.016986, 0.000000, 0.000000, -27.500000);
	CreateDynamicObject(3425, -1917.009399, 303.667663, 50.901065, 0.000000, 0.000000, -31.300003);
	CreateDynamicObject(1437, -1936.275268, 274.440856, 42.858028, -21.600011, 0.000000, 0.000000);
	CreateDynamicObject(1437, -1936.275268, 272.116027, 39.078372, -21.600011, 0.000000, 0.000000);
	CreateDynamicObject(2990, -1912.257812, 238.853469, 36.403438, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(19444, -1902.762451, 238.916275, 43.596439, 0.700000, 0.000000, 84.800109);
	CreateDynamicObject(18762, -1902.483032, 238.882385, 42.835021, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18762, -1903.472534, 238.882385, 42.835021, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(639, -1950.609619, 287.408874, 38.032520, 0.000000, 0.000000, 91.299995);
	CreateDynamicObject(18762, -1905.442749, 238.882385, 42.835021, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18762, -1906.433715, 238.882385, 42.835021, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18762, -1907.414306, 238.882385, 42.835021, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18762, -1908.393554, 238.882385, 42.835021, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18762, -1909.373901, 238.882385, 42.835021, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18762, -1910.353027, 238.882385, 42.835021, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18762, -1911.323608, 238.882385, 42.835021, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18762, -1912.322631, 238.882385, 42.835021, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(18762, -1913.312866, 238.882385, 42.835021, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(779, 2422.620117, -15.593795, 25.539100, 0.000000, 0.000000, 166.000030);*/
    //FIM DA SAFE DE SF
     
	AreaRestrita[0] = CreateDynamicObject(987, -545.0759, -563.1903, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[1] = CreateDynamicObject(987, -599.8679, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[2] = CreateDynamicObject(987, -509.2359, -563.2529, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[3] = CreateDynamicObject(987, -521.1854, -563.2321, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[4] = CreateDynamicObject(987, -533.0955, -563.2116, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[5] = CreateDynamicObject(987, -557.0261, -563.1696, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[6] = CreateDynamicObject(987, -568.9561, -563.1489, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[7] = CreateDynamicObject(987, -580.9365, -563.1279, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[8] = CreateDynamicObject(987, -592.9058, -563.1069, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[9] = CreateDynamicObject(987, -604.8261, -563.0861, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[10] = CreateDynamicObject(987, -616.7559, -563.0654, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[11] = CreateDynamicObject(987, -623.6965, -563.0534, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[12] = CreateDynamicObject(987, -623.7097, -551.1738, 26.6522, 0.0000, 0.0000, -89.8999); //elecfence_BAR
	AreaRestrita[13] = CreateDynamicObject(987, -623.7305, -539.2235, 26.6522, 0.0000, 0.0000, -89.8999); //elecfence_BAR
	AreaRestrita[14] = CreateDynamicObject(987, -623.6411, -527.2839, 26.6522, 0.0000, 0.0000, -90.2998); //elecfence_BAR
	AreaRestrita[15] = CreateDynamicObject(987, -623.5786, -515.3438, 26.6522, 0.0000, 0.0000, -90.2998); //elecfence_BAR
	AreaRestrita[16] = CreateDynamicObject(987, -623.5159, -503.4039, 26.6522, 0.0000, 0.0000, -90.2998); //elecfence_BAR
	AreaRestrita[17] = CreateDynamicObject(987, -623.5733, -491.4649, 26.6522, 0.0000, 0.0000, -89.5998); //elecfence_BAR
	AreaRestrita[18] = CreateDynamicObject(987, -623.6566, -479.4953, 26.6522, 0.0000, 0.0000, -89.5998); //elecfence_BAR
	AreaRestrita[19] = CreateDynamicObject(987, -611.8181, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[20] = CreateDynamicObject(987, -623.7379, -467.8357, 26.6522, 0.0000, 0.0000, -89.5998); //elecfence_BAR
	AreaRestrita[21] = CreateDynamicObject(11492, -616.5291, -480.3323, 24.5114, 0.0000, 0.0000, 89.8999); //des_rshed1_
	SetObjectMaterial(AreaRestrita[21], 0, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0xFFFFFFFF);
	AreaRestrita[22] = CreateDynamicObject(987, -587.9376, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[23] = CreateDynamicObject(987, -576.0078, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[24] = CreateDynamicObject(987, -564.0579, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[25] = CreateDynamicObject(987, -552.1276, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[26] = CreateDynamicObject(987, -540.2077, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[27] = CreateDynamicObject(987, -528.2677, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[28] = CreateDynamicObject(987, -516.3273, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[29] = CreateDynamicObject(987, -480.6275, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[30] = CreateDynamicObject(987, -504.4075, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[31] = CreateDynamicObject(987, -492.5277, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[32] = CreateDynamicObject(987, -468.7076, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[33] = CreateDynamicObject(987, -465.0075, -467.8887, 26.6522, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	AreaRestrita[34] = CreateDynamicObject(987, -465.2298, -479.8051, 26.6522, 0.0000, 0.0000, 89.5999); //elecfence_BAR
	AreaRestrita[35] = CreateDynamicObject(987, -465.3131, -491.7448, 26.6522, 0.0000, 0.0000, 89.5999); //elecfence_BAR
	AreaRestrita[36] = CreateDynamicObject(987, -465.3962, -503.6441, 26.6522, 0.0000, 0.0000, 89.5999); //elecfence_BAR
	AreaRestrita[37] = CreateDynamicObject(987, -465.4796, -515.5844, 26.6522, 0.0000, 0.0000, 89.5999); //elecfence_BAR
	AreaRestrita[38] = CreateDynamicObject(987, -465.5628, -527.5139, 26.6522, 0.0000, 0.0000, 89.5999); //elecfence_BAR
	AreaRestrita[39] = CreateDynamicObject(987, -465.6463, -539.4840, 26.6522, 0.0000, 0.0000, 89.5999); //elecfence_BAR
	AreaRestrita[40] = CreateDynamicObject(987, -465.7294, -551.3839, 26.6522, 0.0000, 0.0000, 89.5999); //elecfence_BAR
	AreaRestrita[41] = CreateDynamicObject(987, -465.8128, -563.3342, 26.6522, 0.0000, 0.0000, 89.5999); //elecfence_BAR
	AreaRestrita[42] = CreateDynamicObject(3749, -488.4301, -561.6217, 30.0902, 0.0000, 0.0000, -0.1999); //ClubGate01_LAx
	AreaRestrita[43] = CreateDynamicObject(987, -478.3460, -563.3067, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[44] = CreateDynamicObject(987, -477.6358, -563.3078, 26.6422, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	AreaRestrita[45] = CreateDynamicObject(9241, -531.9376, -509.8756, 26.3229, 0.0000, 0.0000, 89.9000); //copbits_sfn
	AreaRestrita[46] = CreateDynamicObject(11492, -616.6317, -550.6915, 24.5114, 0.0000, 0.0000, -90.9999); //des_rshed1_
	SetObjectMaterial(AreaRestrita[46], 0, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0xFFFFFFFF);
	AreaRestrita[47] = CreateDynamicObject(19632, -616.2662, -477.6203, 24.5493, 0.0000, 0.0000, 0.0000); //FireWood1
	AreaRestrita[48] = CreateDynamicObject(2840, -613.2468, -544.0987, 24.5389, 0.0000, 0.0000, 0.0000); //GB_takeaway05
	AreaRestrita[49] = CreateDynamicObject(2840, -616.8068, -544.0987, 24.5389, 0.0000, 0.0000, 0.0000); //GB_takeaway05
	AreaRestrita[50] = CreateDynamicObject(2840, -615.0969, -549.2988, 24.5389, 0.0000, 0.0000, 0.0000); //GB_takeaway05
	AreaRestrita[51] = CreateDynamicObject(849, -619.1038, -550.0989, 24.8682, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3
	AreaRestrita[52] = CreateDynamicObject(849, -614.1838, -554.7890, 24.8682, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3
	AreaRestrita[53] = CreateDynamicObject(849, -616.2043, -540.5489, 24.8682, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3
	AreaRestrita[54] = CreateDynamicObject(849, -621.7142, -488.1581, 24.8682, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3
	AreaRestrita[55] = CreateDynamicObject(849, -618.4142, -478.6381, 24.8682, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3
	AreaRestrita[56] = CreateDynamicObject(874, -616.9279, -504.8664, 26.0140, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	AreaRestrita[57] = CreateDynamicObject(874, -616.9279, -518.5266, 26.0140, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	AreaRestrita[58] = CreateDynamicObject(874, -619.5482, -528.1363, 26.0140, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	AreaRestrita[59] = CreateDynamicObject(874, -480.7952, -549.4954, 25.4221, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	AreaRestrita[60] = CreateDynamicObject(874, -489.8354, -553.9253, 25.4221, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	AreaRestrita[61] = CreateDynamicObject(874, -498.8054, -550.2552, 25.4221, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	AreaRestrita[62] = CreateDynamicObject(874, -471.9652, -549.4954, 25.4221, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	AreaRestrita[63] = CreateDynamicObject(874, -529.7456, -542.3453, 25.4221, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	AreaRestrita[64] = CreateDynamicObject(13367, -470.2046, -472.9033, 36.4463, 0.0000, 0.0000, 0.0000); //sw_watertower01
	AreaRestrita[65] = CreateDynamicObject(13367, -469.6745, -559.4741, 36.4463, 0.0000, 0.0000, 0.0000); //sw_watertower01
	AreaRestrita[66] = CreateDynamicObject(12957, -479.9046, -534.0197, 25.2515, 0.0000, 0.0000, -57.8999); //sw_pickupwreck01
	AreaRestrita[67] = CreateDynamicObject(3092, -480.4069, -559.3115, 28.0181, 0.0000, 0.0000, 0.0000); //dead_tied_cop
	AreaRestrita[68] = CreateDynamicObject(3092, -496.0670, -559.3115, 28.0181, 0.0000, 0.0000, 0.0000); //dead_tied_cop
	AreaRestrita[69] = CreateDynamicObject(18250, -495.4801, -493.4349, 30.6173, 0.0000, 0.0000, -0.1999); //cuntwjunk06
	SetObjectMaterial(AreaRestrita[69], 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0xFFFFFFFF);
	AreaRestrita[70] = CreateDynamicObject(18250, -566.9796, -493.1858, 30.6173, 0.0000, 0.0000, -0.1999); //cuntwjunk06
	SetObjectMaterial(AreaRestrita[70], 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0xFFFFFFFF);
	AreaRestrita[71] = CreateDynamicObject(12957, -479.2286, -531.8798, 25.4075, -14.5999, 0.0000, 3.2999); //sw_pickupwreck01
	AreaRestrita[72] = CreateDynamicObject(854, -490.5880, -539.1839, 24.7440, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3b
	AreaRestrita[73] = CreateDynamicObject(854, -477.9380, -545.8940, 24.7440, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3b
	AreaRestrita[74] = CreateDynamicObject(853, -469.0017, -524.5111, 24.8971, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_5
	AreaRestrita[75] = CreateDynamicObject(3594, -487.8030, -526.3344, 24.7058, 0.0000, 0.0000, 0.0000); //la_fuckcar1
	AreaRestrita[76] = CreateDynamicObject(3594, -485.1406, -526.4044, 25.1982, -5.8000, 0.0000, -91.4999); //la_fuckcar1
	AreaRestrita[77] = CreateDynamicObject(3593, -530.5169, -540.1921, 24.8952, 0.0000, 0.0000, 0.0000); //la_fuckcar2
	AreaRestrita[78] = CreateDynamicObject(3593, -529.5583, -539.9957, 25.4421, -11.4999, 0.0000, -96.9000); //la_fuckcar2
	AreaRestrita[79] = CreateDynamicObject(874, -561.3754, -542.3453, 25.4221, 0.0000, 0.0000, -12.5000); //veg_procgrasspatch
	AreaRestrita[80] = CreateDynamicObject(874, -584.5643, -521.8291, 25.4221, 0.0000, 0.0000, -12.5000); //veg_procgrasspatch
	AreaRestrita[81] = CreateDynamicObject(874, -553.5282, -528.7105, 25.4221, 0.0000, 0.0000, -12.5000); //veg_procgrasspatch
	AreaRestrita[82] = CreateDynamicObject(874, -559.0842, -553.7722, 25.4221, 0.0000, 0.0000, -12.5000); //veg_procgrasspatch
	AreaRestrita[83] = CreateDynamicObject(874, -571.4537, -551.0299, 25.4221, 0.0000, 0.0000, -12.5000); //veg_procgrasspatch
	AreaRestrita[84] = CreateDynamicObject(874, -584.9118, -551.4882, 25.4221, 0.0000, 0.0000, -12.5000); //veg_procgrasspatch
	AreaRestrita[85] = CreateDynamicObject(874, -601.4403, -547.8236, 25.4221, 0.0000, 0.0000, -12.5000); //veg_procgrasspatch
	AreaRestrita[86] = CreateDynamicObject(874, -597.3822, -529.5178, 25.4221, 0.0000, 0.0000, -12.5000); //veg_procgrasspatch
	AreaRestrita[87] = CreateDynamicObject(874, -573.4332, -534.8270, 25.4221, 0.0000, 0.0000, -12.5000); //veg_procgrasspatch
	AreaRestrita[88] = CreateDynamicObject(874, -569.5787, -517.4390, 25.4221, 0.0000, 0.0000, -12.5000); //veg_procgrasspatch
	AreaRestrita[89] = CreateDynamicObject(874, -600.3906, -510.6083, 25.4221, 0.0000, 0.0000, -12.5000); //veg_procgrasspatch
	AreaRestrita[90] = CreateDynamicObject(11492, -598.7185, -480.3634, 24.5114, 0.0000, 0.0000, 89.8999); //des_rshed1_
	SetObjectMaterial(AreaRestrita[90], 0, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0xFFFFFFFF);
	AreaRestrita[91] = CreateDynamicObject(11492, -599.3240, -550.9940, 24.5114, 0.0000, 0.0000, -90.9999); //des_rshed1_
	SetObjectMaterial(AreaRestrita[91], 0, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0xFFFFFFFF);
	AreaRestrita[92] = CreateDynamicObject(1358, -505.3254, -530.2517, 26.0556, 0.1999, -47.5000, -35.5000); //CJ_SKIP_Rubbish
	AreaRestrita[93] = CreateDynamicObject(3255, -616.0278, -513.0410, 25.3304, 0.0000, 0.0000, 0.0000); //ref_oiltank01
	SetObjectMaterial(AreaRestrita[93], 0, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0xFFFFFFFF);
	AreaRestrita[94] = CreateDynamicObject(1358, -502.7179, -531.9120, 25.8388, -8.7999, 34.6000, -33.0000); //CJ_SKIP_Rubbish
	AreaRestrita[95] = CreateDynamicObject(3279, -588.7299, -558.3292, 24.0067, 0.0000, 0.0000, 89.3999); //a51_spottower
	AreaRestrita[96] = CreateDynamicObject(3279, -504.8118, -558.3580, 24.0067, 0.0000, 0.0000, 88.5999); //a51_spottower
	AreaRestrita[97] = CreateDynamicObject(18692, -478.4063, -546.2346, 21.8577, 0.0000, 0.0000, 0.0000); //fire_med
	AreaRestrita[98] = CreateDynamicObject(18692, -490.6461, -539.3745, 21.8577, 0.0000, 0.0000, 0.0000); //fire_med
	AreaRestrita[99] = CreateDynamicObject(18692, -494.0061, -505.1743, 23.3477, 0.0000, 0.0000, 0.0000); //fire_med
	AreaRestrita[100] = CreateDynamicObject(18692, -497.3861, -505.1743, 23.3477, 0.0000, 0.0000, 0.0000); //fire_med

	NewBaseMilitar[0] = CreateObject(18753, 841.1890, -2129.8398, 11.4146, 0.0000, 0.0000, 0.0000); //Base125mx125m1
	NewBaseMilitar[1] = CreateObject(987, 819.8483, -2067.5263, 11.8597, 0.0000, 0.0000, -179.8999); //elecfence_BAR
	NewBaseMilitar[2] = CreateObject(12957, 830.1613, -2031.9870, 12.5343, 0.0000, 0.0000, 45.9999); //sw_pickupwreck01
	NewBaseMilitar[3] = CreateObject(987, 807.8984, -2067.5488, 11.8597, 0.0000, 0.0000, -179.8999); //elecfence_BAR
	NewBaseMilitar[4] = CreateObject(987, 795.9484, -2067.5690, 11.8597, 0.0000, 0.0000, -179.8999); //elecfence_BAR
	NewBaseMilitar[5] = CreateObject(987, 790.6276, -2067.5756, 11.8597, 0.0000, 0.0000, -179.8999); //elecfence_BAR
	NewBaseMilitar[6] = CreateObject(987, 778.7974, -2067.6469, 11.9196, 0.0000, 0.0000, -89.6999); //elecfence_BAR
	NewBaseMilitar[7] = CreateObject(987, 778.8596, -2079.5986, 11.9196, 0.0000, 0.0000, -89.6999); //elecfence_BAR
	NewBaseMilitar[8] = CreateObject(987, 778.9219, -2091.5532, 11.9196, 0.0000, 0.0000, -89.6999); //elecfence_BAR
	NewBaseMilitar[9] = CreateObject(987, 778.9630, -2115.4350, 11.9196, 0.0000, 0.0000, -90.0999); //elecfence_BAR
	NewBaseMilitar[10] = CreateObject(987, 778.9843, -2103.5046, 11.9196, 0.0000, 0.0000, -90.0999); //elecfence_BAR
	NewBaseMilitar[11] = CreateObject(987, 778.9423, -2127.3869, 11.9196, 0.0000, 0.0000, -90.0000); //elecfence_BAR
	NewBaseMilitar[12] = CreateObject(987, 778.9423, -2139.3388, 11.9196, 0.0000, 0.0000, -90.0000); //elecfence_BAR
	NewBaseMilitar[13] = CreateObject(987, 778.9423, -2151.3000, 11.9196, 0.0000, 0.0000, -90.0000); //elecfence_BAR
	NewBaseMilitar[14] = CreateObject(987, 778.9423, -2163.2617, 11.9196, 0.0000, 0.0000, -90.0000); //elecfence_BAR
	NewBaseMilitar[15] = CreateObject(987, 778.9423, -2175.2155, 11.9196, 0.0000, 0.0000, -90.0000); //elecfence_BAR
	NewBaseMilitar[16] = CreateObject(987, 778.9423, -2180.4282, 11.9196, 0.0000, 0.0000, -90.0000); //elecfence_BAR
	NewBaseMilitar[17] = CreateObject(987, 778.9401, -2192.0800, 11.9196, 0.0000, 0.0000, -0.1000); //elecfence_BAR
	NewBaseMilitar[18] = CreateObject(987, 790.8800, -2192.1018, 11.9196, 0.0000, 0.0000, -0.1000); //elecfence_BAR
	NewBaseMilitar[19] = CreateObject(987, 802.8297, -2192.1250, 11.9196, 0.0000, 0.0000, -0.1000); //elecfence_BAR
	NewBaseMilitar[20] = CreateObject(987, 814.7796, -2192.1467, 11.9196, 0.0000, 0.0000, -0.1000); //elecfence_BAR
	NewBaseMilitar[21] = CreateObject(987, 886.4876, -2191.7690, 11.9196, 0.0000, 0.0000, -1.1000); //elecfence_BAR
	NewBaseMilitar[22] = CreateObject(987, 826.7194, -2192.1682, 11.9196, 0.0000, 0.0000, -0.1000); //elecfence_BAR
	NewBaseMilitar[23] = CreateObject(987, 838.6591, -2192.1896, 11.9196, 0.0000, 0.0000, 0.4999); //elecfence_BAR
	NewBaseMilitar[24] = CreateObject(987, 850.6187, -2192.0856, 11.9196, 0.0000, 0.0000, 0.4999); //elecfence_BAR
	NewBaseMilitar[25] = CreateObject(987, 862.5783, -2191.9799, 11.9196, 0.0000, 0.0000, 0.4999); //elecfence_BAR
	NewBaseMilitar[26] = CreateObject(987, 874.5380, -2191.8740, 11.9196, 0.0000, 0.0000, 0.4999); //elecfence_BAR
	NewBaseMilitar[27] = CreateObject(987, 891.7966, -2191.8728, 11.9196, 0.0000, 0.0000, -1.1000); //elecfence_BAR
	NewBaseMilitar[28] = CreateObject(987, 903.3071, -2192.2614, 11.9196, 0.0000, 0.0000, 89.2997); //elecfence_BAR
	NewBaseMilitar[29] = CreateObject(987, 903.4531, -2180.3039, 11.9196, 0.0000, 0.0000, 89.9998); //elecfence_BAR
	NewBaseMilitar[30] = CreateObject(987, 903.4544, -2168.3388, 11.9196, 0.0000, 0.0000, 90.0998); //elecfence_BAR
	NewBaseMilitar[31] = CreateObject(987, 903.4337, -2156.3779, 11.9196, 0.0000, 0.0000, 90.0998); //elecfence_BAR
	NewBaseMilitar[32] = CreateObject(987, 903.4127, -2144.4167, 11.9196, 0.0000, 0.0000, 90.0998); //elecfence_BAR
	NewBaseMilitar[33] = CreateObject(987, 903.3920, -2132.4570, 11.9196, 0.0000, 0.0000, 90.0998); //elecfence_BAR
	NewBaseMilitar[34] = CreateObject(987, 903.3712, -2120.5178, 11.9196, 0.0000, 0.0000, 90.0998); //elecfence_BAR
	NewBaseMilitar[35] = CreateObject(987, 903.3504, -2108.5661, 11.9196, 0.0000, 0.0000, 89.7997); //elecfence_BAR
	NewBaseMilitar[36] = CreateObject(987, 903.3917, -2096.6037, 11.9196, 0.0000, 0.0000, 89.7997); //elecfence_BAR
	NewBaseMilitar[37] = CreateObject(987, 903.4334, -2084.6533, 11.9196, 0.0000, 0.0000, 89.9998); //elecfence_BAR
	NewBaseMilitar[38] = CreateObject(987, 903.4334, -2079.2751, 11.9196, 0.0000, 0.0000, 89.9998); //elecfence_BAR
	NewBaseMilitar[39] = CreateObject(987, 879.6367, -2067.7624, 11.9196, 0.0000, 0.0000, -179.6000); //elecfence_BAR
	NewBaseMilitar[40] = CreateObject(987, 903.5369, -2067.5527, 11.9196, 0.0000, 0.0000, -179.5001); //elecfence_BAR
	NewBaseMilitar[41] = CreateObject(987, 891.5870, -2067.6572, 11.9196, 0.0000, 0.0000, -179.5001); //elecfence_BAR
	NewBaseMilitar[42] = CreateObject(987, 867.6964, -2067.8461, 11.9196, 0.0000, 0.0000, -179.6000); //elecfence_BAR
	NewBaseMilitar[43] = CreateObject(987, 864.8461, -2067.8659, 11.9196, 0.0000, 0.0000, -179.6000); //elecfence_BAR
	NewBaseMilitar[44] = CreateObject(12957, 841.3245, -2043.9079, 12.6843, 0.0000, 0.0000, 45.9999); //sw_pickupwreck01
	NewBaseMilitar[45] = CreateObject(12957, 833.3677, -2021.1252, 12.6843, 0.0000, 0.0000, 45.9999); //sw_pickupwreck01
	NewBaseMilitar[46] = CreateObject(3092, 853.4946, -2067.5412, 14.6510, 0.0000, -1.2999, -1.5999); //dead_tied_cop
	NewBaseMilitar[47] = CreateObject(1358, 831.3165, -2046.9195, 13.0597, 0.0000, 0.0000, 44.4999); //CJ_SKIP_Rubbish
	NewBaseMilitar[48] = CreateObject(1358, 839.1845, -2030.8724, 13.0597, 0.0000, 0.0000, 44.4999); //CJ_SKIP_Rubbish
	NewBaseMilitar[49] = CreateObject(12957, 845.8411, -2023.0362, 12.5444, 0.0000, 0.0000, 45.9999); //sw_pickupwreck01
	NewBaseMilitar[50] = CreateObject(11492, 793.5634, -2074.7309, 11.8961, 0.0000, 0.0000, 0.0000); //des_rshed1_
	SetObjectMaterial(NewBaseMilitar[50], 0, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0xFFFFFFFF);
	NewBaseMilitar[51] = CreateObject(8886, 783.9387, -2084.3464, 15.3896, 0.0000, 0.0000, 0.0000); //vgsEfrght04
	NewBaseMilitar[52] = CreateObject(3092, 805.5125, -2078.1643, 15.1231, 0.0000, -1.2999, -94.6998); //dead_tied_cop
	NewBaseMilitar[53] = CreateObject(2840, 793.3601, -2074.6875, 11.8584, 0.0000, 0.0000, 0.0000); //GB_takeaway05
	//NewBaseMilitar[54] = CreateObject(2415, 784.6315, -2098.2187, 20.3356, 0.0000, 0.0000, 90.1999); //quarry_crusher
	NewBaseMilitar[55] = CreateObject(2840, 782.9699, -2080.0678, 11.8584, 0.0000, 0.0000, 0.0000); //GB_takeaway05
	NewBaseMilitar[56] = CreateObject(2840, 790.6495, -2080.0678, 11.8584, 0.0000, 0.0000, 0.0000); //GB_takeaway05
	NewBaseMilitar[57] = CreateObject(2840, 786.7192, -2074.2756, 11.8584, 0.0000, 0.0000, 0.0000); //GB_takeaway05
	NewBaseMilitar[58] = CreateObject(2840, 786.7192, -2069.7553, 11.8584, 0.0000, 0.0000, 0.0000); //GB_takeaway05
	NewBaseMilitar[59] = CreateObject(2840, 801.1395, -2069.8969, 11.8584, 0.0000, 0.0000, 0.0000); //GB_takeaway05
	NewBaseMilitar[60] = CreateObject(2840, 802.8397, -2079.7358, 11.8584, 0.0000, 0.0000, 0.0000); //GB_takeaway05
	NewBaseMilitar[61] = CreateObject(849, 784.9569, -2078.3991, 12.1599, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3
	NewBaseMilitar[62] = CreateObject(849, 783.6770, -2070.2895, 12.1599, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3
	NewBaseMilitar[63] = CreateObject(18250, 805.5615, -2172.1513, 17.9731, 0.0000, 0.0000, -179.7998); //cuntwjunk06
	NewBaseMilitar[64] = CreateObject(3279, 814.8543, -2072.0209, 11.6605, 0.0000, 0.0000, -91.4999); //a51_spottower
	NewBaseMilitar[65] = CreateObject(3593, 825.8209, -2073.6911, 12.4118, 0.0000, 0.0000, -34.2999); //la_fuckcar2
	NewBaseMilitar[66] = CreateObject(18250, 877.4321, -2171.9025, 17.9731, 0.0000, 0.0000, -179.7998); //cuntwjunk06
	NewBaseMilitar[67] = CreateObject(3279, 858.0930, -2072.6430, 11.6605, 0.0000, 0.0000, -91.4999); //a51_spottower
	NewBaseMilitar[68] = CreateObject(11492, 889.9268, -2074.9611, 11.8961, 0.0000, 0.0000, 0.1999); //des_rshed1_
	SetObjectMaterial(NewBaseMilitar[68], 0, 10101, "2notherbuildsfe", "Bow_church_grass_alt", 0xFFFFFFFF);
	NewBaseMilitar[69] = CreateObject(8886, 893.9097, -2085.0253, 15.1576, 0.0000, 0.0000, 0.0000); //vgsEfrght04
	NewBaseMilitar[70] = CreateObject(3593, 843.7550, -2063.2617, 12.4118, 0.0000, 0.0000, -34.2999); //la_fuckcar2
	NewBaseMilitar[71] = CreateObject(3594, 835.7177, -2088.1394, 12.5322, 0.0000, 0.0000, -133.0998); //la_fuckcar1
	NewBaseMilitar[72] = CreateObject(5126, 890.5855, -2099.3386, 26.8402, 0.0000, 0.0000, 0.0000); //dockcranescale0
	NewBaseMilitar[73] = CreateObject(3877, 852.5988, -2067.6262, 13.0843, 0.0000, 0.0000, 0.0000); //sf_rooflite
	NewBaseMilitar[74] = CreateObject(3877, 820.3186, -2067.6762, 13.0843, 0.0000, 0.0000, 0.0000); //sf_rooflite
	NewBaseMilitar[75] = CreateObject(18688, 830.9918, -2046.9365, 12.3435, 0.0000, 0.0000, 0.0000); //fire
	NewBaseMilitar[76] = CreateObject(18688, 838.9005, -2031.3607, 13.2533, 0.0000, 0.0000, 0.0000); //fire
	NewBaseMilitar[77] = CreateObject(12937, 896.7401, -2119.4543, 14.7665, 0.0000, 0.0000, -88.5000); //CE_CATshack
	NewBaseMilitar[78] = CreateObject(1637, 871.8872, -2125.4880, 13.0558, 0.0000, 0.0000, 0.0000); //od_pat_hutb
	NewBaseMilitar[79] = CreateObject(6928, 844.5150, -2120.5270, 36.3199, 0.0000, 0.0000, 0.0000); //vegasplant03
	NewBaseMilitar[80] = CreateObject(18259, 786.5161, -2137.4797, 13.1885, 0.0000, 0.0000, 179.6999); //logcabinn01
	NewBaseMilitar[81] = CreateObject(12929, 791.5678, -2111.4765, 11.8661, 0.0000, 0.0000, 179.6999); //sw_SHED06
	NewBaseMilitar[82] = CreateObject(13367, 850.7780, -2160.8149, 23.5629, 0.0000, 0.0000, 0.0000); //sw_watertower01
	NewBaseMilitar[83] = CreateObject(13367, 831.6577, -2160.8149, 23.5629, 0.0000, 0.0000, 0.0000); //sw_watertower01
	NewBaseMilitar[84] = CreateObject(18259, 896.7462, -2138.1213, 13.1885, 0.0000, 0.0000, -3.2001); //logcabinn01
	NewBaseMilitar[85] = CreateObject(849, 896.7933, -2078.8229, 12.2028, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3
	NewBaseMilitar[86] = CreateObject(3594, 847.5703, -2087.4086, 12.5214, 0.0000, 0.0000, -38.1999); //la_fuckcar1
	NewBaseMilitar[87] = CreateObject(3593, 869.5150, -2105.7294, 12.3167, 0.0000, 0.0000, 74.8999); //la_fuckcar2
	NewBaseMilitar[88] = CreateObject(3594, 863.6779, -2089.9042, 12.4704, 0.0000, -0.7999, -122.0000); //la_fuckcar1
	NewBaseMilitar[89] = CreateObject(3593, 869.2705, -2107.4770, 12.7049, -11.3000, 0.0000, 166.2001); //la_fuckcar2
	NewBaseMilitar[90] = CreateObject(3594, 863.3435, -2090.3735, 12.7904, -8.4000, 2.7999, 144.5000); //la_fuckcar1
	NewBaseMilitar[91] = CreateObject(3594, 823.3245, -2110.0273, 12.3513, 0.0000, 0.0000, -93.7000); //la_fuckcar1
	NewBaseMilitar[92] = CreateObject(3594, 823.4538, -2108.4162, 13.0136, 8.0999, 0.0000, -168.8000); //la_fuckcar1
	NewBaseMilitar[93] = CreateObject(874, 859.9155, -2080.7004, 13.3329, 0.0000, 0.0000, -102.1999); //veg_procgrasspatch
	NewBaseMilitar[94] = CreateObject(639, 799.1440, -2081.2917, 14.3751, 0.0000, 0.0000, -89.5000); //veg_ivy_balcny_kb3
	NewBaseMilitar[95] = CreateObject(874, 826.1242, -2076.6184, 13.5776, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	NewBaseMilitar[96] = CreateObject(874, 836.6142, -2076.6184, 13.5776, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	NewBaseMilitar[97] = CreateObject(874, 848.7148, -2076.6184, 13.5776, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	NewBaseMilitar[98] = CreateObject(874, 854.5260, -2095.0754, 13.3329, 0.0000, 0.0000, -102.1999); //veg_procgrasspatch
	NewBaseMilitar[99] = CreateObject(874, 840.2341, -2094.0305, 13.3329, 0.0000, 0.0000, -102.1999); //veg_procgrasspatch
	NewBaseMilitar[100] = CreateObject(874, 825.2312, -2092.1210, 12.2028, 0.0000, 0.0000, -104.3000); //veg_procgrasspatch

    //BASE CADU
	/*CreateDynamicObject(10841, 258.67920, -1787.54065, 11.13310,   0.00000, 0.00000, -92.19980);
	CreateDynamicObject(10841, 257.15750, -1827.16174, 10.73300,   0.00000, 0.00000, -92.19980);
	CreateDynamicObject(639, 257.73041, -1834.95386, 11.02070,   0.00000, 0.00000, 176.30000);
	CreateDynamicObject(639, 258.10950, -1822.11304, 11.07070,   0.00000, 0.00000, 176.30000);
	CreateDynamicObject(639, 257.92239, -1828.73083, 11.07070,   0.00000, 0.00000, 177.40010);
	CreateDynamicObject(639, 259.31851, -1795.05811, 11.07070,   0.00000, 0.00000, 176.30000);
	CreateDynamicObject(639, 259.52231, -1788.33911, 11.07070,   0.00000, 0.00000, 176.30000);
	CreateDynamicObject(639, 260.00110, -1780.93555, 11.07070,   0.00000, 0.00000, 176.30000);
	CreateDynamicObject(3749, 256.80661, -1808.53625, 8.64120,   0.00000, 0.00000, -93.40000);
	CreateDynamicObject(17298, 214.99960, -1832.51587, 8.60770,   0.00000, 0.80000, -92.99990);
	CreateDynamicObject(3525, 258.51599, -1816.17566, 6.79700,   -11.40000, 0.00000, -48.59990);
	CreateDynamicObject(3525, 259.46140, -1800.54675, 6.68160,   -11.40000, 0.00000, -48.59990);
	CreateDynamicObject(17298, 219.59850, -1785.54187, 8.93250,   0.69990, -0.39990, -91.79990);
	CreateDynamicObject(3279, 253.64590, -1793.10791, 3.02330,   0.00000, 0.00000, 178.19980);
	CreateDynamicObject(3279, 252.40240, -1824.39624, 2.85330,   0.00000, 0.00000, 178.19980);
	CreateDynamicObject(19143, 214.19060, -1780.82324, 9.44140,   11.19990, 0.00000, 172.29980);
	CreateDynamicObject(10009, 230.14729, -1794.63293, 5.69100,   0.00000, 0.00000, -125.49990);
	CreateDynamicObject(9241, 222.31740, -1814.12366, 10.67830,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(11492, 218.37781, -1817.22705, 2.83200,   0.00000, 0.00000, 175.39970);
	CreateDynamicObject(11492, 219.30299, -1805.72534, 2.83200,   0.00000, 0.00000, 175.39970);
	CreateDynamicObject(10841, 258.67920, -1787.54065, 11.13310,   0.00000, 0.00000, -92.19980);
	CreateDynamicObject(10841, 257.15750, -1827.16174, 10.73300,   0.00000, 0.00000, -92.19980);
	CreateDynamicObject(639, 257.73041, -1834.95386, 11.02070,   0.00000, 0.00000, 176.30000);
	CreateDynamicObject(639, 258.10950, -1822.11304, 11.07070,   0.00000, 0.00000, 176.30000);
	CreateDynamicObject(639, 257.92239, -1828.73083, 11.07070,   0.00000, 0.00000, 177.40010);
	CreateDynamicObject(639, 259.31851, -1795.05811, 11.07070,   0.00000, 0.00000, 176.30000);
	CreateDynamicObject(639, 259.52231, -1788.33911, 11.07070,   0.00000, 0.00000, 176.30000);
	CreateDynamicObject(639, 260.00110, -1780.93555, 11.07070,   0.00000, 0.00000, 176.30000);
	CreateDynamicObject(3749, 256.80661, -1808.53625, 8.64120,   0.00000, 0.00000, -93.40000);
	CreateDynamicObject(17298, 214.99960, -1832.51587, 8.60770,   0.00000, 0.80000, -92.99990);
	CreateDynamicObject(3525, 258.51599, -1816.17566, 6.79700,   -11.40000, 0.00000, -48.59990);
	CreateDynamicObject(3525, 259.46140, -1800.54675, 6.68160,   -11.40000, 0.00000, -48.59990);
	CreateDynamicObject(17298, 219.59850, -1785.54187, 8.93250,   0.69990, -0.39990, -91.79990);
	CreateDynamicObject(3279, 253.64590, -1793.10791, 3.02330,   0.00000, 0.00000, 178.19980);
	CreateDynamicObject(3279, 252.40240, -1824.39624, 2.85330,   0.00000, 0.00000, 178.19980);
	CreateDynamicObject(19143, 214.19060, -1780.82324, 9.44140,   11.19990, 0.00000, 172.29980);
	CreateDynamicObject(10009, 230.14729, -1794.63293, 5.69100,   0.00000, 0.00000, -125.49990);
	CreateDynamicObject(9241, 222.31740, -1814.12366, 10.67830,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(11492, 218.37781, -1817.22705, 2.83200,   0.00000, 0.00000, 175.39970);
	CreateDynamicObject(11492, 219.30299, -1805.72534, 2.83200,   0.00000, 0.00000, 175.39970);
	CreateDynamicObject(10841, 246.30431, -1839.87585, 10.66607,   0.00000, 0.00000, 10.56000);
	CreateDynamicObject(10841, 223.92111, -1844.05347, 10.68094,   0.00000, 0.00000, 10.56000);
	CreateDynamicObject(10841, 201.50964, -1845.95337, 10.69967,   0.00000, 0.00000, -0.84000);
	CreateDynamicObject(10841, 191.35974, -1835.01514, 10.65733,   0.00000, 0.00000, -91.92001);
	CreateDynamicObject(10841, 192.12878, -1812.32507, 10.96627,   0.00000, 0.00000, -91.92001);
	CreateDynamicObject(10841, 192.88309, -1789.56885, 11.12602,   0.00000, 0.00000, -91.92001);
	CreateDynamicObject(10841, 203.84950, -1778.64978, 11.12602,   0.00000, 0.00000, -179.21989);
	CreateDynamicObject(10841, 226.61641, -1778.32520, 11.12602,   0.00000, 0.00000, -179.21989);
	CreateDynamicObject(10841, 248.50642, -1777.72253, 11.12602,   0.00000, 0.00000, -176.63991);
    */
	ObjectVariado[0] = CreateDynamicObject(850, 2475.9853, -1660.7358, 12.4653, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_1
	ObjectVariado[1] = CreateDynamicObject(850, 2490.0380, -1678.0423, 12.3776, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_1
	ObjectVariado[2] = CreateDynamicObject(849, 2475.5307, -1667.4956, 12.6419, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3
	ObjectVariado[3] = CreateDynamicObject(849, 2487.6699, -1655.7033, 12.6319, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3
	ObjectVariado[4] = CreateDynamicObject(849, 2493.8994, -1664.2917, 12.6045, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_3
	ObjectVariado[5] = CreateDynamicObject(1365, 2493.4895, -1670.8092, 13.3816, 0.0000, 0.0000, 27.2000); //CJ_BIG_SKIP1
	ObjectVariado[6] = CreateDynamicObject(1365, 2492.3781, -1667.6861, 14.0062, 0.0000, 18.6000, 106.1000); //CJ_BIG_SKIP1
	ObjectVariado[7] = CreateDynamicObject(2064, 2469.1081, -1667.7534, 12.9184, 0.0000, 0.0000, -88.5000); //CJ_FEILDGUN
	ObjectVariado[8] = CreateDynamicObject(2064, 2468.7553, -1654.2976, 12.9184, 0.0000, 0.0000, -88.5000); //CJ_FEILDGUN
	ObjectVariado[9] = CreateDynamicObject(853, 2504.6076, -1675.9799, 12.7318, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_5
	ObjectVariado[10] = CreateDynamicObject(1358, 2499.9692, -1655.2351, 13.5683, 0.0000, 0.0000, 0.0000); //CJ_SKIP_Rubbish
	ObjectVariado[11] = CreateDynamicObject(853, 2497.8469, -1665.7895, 12.7318, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_5
	ObjectVariado[12] = CreateDynamicObject(3594, 2481.4472, -1667.7983, 12.5832, 0.0000, 0.0000, 34.9000); //la_fuckcar1
	ObjectVariado[13] = CreateDynamicObject(12957, 2494.6896, -1679.8996, 13.2076, 0.0000, 0.0000, -116.2000); //sw_pickupwreck01
	ObjectVariado[14] = CreateDynamicObject(12957, 2480.2031, -1679.6075, 13.2076, 0.0000, 0.0000, 168.0999); //sw_pickupwreck01
	ObjectVariado[15] = CreateDynamicObject(3594, 2483.4243, -1667.2583, 13.1779, -11.0999, 0.0000, -73.9000); //la_fuckcar1
	ObjectVariado[16] = CreateDynamicObject(2672, 2499.2004, -1675.2674, 12.6121, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_4
	ObjectVariado[17] = CreateDynamicObject(2672, 2490.5590, -1675.2674, 12.6121, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_4
	ObjectVariado[18] = CreateDynamicObject(12957, 2481.0688, -1657.7976, 13.2076, 0.0000, 0.0000, 168.0999); //sw_pickupwreck01
	ObjectVariado[19] = CreateDynamicObject(2672, 2498.5227, -1679.2675, 12.6221, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_4
	ObjectVariado[20] = CreateDynamicObject(2672, 2503.3642, -1664.0472, 12.6221, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_4
	ObjectVariado[21] = CreateDynamicObject(2672, 2503.3642, -1664.0472, 12.6221, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_4
	ObjectVariado[22] = CreateDynamicObject(2672, 2503.3642, -1669.7281, 12.6221, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_4
	ObjectVariado[23] = CreateDynamicObject(2672, 2507.7065, -1672.9981, 12.6221, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_4
	ObjectVariado[24] = CreateDynamicObject(2671, 2487.0004, -1681.6715, 12.3437, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_3
	ObjectVariado[25] = CreateDynamicObject(2671, 2484.1691, -1672.2098, 12.3437, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_3
	ObjectVariado[26] = CreateDynamicObject(2671, 2476.9382, -1672.2098, 12.3437, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_3
	ObjectVariado[27] = CreateDynamicObject(2671, 2473.3278, -1663.7500, 12.3437, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_3
	ObjectVariado[28] = CreateDynamicObject(1440, 2492.2873, -1656.0322, 12.8407, 0.0000, 0.0000, 0.0000); //DYN_BOX_PILE_3
	ObjectVariado[29] = CreateDynamicObject(1440, 2487.0061, -1678.1636, 12.8407, 0.0000, 0.0000, 0.0000); //DYN_BOX_PILE_3
	ObjectVariado[30] = CreateDynamicObject(1440, 2478.1142, -1673.2437, 12.8207, 0.0000, 0.0000, 0.0000); //DYN_BOX_PILE_3
	ObjectVariado[31] = CreateDynamicObject(13591, 1399.6235, -939.5214, 34.3484, 0.0000, 0.0000, -31.8001); //kickcar28
	ObjectVariado[32] = CreateDynamicObject(13591, 1428.4576, -942.5465, 35.5184, 0.0000, 0.0000, 24.3999); //kickcar28
	ObjectVariado[33] = CreateDynamicObject(1683, 1425.9345, -946.5275, 177.2771, 0.0000, 0.0000, 0.0000); //ap_jumbo_01
	ObjectVariado[34] = CreateDynamicObject(3594, 1425.4831, -953.6275, 35.6112, 0.0000, 0.0000, -42.9999); //la_fuckcar1
	ObjectVariado[35] = CreateDynamicObject(3594, 1424.8094, -952.8239, 36.1165, 11.5999, 0.0000, -136.2000); //la_fuckcar1
	ObjectVariado[36] = CreateDynamicObject(3269, 1462.0540, -952.5770, 35.0952, 0.0000, 0.0000, 114.2999); //bonyrd_block1_
	ObjectVariado[37] = CreateDynamicObject(3269, 1377.9271, -906.6461, 33.8507, 6.2999, 0.0000, 0.0000); //bonyrd_block1_
	ObjectVariado[38] = CreateDynamicObject(19527, 1319.3511, -940.3170, 36.6877, 0.0000, 0.0000, 0.0000); //Cauldron1
	ObjectVariado[39] = CreateDynamicObject(2667, 1422.3461, -944.5822, 35.1187, 91.4000, 0.0000, 0.0000); //CJ_PIZ_POSTER1
	ObjectVariado[40] = CreateDynamicObject(874, 1324.2014, -931.9391, 36.5279, 1.5999, 0.0000, 0.0000); //veg_procgrasspatch
	ObjectVariado[41] = CreateDynamicObject(874, 1413.6669, -945.1280, 35.7026, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	ObjectVariado[42] = CreateDynamicObject(874, 1426.9454, -945.8280, 36.8226, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	ObjectVariado[43] = CreateDynamicObject(874, 1320.9112, -923.4268, 36.9357, 1.5999, 0.0000, 0.0000); //veg_procgrasspatch
	ObjectVariado[44] = CreateDynamicObject(874, 1314.5100, -934.4223, 38.0492, 1.5999, 0.0000, 0.0000); //veg_procgrasspatch
	ObjectVariado[45] = CreateDynamicObject(874, 1475.4256, -941.1280, 36.8226, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	ObjectVariado[46] = CreateDynamicObject(874, 1330.6313, -923.4268, 36.9357, 1.5999, 0.0000, 0.0000); //veg_procgrasspatch
	ObjectVariado[47] = CreateDynamicObject(874, 1330.6313, -936.2420, 36.5778, 1.5999, 0.0000, 0.0000); //veg_procgrasspatch
	ObjectVariado[48] = CreateDynamicObject(9831, -1760.1551, -611.0266, 12.9515, 1.7000, 0.0000, 0.0000); //sfw_waterfall
	ObjectVariado[49] = CreateDynamicObject(9831, -1760.1251, -641.6255, 15.7213, 0.0000, 0.0000, 0.0000); //sfw_waterfall
	ObjectVariado[50] = CreateDynamicObject(9831, -1760.1551, -600.3154, 12.0988, 1.7000, 0.0000, 0.0000); //sfw_waterfall
	ObjectVariado[51] = CreateDynamicObject(9831, -1745.9816, -610.2608, 14.2214, 7.6999, -5.4999, -54.8999); //sfw_waterfall
	ObjectVariado[52] = CreateDynamicObject(3865, -1757.6794, -665.9453, 19.8815, 0.0000, 0.0000, -0.0000); //concpipe_SFXRF
	ObjectVariado[53] = CreateDynamicObject(3865, -1760.3286, -665.9644, 19.8815, 0.0000, 0.0000, 6.8999); //concpipe_SFXRF
	ObjectVariado[54] = CreateDynamicObject(7916, -1730.8979, -643.3143, 10.4238, 0.0000, 0.0000, 94.0000); //vegaswaterfall02
	ObjectVariado[55] = CreateDynamicObject(3502, -1762.6071, -667.5152, 20.0959, 0.0000, 0.0000, 0.0000); //vgsN_con_tube
	ObjectVariado[56] = CreateDynamicObject(18450, -1704.6479, -665.6491, 12.8289, 0.0000, 0.0000, 10.2000); //cs_roadbridge04
	ObjectVariado[57] = CreateDynamicObject(874, -1717.7235, -667.2719, 14.4891, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	ObjectVariado[58] = CreateDynamicObject(874, -1672.3040, -662.0407, 14.4891, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	ObjectVariado[59] = CreateDynamicObject(874, -1695.1793, -663.3488, 14.7591, 0.0000, 0.0000, -111.9000); //veg_procgrasspatch
	ObjectVariado[60] = CreateDynamicObject(874, -1760.1096, -683.6825, 24.0019, 0.0000, 0.0000, 0.0000); //veg_procgrasspatch
	ObjectVariado[61] = CreateDynamicObject(874, -1756.6098, -698.7341, 26.9946, -11.1999, 0.0000, 0.0000); //veg_procgrasspatch
	ObjectVariado[62] = CreateDynamicObject(691, -1770.8186, -671.8526, 20.6614, 0.0000, 0.0000, 0.0000); //sm_veg_tree4_big
	ObjectVariado[63] = CreateDynamicObject(3364, -1790.5032, -658.0205, 22.5393, -9.7000, 0.0000, 72.0999); //des_ruin3_
	ObjectVariado[64] = CreateDynamicObject(691, -1770.8186, -653.7326, 18.9213, 0.0000, 0.0000, 0.0000); //sm_veg_tree4_big
	ObjectVariado[65] = CreateDynamicObject(691, -1767.7479, -690.3927, 23.3314, 0.0000, 0.0000, 0.0000); //sm_veg_tree4_big
	ObjectVariado[66] = CreateDynamicObject(691, -1762.0058, -708.0734, 26.1114, 0.0000, 0.0000, 0.0000); //sm_veg_tree4_big
	ObjectVariado[67] = CreateDynamicObject(691, -1770.8186, -638.5425, 17.1513, 0.0000, 0.0000, 0.0000); //sm_veg_tree4_big
	ObjectVariado[68] = CreateDynamicObject(691, -1771.8089, -620.7523, 16.1713, 0.0000, 0.0000, 0.0000); //sm_veg_tree4_big
	ObjectVariado[69] = CreateDynamicObject(691, -1770.7883, -599.1722, 14.9813, 0.0000, 0.0000, 0.0000); //sm_veg_tree4_big

	BaseStaffMap[0] = CreateDynamicObject(18753, -1659.6453, 3154.5000, 0.6815, 0.0000, 0.0000, 0.0000); //Base125mx125m1
	BaseStaffMap[1] = CreateDynamicObject(19001, -1639.0886, 3159.1750, 11.0262, 0.0000, 0.0000, 0.0000); //VCWideLoop10
	BaseStaffMap[2] = CreateDynamicObject(16640, -1623.2122, 3205.1108, 8.6220, 0.0000, 0.0000, 179.8999); //des_a51_inner3
	BaseStaffMap[3] = CreateDynamicObject(10841, -1608.6160, 3092.7331, 8.9878, 0.0000, 0.0000, 0.0000); //drydock1_SFSe01
	BaseStaffMap[4] = CreateDynamicObject(10841, -1639.4244, 3216.2561, 9.1836, 0.0000, 0.0000, 0.1999); //drydock1_SFSe01
	BaseStaffMap[5] = CreateDynamicObject(10841, -1631.2655, 3092.7331, 8.9878, 0.0000, 0.0000, 0.0000); //drydock1_SFSe01
	BaseStaffMap[6] = CreateDynamicObject(10841, -1653.9050, 3092.7331, 8.9878, 0.0000, 0.0000, 0.0000); //drydock1_SFSe01
	BaseStaffMap[7] = CreateDynamicObject(10841, -1676.5939, 3092.7331, 8.9878, 0.0000, 0.0000, 0.0000); //drydock1_SFSe01
	BaseStaffMap[8] = CreateDynamicObject(10841, -1661.0241, 3216.1811, 9.1836, 0.0000, 0.0000, 0.1999); //drydock1_SFSe01
	BaseStaffMap[9] = CreateDynamicObject(10841, -1699.3240, 3092.7331, 8.9878, 0.0000, 0.0000, 0.0000); //drydock1_SFSe01
	BaseStaffMap[10] = CreateDynamicObject(10841, -1710.6647, 3092.7331, 8.9878, 0.0000, 0.0000, 0.0000); //drydock1_SFSe01
	BaseStaffMap[11] = CreateDynamicObject(10841, -1682.4423, 3216.2041, 9.1836, 0.0000, 0.0000, -0.3999); //drydock1_SFSe01
	BaseStaffMap[12] = CreateDynamicObject(10841, -1703.9311, 3216.3439, 9.1836, 0.0000, 0.0000, 0.1999); //drydock1_SFSe01
	BaseStaffMap[13] = CreateDynamicObject(10841, -1721.3350, 3118.7983, 9.1836, 0.0000, 0.0000, 89.7999); //drydock1_SFSe01
	BaseStaffMap[14] = CreateDynamicObject(10841, -1710.5307, 3216.3200, 9.1836, 0.0000, 0.0000, 0.1999); //drydock1_SFSe01
	BaseStaffMap[15] = CreateDynamicObject(10841, -1721.0327, 3205.9096, 9.1836, 0.0000, 0.0000, 89.7999); //drydock1_SFSe01
	BaseStaffMap[16] = CreateDynamicObject(10841, -1597.8353, 3103.4086, 8.9878, 0.0000, 0.0000, 90.0000); //drydock1_SFSe01
	BaseStaffMap[17] = CreateDynamicObject(10841, -1721.1119, 3183.2595, 9.1836, 0.0000, 0.0000, 89.7999); //drydock1_SFSe01
	BaseStaffMap[18] = CreateDynamicObject(10841, -1721.1877, 3161.7106, 9.1836, 0.0000, 0.0000, 89.7999); //drydock1_SFSe01
	BaseStaffMap[19] = CreateDynamicObject(10841, -1721.2612, 3140.2670, 9.1836, 0.0000, 0.0000, 89.7999); //drydock1_SFSe01
	BaseStaffMap[20] = CreateDynamicObject(10841, -1721.3896, 3103.2070, 9.1836, 0.0000, 0.0000, 89.7999); //drydock1_SFSe01
	BaseStaffMap[21] = CreateDynamicObject(10841, -1597.8353, 3126.0495, 8.9878, 0.0000, 0.0000, 90.0000); //drydock1_SFSe01
	BaseStaffMap[22] = CreateDynamicObject(10841, -1597.8353, 3148.7902, 8.9878, 0.0000, 0.0000, 90.0000); //drydock1_SFSe01
	BaseStaffMap[23] = CreateDynamicObject(10841, -1597.8353, 3171.3513, 8.9878, 0.0000, 0.0000, 90.0000); //drydock1_SFSe01
	BaseStaffMap[24] = CreateDynamicObject(10841, -1597.8353, 3193.8952, 8.9878, 0.0000, 0.0000, 90.0000); //drydock1_SFSe01
	BaseStaffMap[25] = CreateDynamicObject(10841, -1597.8353, 3205.4973, 8.9878, 0.0000, 0.0000, 90.0000); //drydock1_SFSe01
	BaseStaffMap[26] = CreateDynamicObject(10841, -1616.7628, 3216.3325, 9.1836, 0.0000, 0.0000, 0.1999); //drydock1_SFSe01
	BaseStaffMap[27] = CreateDynamicObject(10841, -1608.5423, 3216.3603, 9.1836, 0.0000, 0.0000, 0.1999); //drydock1_SFSe01
	BaseStaffMap[28] = CreateDynamicObject(16640, -1609.9711, 3205.2214, 4.6520, 0.0000, 0.0000, 0.0000); //des_a51_inner3
	BaseStaffMap[29] = CreateDynamicObject(16640, -1610.5504, 3204.8784, 12.5820, 0.0000, 0.0000, -1.8000); //des_a51_inner3
	BaseStaffMap[30] = CreateDynamicObject(16640, -1624.9803, 3205.1604, 16.6020, 0.0000, 0.0000, 179.7999); //des_a51_inner3
	BaseStaffMap[31] = CreateDynamicObject(16640, -1610.7591, 3205.1396, 20.4820, 0.0000, 0.0000, -0.2000); //des_a51_inner3
	BaseStaffMap[32] = CreateDynamicObject(16640, -1624.0523, 3205.3439, 24.4620, 0.0000, 0.0000, 178.9999); //des_a51_inner3
	BaseStaffMap[33] = CreateDynamicObject(16640, -1609.7061, 3204.5795, 28.5520, 0.0000, 0.0000, -4.7000); //des_a51_inner3
	BaseStaffMap[34] = CreateDynamicObject(18450, -1655.3811, 3214.8640, 28.8713, 0.0000, 0.0000, -3.2999); //cs_roadbridge04
	BaseStaffMap[35] = CreateDynamicObject(18450, -1734.6701, 3219.4335, 28.8713, 0.0000, 0.0000, -3.2999); //cs_roadbridge04
	BaseStaffMap[36] = CreateDynamicObject(18450, -1813.2192, 3223.9638, 28.8713, 0.0000, 0.0000, -3.2999); //cs_roadbridge04
	BaseStaffMap[37] = CreateDynamicObject(18450, -1878.4887, 3227.7263, 57.2428, 0.0000, 47.6000, -3.2999); //cs_roadbridge04
	BaseStaffMap[38] = CreateObject(13607, -1945.7631, 3235.2209, 90.2065, 0.0000, 0.0000, 0.0000); //ringwalls
	BaseStaffMap[39] = CreateDynamicObject(14843, -1972.3773, 3242.4975, 87.8737, 0.0000, 0.0000, 72.5999); //int_policeA01
	BaseStaffMap[40] = CreateDynamicObject(8493, -1934.8570, 3211.6877, 103.9658, 0.0000, 0.0000, -99.7999); //pirtshp01_lvs
	BaseStaffMap[41] = CreateDynamicObject(18781, -1691.5985, 3164.5673, 11.9885, 0.0000, 0.0000, 0.0000); //MeshRampBig
	BaseStaffMap[42] = CreateDynamicObject(19912, -1981.6712, 3251.3757, 89.3497, 0.0000, 0.0000, 163.2998); //SAMPMetalGate1
	BaseStaffMap[43] = CreateDynamicObject(1407, -1905.9101, 3225.6625, 87.3176, 0.0000, 0.0000, -102.4998); //DYN_F_R_WOOD_1
	BaseStaffMap[44] = CreateDynamicObject(1407, -1906.2258, 3224.2368, 87.3176, 0.0000, 0.0000, -102.4998); //DYN_F_R_WOOD_1
	BaseStaffMap[45] = CreateDynamicObject(19912, -1984.9794, 3240.3522, 89.3497, 0.0000, 0.0000, 163.2998); //SAMPMetalGate1
	BaseStaffMap[46] = CreateDynamicObject(19912, -1981.6712, 3251.3757, 89.3497, 0.0000, 0.0000, 73.2999); //SAMPMetalGate1
	BaseStaffMap[47] = CreateDynamicObject(14843, -1972.3803, 3242.4860, 90.3437, 0.0000, 0.0000, 72.5999); //int_policeA01
	BaseStaffMap[48] = CreateDynamicObject(14843, -1972.3773, 3242.4975, 90.8137, 0.0000, 0.0000, 72.5999); //int_policeA01
	BaseStaffMap[49] = CreateDynamicObject(19912, -1979.0654, 3250.5944, 92.0797, 90.0000, 0.0000, 73.2999); //SAMPMetalGate1
	BaseStaffMap[50] = CreateDynamicObject(19912, -1973.2827, 3248.8569, 92.0797, 90.0000, 0.0000, 73.2999); //SAMPMetalGate1
	BaseStaffMap[51] = CreateDynamicObject(19912, -1970.6468, 3248.0654, 89.3497, 0.0000, 0.0000, 73.2999); //SAMPMetalGate1

	/*BaseW4lker[0] = CreateDynamicObject(9482, -715.8759, 963.0275, 17.6632, 0.0000, 0.0000, -2.5999); //chinagate
	BaseW4lker[1] = CreateDynamicObject(987, -715.5457, 980.1580, 11.1955, 0.0000, 0.0000, -90.0998); //elecfence_BAR
	BaseW4lker[2] = CreateDynamicObject(987, -715.5266, 991.3308, 11.1955, 0.0000, 0.0000, -90.0998); //elecfence_BAR
	BaseW4lker[3] = CreateDynamicObject(987, -703.7108, 991.0772, 11.2292, 0.0000, 0.0000, 178.8000); //elecfence_BAR
	BaseW4lker[4] = CreateDynamicObject(987, -691.7835, 990.8272, 11.2292, 0.0000, 0.0000, 178.8000); //elecfence_BAR
	BaseW4lker[5] = CreateDynamicObject(987, 2497.5803, 2724.0344, 15.0626, 0.0000, 0.0000, 90.8994); //elecfence_BAR
	BaseW4lker[6] = CreateDynamicObject(987, -679.8660, 990.5778, 11.2292, 0.0000, 0.0000, 178.8000); //elecfence_BAR
	BaseW4lker[7] = CreateDynamicObject(987, -667.9290, 990.3275, 11.2292, 0.0000, 0.0000, 178.8000); //elecfence_BAR
	BaseW4lker[8] = CreateDynamicObject(987, -656.0413, 990.0784, 11.2292, 0.0000, 0.0000, 178.8000); //elecfence_BAR
	BaseW4lker[9] = CreateDynamicObject(987, -645.1336, 989.8803, 11.2292, 0.0000, 0.0000, 178.8000); //elecfence_BAR
	BaseW4lker[10] = CreateDynamicObject(987, -645.3156, 978.0006, 11.2292, 0.0000, 0.0000, 89.4000); //elecfence_BAR
	BaseW4lker[11] = CreateDynamicObject(987, -645.4099, 966.1115, 11.2292, 0.0000, 0.0000, 89.4000); //elecfence_BAR
	BaseW4lker[12] = CreateDynamicObject(987, -645.5344, 954.1925, 11.2292, 0.0000, 0.0000, 89.4000); //elecfence_BAR
	BaseW4lker[13] = CreateDynamicObject(987, -645.5344, 954.1925, 11.2292, 0.0000, 0.0000, 89.4000); //elecfence_BAR
	BaseW4lker[14] = CreateDynamicObject(987, -645.6591, 942.2431, 11.2292, 0.0000, 0.0000, 89.4000); //elecfence_BAR
	BaseW4lker[15] = CreateDynamicObject(987, -645.7553, 932.0736, 11.2292, 0.0000, 0.0000, 89.4000); //elecfence_BAR
	BaseW4lker[16] = CreateDynamicObject(987, -654.7429, 924.4274, 11.2292, 0.0000, 0.0000, 40.2999); //elecfence_BAR
	BaseW4lker[17] = CreateDynamicObject(987, -663.8267, 916.7238, 11.2292, 0.0000, 0.0000, 40.2999); //elecfence_BAR
	BaseW4lker[18] = CreateDynamicObject(987, -673.8142, 910.8649, 11.2292, 0.0000, 0.0000, 31.1000); //elecfence_BAR
	BaseW4lker[19] = CreateDynamicObject(987, -685.7501, 910.6674, 11.2292, 0.0000, 0.0000, 1.7999); //elecfence_BAR
	BaseW4lker[20] = CreateDynamicObject(987, -697.4343, 910.6193, 11.2292, 0.0000, 0.0000, -0.2998); //elecfence_BAR
	BaseW4lker[21] = CreateDynamicObject(987, -716.2608, 957.1209, 11.0698, 0.0000, 0.0000, -93.6996); //elecfence_BAR
	BaseW4lker[22] = CreateDynamicObject(987, -717.0667, 945.1193, 11.0698, 0.0000, 0.0000, -93.3999); //elecfence_BAR
	BaseW4lker[23] = CreateDynamicObject(987, -717.7232, 933.2174, 11.0698, 0.0000, 0.0000, -92.8000); //elecfence_BAR
	BaseW4lker[24] = CreateDynamicObject(987, -718.3004, 922.4309, 11.0698, 0.0000, 0.0000, -91.0000); //elecfence_BAR
	BaseW4lker[25] = CreateDynamicObject(987, -709.4049, 910.6065, 11.2468, 0.0000, 0.0000, 0.0000); //elecfence_BAR
	BaseW4lker[26] = CreateDynamicObject(987, -718.5949, 910.6065, 11.2468, 0.0000, 0.0000, 0.0000); //elecfence_BAR
	BaseW4lker[27] = CreateDynamicObject(3279, -711.2774, 987.1807, 11.2152, 0.0000, 0.0000, 0.0000); //a51_spottower
	BaseW4lker[28] = CreateDynamicObject(3279, -714.0280, 915.8690, 11.2152, 0.0000, 0.0000, 0.0000); //a51_spottower
	BaseW4lker[29] = CreateDynamicObject(3279, -661.0206, 924.9105, 11.2152, 0.0000, 0.0000, 130.2996); //a51_spottower
	BaseW4lker[30] = CreateDynamicObject(3279, -649.5136, 984.9766, 11.2152, 0.0000, 0.0000, 176.9998); //a51_spottower
	BaseW4lker[31] = CreateDynamicObject(987, -716.4926, 952.3778, 15.8732, -0.5999, 0.0000, -94.4000); //elecfence_BAR
	BaseW4lker[32] = CreateDynamicObject(987, -717.4108, 940.4428, 15.8732, -0.5999, 0.0000, -92.8000); //elecfence_BAR
	BaseW4lker[33] = CreateDynamicObject(987, -717.9937, 928.5172, 15.8732, -0.5999, 0.0000, -92.1996); //elecfence_BAR
	BaseW4lker[34] = CreateDynamicObject(987, -718.2310, 922.3419, 15.8732, -0.5999, 0.0000, -92.1996); //elecfence_BAR
	BaseW4lker[35] = CreateDynamicObject(987, -718.7650, 910.6312, 15.8718, -0.5999, 0.0000, -0.4000); //elecfence_BAR
	BaseW4lker[36] = CreateDynamicObject(987, -706.8244, 910.5482, 15.8718, -0.5999, 0.0000, -0.3000); //elecfence_BAR
	BaseW4lker[37] = CreateDynamicObject(987, -694.8845, 910.4854, 15.8718, -0.5999, 0.0000, 0.2998); //elecfence_BAR
	BaseW4lker[38] = CreateDynamicObject(987, -685.2150, 910.5349, 15.8718, -0.5999, 0.0000, 2.3998); //elecfence_BAR
	BaseW4lker[39] = CreateDynamicObject(987, -673.5504, 911.1956, 15.8795, -0.5999, 0.0000, 30.2999); //elecfence_BAR
	BaseW4lker[40] = CreateDynamicObject(987, -663.3555, 917.2246, 15.8795, -0.5999, 0.0000, 40.4999); //elecfence_BAR
	BaseW4lker[41] = CreateDynamicObject(987, -655.1278, 924.2515, 15.8795, -0.5999, 0.0000, 40.4999); //elecfence_BAR
	BaseW4lker[42] = CreateDynamicObject(987, -645.9011, 931.9821, 15.8816, -0.5999, 0.0000, 88.9999); //elecfence_BAR
	BaseW4lker[43] = CreateDynamicObject(987, -645.6942, 943.8402, 15.8816, -0.5999, 0.0000, 89.2995); //elecfence_BAR
	BaseW4lker[44] = CreateDynamicObject(987, -645.5490, 955.7199, 15.8816, -0.5999, 0.0000, 89.3999); //elecfence_BAR
	BaseW4lker[45] = CreateDynamicObject(987, -645.4243, 967.6292, 15.8816, -0.5999, 0.0000, 89.6996); //elecfence_BAR
	BaseW4lker[46] = CreateDynamicObject(987, -645.3092, 989.6787, 15.8816, -0.5999, 0.0000, 178.1999); //elecfence_BAR
	BaseW4lker[47] = CreateDynamicObject(987, -657.2039, 990.0524, 15.8816, -0.5999, 0.0000, 178.5000); //elecfence_BAR
	BaseW4lker[48] = CreateDynamicObject(987, -669.1002, 990.3640, 15.8816, -0.5999, 0.0000, 178.6000); //elecfence_BAR
	BaseW4lker[49] = CreateDynamicObject(987, -680.9675, 990.6538, 15.8816, -0.5999, 0.0000, 178.8999); //elecfence_BAR
	BaseW4lker[50] = CreateDynamicObject(987, -692.8355, 990.8809, 15.8816, -0.5999, 0.0000, 178.8999); //elecfence_BAR
	BaseW4lker[51] = CreateDynamicObject(987, -703.8635, 991.0944, 15.8816, -0.5999, 0.0000, 179.1999); //elecfence_BAR
	BaseW4lker[52] = CreateDynamicObject(987, -715.6049, 991.3242, 15.9076, -0.5999, 0.0000, -88.9999); //elecfence_BAR
	BaseW4lker[53] = CreateDynamicObject(987, -715.5004, 985.2655, 15.9076, -0.5999, 0.0000, -88.9999); //elecfence_BAR
	BaseW4lker[54] = CreateDynamicObject(19439, -715.6912, 967.3698, 19.5694, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[55] = CreateDynamicObject(19439, -715.6912, 965.7697, 19.5694, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[56] = CreateDynamicObject(3524, -716.1384, 968.5554, 14.0326, 0.0000, 0.0000, -84.1996); //skullpillar01_lvs
	BaseW4lker[57] = CreateDynamicObject(3524, -716.6884, 957.5432, 14.0326, 0.0000, 0.0000, -84.1996); //skullpillar01_lvs
	BaseW4lker[58] = CreateDynamicObject(19439, -715.6912, 964.1397, 19.5694, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[59] = CreateDynamicObject(19439, -715.6912, 962.4995, 19.5694, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[60] = CreateDynamicObject(19439, -715.6912, 960.8897, 19.5694, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[61] = CreateDynamicObject(19439, -715.6912, 959.2799, 19.5694, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[62] = CreateDynamicObject(19439, -715.6912, 958.6397, 19.5694, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[63] = CreateDynamicObject(19439, -715.6912, 964.2208, 19.5694, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[64] = CreateDynamicObject(19439, -715.6912, 963.6608, 19.5694, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[65] = CreateDynamicObject(19439, -715.6912, 967.4212, 18.6296, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[66] = CreateDynamicObject(19439, -715.7017, 965.8613, 18.6296, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[67] = CreateDynamicObject(19439, -715.7017, 964.2603, 18.6296, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[68] = CreateDynamicObject(19439, -715.7017, 962.6605, 18.6296, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[69] = CreateDynamicObject(19439, -715.7020, 961.1004, 18.6296, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[70] = CreateDynamicObject(19439, -715.7020, 961.1004, 18.6296, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[71] = CreateDynamicObject(19439, -715.7020, 959.4901, 18.6296, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[72] = CreateDynamicObject(19439, -715.7020, 958.4505, 18.6296, 0.0000, 0.0000, 0.0000); //wall079
	BaseW4lker[73] = CreateDynamicObject(9833, -686.4901, 987.1962, 13.6014, 0.0000, 0.0000, 0.0000); //fountain_SFW
	BaseW4lker[74] = CreateDynamicObject(8613, -701.1889, 931.0067, 14.9357, 0.0000, 0.0000, 0.0000); //vgsSstairs03_lvs
	BaseW4lker[75] = CreateDynamicObject(14781, -669.9151, 986.1643, 12.1752, 0.0000, -0.6998, -1.5999); //in_bxing05
	BaseW4lker[76] = CreateDynamicObject(1985, -657.6040, 973.9696, 14.4238, 0.0000, 0.0000, 0.0000); //punchbagnu
	BaseW4lker[77] = CreateDynamicObject(1331, -704.2866, 943.4124, 12.2827, 0.0000, 0.0000, -179.9998); //BinNt01_LA
	BaseW4lker[78] = CreateDynamicObject(11492, -681.8001, 954.0181, 11.0673, 0.0000, 0.0000, 0.7998); //des_rshed1_
	BaseW4lker[79] = CreateDynamicObject(10029, -680.0744, 959.4827, 20.3465, -1.0000, 0.0000, 92.7998); //copbits_sfe
	BaseW4lker[80] = CreateDynamicObject(987, -645.3682, 978.4093, 15.8816, -0.5999, 0.0000, 89.6996); //elecfence_BAR
	BaseW4lker[81] = CreateDynamicObject(987, 2509.2624, 2857.4277, 14.8056, 0.0000, 0.0000, 1.3999); //elecfence_BAR
	BaseW4lker[82] = CreateDynamicObject(987, 2497.3366, 2857.1364, 14.8056, 0.0000, 0.0000, 1.3999); //elecfence_BAR
	BaseW4lker[83] = CreateDynamicObject(987, 2521.1938, 2857.7189, 14.8056, 0.0000, 0.0000, 0.4000); //elecfence_BAR
	BaseW4lker[84] = CreateDynamicObject(987, 2541.4096, 2857.8073, 14.8056, 0.0000, 0.0000, 0.3000); //elecfence_BAR
	BaseW4lker[85] = CreateDynamicObject(987, 2529.4855, 2857.7768, 14.8056, 0.0000, 0.0000, -0.0998); //elecfence_BAR
	BaseW4lker[86] = CreateDynamicObject(987, 2565.2241, 2857.8903, 14.8056, 0.0000, 0.0000, 0.1000); //elecfence_BAR
	BaseW4lker[87] = CreateDynamicObject(987, 2553.3112, 2857.8718, 14.8056, 0.0000, 0.0000, 0.1000); //elecfence_BAR
	BaseW4lker[88] = CreateDynamicObject(987, 2577.1262, 2857.9094, 14.8056, 0.0000, 0.0000, 0.1000); //elecfence_BAR
	BaseW4lker[89] = CreateDynamicObject(987, 2589.0375, 2857.9291, 14.8056, 0.0000, 0.0000, 0.1000); //elecfence_BAR
	BaseW4lker[90] = CreateDynamicObject(987, 2600.9667, 2857.9519, 14.8056, 0.0000, 0.0000, 0.1000); //elecfence_BAR
	BaseW4lker[91] = CreateDynamicObject(987, 2612.9069, 2857.9736, 14.8056, 0.0000, 0.0000, 0.1000); //elecfence_BAR
	BaseW4lker[92] = CreateDynamicObject(987, 2636.6984, 2858.0131, 14.8056, 0.0000, 0.0000, -0.1999); //elecfence_BAR
	BaseW4lker[93] = CreateDynamicObject(987, 2648.5788, 2857.9719, 14.8056, 0.0000, 0.0000, -0.1999); //elecfence_BAR
	BaseW4lker[94] = CreateDynamicObject(987, 2624.8273, 2857.9948, 14.8056, 0.0000, 0.0000, 0.1000); //elecfence_BAR
	BaseW4lker[95] = CreateDynamicObject(987, 2518.9443, 2666.9804, 15.0626, 0.0000, 0.0000, 134.6994); //elecfence_BAR
	BaseW4lker[96] = CreateDynamicObject(987, 2660.4895, 2857.9291, 14.8056, 0.0000, 0.0000, -0.1999); //elecfence_BAR
	BaseW4lker[97] = CreateDynamicObject(987, 2672.3481, 2857.8859, 14.8056, 0.0000, 0.0000, -0.1999); //elecfence_BAR
	BaseW4lker[98] = CreateDynamicObject(987, 2684.2399, 2857.8447, 14.8056, 0.0000, 0.0000, -0.1999); //elecfence_BAR
	BaseW4lker[99] = CreateDynamicObject(987, 2696.0517, 2857.8032, 14.8056, 0.0000, 0.0000, -0.1999); //elecfence_BAR
	BaseW4lker[100] = CreateDynamicObject(987, 2510.6088, 2675.4033, 15.0626, 0.0000, 0.0000, 134.6994); //elecfence_BAR
	BaseW4lker[101] = CreateDynamicObject(987, 2708.0214, 2857.7604, 14.8056, 0.0000, 0.0000, -0.1999); //elecfence_BAR
	BaseW4lker[102] = CreateDynamicObject(987, 2719.9338, 2857.7194, 14.8056, 0.0000, 0.0000, -0.1999); //elecfence_BAR
	BaseW4lker[103] = CreateDynamicObject(987, 2749.9306, 2665.5874, 15.0626, 0.0000, 0.0000, 179.7998); //elecfence_BAR
	BaseW4lker[104] = CreateDynamicObject(987, 2737.6562, 2857.6550, 14.8056, 0.0000, 0.0000, -0.1999); //elecfence_BAR
	BaseW4lker[105] = CreateDynamicObject(987, 2731.7954, 2857.6760, 14.8056, 0.0000, 0.0000, -0.1999); //elecfence_BAR
	BaseW4lker[106] = CreateDynamicObject(987, 2505.2697, 2680.7973, 15.0626, 0.0000, 0.0000, 134.6994); //elecfence_BAR
	BaseW4lker[107] = CreateDynamicObject(987, 2749.4841, 2857.4890, 15.0626, 0.0000, 0.0000, -90.8000); //elecfence_BAR
	BaseW4lker[108] = CreateDynamicObject(987, 2749.3732, 2849.5986, 15.0626, 0.0000, 0.0000, -89.0998); //elecfence_BAR
	BaseW4lker[109] = CreateDynamicObject(987, 2497.4545, 2794.6928, 15.0878, 0.0000, 0.0000, 89.8999); //elecfence_BAR
	BaseW4lker[110] = CreateDynamicObject(987, 2749.5595, 2837.6987, 15.0626, 0.0000, 0.0000, -89.0998); //elecfence_BAR
	BaseW4lker[111] = CreateDynamicObject(987, 2749.7482, 2825.7890, 15.0626, 0.0000, 0.0000, -89.0998); //elecfence_BAR
	BaseW4lker[112] = CreateDynamicObject(987, 2749.8681, 2813.8879, 15.0626, 0.0000, 0.0000, -90.4999); //elecfence_BAR
	BaseW4lker[113] = CreateDynamicObject(987, 2749.7646, 2802.0488, 15.0626, 0.0000, 0.0000, -90.4999); //elecfence_BAR
	BaseW4lker[114] = CreateDynamicObject(987, 2749.6591, 2790.1274, 15.0626, 0.0000, 0.0000, -90.4999); //elecfence_BAR
	BaseW4lker[115] = CreateDynamicObject(987, 2497.5803, 2724.0344, 15.0626, 0.0000, 0.0000, 90.8994); //elecfence_BAR
	BaseW4lker[116] = CreateDynamicObject(987, 2749.5549, 2778.2470, 15.0626, 0.0000, 0.0000, -90.4999); //elecfence_BAR
	BaseW4lker[117] = CreateDynamicObject(987, 2749.4501, 2766.4079, 15.0626, 0.0000, 0.0000, -90.4999); //elecfence_BAR
	BaseW4lker[118] = CreateDynamicObject(987, 2749.3461, 2754.5476, 15.0626, 0.0000, 0.0000, -90.4999); //elecfence_BAR
	BaseW4lker[119] = CreateDynamicObject(987, 2749.2426, 2742.6977, 15.0626, 0.0000, 0.0000, -90.4999); //elecfence_BAR
	BaseW4lker[120] = CreateDynamicObject(987, 2630.1035, 2617.0874, 15.0626, 0.0000, 0.0000, -179.8000); //elecfence_BAR
	BaseW4lker[121] = CreateDynamicObject(987, 2749.3388, 2730.9208, 15.0626, 0.0000, 0.0000, -88.7998); //elecfence_BAR
	BaseW4lker[122] = CreateDynamicObject(987, 2641.9831, 2617.1291, 15.0626, 0.0000, 0.0000, -179.8000); //elecfence_BAR
	BaseW4lker[123] = CreateDynamicObject(987, 2618.2138, 2617.0476, 15.0626, 0.0000, 0.0000, -179.8000); //elecfence_BAR
	BaseW4lker[124] = CreateDynamicObject(987, 2749.7355, 2707.2019, 15.0626, 0.0000, 0.0000, -89.2998); //elecfence_BAR
	BaseW4lker[125] = CreateDynamicObject(987, 2749.5871, 2719.0822, 15.0626, 0.0000, 0.0000, -89.2998); //elecfence_BAR
	BaseW4lker[126] = CreateDynamicObject(987, 2749.8798, 2695.3925, 15.0626, 0.0000, 0.0000, -89.2998); //elecfence_BAR
	BaseW4lker[127] = CreateDynamicObject(987, 2606.4035, 2617.0058, 15.0626, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	BaseW4lker[128] = CreateDynamicObject(987, 2510.6088, 2675.4033, 15.0626, 0.0000, 0.0000, 134.6994); //elecfence_BAR
	BaseW4lker[129] = CreateDynamicObject(987, 2750.0102, 2676.7509, 15.0626, 0.0000, 0.0000, -89.5998); //elecfence_BAR
	BaseW4lker[130] = CreateDynamicObject(987, 2749.9633, 2683.5805, 15.0626, 0.0000, 0.0000, -89.5998); //elecfence_BAR
	BaseW4lker[131] = CreateDynamicObject(987, 2496.8447, 2830.3044, 15.0878, 0.0000, 0.0000, 90.8998); //elecfence_BAR
	BaseW4lker[132] = CreateDynamicObject(987, 2497.2077, 2700.4057, 15.0626, 0.0000, 0.0000, 89.0995); //elecfence_BAR
	BaseW4lker[133] = CreateDynamicObject(987, 2738.0588, 2665.4880, 15.0626, 0.0000, 0.0000, 179.7998); //elecfence_BAR
	BaseW4lker[134] = CreateDynamicObject(987, 2726.1767, 2665.5275, 15.0626, 0.0000, 0.0000, -179.5001); //elecfence_BAR
	BaseW4lker[135] = CreateDynamicObject(987, 2714.2468, 2665.4228, 15.0626, 0.0000, 0.0000, -179.5001); //elecfence_BAR
	BaseW4lker[136] = CreateDynamicObject(987, 2701.5156, 2665.3142, 15.0626, 0.0000, 0.0000, -90.5001); //elecfence_BAR
	BaseW4lker[137] = CreateDynamicObject(987, 2701.4133, 2653.4736, 15.0626, 0.0000, 0.0000, -89.6001); //elecfence_BAR
	BaseW4lker[138] = CreateDynamicObject(987, 2497.3940, 2712.1953, 15.0626, 0.0000, 0.0000, 89.0995); //elecfence_BAR
	BaseW4lker[139] = CreateDynamicObject(987, 2497.3352, 2833.1264, 14.8478, 0.0000, 0.0000, 90.7997); //elecfence_BAR
	BaseW4lker[140] = CreateDynamicObject(987, 2701.4968, 2641.6022, 15.0626, 0.0000, 0.0000, -89.6001); //elecfence_BAR
	BaseW4lker[141] = CreateDynamicObject(987, 2701.5781, 2629.7409, 15.0626, 0.0000, 0.0000, -89.6001); //elecfence_BAR
	BaseW4lker[142] = CreateDynamicObject(987, 2701.6647, 2617.4013, 15.0626, 0.0000, 0.0000, -179.5001); //elecfence_BAR
	BaseW4lker[143] = CreateDynamicObject(987, 2689.7255, 2617.2939, 15.0626, 0.0000, 0.0000, -179.8000); //elecfence_BAR
	BaseW4lker[144] = CreateDynamicObject(987, 2497.4047, 2735.8232, 15.0626, 0.0000, 0.0000, 91.4994); //elecfence_BAR
	BaseW4lker[145] = CreateDynamicObject(987, 2497.0942, 2747.5883, 15.0626, 0.0000, -0.0998, 88.5995); //elecfence_BAR
	BaseW4lker[146] = CreateDynamicObject(987, 2677.8041, 2617.2534, 15.0626, 0.0000, 0.0000, -179.8000); //elecfence_BAR
	BaseW4lker[147] = CreateDynamicObject(987, 2665.8942, 2617.2121, 15.0626, 0.0000, 0.0000, -179.8000); //elecfence_BAR
	BaseW4lker[148] = CreateDynamicObject(987, 2653.9343, 2617.1704, 15.0626, 0.0000, 0.0000, -179.8000); //elecfence_BAR
	BaseW4lker[149] = CreateDynamicObject(987, 2535.5917, 2650.5654, 15.0626, 0.0000, 0.0000, 135.4994); //elecfence_BAR
	BaseW4lker[150] = CreateDynamicObject(987, 2497.3505, 2782.8227, 15.0878, 0.0000, 0.0000, 89.4999); //elecfence_BAR
	BaseW4lker[151] = CreateDynamicObject(987, 2497.0273, 2689.1264, 15.0626, 0.0000, 0.0000, 89.0995); //elecfence_BAR
	BaseW4lker[152] = CreateDynamicObject(987, 2544.0727, 2642.2302, 15.0626, 0.0000, 0.0000, 135.4994); //elecfence_BAR
	BaseW4lker[153] = CreateDynamicObject(987, 2552.5239, 2633.9240, 15.0626, 0.0000, 0.0000, 135.4994); //elecfence_BAR
	BaseW4lker[154] = CreateDynamicObject(987, 2497.4731, 2806.5551, 15.0878, 0.0000, 0.0000, 92.0998); //elecfence_BAR
	BaseW4lker[155] = CreateDynamicObject(987, 2594.5620, 2617.0058, 15.0626, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	BaseW4lker[156] = CreateDynamicObject(987, 2582.7419, 2617.0058, 15.0626, 0.0000, 0.0000, 179.9998); //elecfence_BAR
	BaseW4lker[157] = CreateDynamicObject(987, 2497.3859, 2759.5336, 15.0833, 0.0000, -0.0998, 88.5995); //elecfence_BAR
	BaseW4lker[158] = CreateDynamicObject(987, 2569.4401, 2617.2988, 15.0626, 0.0000, 0.0000, 135.4994); //elecfence_BAR
	BaseW4lker[159] = CreateDynamicObject(987, 2560.9902, 2625.6049, 15.0626, 0.0000, 0.0000, 135.4994); //elecfence_BAR
	BaseW4lker[160] = CreateDynamicObject(987, 2527.2111, 2658.8007, 15.0626, 0.0000, 0.0000, 135.4994); //elecfence_BAR
	BaseW4lker[161] = CreateDynamicObject(987, 2497.0334, 2818.4274, 15.0878, 0.0000, 0.0000, 90.8998); //elecfence_BAR
	BaseW4lker[162] = CreateDynamicObject(987, 2497.1713, 2845.0556, 14.8478, 0.0000, 0.0000, 90.7997); //elecfence_BAR
	BaseW4lker[163] = CreateDynamicObject(987, 2497.6752, 2771.3811, 15.1041, 0.0000, -0.0998, 92.3994); //elecfence_BAR
	BaseW4lker[164] = CreateDynamicObject(328, 2500.7973, 2810.5446, 14.3205, 0.0000, 0.0000, 0.0000); //gun_boxbig*/

	LojinhaLS[0] = CreateDynamicObject(2677, 1131.3770, -2038.9974, 68.2841, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_7
	LojinhaLS[1] = CreateDynamicObject(2677, 1134.5275, -2026.0764, 68.2841, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_7
	LojinhaLS[2] = CreateDynamicObject(2673, 1147.5045, -2005.1048, 68.1135, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_5
	LojinhaLS[3] = CreateDynamicObject(2673, 1134.1634, -2011.2847, 68.2435, 0.0000, 0.0000, 0.0000); //PROC_RUBBISH_5
	LojinhaLS[4] = CreateDynamicObject(13591, 1147.8886, -2049.7033, 68.3276, 0.0000, 0.0000, 0.0000); //kickcar28
	LojinhaLS[5] = CreateDynamicObject(18688, 1143.8492, -2049.6977, 68.1012, 0.0000, 0.0000, 0.0000); //fire
	LojinhaLS[6] = CreateDynamicObject(18688, 1145.6992, -2049.6977, 68.1012, 0.0000, 0.0000, 0.0000); //fire
	LojinhaLS[7] = CreateDynamicObject(18688, 1149.3294, -2052.5385, 68.3812, 0.0000, 0.0000, 0.0000); //fire
	LojinhaLS[8] = CreateDynamicObject(851, 1150.9807, -2052.6425, 68.2572, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_2
	LojinhaLS[9] = CreateDynamicObject(851, 1147.4501, -2044.4014, 68.2572, 0.0000, 0.0000, 0.0000); //CJ_urb_rub_2
	LojinhaLS[10] = CreateDynamicObject(3279, 1208.3702, -2006.4771, 68.1041, 0.0000, 0.0000, -178.2000); //a51_spottower
	LojinhaLS[11] = CreateDynamicObject(3279, 1208.2017, -2065.4140, 68.1041, 0.0000, 0.0000, 179.9999); //a51_spottower
	LojinhaLS[12] = CreateDynamicObject(1723, 1144.6925, -2019.8688, 67.9294, 0.0000, 0.0000, 91.1000); //mrk_seating1
	LojinhaLS[13] = CreateDynamicObject(1723, 1144.5321, -2017.2277, 67.9294, 0.0000, 0.0000, 2.2000); //mrk_seating1
	LojinhaLS[14] = CreateDynamicObject(11691, 1121.4376, -2010.7811, 73.6257, 0.0000, 0.0000, -89.5000); //CTable2
	LojinhaLS[15] = CreateDynamicObject(11691, 1121.5017, -2018.0810, 73.6257, 0.0000, 0.0000, -89.5000); //CTable2
	LojinhaLS[16] = CreateDynamicObject(6865, 1122.5869, -2036.9956, 74.7035, 0.0000, 0.0000, 132.1999); //steerskull
	LojinhaLS[17] = CreateDynamicObject(2036, 1121.9564, -2009.9826, 74.4296, 0.0000, 0.0000, 88.3999); //CJ_psg1
	LojinhaLS[18] = CreateDynamicObject(1578, 1121.9772, -2011.9317, 74.3702, 0.0000, 0.0000, 89.0999); //drug_green
	LojinhaLS[19] = CreateDynamicObject(1242, 1121.4519, -2009.7027, 74.4903, 74.6999, 0.0000, 88.5000); //bodyarmour
	LojinhaLS[20] = CreateDynamicObject(1242, 1121.3948, -2011.8823, 74.4903, 74.6999, 0.0000, 88.5000); //bodyarmour
	LojinhaLS[21] = CreateDynamicObject(2045, 1121.4017, -2010.6733, 74.4491, 0.0000, 0.0000, 0.0000); //CJ_BBAT_NAILS
	LojinhaLS[22] = CreateDynamicObject(1550, 1121.4729, -2017.0306, 74.6345, -85.3000, 0.0000, -87.0999); //CJ_MONEY_BAG
	LojinhaLS[23] = CreateDynamicObject(1279, 1121.3575, -2019.1909, 74.4609, 0.0000, 0.0000, 0.0000); //craigpackage
	LojinhaLS[24] = CreateDynamicObject(1310, 1121.5207, -2018.0869, 74.4762, -88.3000, 0.0000, -87.3000); //pikupparachute
	LojinhaLS[25] = CreateDynamicObject(2690, 1121.9230, -2030.7204, 75.6291, 0.0000, 0.0000, 0.0000); //CJ_FIRE_EXT
	LojinhaLS[26] = CreateDynamicObject(2690, 1119.6153, -2007.8710, 75.7590, 0.0000, 0.0000, 0.0000); //CJ_FIRE_EXT
	LojinhaLS[27] = CreateDynamicObject(1212, 1121.3867, -2011.1087, 74.3855, 0.0000, 0.0000, 0.0000); //Money
	LojinhaLS[28] = CreateDynamicObject(1212, 1120.9450, -2011.4185, 74.3855, 0.0000, 0.0000, 0.0000); //Money
	LojinhaLS[29] = CreateDynamicObject(13590, 1166.9100, -2009.8251, 68.9663, 0.0000, 0.0000, 93.9000); //kickbus04
	LojinhaLS[30] = CreateDynamicObject(18609, 1194.2722, -2011.9719, 69.1237, 0.0000, 0.0000, 93.8999); //Cs_Logs06
	LojinhaLS[31] = CreateDynamicObject(18609, 1194.6582, -2017.6289, 69.1237, 0.0000, 0.0000, 93.8999); //Cs_Logs06
	LojinhaLS[32] = CreateDynamicObject(18609, 1195.0963, -2024.0440, 69.1237, 0.0000, 0.0000, 93.8999); //Cs_Logs06
	LojinhaLS[33] = CreateDynamicObject(8674, 1108.7957, -1993.1718, 69.4293, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[34] = CreateDynamicObject(8674, 1119.1254, -1993.1718, 69.4293, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[35] = CreateDynamicObject(8674, 1129.3956, -1993.1918, 69.4293, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[36] = CreateDynamicObject(8674, 1139.6761, -1993.1918, 69.4293, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[37] = CreateDynamicObject(8674, 1149.9865, -1993.1918, 69.4293, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[38] = CreateDynamicObject(8674, 1160.2967, -1993.1918, 69.4293, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[39] = CreateDynamicObject(8674, 1170.5870, -1993.1918, 69.4293, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[40] = CreateDynamicObject(8674, 1180.8975, -1993.1918, 69.4293, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[41] = CreateDynamicObject(8674, 1191.1971, -1993.1918, 69.4293, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[42] = CreateDynamicObject(8674, 1201.5069, -1993.1918, 69.4293, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[43] = CreateDynamicObject(8674, 1205.3170, -1993.1918, 69.4293, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[44] = CreateDynamicObject(8674, 1205.3170, -1993.1918, 72.3493, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[45] = CreateDynamicObject(8674, 1195.0272, -1993.1918, 72.3493, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[46] = CreateDynamicObject(8674, 1184.7176, -1993.1918, 72.3493, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[47] = CreateDynamicObject(8674, 1174.4173, -1993.1918, 72.3493, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[48] = CreateDynamicObject(8674, 1164.1177, -1993.1918, 72.3493, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[49] = CreateDynamicObject(8674, 1153.8176, -1993.1918, 72.3493, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[50] = CreateDynamicObject(8674, 1143.5065, -1993.1918, 72.3493, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[51] = CreateDynamicObject(8674, 1133.2071, -1993.1918, 72.3493, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[52] = CreateDynamicObject(8674, 1122.8961, -1993.1918, 72.3493, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[53] = CreateDynamicObject(8674, 1112.5855, -1993.1918, 72.3493, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[54] = CreateDynamicObject(8674, 1108.8061, -1993.1918, 72.3493, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[55] = CreateDynamicObject(8674, 1103.6358, -1998.2525, 69.3394, 0.0000, 0.0000, 90.4000); //csrsfence02_lvs
	LojinhaLS[56] = CreateDynamicObject(8674, 1103.7078, -2008.5223, 69.3394, 0.0000, 0.0000, 90.4000); //csrsfence02_lvs
	LojinhaLS[57] = CreateDynamicObject(8674, 1103.7790, -2018.8223, 69.3394, 0.0000, 0.0000, 90.4000); //csrsfence02_lvs
	LojinhaLS[58] = CreateDynamicObject(8674, 1103.8088, -2023.0128, 69.3394, 0.0000, 0.0000, 90.4000); //csrsfence02_lvs
	LojinhaLS[59] = CreateDynamicObject(8674, 1103.8088, -2023.0128, 72.1993, 0.0000, 0.0000, 90.4000); //csrsfence02_lvs
	LojinhaLS[60] = CreateDynamicObject(8674, 1103.7370, -2012.6927, 72.1993, 0.0000, 0.0000, 90.4000); //csrsfence02_lvs
	LojinhaLS[61] = CreateDynamicObject(8674, 1103.6660, -2002.3829, 72.1993, 0.0000, 0.0000, 90.4000); //csrsfence02_lvs
	LojinhaLS[62] = CreateDynamicObject(8674, 1103.6375, -1998.2924, 72.1993, 0.0000, 0.0000, 90.4000); //csrsfence02_lvs
	LojinhaLS[63] = CreateDynamicObject(8674, 1108.8012, -2080.8327, 69.3224, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[64] = CreateDynamicObject(8674, 1103.6461, -2075.6940, 69.3224, 0.0000, 0.0000, -90.1999); //csrsfence02_lvs
	LojinhaLS[65] = CreateDynamicObject(8674, 1103.6816, -2065.3830, 69.3224, 0.0000, 0.0000, -90.1999); //csrsfence02_lvs
	LojinhaLS[66] = CreateDynamicObject(8674, 1103.7291, -2051.4995, 69.3224, 0.0000, 0.0000, -90.1999); //csrsfence02_lvs
	LojinhaLS[67] = CreateDynamicObject(8674, 1103.7291, -2051.4995, 72.2224, 0.0000, 0.0000, -90.1999); //csrsfence02_lvs
	LojinhaLS[68] = CreateDynamicObject(8674, 1103.6932, -2061.8210, 69.3324, 0.0000, 0.0000, -90.1999); //csrsfence02_lvs
	LojinhaLS[69] = CreateDynamicObject(8674, 1103.6932, -2061.8210, 72.2024, 0.0000, 0.0000, -90.1999); //csrsfence02_lvs
	LojinhaLS[70] = CreateDynamicObject(8674, 1103.6568, -2072.1403, 72.2024, 0.0000, 0.0000, -90.1999); //csrsfence02_lvs
	LojinhaLS[71] = CreateDynamicObject(8674, 1103.6447, -2075.7414, 72.2024, 0.0000, 0.0000, -90.1999); //csrsfence02_lvs
	LojinhaLS[72] = CreateDynamicObject(8674, 1108.8012, -2080.8327, 72.2023, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[73] = CreateDynamicObject(8674, 1119.0908, -2080.8327, 69.3724, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[74] = CreateDynamicObject(8674, 1119.0908, -2080.8327, 72.2223, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[75] = CreateDynamicObject(8674, 1129.4210, -2080.8327, 69.3724, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[76] = CreateDynamicObject(8674, 1129.4210, -2080.8327, 72.2223, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[77] = CreateDynamicObject(8674, 1132.0307, -2080.8327, 69.3823, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[78] = CreateDynamicObject(8674, 1132.0307, -2080.8327, 72.2323, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[79] = CreateDynamicObject(8674, 1142.3237, -2071.0356, 69.3656, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[80] = CreateDynamicObject(8674, 1142.3237, -2071.0356, 72.3056, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[81] = CreateDynamicObject(8674, 1137.1882, -2076.1484, 69.2956, 0.0000, 0.0000, 90.5000); //csrsfence02_lvs
	LojinhaLS[82] = CreateDynamicObject(8674, 1137.1882, -2076.1484, 72.2356, 0.0000, 0.0000, 90.5000); //csrsfence02_lvs
	LojinhaLS[83] = CreateDynamicObject(8674, 1152.6535, -2071.0356, 69.3656, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[84] = CreateDynamicObject(8674, 1152.6535, -2071.0356, 72.2856, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[85] = CreateDynamicObject(8674, 1162.9143, -2071.0356, 69.4156, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[86] = CreateDynamicObject(8674, 1162.9143, -2071.0356, 72.3056, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[87] = CreateDynamicObject(8674, 1173.2047, -2071.0356, 69.3956, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[88] = CreateDynamicObject(8674, 1173.2047, -2071.0356, 72.3256, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[89] = CreateDynamicObject(8674, 1183.5153, -2071.0356, 69.3756, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[90] = CreateDynamicObject(8674, 1183.5153, -2071.0356, 72.3356, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[91] = CreateDynamicObject(8674, 1193.8052, -2071.0356, 69.3656, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[92] = CreateDynamicObject(8674, 1193.8052, -2071.0356, 72.3156, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[93] = CreateDynamicObject(8674, 1204.1245, -2071.0356, 69.3456, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[94] = CreateDynamicObject(8674, 1204.0946, -2071.0356, 72.3056, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[95] = CreateDynamicObject(8674, 1209.9638, -2071.0356, 69.3456, 0.0000, 0.0000, 0.0000); //csrsfence02_lvs
	LojinhaLS[96] = CreateDynamicObject(8674, 1214.9818, -2065.8933, 69.3456, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[97] = CreateDynamicObject(8674, 1214.6934, -2055.5781, 69.3456, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[98] = CreateDynamicObject(8674, 1214.6934, -2055.5781, 72.2656, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[99] = CreateDynamicObject(8674, 1214.9792, -2065.8452, 72.2656, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[100] = CreateDynamicObject(8674, 1209.9112, -2070.9394, 72.2756, 0.0000, 0.0000, -0.0000); //csrsfence02_lvs
	LojinhaLS[101] = CreateDynamicObject(8674, 1213.9371, -2028.4680, 69.3456, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[102] = CreateDynamicObject(8674, 1213.6486, -2018.1314, 69.3456, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[103] = CreateDynamicObject(8674, 1213.3610, -2007.8455, 69.3456, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[104] = CreateDynamicObject(8674, 1213.0897, -1998.1401, 69.3456, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[105] = CreateDynamicObject(8674, 1213.0897, -1998.1401, 72.2556, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[106] = CreateDynamicObject(8674, 1213.3774, -2008.4453, 72.2556, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[107] = CreateDynamicObject(8674, 1213.6641, -2018.7416, 72.2556, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[108] = CreateDynamicObject(8674, 1213.9368, -2028.4884, 72.2556, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[109] = CreateDynamicObject(8674, 1214.4149, -2045.6118, 69.3456, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs
	LojinhaLS[110] = CreateDynamicObject(8674, 1214.4149, -2045.6118, 72.2756, 0.0000, 0.0000, 91.6000); //csrsfence02_lvs

	AreaNaoFuncional[2] = CreateDynamicObject(19273, 117.8746, 1932.3739, 19.5772, 0.0000, 0.0000, 270.0000); //KeypadNonDynamic
	SetObjectMaterial(AreaNaoFuncional[2], 0, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 1, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 2, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 3, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 4, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 5, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 6, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 7, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 8, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 9, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 10, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 11, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 12, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 13, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 14, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[2], 15, 0, "INVALID", "INVALID", 0x00000000);
	AreaNaoFuncional[3] = CreateDynamicObject(19273, 2503.9812, 2780.0930, 11.3669, 0.0000, 0.0000, 90.0000); //KeypadNonDynamic
	SetObjectMaterial(AreaNaoFuncional[3], 0, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 1, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 2, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 3, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 4, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 5, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 6, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 7, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 8, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 9, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 10, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 11, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 12, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 13, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 14, 0, "INVALID", "INVALID", 0x00000000);
	SetObjectMaterial(AreaNaoFuncional[3], 15, 0, "INVALID", "INVALID", 0x00000000);
	AreaNaoFuncional[4] = CreateDynamicObject(747, -2573.7912, 615.8766, 13.4503, 0.0000, 0.0000, -144.0999); //sm_scrub_rock3
	AreaNaoFuncional[5] = CreateDynamicObject(3525, -2580.0219, 663.2968, 18.3587, 0.0000, 0.0000, 0.0000); //exbrtorch01
	AreaNaoFuncional[6] = CreateDynamicObject(4598, -2589.9829, 650.9707, 13.7541, 0.0000, 0.0000, -90.0999); //crprkblok2_LAN2
	AreaNaoFuncional[7] = CreateDynamicObject(747, -2557.3657, 617.2683, 13.2622, 0.0000, 0.0000, -49.4000); //sm_scrub_rock3
	AreaNaoFuncional[8] = CreateDynamicObject(3594, -2556.7797, 612.1831, 14.1734, -0.6000, 37.9999, -61.2999); //la_fuckcar1
	AreaNaoFuncional[9] = CreateDynamicObject(747, -2556.4238, 614.7530, 13.4503, 0.0000, 0.0000, -100.4000); //sm_scrub_rock3
	AreaNaoFuncional[10] = CreateDynamicObject(815, -2575.2548, 615.1859, 11.4967, 0.0000, 0.0000, 0.0000); //genVEG_bush19
	AreaNaoFuncional[11] = CreateDynamicObject(3525, -2576.7797, 658.9381, 18.3587, 0.0000, 0.0000, -91.4000); //exbrtorch01
	AreaNaoFuncional[12] = CreateDynamicObject(3594, -2557.2980, 613.3081, 14.1489, -0.6000, 37.9999, -61.2999); //la_fuckcar1
	AreaNaoFuncional[13] = CreateDynamicObject(747, -2559.2775, 615.8128, 13.5122, 0.0000, 0.0000, -49.4000); //sm_scrub_rock3
	AreaNaoFuncional[14] = CreateDynamicObject(815, -2575.9562, 617.3863, 12.0767, 0.0000, 0.0000, 0.0000); //genVEG_bush19
	AreaNaoFuncional[15] = CreateDynamicObject(18646, -2558.7414, 625.3073, 18.9962, -3.1999, 0.0000, 91.8999); //PoliceLight1
	AreaNaoFuncional[16] = CreateDynamicObject(6865, -2566.9729, 616.3253, 22.8698, 0.0000, 0.0000, 44.7999); //steerskull
	AreaNaoFuncional[17] = CreateDynamicObject(18646, -2574.5468, 625.3027, 18.6058, 3.1000, -1.6000, 90.4000); //PoliceLight1
	AreaNaoFuncional[18] = CreateDynamicObject(747, -2575.6013, 616.7639, 13.2796, 0.0000, 0.0000, -171.1999); //sm_scrub_rock3
	AreaNaoFuncional[19] = CreateDynamicObject(655, -2558.2766, 616.4275, 13.5394, 0.0000, 0.0000, 0.0000); //pinetree06
	AreaNaoFuncional[20] = CreateDynamicObject(815, -2558.1770, 616.6761, 10.8567, 0.0000, 0.0000, 0.0000); //genVEG_bush19
	AreaNaoFuncional[21] = CreateDynamicObject(815, -2556.4465, 612.6453, 11.7067, 0.0000, 0.0000, 0.0000); //genVEG_bush19
	AreaNaoFuncional[22] = CreateDynamicObject(815, -2556.4465, 614.1759, 11.7067, 0.0000, 0.0000, 0.0000); //genVEG_bush19
	AreaNaoFuncional[23] = CreateDynamicObject(815, -2557.8278, 614.1759, 11.7067, 0.0000, 0.0000, 0.0000); //genVEG_bush19
	AreaNaoFuncional[24] = CreateDynamicObject(815, -2557.8278, 615.7457, 11.7067, 0.0000, 0.0000, 0.0000); //genVEG_bush19
	AreaNaoFuncional[25] = CreateDynamicObject(815, -2556.7856, 616.6761, 11.4367, 0.0000, 0.0000, 0.0000); //genVEG_bush19
	AreaNaoFuncional[26] = CreateDynamicObject(815, -2574.7409, 616.4862, 11.7067, 0.0000, 0.0000, 0.0000); //genVEG_bush19
	AreaNaoFuncional[27] = CreateDynamicObject(4598, -2566.1179, 651.0021, 13.7541, 0.0000, 0.0000, -90.0999); //crprkblok2_LAN2
	AreaNaoFuncional[28] = CreateDynamicObject(655, -2575.9980, 615.3773, 13.5394, 0.0000, 0.0000, 0.0000); //pinetree06
	AreaNaoFuncional[29] = CreateDynamicObject(815, -2559.8884, 616.6761, 12.0767, 0.0000, 0.0000, 0.0000); //genVEG_bush19
	AreaNaoFuncional[30] = CreateDynamicObject(815, -2576.7363, 615.3864, 11.1467, 0.0000, 0.0000, 0.0000); //genVEG_bush19
	AreaNaoFuncional[31] = CreateDynamicObject(747, -2574.9899, 614.0573, 13.4503, 0.0000, 0.0000, -144.0999); //sm_scrub_rock3
	AreaNaoFuncional[32] = CreateDynamicObject(747, -2559.5278, 617.9105, 13.5122, 0.0000, 0.0000, -128.0999); //sm_scrub_rock3
	AreaNaoFuncional[33] = CreateDynamicObject(815, -2574.0244, 615.9660, 12.0767, 0.0000, 0.0000, 0.0000); //genVEG_bush19
	AreaNaoFuncional[34] = CreateDynamicObject(747, -2559.1071, 614.0642, 13.4503, 0.0000, 0.0000, -100.4000); //sm_scrub_rock3
	AreaNaoFuncional[35] = CreateDynamicObject(747, -2574.6782, 618.1014, 13.5496, 0.0000, 0.0000, -171.1999); //sm_scrub_rock3
	AreaNaoFuncional[36] = CreateDynamicObject(3593, -2574.9418, 612.2562, 14.4698, 11.5000, 0.8000, -15.4999); //la_fuckcar2
	AreaNaoFuncional[37] = CreateDynamicObject(3593, -2574.0485, 610.4716, 14.8649, 18.5000, 0.8000, 19.0000); //la_fuckcar2
	AreaNaoFuncional[38] = CreateDynamicObject(19377, -2546.5454, 641.1275, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[38], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[39] = CreateDynamicObject(3785, -2574.4201, 636.4365, 18.4582, 0.0000, 0.0000, -1.1000); //bulkheadlight
	AreaNaoFuncional[40] = CreateDynamicObject(17298, -2585.3562, 658.9708, 18.1655, 0.0000, 0.0000, 90.6998); //sjmoldbarn03
	AreaNaoFuncional[41] = CreateDynamicObject(19377, -2546.5454, 660.3878, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[41], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[42] = CreateDynamicObject(19377, -2546.5454, 626.0659, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[42], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[43] = CreateDynamicObject(19869, -2558.1499, 633.6599, 13.4320, 0.0000, 0.0000, 90.6998); //MeshFence2
	AreaNaoFuncional[44] = CreateDynamicObject(19377, -2546.5454, 650.7575, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[44], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[45] = CreateDynamicObject(3785, -2558.1911, 651.9414, 18.4582, 0.0000, 0.0000, -90.5998); //bulkheadlight
	AreaNaoFuncional[46] = CreateDynamicObject(3785, -2558.8742, 636.4879, 18.4582, 0.0000, 0.0000, -178.7998); //bulkheadlight
	AreaNaoFuncional[47] = CreateDynamicObject(639, -2580.2114, 620.0427, 18.2541, 0.0000, 0.0000, 89.0998); //veg_ivy_balcny_kb3
	AreaNaoFuncional[48] = CreateDynamicObject(639, -2584.5507, 620.1101, 18.2541, 0.0000, 0.0000, 89.0998); //veg_ivy_balcny_kb3
	AreaNaoFuncional[49] = CreateDynamicObject(639, -2548.5378, 620.0264, 18.0541, 0.0000, 0.0000, 89.0998); //veg_ivy_balcny_kb3
	AreaNaoFuncional[50] = CreateDynamicObject(19377, -2567.5449, 626.0659, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[50], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[51] = CreateDynamicObject(639, -2548.5378, 620.0264, 18.0541, 0.0000, 0.0000, 89.0998); //veg_ivy_balcny_kb3
	AreaNaoFuncional[52] = CreateDynamicObject(3785, -2575.0729, 651.9376, 18.4582, 0.0000, 0.0000, -90.5998); //bulkheadlight
	AreaNaoFuncional[53] = CreateDynamicObject(19377, -2568.9243, 635.6972, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[53], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[54] = CreateDynamicObject(19377, -2548.4985, 650.8571, 13.4341, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[54], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[55] = CreateDynamicObject(1622, -2573.2658, 618.5219, 19.8192, 1.2999, -21.0000, 98.0000); //nt_securecam2_01
	AreaNaoFuncional[56] = CreateDynamicObject(19377, -2546.5454, 626.0659, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[56], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[57] = CreateDynamicObject(19377, -2557.0493, 645.3272, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[57], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[58] = CreateDynamicObject(19377, -2554.9272, 635.6972, 13.4041, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[58], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[59] = CreateDynamicObject(19377, -2589.9006, 626.0952, 13.4239, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[59], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[60] = CreateDynamicObject(19869, -2575.1435, 628.4321, 13.4320, 0.0000, 0.0000, -90.3000); //MeshFence2
	AreaNaoFuncional[61] = CreateDynamicObject(3939, -2548.5915, 660.6654, 15.1167, 0.0000, 0.0000, -90.0000); //hanger01
	SetObjectMaterial(AreaNaoFuncional[61], 0, 4992, "airportdetail", "kb_ivy_256", 0xFFFFFFFF);
	AreaNaoFuncional[62] = CreateDynamicObject(19377, -2547.9545, 660.3878, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[62], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[63] = CreateDynamicObject(19377, -2558.4519, 660.3878, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[63], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[64] = CreateDynamicObject(19377, -2589.9006, 660.3878, 13.4239, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[64], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[65] = CreateDynamicObject(19377, -2579.4121, 660.3878, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[65], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[66] = CreateDynamicObject(19377, -2579.8989, 650.8571, 13.4341, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[66], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[67] = CreateDynamicObject(19377, -2557.0412, 626.0659, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[67], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[68] = CreateDynamicObject(19377, -2558.4301, 635.6972, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[68], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[69] = CreateDynamicObject(19377, -2558.9411, 650.8571, 13.4341, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[69], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[70] = CreateDynamicObject(19377, -2581.9013, 626.0659, 13.4041, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[70], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[71] = CreateDynamicObject(19425, -2562.6013, 627.9307, 13.5437, 0.0000, 0.0000, 0.0000); //speed_bump01
	AreaNaoFuncional[72] = CreateDynamicObject(19377, -2546.5454, 631.4973, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[72], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[73] = CreateDynamicObject(19377, -2578.0295, 626.0659, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[73], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[74] = CreateDynamicObject(10841, -2587.8576, 620.8225, 20.7602, 0.0000, 0.0000, 0.0000); //drydock1_SFSe01
	SetObjectMaterial(AreaNaoFuncional[74], 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0xFFFFFFFF);
	AreaNaoFuncional[75] = CreateDynamicObject(10841, -2545.6655, 620.8225, 20.7602, 0.0000, 0.0000, 0.0000); //drydock1_SFSe01
	SetObjectMaterial(AreaNaoFuncional[75], 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0xFFFFFFFF);
	AreaNaoFuncional[76] = CreateDynamicObject(19425, -2565.8417, 627.9307, 13.5437, 0.0000, 0.0000, 0.0000); //speed_bump01
	AreaNaoFuncional[77] = CreateDynamicObject(19377, -2589.9006, 654.9887, 13.4239, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[77], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[78] = CreateDynamicObject(19425, -2569.1225, 627.9307, 13.5437, 0.0000, 0.0000, 0.0000); //speed_bump01
	AreaNaoFuncional[79] = CreateDynamicObject(3749, -2566.7685, 621.5999, 19.2063, 0.0000, 0.0000, 0.0000); //ClubGate01_LAx
	SetObjectMaterial(AreaNaoFuncional[79], 0, 3603, "bevmans01_la", "cemebuild03_law", 0xFFFFFFFF);
	AreaNaoFuncional[80] = CreateDynamicObject(19377, -2567.5483, 645.3272, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[80], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[81] = CreateDynamicObject(3939, -2567.8947, 660.6654, 15.1167, 0.0000, 0.0000, -90.0000); //hanger01
	SetObjectMaterial(AreaNaoFuncional[81], 0, 4992, "airportdetail", "kb_ivy_256", 0xFFFFFFFF);
	AreaNaoFuncional[82] = CreateDynamicObject(19377, -2589.9006, 635.7169, 13.4239, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[82], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[83] = CreateDynamicObject(19377, -2568.9274, 660.3878, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[83], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[84] = CreateDynamicObject(19377, -2589.9006, 645.3493, 13.4239, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[84], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[85] = CreateDynamicObject(19377, -2579.4089, 635.6870, 13.4139, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[85], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[86] = CreateDynamicObject(19377, -2578.0476, 645.3272, 13.4239, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[86], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[87] = CreateDynamicObject(19425, -2570.7041, 627.9307, 13.5437, 0.0000, 0.0000, 0.0000); //speed_bump01
	AreaNaoFuncional[88] = CreateDynamicObject(19377, -2569.4248, 650.8571, 13.4341, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[88], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[89] = CreateDynamicObject(19377, -2588.5339, 645.3272, 13.4341, 0.0000, -90.0000, 0.0000); //wall025
	SetObjectMaterial(AreaNaoFuncional[89], 0, 16640, "a51", "metpat64", 0xFFFFFFFF);
	AreaNaoFuncional[90] = CreateDynamicObject(19869, -2558.0822, 628.4910, 13.4320, 0.0000, 0.0000, 90.8999); //MeshFence2
	AreaNaoFuncional[91] = CreateDynamicObject(639, -2553.5698, 620.1051, 18.0541, 0.0000, 0.0000, 89.0998); //veg_ivy_balcny_kb3
	AreaNaoFuncional[92] = CreateDynamicObject(639, -2588.6696, 620.1743, 18.2541, 0.0000, 0.0000, 89.0998); //veg_ivy_balcny_kb3
	AreaNaoFuncional[93] = CreateDynamicObject(639, -2592.3906, 620.2329, 18.2541, 0.0000, 0.0000, 89.0998); //veg_ivy_balcny_kb3
	AreaNaoFuncional[94] = CreateDynamicObject(19869, -2575.1193, 633.6029, 13.4320, 0.0000, 0.0000, -90.3000); //MeshFence2
	AreaNaoFuncional[95] = CreateDynamicObject(639, -2543.9060, 619.9531, 17.9440, 0.0000, 0.0000, 89.0998); //veg_ivy_balcny_kb3

    Create3DTextLabel("Aperte 'F'", -1, 284.0032,1867.3855,8.7578, 3, 0);//sala area 51
    Create3DTextLabel("Aperte 'F'", -1, 1862.9882,-2590.7644,13.5469, 3, 0);//sala aeroporto

    Create3DTextLabel("Aperte 'F'", -1, 1685.8850,-2542.8115,13.6843, 3, 0);//box aeroporto 1
    Create3DTextLabel("Aperte 'F'", -1, 1684.5656,-2546.2144,13.6843, 3, 0);//box aeroporto 2
    Create3DTextLabel("Aperte 'F'", -1, 1784.0095,-2522.3057,49.5400, 3, 0);//box aeroporto 3

	Create3DTextLabel("{840f15}* Safe-Zone * \n {A9A9A9} Aperte [ F ] ou /loja", Verde, -387.0307,-1148.6685,69.3924, 5, 0);
	CreatePickup(1254, 1, -387.0307,-1148.6685,69.3924);  // Loja De Trocas Ro*a
	
	CreateDynamicMapIcon(1554.9523,-1675.6664,16.1953, 30, -1, -1, -1, MAPICON_GLOBAL);  // Delegacia ls
	CreatePickup(1239, 1, 1554.9523,-1675.6664,16.1953);  // Delegacia ls
	
    Create3DTextLabel("{840f15}* Safe-Zone * \n {A9A9A9} Aperte [ F ] ou /loja",Verde, 312.6254,-165.4930,999.6010, 5, 0);
    
    Create3DTextLabel("{840f15}* Black-Market * \n {A9A9A9} Aperte [ F ] ou /loja",Verde, 1410.8461,2107.7568,12.0156, 5, 0); //blackmarket,estadiolv
    CreatePickup(1254, 1, 1410.8461,2107.7568,12.0156);  // EstadioLV

    CreatePickup(1254, 1, 312.6254,-165.4930,999.6010);  // Loja De Trocas
   
    PickSafe[0] = CreatePickup(19605, 1, 1122.7135,-2036.9781,69.8942-0.6);  // entrada lojinhals
	PickSafe[1] = CreatePickup(19605, 1, 316.4667,-169.5602,999.6010-0.6);  // saida lojinhals


	Create3DTextLabel("{840f15}* Entrada Lojinha Safe * \n {A9A9A9} Chegue perto para entrar",Verde, 1122.7135,-2036.9781,69.8942, 20, 0);
	Create3DTextLabel("{840f15}* Saida Lojinha Safe * \n {A9A9A9} Chegue perto para sair",Verde, 316.4667,-169.5602,999.6010, 20, 0);

    //Create3DTextLabel("{840f15}* Saida * \n {A9A9A9} Prefeitura Abandonada",Verde, 389.4673,173.6694,1008.3828, 20, 0);

    TextLoginG[0] = TextDrawCreate(66.000000, -2.000000, "_");
    TextDrawFont(TextLoginG[0], 1);
    TextDrawLetterSize(TextLoginG[0], 0.600000, 50.300010);
    TextDrawTextSize(TextLoginG[0], 298.500000, 144.000000);
    TextDrawSetOutline(TextLoginG[0], 1);
    TextDrawSetShadow(TextLoginG[0], 0);
    TextDrawAlignment(TextLoginG[0], 2);
    TextDrawColor(TextLoginG[0], -1);
    TextDrawBackgroundColor(TextLoginG[0], 255);
    TextDrawBoxColor(TextLoginG[0], 255);
    TextDrawUseBox(TextLoginG[0], 1);
    TextDrawSetProportional(TextLoginG[0], 1);
    TextDrawSetSelectable(TextLoginG[0], 0);

    TextLoginG[1] = TextDrawCreate(66.000000, -2.000000, "_");
    TextDrawFont(TextLoginG[1], 1);
    TextDrawLetterSize(TextLoginG[1], 0.600000, 50.300010);
    TextDrawTextSize(TextLoginG[1], 298.500000, 144.000000);
    TextDrawSetOutline(TextLoginG[1], 1);
    TextDrawSetShadow(TextLoginG[1], 0);
    TextDrawAlignment(TextLoginG[1], 2);
    TextDrawColor(TextLoginG[1], -1);
    TextDrawBackgroundColor(TextLoginG[1], 255);
    TextDrawBoxColor(TextLoginG[1], -236);
    TextDrawUseBox(TextLoginG[1], 1);
    TextDrawSetProportional(TextLoginG[1], 1);
    TextDrawSetSelectable(TextLoginG[1], 0);

    TextLoginG[2] = TextDrawCreate(14.000000, 235.000000, "Preview_Model");
    TextDrawFont(TextLoginG[2], 5);
    TextDrawLetterSize(TextLoginG[2], 0.600000, 2.000000);
    TextDrawTextSize(TextLoginG[2], 55.000000, 45.500000);
    TextDrawSetOutline(TextLoginG[2], 0);
    TextDrawSetShadow(TextLoginG[2], 0);
    TextDrawAlignment(TextLoginG[2], 1);
    TextDrawColor(TextLoginG[2], -1);
    TextDrawBackgroundColor(TextLoginG[2], 1296911716);
    TextDrawBoxColor(TextLoginG[2], 255);
    TextDrawUseBox(TextLoginG[2], 0);
    TextDrawSetProportional(TextLoginG[2], 1);
    TextDrawSetSelectable(TextLoginG[2], 1);
    TextDrawSetPreviewModel(TextLoginG[2], 0);
    TextDrawSetPreviewRot(TextLoginG[2], -10.000000, 0.000000, -20.000000, 100.000000);
    TextDrawSetPreviewVehCol(TextLoginG[2], 1, 1);

    TextLoginG[3] = TextDrawCreate(71.000000, 235.000000, "Preview_Model");
    TextDrawFont(TextLoginG[3], 5);
    TextDrawLetterSize(TextLoginG[3], 0.600000, 2.000000);
    TextDrawTextSize(TextLoginG[3], 55.000000, 45.500000);
    TextDrawSetOutline(TextLoginG[3], 0);
    TextDrawSetShadow(TextLoginG[3], 0);
    TextDrawAlignment(TextLoginG[3], 1);
    TextDrawColor(TextLoginG[3], -1);
    TextDrawBackgroundColor(TextLoginG[3], 1296911716);
    TextDrawBoxColor(TextLoginG[3], 255);
    TextDrawUseBox(TextLoginG[3], 0);
    TextDrawSetProportional(TextLoginG[3], 1);
    TextDrawSetSelectable(TextLoginG[3], 1);
    TextDrawSetPreviewModel(TextLoginG[3], 0);
    TextDrawSetPreviewRot(TextLoginG[3], -10.000000, 0.000000, -20.000000, 100.000000);
    TextDrawSetPreviewVehCol(TextLoginG[3], 1, 1);

    TextLoginG[4] = TextDrawCreate(14.000000, 282.500000, "Preview_Model");
    TextDrawFont(TextLoginG[4], 5);
    TextDrawLetterSize(TextLoginG[4], 0.600000, 2.000000);
    TextDrawTextSize(TextLoginG[4], 112.000000, 21.000000);
    TextDrawSetOutline(TextLoginG[4], 0);
    TextDrawSetShadow(TextLoginG[4], 0);
    TextDrawAlignment(TextLoginG[4], 1);
    TextDrawColor(TextLoginG[4], -1);
    TextDrawBackgroundColor(TextLoginG[4], 1296911716);
    TextDrawBoxColor(TextLoginG[4], 255);
    TextDrawUseBox(TextLoginG[4], 0);
    TextDrawSetProportional(TextLoginG[4], 1);
    TextDrawSetSelectable(TextLoginG[4], 1);
    TextDrawSetPreviewModel(TextLoginG[4], 0);
    TextDrawSetPreviewRot(TextLoginG[4], -10.000000, 0.000000, -20.000000, 100.000000);
    TextDrawSetPreviewVehCol(TextLoginG[4], 1, 1);

    TextLoginG[5] = TextDrawCreate(17.000000, 180.000000, "Day");
    TextDrawFont(TextLoginG[5], 1);
    TextDrawLetterSize(TextLoginG[5], 0.620832, 2.449999);
    TextDrawTextSize(TextLoginG[5], 400.000000, 17.000000);
    TextDrawSetOutline(TextLoginG[5], 0);
    TextDrawSetShadow(TextLoginG[5], 0);
    TextDrawAlignment(TextLoginG[5], 1);
    TextDrawColor(TextLoginG[5], -1);
    TextDrawBackgroundColor(TextLoginG[5], 255);
    TextDrawBoxColor(TextLoginG[5], 50);
    TextDrawUseBox(TextLoginG[5], 0);
    TextDrawSetProportional(TextLoginG[5], 1);
    TextDrawSetSelectable(TextLoginG[5], 0);

    TextLoginG[6] = TextDrawCreate(58.000000, 187.000000, "Of");
    TextDrawFont(TextLoginG[6], 1);
    TextDrawLetterSize(TextLoginG[6], 0.600000, 2.000000);
    TextDrawTextSize(TextLoginG[6], 400.000000, 17.000000);
    TextDrawSetOutline(TextLoginG[6], 0);
    TextDrawSetShadow(TextLoginG[6], 0);
    TextDrawAlignment(TextLoginG[6], 1);
    TextDrawColor(TextLoginG[6], -1962934017);
    TextDrawBackgroundColor(TextLoginG[6], 255);
    TextDrawBoxColor(TextLoginG[6], 50);
    TextDrawUseBox(TextLoginG[6], 0);
    TextDrawSetProportional(TextLoginG[6], 1);
    TextDrawSetSelectable(TextLoginG[6], 0);

    TextLoginG[7] = TextDrawCreate(17.000000, 200.000000, "Survival");
    TextDrawFont(TextLoginG[7], 1);
    TextDrawLetterSize(TextLoginG[7], 0.437500, 1.649999);
    TextDrawTextSize(TextLoginG[7], 400.000000, 17.000000);
    TextDrawSetOutline(TextLoginG[7], 0);
    TextDrawSetShadow(TextLoginG[7], 0);
    TextDrawAlignment(TextLoginG[7], 1);
    TextDrawColor(TextLoginG[7], -1);
    TextDrawBackgroundColor(TextLoginG[7], 255);
    TextDrawBoxColor(TextLoginG[7], 50);
    TextDrawUseBox(TextLoginG[7], 0);
    TextDrawSetProportional(TextLoginG[7], 1);
    TextDrawSetSelectable(TextLoginG[7], 0);

    TextLoginG[8] = TextDrawCreate(107.000000, 250.000000, "perfil");
    TextDrawFont(TextLoginG[8], 2);
    TextDrawLetterSize(TextLoginG[8], 0.195832, 1.299999);
    TextDrawTextSize(TextLoginG[8], 400.000000, 17.000000);
    TextDrawSetOutline(TextLoginG[8], 0);
    TextDrawSetShadow(TextLoginG[8], 0);
    TextDrawAlignment(TextLoginG[8], 2);
    TextDrawColor(TextLoginG[8], -1061109640);
    TextDrawBackgroundColor(TextLoginG[8], 255);
    TextDrawBoxColor(TextLoginG[8], 50);
    TextDrawUseBox(TextLoginG[8], 0);
    TextDrawSetProportional(TextLoginG[8], 1);
    TextDrawSetSelectable(TextLoginG[8], 0);

    TextLoginG[9] = TextDrawCreate(70.000000, 286.000000, "sair");
    TextDrawFont(TextLoginG[9], 2);
    TextDrawLetterSize(TextLoginG[9], 0.204165, 1.399999);
    TextDrawTextSize(TextLoginG[9], 400.000000, 17.000000);
    TextDrawSetOutline(TextLoginG[9], 0);
    TextDrawSetShadow(TextLoginG[9], 0);
    TextDrawAlignment(TextLoginG[9], 2);
    TextDrawColor(TextLoginG[9], -16777096);
    TextDrawBackgroundColor(TextLoginG[9], 255);
    TextDrawBoxColor(TextLoginG[9], 50);
    TextDrawUseBox(TextLoginG[9], 0);
    TextDrawSetProportional(TextLoginG[9], 1);
    TextDrawSetSelectable(TextLoginG[9], 0);

    TextLoginG[10] = TextDrawCreate(74.000000, 245.000000, "ld_beat:chit");
    TextDrawFont(TextLoginG[10], 4);
    TextDrawLetterSize(TextLoginG[10], 0.600000, 2.000000);
    TextDrawTextSize(TextLoginG[10], 15.000000, 15.000000);
    TextDrawSetOutline(TextLoginG[10], 1);
    TextDrawSetShadow(TextLoginG[10], 0);
    TextDrawAlignment(TextLoginG[10], 1);
    TextDrawColor(TextLoginG[10], 1296911871);
    TextDrawBackgroundColor(TextLoginG[10], 255);
    TextDrawBoxColor(TextLoginG[10], 50);
    TextDrawUseBox(TextLoginG[10], 1);
    TextDrawSetProportional(TextLoginG[10], 1);
    TextDrawSetSelectable(TextLoginG[10], 0);

    TextLoginG[11] = TextDrawCreate(71.000000, 254.000000, "ld_beat:chit");
    TextDrawFont(TextLoginG[11], 4);
    TextDrawLetterSize(TextLoginG[11], 0.600000, 2.000000);
    TextDrawTextSize(TextLoginG[11], 21.500000, 15.000000);
    TextDrawSetOutline(TextLoginG[11], 1);
    TextDrawSetShadow(TextLoginG[11], 0);
    TextDrawAlignment(TextLoginG[11], 1);
    TextDrawColor(TextLoginG[11], 1296911871);
    TextDrawBackgroundColor(TextLoginG[11], 255);
    TextDrawBoxColor(TextLoginG[11], 50);
    TextDrawUseBox(TextLoginG[11], 1);
    TextDrawSetProportional(TextLoginG[11], 1);
    TextDrawSetSelectable(TextLoginG[11], 0);

    TextLoginG[12] = TextDrawCreate(6.000000, 244.000000, "Preview_Model");
    TextDrawFont(TextLoginG[12], 5);
    TextDrawLetterSize(TextLoginG[12], 0.600000, 2.000000);
    TextDrawTextSize(TextLoginG[12], 41.000000, 42.500000);
    TextDrawSetOutline(TextLoginG[12], 0);
    TextDrawSetShadow(TextLoginG[12], 0);
    TextDrawAlignment(TextLoginG[12], 1);
    TextDrawColor(TextLoginG[12], 255);
    TextDrawBackgroundColor(TextLoginG[12], 0);
    TextDrawBoxColor(TextLoginG[12], 255);
    TextDrawUseBox(TextLoginG[12], 0);
    TextDrawSetProportional(TextLoginG[12], 1);
    TextDrawSetSelectable(TextLoginG[12], 0);
    TextDrawSetPreviewModel(TextLoginG[12], 1614);
    TextDrawSetPreviewRot(TextLoginG[12], 0.000000, -90.000000, -90.000000, 1.000000);
    TextDrawSetPreviewVehCol(TextLoginG[12], 1, 1);

    TxdGlobalSkin[0] = TextDrawCreate(320.000000, 143.000000, "_");
    TextDrawFont(TxdGlobalSkin[0], 1);
    TextDrawLetterSize(TxdGlobalSkin[0], 0.600000, 14.000003);
    TextDrawTextSize(TxdGlobalSkin[0], 298.500000, 161.000000);
    TextDrawSetOutline(TxdGlobalSkin[0], 1);
    TextDrawSetShadow(TxdGlobalSkin[0], 0);
    TextDrawAlignment(TxdGlobalSkin[0], 2);
    TextDrawColor(TxdGlobalSkin[0], -1);
    TextDrawBackgroundColor(TxdGlobalSkin[0], 255);
    TextDrawBoxColor(TxdGlobalSkin[0], 1296911871);
    TextDrawUseBox(TxdGlobalSkin[0], 1);
    TextDrawSetProportional(TxdGlobalSkin[0], 1);
    TextDrawSetSelectable(TxdGlobalSkin[0], 0);

    TxdGlobalSkin[1] = TextDrawCreate(320.000000, 145.000000, "_");
    TextDrawFont(TxdGlobalSkin[1], 1);
    TextDrawLetterSize(TxdGlobalSkin[1], 0.600000, 13.549990);
    TextDrawTextSize(TxdGlobalSkin[1], 298.500000, 157.500000);
    TextDrawSetOutline(TxdGlobalSkin[1], 0);
    TextDrawSetShadow(TxdGlobalSkin[1], 0);
    TextDrawAlignment(TxdGlobalSkin[1], 2);
    TextDrawColor(TxdGlobalSkin[1], -1);
    TextDrawBackgroundColor(TxdGlobalSkin[1], 255);
    TextDrawBoxColor(TxdGlobalSkin[1], 255);
    TextDrawUseBox(TxdGlobalSkin[1], 1);
    TextDrawSetProportional(TxdGlobalSkin[1], 1);
    TextDrawSetSelectable(TxdGlobalSkin[1], 0);

    TxdGlobalSkin[2] = TextDrawCreate(300.000000, 175.000000, "-Preco:_~g~$_10.000");
    TextDrawFont(TxdGlobalSkin[2], 2);
    TextDrawLetterSize(TxdGlobalSkin[2], 0.187500, 1.300000);
    TextDrawTextSize(TxdGlobalSkin[2], 400.000000, 17.000000);
    TextDrawSetOutline(TxdGlobalSkin[2], 0);
    TextDrawSetShadow(TxdGlobalSkin[2], 0);
    TextDrawAlignment(TxdGlobalSkin[2], 1);
    TextDrawColor(TxdGlobalSkin[2], -1);
    TextDrawBackgroundColor(TxdGlobalSkin[2], 255);
    TextDrawBoxColor(TxdGlobalSkin[2], 50);
    TextDrawUseBox(TxdGlobalSkin[2], 0);
    TextDrawSetProportional(TxdGlobalSkin[2], 1);
    TextDrawSetSelectable(TxdGlobalSkin[2], 0);

    TxdGlobalSkin[3] = TextDrawCreate(300.000000, 199.000000, "Preview_Model");
    TextDrawFont(TxdGlobalSkin[3], 5);
    TextDrawLetterSize(TxdGlobalSkin[3], 0.600000, 2.000000);
    TextDrawTextSize(TxdGlobalSkin[3], 79.500000, 17.000000);
    TextDrawSetOutline(TxdGlobalSkin[3], 0);
    TextDrawSetShadow(TxdGlobalSkin[3], 0);
    TextDrawAlignment(TxdGlobalSkin[3], 1);
    TextDrawColor(TxdGlobalSkin[3], -1);
    TextDrawBackgroundColor(TxdGlobalSkin[3], -1);
    TextDrawBoxColor(TxdGlobalSkin[3], 255);
    TextDrawUseBox(TxdGlobalSkin[3], 0);
    TextDrawSetProportional(TxdGlobalSkin[3], 1);
    TextDrawSetSelectable(TxdGlobalSkin[3], 1);
    TextDrawSetPreviewModel(TxdGlobalSkin[3], 0);
    TextDrawSetPreviewRot(TxdGlobalSkin[3], -10.000000, 0.000000, -20.000000, 15.000000);
    TextDrawSetPreviewVehCol(TxdGlobalSkin[3], 1, 1);

    TxdGlobalSkin[4] = TextDrawCreate(300.000000, 218.000000, "Preview_Model");
    TextDrawFont(TxdGlobalSkin[4], 5);
    TextDrawLetterSize(TxdGlobalSkin[4], 0.600000, 2.000000);
    TextDrawTextSize(TxdGlobalSkin[4], 79.500000, 17.000000);
    TextDrawSetOutline(TxdGlobalSkin[4], 0);
    TextDrawSetShadow(TxdGlobalSkin[4], 0);
    TextDrawAlignment(TxdGlobalSkin[4], 1);
    TextDrawColor(TxdGlobalSkin[4], -1);
    TextDrawBackgroundColor(TxdGlobalSkin[4], -1962934017);
    TextDrawBoxColor(TxdGlobalSkin[4], 255);
    TextDrawUseBox(TxdGlobalSkin[4], 0);
    TextDrawSetProportional(TxdGlobalSkin[4], 1);
    TextDrawSetSelectable(TxdGlobalSkin[4], 1);
    TextDrawSetPreviewModel(TxdGlobalSkin[4], 0);
    TextDrawSetPreviewRot(TxdGlobalSkin[4], -10.000000, 0.000000, -20.000000, 15.000000);
    TextDrawSetPreviewVehCol(TxdGlobalSkin[4], 1, 1);

    TxdGlobalSkin[5] = TextDrawCreate(340.000000, 201.000000, "Comprar");
    TextDrawFont(TxdGlobalSkin[5], 2);
    TextDrawLetterSize(TxdGlobalSkin[5], 0.187500, 1.300000);
    TextDrawTextSize(TxdGlobalSkin[5], 400.000000, 17.000000);
    TextDrawSetOutline(TxdGlobalSkin[5], 0);
    TextDrawSetShadow(TxdGlobalSkin[5], 0);
    TextDrawAlignment(TxdGlobalSkin[5], 2);
    TextDrawColor(TxdGlobalSkin[5], 1433087999);
    TextDrawBackgroundColor(TxdGlobalSkin[5], 255);
    TextDrawBoxColor(TxdGlobalSkin[5], 50);
    TextDrawUseBox(TxdGlobalSkin[5], 0);
    TextDrawSetProportional(TxdGlobalSkin[5], 1);
    TextDrawSetSelectable(TxdGlobalSkin[5], 0);

    TxdGlobalSkin[6] = TextDrawCreate(340.000000, 220.000000, "fechar");
    TextDrawFont(TxdGlobalSkin[6], 2);
    TextDrawLetterSize(TxdGlobalSkin[6], 0.187500, 1.300000);
    TextDrawTextSize(TxdGlobalSkin[6], 400.000000, 17.000000);
    TextDrawSetOutline(TxdGlobalSkin[6], 0);
    TextDrawSetShadow(TxdGlobalSkin[6], 0);
    TextDrawAlignment(TxdGlobalSkin[6], 2);
    TextDrawColor(TxdGlobalSkin[6], -1061109505);
    TextDrawBackgroundColor(TxdGlobalSkin[6], 255);
    TextDrawBoxColor(TxdGlobalSkin[6], 50);
    TextDrawUseBox(TxdGlobalSkin[6], 0);
    TextDrawSetProportional(TxdGlobalSkin[6], 1);
    TextDrawSetSelectable(TxdGlobalSkin[6], 0);

    TxdGlobalSkin[7] = TextDrawCreate(242.000000, 251.000000, "Preview_Model");
    TextDrawFont(TxdGlobalSkin[7], 5);
    TextDrawLetterSize(TxdGlobalSkin[7], 0.600000, 2.000000);
    TextDrawTextSize(TxdGlobalSkin[7], 79.500000, 17.000000);
    TextDrawSetOutline(TxdGlobalSkin[7], 0);
    TextDrawSetShadow(TxdGlobalSkin[7], 0);
    TextDrawAlignment(TxdGlobalSkin[7], 1);
    TextDrawColor(TxdGlobalSkin[7], -1);
    TextDrawBackgroundColor(TxdGlobalSkin[7], -764862721);
    TextDrawBoxColor(TxdGlobalSkin[7], 255);
    TextDrawUseBox(TxdGlobalSkin[7], 0);
    TextDrawSetProportional(TxdGlobalSkin[7], 1);
    TextDrawSetSelectable(TxdGlobalSkin[7], 1);
    TextDrawSetPreviewModel(TxdGlobalSkin[7], 0);
    TextDrawSetPreviewRot(TxdGlobalSkin[7], -10.000000, 0.000000, -20.000000, 15.000000);
    TextDrawSetPreviewVehCol(TxdGlobalSkin[7], 1, 1);

    TxdGlobalSkin[8] = TextDrawCreate(282.000000, 254.000000, "escolher_por_id");
    TextDrawFont(TxdGlobalSkin[8], 2);
    TextDrawLetterSize(TxdGlobalSkin[8], 0.162500, 1.150000);
    TextDrawTextSize(TxdGlobalSkin[8], 400.000000, 17.000000);
    TextDrawSetOutline(TxdGlobalSkin[8], 0);
    TextDrawSetShadow(TxdGlobalSkin[8], 0);
    TextDrawAlignment(TxdGlobalSkin[8], 2);
    TextDrawColor(TxdGlobalSkin[8], -1);
    TextDrawBackgroundColor(TxdGlobalSkin[8], 255);
    TextDrawBoxColor(TxdGlobalSkin[8], 50);
    TextDrawUseBox(TxdGlobalSkin[8], 0);
    TextDrawSetProportional(TxdGlobalSkin[8], 1);
    TextDrawSetSelectable(TxdGlobalSkin[8], 0);

    TxdGlobalSkin[9] = TextDrawCreate(325.000000, 251.000000, "Preview_Model");
    TextDrawFont(TxdGlobalSkin[9], 5);
    TextDrawLetterSize(TxdGlobalSkin[9], 0.600000, 2.000000);
    TextDrawTextSize(TxdGlobalSkin[9], 36.000000, 17.000000);
    TextDrawSetOutline(TxdGlobalSkin[9], 0);
    TextDrawSetShadow(TxdGlobalSkin[9], 0);
    TextDrawAlignment(TxdGlobalSkin[9], 1);
    TextDrawColor(TxdGlobalSkin[9], -1);
    TextDrawBackgroundColor(TxdGlobalSkin[9], 1296911871);
    TextDrawBoxColor(TxdGlobalSkin[9], 255);
    TextDrawUseBox(TxdGlobalSkin[9], 0);
    TextDrawSetProportional(TxdGlobalSkin[9], 1);
    TextDrawSetSelectable(TxdGlobalSkin[9], 1);
    TextDrawSetPreviewModel(TxdGlobalSkin[9], 0);
    TextDrawSetPreviewRot(TxdGlobalSkin[9], -10.000000, 0.000000, -20.000000, 15.000000);
    TextDrawSetPreviewVehCol(TxdGlobalSkin[9], 1, 1);

    TxdGlobalSkin[10] = TextDrawCreate(363.000000, 251.000000, "Preview_Model");
    TextDrawFont(TxdGlobalSkin[10], 5);
    TextDrawLetterSize(TxdGlobalSkin[10], 0.600000, 2.000000);
    TextDrawTextSize(TxdGlobalSkin[10], 36.000000, 17.000000);
    TextDrawSetOutline(TxdGlobalSkin[10], 0);
    TextDrawSetShadow(TxdGlobalSkin[10], 0);
    TextDrawAlignment(TxdGlobalSkin[10], 1);
    TextDrawColor(TxdGlobalSkin[10], -1);
    TextDrawBackgroundColor(TxdGlobalSkin[10], 1296911871);
    TextDrawBoxColor(TxdGlobalSkin[10], 255);
    TextDrawUseBox(TxdGlobalSkin[10], 0);
    TextDrawSetProportional(TxdGlobalSkin[10], 1);
    TextDrawSetSelectable(TxdGlobalSkin[10], 1);
    TextDrawSetPreviewModel(TxdGlobalSkin[10], 0);
    TextDrawSetPreviewRot(TxdGlobalSkin[10], -10.000000, 0.000000, -20.000000, 15.000000);
    TextDrawSetPreviewVehCol(TxdGlobalSkin[10], 1, 1);

    TxdGlobalSkin[11] = TextDrawCreate(342.000000, 254.000000, "<<<");
    TextDrawFont(TxdGlobalSkin[11], 2);
    TextDrawLetterSize(TxdGlobalSkin[11], 0.162500, 1.150000);
    TextDrawTextSize(TxdGlobalSkin[11], 400.000000, 17.000000);
    TextDrawSetOutline(TxdGlobalSkin[11], 0);
    TextDrawSetShadow(TxdGlobalSkin[11], 0);
    TextDrawAlignment(TxdGlobalSkin[11], 2);
    TextDrawColor(TxdGlobalSkin[11], -1);
    TextDrawBackgroundColor(TxdGlobalSkin[11], 255);
    TextDrawBoxColor(TxdGlobalSkin[11], 50);
    TextDrawUseBox(TxdGlobalSkin[11], 0);
    TextDrawSetProportional(TxdGlobalSkin[11], 1);
    TextDrawSetSelectable(TxdGlobalSkin[11], 0);

    TxdGlobalSkin[12] = TextDrawCreate(381.000000, 254.000000, ">>>");
    TextDrawFont(TxdGlobalSkin[12], 2);
    TextDrawLetterSize(TxdGlobalSkin[12], 0.162500, 1.150000);
    TextDrawTextSize(TxdGlobalSkin[12], 400.000000, 17.000000);
    TextDrawSetOutline(TxdGlobalSkin[12], 0);
    TextDrawSetShadow(TxdGlobalSkin[12], 0);
    TextDrawAlignment(TxdGlobalSkin[12], 2);
    TextDrawColor(TxdGlobalSkin[12], -1);
    TextDrawBackgroundColor(TxdGlobalSkin[12], 255);
    TextDrawBoxColor(TxdGlobalSkin[12], 50);
    TextDrawUseBox(TxdGlobalSkin[12], 0);
    TextDrawSetProportional(TxdGlobalSkin[12], 1);
    TextDrawSetSelectable(TxdGlobalSkin[12], 0);

    TextGHud[0] = TextDrawCreate(582.000000, -2.000000, "_");
    TextDrawFont(TextGHud[0], 2);
    TextDrawLetterSize(TextGHud[0], 0.279166, 1.350000);
    TextDrawTextSize(TextGHud[0], 12.000000, 117.500000);
    TextDrawSetOutline(TextGHud[0], 0);
    TextDrawSetShadow(TextGHud[0], 0);
    TextDrawAlignment(TextGHud[0], 2);
    TextDrawColor(TextGHud[0], -6);
    TextDrawBackgroundColor(TextGHud[0], 255);
    TextDrawBoxColor(TextGHud[0], 220);
    TextDrawUseBox(TextGHud[0], 1);
    TextDrawSetProportional(TextGHud[0], 1);
    TextDrawSetSelectable(TextGHud[0], 0);

    TextGHud[1] = TextDrawCreate(524.000000, 1.000000, "ld_grav:timer");
    TextDrawFont(TextGHud[1], 4);
    TextDrawLetterSize(TextGHud[1], 0.600000, 2.000000);
    TextDrawTextSize(TextGHud[1], 10.000000, 10.000000);
    TextDrawSetOutline(TextGHud[1], 1);
    TextDrawSetShadow(TextGHud[1], 0);
    TextDrawAlignment(TextGHud[1], 1);
    TextDrawColor(TextGHud[1], -1061109505);
    TextDrawBackgroundColor(TextGHud[1], 255);
    TextDrawBoxColor(TextGHud[1], 50);
    TextDrawUseBox(TextGHud[1], 1);
    TextDrawSetProportional(TextGHud[1], 1);
    TextDrawSetSelectable(TextGHud[1], 0);

    TextGHud[2] = TextDrawCreate(584.500000, 1.000000, "respawn_loots:_00:00:00");
    TextDrawFont(TextGHud[2], 2);
    TextDrawLetterSize(TextGHud[2], 0.133333, 0.999999);
    TextDrawTextSize(TextGHud[2], 399.500000, 17.000000);
    TextDrawSetOutline(TextGHud[2], 0);
    TextDrawSetShadow(TextGHud[2], 0);
    TextDrawAlignment(TextGHud[2], 2);
    TextDrawColor(TextGHud[2], -1061109505);
    TextDrawBackgroundColor(TextGHud[2], 255);
    TextDrawBoxColor(TextGHud[2], 50);
    TextDrawUseBox(TextGHud[2], 0);
    TextDrawSetProportional(TextGHud[2], 1);
    TextDrawSetSelectable(TextGHud[2], 0);

    EnqueteText[0] = TextDrawCreate(319.000000, 233.000000, "_");
    TextDrawFont(EnqueteText[0], 2);
    TextDrawLetterSize(EnqueteText[0], 0.279166, 11.950003);
    TextDrawTextSize(EnqueteText[0], 12.000000, 225.500000);
    TextDrawSetOutline(EnqueteText[0], 0);
    TextDrawSetShadow(EnqueteText[0], 0);
    TextDrawAlignment(EnqueteText[0], 2);
    TextDrawColor(EnqueteText[0], 255);
    TextDrawBackgroundColor(EnqueteText[0], 255);
    TextDrawBoxColor(EnqueteText[0], 255);
    TextDrawUseBox(EnqueteText[0], 1);
    TextDrawSetProportional(EnqueteText[0], 1);
    TextDrawSetSelectable(EnqueteText[0], 0);

    EnqueteText[1] = TextDrawCreate(319.000000, 152.000000, "Enquete:");
    TextDrawFont(EnqueteText[1], 2);
    TextDrawLetterSize(EnqueteText[1], 0.279166, 1.449998);
    TextDrawTextSize(EnqueteText[1], 12.000000, 225.500000);
    TextDrawSetOutline(EnqueteText[1], 0);
    TextDrawSetShadow(EnqueteText[1], 0);
    TextDrawAlignment(EnqueteText[1], 2);
    TextDrawColor(EnqueteText[1], 255);
    TextDrawBackgroundColor(EnqueteText[1], 255);
    TextDrawBoxColor(EnqueteText[1], 1296911717);
    TextDrawUseBox(EnqueteText[1], 1);
    TextDrawSetProportional(EnqueteText[1], 1);
    TextDrawSetSelectable(EnqueteText[1], 0);

    EnqueteText[2] = TextDrawCreate(319.000000, 168.000000, "_");
    TextDrawFont(EnqueteText[2], 2);
    TextDrawLetterSize(EnqueteText[2], 0.279166, 6.250002);
    TextDrawTextSize(EnqueteText[2], 12.000000, 225.500000);
    TextDrawSetOutline(EnqueteText[2], 0);
    TextDrawSetShadow(EnqueteText[2], 0);
    TextDrawAlignment(EnqueteText[2], 2);
    TextDrawColor(EnqueteText[2], 255);
    TextDrawBackgroundColor(EnqueteText[2], 255);
    TextDrawBoxColor(EnqueteText[2], 255);
    TextDrawUseBox(EnqueteText[2], 1);
    TextDrawSetProportional(EnqueteText[2], 1);
    TextDrawSetSelectable(EnqueteText[2], 0);

    EnqueteText[3] = TextDrawCreate(212.000000, 176.000000, "._Nosso formulario sera amanha as 14:00, voces vao fazer recrutamento?");
    TextDrawFont(EnqueteText[3], 1);
    TextDrawLetterSize(EnqueteText[3], 0.341666, 1.250000);
    TextDrawTextSize(EnqueteText[3], 400.000000, 17.000000);
    TextDrawSetOutline(EnqueteText[3], 0);
    TextDrawSetShadow(EnqueteText[3], 0);
    TextDrawAlignment(EnqueteText[3], 1);
    TextDrawColor(EnqueteText[3], -1);
    TextDrawBackgroundColor(EnqueteText[3], 255);
    TextDrawBoxColor(EnqueteText[3], 50);
    TextDrawUseBox(EnqueteText[3], 0);
    TextDrawSetProportional(EnqueteText[3], 1);
    TextDrawSetSelectable(EnqueteText[3], 0);

    EnqueteText[4] = TextDrawCreate(212.000000, 247.000000, "Ass:_JaozinN_exe");
    TextDrawFont(EnqueteText[4], 1);
    TextDrawLetterSize(EnqueteText[4], 0.320832, 1.549998);
    TextDrawTextSize(EnqueteText[4], 400.000000, 17.000000);
    TextDrawSetOutline(EnqueteText[4], 0);
    TextDrawSetShadow(EnqueteText[4], 0);
    TextDrawAlignment(EnqueteText[4], 1);
    TextDrawColor(EnqueteText[4], -2686721);
    TextDrawBackgroundColor(EnqueteText[4], 255);
    TextDrawBoxColor(EnqueteText[4], 50);
    TextDrawUseBox(EnqueteText[4], 0);
    TextDrawSetProportional(EnqueteText[4], 1);
    TextDrawSetSelectable(EnqueteText[4], 0);

    EnqueteText[5] = TextDrawCreate(227.000000, 299.000000, "ld_bum:blkdot");
    TextDrawFont(EnqueteText[5], 4);
    TextDrawLetterSize(EnqueteText[5], 0.600000, 2.000000);
    TextDrawTextSize(EnqueteText[5], 85.000000, 26.000000);
    TextDrawSetOutline(EnqueteText[5], 1);
    TextDrawSetShadow(EnqueteText[5], 0);
    TextDrawAlignment(EnqueteText[5], 1);
    TextDrawColor(EnqueteText[5], 16711935);
    TextDrawBackgroundColor(EnqueteText[5], 255);
    TextDrawBoxColor(EnqueteText[5], 50);
    TextDrawUseBox(EnqueteText[5], 1);
    TextDrawSetProportional(EnqueteText[5], 1);
    TextDrawSetSelectable(EnqueteText[5], 1);

    EnqueteText[6] = TextDrawCreate(326.000000, 299.000000, "ld_bum:blkdot");
    TextDrawFont(EnqueteText[6], 4);
    TextDrawLetterSize(EnqueteText[6], 0.600000, 2.000000);
    TextDrawTextSize(EnqueteText[6], 85.000000, 26.000000);
    TextDrawSetOutline(EnqueteText[6], 1);
    TextDrawSetShadow(EnqueteText[6], 0);
    TextDrawAlignment(EnqueteText[6], 1);
    TextDrawColor(EnqueteText[6], -16776961);
    TextDrawBackgroundColor(EnqueteText[6], 255);
    TextDrawBoxColor(EnqueteText[6], 50);
    TextDrawUseBox(EnqueteText[6], 1);
    TextDrawSetProportional(EnqueteText[6], 1);
    TextDrawSetSelectable(EnqueteText[6], 1);

    EnqueteText[7] = TextDrawCreate(268.000000, 305.000000, "SIM");
    TextDrawFont(EnqueteText[7], 2);
    TextDrawLetterSize(EnqueteText[7], 0.229166, 1.350000);
    TextDrawTextSize(EnqueteText[7], 400.000000, 17.000000);
    TextDrawSetOutline(EnqueteText[7], 0);
    TextDrawSetShadow(EnqueteText[7], 0);
    TextDrawAlignment(EnqueteText[7], 2);
    TextDrawColor(EnqueteText[7], 255);
    TextDrawBackgroundColor(EnqueteText[7], 255);
    TextDrawBoxColor(EnqueteText[7], 50);
    TextDrawUseBox(EnqueteText[7], 0);
    TextDrawSetProportional(EnqueteText[7], 1);
    TextDrawSetSelectable(EnqueteText[7], 0);

    EnqueteText[8] = TextDrawCreate(367.000000, 305.000000, "Nao");
    TextDrawFont(EnqueteText[8], 2);
    TextDrawLetterSize(EnqueteText[8], 0.229166, 1.350000);
    TextDrawTextSize(EnqueteText[8], 400.000000, 17.000000);
    TextDrawSetOutline(EnqueteText[8], 0);
    TextDrawSetShadow(EnqueteText[8], 0);
    TextDrawAlignment(EnqueteText[8], 2);
    TextDrawColor(EnqueteText[8], 255);
    TextDrawBackgroundColor(EnqueteText[8], 255);
    TextDrawBoxColor(EnqueteText[8], 50);
    TextDrawUseBox(EnqueteText[8], 0);
    TextDrawSetProportional(EnqueteText[8], 1);
    TextDrawSetSelectable(EnqueteText[8], 0);

    EnqueteText[9] = TextDrawCreate(212.000000, 259.000000, "12/10/2022__06:20");
    TextDrawFont(EnqueteText[9], 2);
    TextDrawLetterSize(EnqueteText[9], 0.116667, 0.850000);
    TextDrawTextSize(EnqueteText[9], 400.000000, 17.000000);
    TextDrawSetOutline(EnqueteText[9], 0);
    TextDrawSetShadow(EnqueteText[9], 0);
    TextDrawAlignment(EnqueteText[9], 1);
    TextDrawColor(EnqueteText[9], -2686721);
    TextDrawBackgroundColor(EnqueteText[9], 255);
    TextDrawBoxColor(EnqueteText[9], 50);
    TextDrawUseBox(EnqueteText[9], 0);
    TextDrawSetProportional(EnqueteText[9], 1);
    TextDrawSetSelectable(EnqueteText[9], 0);

	ator[0] = CreateActor(67, 261.4818,2895.9587,10.2384, 90.0926);
	ator[1] = CreateActor(73, -385.3081,-1148.4958,69.3842,91.6382);
	ator[2] = CreateActor(79, -385.3656,-1138.4384,69.5629,89.4060);
	ator[3] = CreateActor(67, -390.6171,-1143.7770,69.2632,180.4003);
	ator[4] = CreateActor(133, -379.2323,-1124.4413,70.6140,355.5399);
	ator[5] = CreateActor(135, -388.2737,-1135.5786,69.5268,209.2585);
	ator[6] = CreateActor(142, -388.9610,-1152.3962,69.5000,175.8861);
    ator[7] = CreateActor(230, 311.6804,-167.7711,999.5938,0.4403);
    ator[8] = CreateActor(26, 1409.3324,2100.2358,12.0156,356.8644);
	ator[9] = CreateActor(19, 1412.9546,2107.7625,12.0156,87.3291);

	ApplyActorAnimation(ator[0], "RIOT","RIOT_CHANT",4.0,1,1,1,1,0);

	safezonels = GangZoneCreate(1094.178222, -2085.197021, 1304.875488, -1978.394409);
    aerozone = GangZoneCreate(1674.409667, -2612.453125, 1862.166015, -2472.276611);
	safezoneroca = GangZoneCreate(-401.641082, -1162.057373, -374.419433, -1126.190551);
    safezonesf = GangZoneCreate(-2000.689, 239.015, -1865.495, 357.3639);
	blackzone = GangZoneCreate(1253.107177, 2052.106689, 1475.754272, 2246.905029);
	docaszone = GangZoneCreate(2374.103027, -2696.648193, 2855.067382, -2326.829833);
	gps = GangZoneCreate(-3334.758544, -3039.903808, 3049.241455, 3184.096191); // Gangzone do tamanho do mapa pra esconder o mapa do jogador
	Area51 = GangZoneCreate(35.03363, 1763.359, 408.7256, 2125.373);
	Area52 = GangZoneCreate(779.189514, -2191.708740, 903.015747, -2068.102539);

    naviozone = GangZoneCreate(-1526.745239, 293.816833, -1229.417846, 517.028930);
    fazendazone = GangZoneCreate(-1184.310668, -1063.497192, -1000.055664, -915.733276);

	bebedortext[0] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, 2178.9702,2798.1052,10.8203, 10);
	bebedortext[1] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, 1880.0948,2074.1824,11.0625, 10);
	bebedortext[2] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, 2462.9690,2031.8120,11.0625, 10);
	bebedortext[3] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, 1362.6451,239.2939,19.5669, 10);
	bebedortext[4] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, 685.1468,-473.8537,16.5363, 10);
	bebedortext[5] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, 1209.4060,-917.3860,43.0442, 10);
	bebedortext[6] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, 2104.7280,-1803.6128,13.5547, 10);
	bebedortext[7] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, 2420.2957,-1504.8816,24.0000, 10);
	bebedortext[8] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, 926.2271,-1356.6251,13.3794, 10);
	bebedortext[9] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, 812.9777,-1618.2938,13.5547, 10);
	bebedortext[10] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, -2144.3264,-2457.7358,30.6250, 10);
	bebedortext[11] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, -2328.0645,-164.4072,35.5547, 10);
	bebedortext[12] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, -2678.1021,260.4480,4.6328, 10);
	bebedortext[13] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, -2354.1089,999.3513,50.8984, 10);
	bebedortext[14] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, 209.8602,-202.7691,1.5703, 10);
	bebedortext[15] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, -142.3332,1222.9147,19.8992, 10);
	bebedortext[16] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, -1212.8503,1827.9877,41.7188, 10);
	bebedortext[17] = CreateDynamic3DTextLabel( "{51A8FF}* Bebedor *\n{FFFFFF}Litros: 20/20",Verde, -1943.3630,2387.3462,49.6953, 10);

	galaotext[0] = CreateDynamic3DTextLabel( "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: 200/200",Verde, 1020.753967, -937.980407, 44.459697, 10);
	galaotext[1] = CreateDynamic3DTextLabel( "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: 200/200",Verde, 1920.391845, -1789.534912, 15.632811, 10);
	galaotext[2] = CreateDynamic3DTextLabel( "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: 200/200",Verde, 667.087951, -581.716003, 18.595932, 10);
	galaotext[3] = CreateDynamic3DTextLabel( "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: 200/200",Verde, -2425.073730, 955.764221, 47.556884, 10);
	galaotext[4] = CreateDynamic3DTextLabel( "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: 200/200",Verde, -1309.912719, 2706.951904, 52.342521, 10);
	galaotext[5] = CreateDynamic3DTextLabel( "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: 200/200",Verde, 2133.232910, 2730.413330, 13.100315, 10);
	galaotext[6] = CreateDynamic3DTextLabel( "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: 200/200",Verde, 2180.193603, 2485.237548, 12.930315, 10);
	galaotext[7] = CreateDynamic3DTextLabel( "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: 200/200",Verde, 2648.048583, 1083.573364, 13.100318, 10);
	galaotext[8] = CreateDynamic3DTextLabel( "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: 200/200",Verde, 2104.457031, 943.173034, 13.110318, 10);
	galaotext[9] = CreateDynamic3DTextLabel( "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: 200/200",Verde, -2234.054687, -2570.366699, 34.231861, 10);
	galaotext[10] = CreateDynamic3DTextLabel( "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: 200/200",Verde, -1702.718994, 412.100433, 9.469684, 10);
	galaotext[11] = CreateDynamic3DTextLabel( "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: 200/200",Verde, -82.244033, -1188.752685, 3.996512, 10);

	BebedorSize[0] = 20;
	BebedorSize[1] = 20;
	BebedorSize[2] = 20;
	BebedorSize[3] = 20;
	BebedorSize[4] = 20;
	BebedorSize[5] = 20;
	BebedorSize[6] = 20;
	BebedorSize[7] = 20;
	BebedorSize[8] = 20;
	BebedorSize[9] = 20;
	BebedorSize[10] = 20;
	BebedorSize[11] = 20;
	BebedorSize[12] = 20;
	BebedorSize[13] = 20;
	BebedorSize[14] = 20;
	BebedorSize[15] = 20;
	BebedorSize[16] = 20;
	BebedorSize[17] = 20;

	GalaoSize[0] = 200;
	GalaoSize[1] = 200;
	GalaoSize[2] = 200;
	GalaoSize[3] = 200;
	GalaoSize[4] = 200;
	GalaoSize[5] = 200;
	GalaoSize[6] = 200;
	GalaoSize[7] = 200;
	GalaoSize[8] = 200;
	GalaoSize[9] = 200;
	GalaoSize[10] = 200;
	GalaoSize[11] = 200;

    Created_Box[0] = TextDrawCreate(319.000000, 169.000000, "_");
    TextDrawFont(Created_Box[0], 1);
    TextDrawLetterSize(Created_Box[0], 0.600000, 16.050008);
    TextDrawTextSize(Created_Box[0], 298.500000, 300.500000);
    TextDrawSetOutline(Created_Box[0], 1);
    TextDrawSetShadow(Created_Box[0], 0);
    TextDrawAlignment(Created_Box[0], 2);
    TextDrawColor(Created_Box[0], -1);
    TextDrawBackgroundColor(Created_Box[0], 255);
    TextDrawBoxColor(Created_Box[0], 135);
    TextDrawUseBox(Created_Box[0], 1);
    TextDrawSetProportional(Created_Box[0], 1);
    TextDrawSetSelectable(Created_Box[0], 0);

    Created_Box[1] = TextDrawCreate(319.000000, 171.000000, "_");
    TextDrawFont(Created_Box[1], 1);
    TextDrawLetterSize(Created_Box[1], 0.600000, 15.600008);
    TextDrawTextSize(Created_Box[1], 298.500000, 295.500000);
    TextDrawSetOutline(Created_Box[1], 1);
    TextDrawSetShadow(Created_Box[1], 0);
    TextDrawAlignment(Created_Box[1], 2);
    TextDrawColor(Created_Box[1], -1);
    TextDrawBackgroundColor(Created_Box[1], 255);
    TextDrawBoxColor(Created_Box[1], 135);
    TextDrawUseBox(Created_Box[1], 1);
    TextDrawSetProportional(Created_Box[1], 1);
    TextDrawSetSelectable(Created_Box[1], 0);

    Created_Box[2] = TextDrawCreate(452.000000, 169.500000, "Preview_Model");
    TextDrawFont(Created_Box[2], 5);
    TextDrawLetterSize(Created_Box[2], 0.600000, 2.000000);
    TextDrawTextSize(Created_Box[2], 16.000000, 16.000000);
    TextDrawSetOutline(Created_Box[2], 0);
    TextDrawSetShadow(Created_Box[2], 0);
    TextDrawAlignment(Created_Box[2], 1);
    TextDrawColor(Created_Box[2], -1);
    TextDrawBackgroundColor(Created_Box[2], -1962934147);
    TextDrawBoxColor(Created_Box[2], 255);
    TextDrawUseBox(Created_Box[2], 0);
    TextDrawSetProportional(Created_Box[2], 1);
    TextDrawSetSelectable(Created_Box[2], 1);
    TextDrawSetPreviewModel(Created_Box[2], 0);
    TextDrawSetPreviewRot(Created_Box[2], -10.000000, 0.000000, -20.000000, 15.000000);
    TextDrawSetPreviewVehCol(Created_Box[2], 1, 1);

    Created_Box[3] = TextDrawCreate(459.000000, 170.000000, "X");
    TextDrawFont(Created_Box[3], 1);
    TextDrawLetterSize(Created_Box[3], 0.333332, 1.350000);
    TextDrawTextSize(Created_Box[3], 400.000000, 17.000000);
    TextDrawSetOutline(Created_Box[3], 0);
    TextDrawSetShadow(Created_Box[3], 0);
    TextDrawAlignment(Created_Box[3], 2);
    TextDrawColor(Created_Box[3], 1296911871);
    TextDrawBackgroundColor(Created_Box[3], 255);
    TextDrawBoxColor(Created_Box[3], 50);
    TextDrawUseBox(Created_Box[3], 0);
    TextDrawSetProportional(Created_Box[3], 1);
    TextDrawSetSelectable(Created_Box[3], 0);

    Created_Box[4] = TextDrawCreate(173.000000, 176.000000, "Preview_Model");
    TextDrawFont(Created_Box[4], 5);
    TextDrawLetterSize(Created_Box[4], 0.600000, 2.000000);
    TextDrawTextSize(Created_Box[4], 56.500000, 56.500000);
    TextDrawSetOutline(Created_Box[4], 0);
    TextDrawSetShadow(Created_Box[4], 0);
    TextDrawAlignment(Created_Box[4], 1);
    TextDrawColor(Created_Box[4], -1);
    TextDrawBackgroundColor(Created_Box[4], 1296911741);
    TextDrawBoxColor(Created_Box[4], 255);
    TextDrawUseBox(Created_Box[4], 0);
    TextDrawSetProportional(Created_Box[4], 1);
    TextDrawSetSelectable(Created_Box[4], 1);
    TextDrawSetPreviewModel(Created_Box[4], 1271);
    TextDrawSetPreviewRot(Created_Box[4], 0.000000, 0.000000, 0.000000, 1.000000);
    TextDrawSetPreviewVehCol(Created_Box[4], 1, 1);

    Created_Box[5] = TextDrawCreate(232.000000, 189.000000, "Caixa_de_itens~n~16_slots~n~Valor:_2000_madeiras");
    TextDrawFont(Created_Box[5], 2);
    TextDrawLetterSize(Created_Box[5], 0.183332, 0.949999);
    TextDrawTextSize(Created_Box[5], 400.000000, 17.000000);
    TextDrawSetOutline(Created_Box[5], 0);
    TextDrawSetShadow(Created_Box[5], 0);
    TextDrawAlignment(Created_Box[5], 1);
    TextDrawColor(Created_Box[5], -1094795521);
    TextDrawBackgroundColor(Created_Box[5], 255);
    TextDrawBoxColor(Created_Box[5], 50);
    TextDrawUseBox(Created_Box[5], 0);
    TextDrawSetProportional(Created_Box[5], 1);
    TextDrawSetSelectable(Created_Box[5], 0);

    Created_Box[6] = TextDrawCreate(323.000000, 176.000000, "Preview_Model");
    TextDrawFont(Created_Box[6], 5);
    TextDrawLetterSize(Created_Box[6], 0.600000, 2.000000);
    TextDrawTextSize(Created_Box[6], 56.500000, 56.500000);
    TextDrawSetOutline(Created_Box[6], 0);
    TextDrawSetShadow(Created_Box[6], 0);
    TextDrawAlignment(Created_Box[6], 1);
    TextDrawColor(Created_Box[6], -1);
    TextDrawBackgroundColor(Created_Box[6], 1296911741);
    TextDrawBoxColor(Created_Box[6], 255);
    TextDrawUseBox(Created_Box[6], 0);
    TextDrawSetProportional(Created_Box[6], 1);
    TextDrawSetSelectable(Created_Box[6], 1);
    TextDrawSetPreviewModel(Created_Box[6], 3014);
    TextDrawSetPreviewRot(Created_Box[6], -90.000000, 0.000000, 0.000000, 1.000000);
    TextDrawSetPreviewVehCol(Created_Box[6], 1, 1);

    Created_Box[7] = TextDrawCreate(384.000000, 189.000000, "Caixa_de_armas~n~20_slots~n~Valor:5000_madeiras");
    TextDrawFont(Created_Box[7], 2);
    TextDrawLetterSize(Created_Box[7], 0.183332, 0.949999);
    TextDrawTextSize(Created_Box[7], 400.000000, 17.000000);
    TextDrawSetOutline(Created_Box[7], 0);
    TextDrawSetShadow(Created_Box[7], 0);
    TextDrawAlignment(Created_Box[7], 1);
    TextDrawColor(Created_Box[7], -1094795521);
    TextDrawBackgroundColor(Created_Box[7], 255);
    TextDrawBoxColor(Created_Box[7], 50);
    TextDrawUseBox(Created_Box[7], 0);
    TextDrawSetProportional(Created_Box[7], 1);
    TextDrawSetSelectable(Created_Box[7], 0);

    Created_Box[8] = TextDrawCreate(173.000000, 253.000000, "Preview_Model");
    TextDrawFont(Created_Box[8], 5);
    TextDrawLetterSize(Created_Box[8], 0.600000, 2.000000);
    TextDrawTextSize(Created_Box[8], 56.500000, 56.500000);
    TextDrawSetOutline(Created_Box[8], 0);
    TextDrawSetShadow(Created_Box[8], 0);
    TextDrawAlignment(Created_Box[8], 1);
    TextDrawColor(Created_Box[8], -1);
    TextDrawBackgroundColor(Created_Box[8], 1296911741);
    TextDrawBoxColor(Created_Box[8], 255);
    TextDrawUseBox(Created_Box[8], 0);
    TextDrawSetProportional(Created_Box[8], 1);
    TextDrawSetSelectable(Created_Box[8], 1);
    TextDrawSetPreviewModel(Created_Box[8], 11729);
    TextDrawSetPreviewRot(Created_Box[8], 0.000000, 0.000000, -180.000000, 1.000000);
    TextDrawSetPreviewVehCol(Created_Box[8], 1, 1);

    Created_Box[9] = TextDrawCreate(232.000000, 267.000000, "Armario_de_materiais~n~3_slots~n~Valor:2000_ferros");
    TextDrawFont(Created_Box[9], 2);
    TextDrawLetterSize(Created_Box[9], 0.183332, 0.949999);
    TextDrawTextSize(Created_Box[9], 400.000000, 17.000000);
    TextDrawSetOutline(Created_Box[9], 0);
    TextDrawSetShadow(Created_Box[9], 0);
    TextDrawAlignment(Created_Box[9], 1);
    TextDrawColor(Created_Box[9], -1094795521);
    TextDrawBackgroundColor(Created_Box[9], 255);
    TextDrawBoxColor(Created_Box[9], 50);
    TextDrawUseBox(Created_Box[9], 0);
    TextDrawSetProportional(Created_Box[9], 1);
    TextDrawSetSelectable(Created_Box[9], 0);

    Created_Box[10] = TextDrawCreate(323.000000, 253.000000, "Preview_Model");
    TextDrawFont(Created_Box[10], 5);
    TextDrawLetterSize(Created_Box[10], 0.600000, 2.000000);
    TextDrawTextSize(Created_Box[10], 56.500000, 56.500000);
    TextDrawSetOutline(Created_Box[10], 0);
    TextDrawSetShadow(Created_Box[10], 0);
    TextDrawAlignment(Created_Box[10], 1);
    TextDrawColor(Created_Box[10], -1);
    TextDrawBackgroundColor(Created_Box[10], 1296911741);
    TextDrawBoxColor(Created_Box[10], 255);
    TextDrawUseBox(Created_Box[10], 0);
    TextDrawSetProportional(Created_Box[10], 1);
    TextDrawSetSelectable(Created_Box[10], 1);
    TextDrawSetPreviewModel(Created_Box[10], 99999);
    TextDrawSetPreviewRot(Created_Box[10], -90.000000, 0.000000, 0.000000, 1.000000);
    TextDrawSetPreviewVehCol(Created_Box[10], 1, 1);

    Created_Box[11] = TextDrawCreate(384.000000, 267.000000, "Sem_Funcao~n~Sem_Funcao~n~Sem_Funcao");
    TextDrawFont(Created_Box[11], 2);
    TextDrawLetterSize(Created_Box[11], 0.183332, 0.949999);
    TextDrawTextSize(Created_Box[11], 400.000000, 17.000000);
    TextDrawSetOutline(Created_Box[11], 0);
    TextDrawSetShadow(Created_Box[11], 0);
    TextDrawAlignment(Created_Box[11], 1);
    TextDrawColor(Created_Box[11], -1094795521);
    TextDrawBackgroundColor(Created_Box[11], 255);
    TextDrawBoxColor(Created_Box[11], 50);
    TextDrawUseBox(Created_Box[11], 0);
    TextDrawSetProportional(Created_Box[11], 1);
    TextDrawSetSelectable(Created_Box[11], 0);
	CarregarVeiculos();
	return 1;
}

public OnGameModeExit()
{
    for(new z=0; z < MAX_ZUMBIS; z++)
	{
	    FCNPC_Destroy(ZId[z]);
	}
	for(new i=1; i < MAX_CRAFTS; i++)
	{
		if(CraftInfo[i][Existe]) SaveCraft(i);
	}
	for(new i; i < MAX_CAIXA; i++)
	{
		if(Caixa[i][Existe]) SalvarCaixa(i);
	}
	for(new i = 0; i < MAX_ARVORES; i ++)
	{
		if(Arvore[i][Existe]) SalvarArvore(i);
	}
	for(new i = 0; i < MAX_PEDRAS; i ++)
	{
		if(Pedra[i][Existe]) SalvarPedra(i);
	}
    for(new i; i < MAX_TRITU; i++)
	{
		if(Tritu[i][Existe]) SalvarTritu(i);
	}
    for(new c=1; c < MAX_CLANS; c++){
        if(ClanInfo[c][Exists])SaveClan(c);
    }
	db_close(IpsDB);
    db_close(Database);
    DOF2_Exit();
	return 1;
}
SaveWeaponsToFile(playerid)
{
	new i, query[128], query2[1500], DBResult:result, weaponid, ammo, str[100];

    format(query, sizeof query, "SELECT * FROM `Weapons` WHERE `NamePlayer`='%q'", PegarNome(playerid));
    result = db_query(Database, query);

    if(db_num_rows(result) == 0) //nickname nao existir na tabela
    {
        format(query, sizeof query, "INSERT INTO `Weapons` (`NamePlayer`) VALUES ('%q')", PegarNome(playerid));
        db_free_result(db_query(Database, query));
        SaveWeaponsToFile(playerid);//apos criar a conta, salvar as armas.
    }else{            
        for (i=0; i<13; i++){
            //weaponid = B_Weapon_Data[playerid][B_Weapon][i];
            //ammo = B_Weapon_Data[playerid][B_Ammo][i];
            weaponid = GetPlayerWeaponEx(playerid, i);
            ammo = GetPlayerAmmoEx(playerid, i);
            if(i == 0){
                format(str, sizeof str, "UPDATE `Weapons` SET `Arma_%d`='%i',\
                `Municao_%d`='%i',", i, weaponid, i, ammo);
                strcat(query2, str);
            }else if(i == 12){
                format(str, sizeof str, "`Arma_%d`='%i',\
                `Municao_%d`='%i' WHERE `NamePlayer`='%q'", i, weaponid, i, ammo, PegarNome(playerid));
                strcat(query2, str);
                db_free_result(db_query(Database, query2));
            }else{
                format(str, sizeof str, "`Arma_%d`='%i',\
                `Municao_%d`='%i',", i, weaponid, i, ammo);
                strcat(query2, str);
            }
    	}
        
        printf("[ARMAS - SAVE] %s teve todas as armas salvas pelo servidor.");
    }
    return 1;
}
CallBack:LoadArmasToFile(playerid)
{
    new i, query[128], DBResult:result, weaponid, ammo, string[60];

    format(query, sizeof query, "SELECT * FROM `Weapons` WHERE `NamePlayer`='%q'", PegarNome(playerid));
    result = db_query(Database, query);

    if(db_num_rows(result) > 0){
        for(i=0; i < 13; i++)
		{
	    	format(string,sizeof(string),"Arma_%d",i);
	    	weaponid = db_get_field_assoc_int(result, string);

	    	format(string,sizeof(string),"Municao_%d",i);
	    	ammo = db_get_field_assoc_int(result, string);

            if(WeaponsServer(weaponid) && ammo > 0){
	    	    GivePlayerWeaponEx(playerid,weaponid,ammo);
            }
		}
        printf("Armas de %s carregadas com sucesso.", PegarNome(playerid));
    }
    db_free_result(result);
    return true;
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    if(pInfo[playerid][pConectado]){
        ShowDialogInfosP(playerid, clickedplayerid);
    }
    return 1;
}
ShowDialogInfosP(playerid, id)
{
    new plat[15];
    if(Plataforma[id]==1)plat = "Computador";
    if(Plataforma[id]==0)plat = "Mobile";
    new string[100];
	MEGAString[0]=EOS;
	format(string, sizeof(string), "{E9CC4C}Infos de %s.\n", PegarNome(id));
	strcat(MEGAString, string);
	format(string, sizeof(string), "{E9CC4C}Coins: {FFFFFF}%d.\n", pInfo[id][pCoins]);
	strcat(MEGAString, string);
    format(string, sizeof(string), "{E9CC4C}Plataforma: {FFFFFF}%s.\n", plat);
	strcat(MEGAString, string);
    format(string, sizeof(string), "{E9CC4C}Zumbi Killer: {FFFFFF}%d.\n", pInfo[id][pKillZ]);
	strcat(MEGAString, string);
	format(string, sizeof(string), "{E9CC4C}Kill: {FFFFFF}%d.\n", pInfo[id][pkill]);
	strcat(MEGAString, string);
	format(string, sizeof(string), "{E9CC4C}Mortes: {FFFFFF}%d.\n", pInfo[id][pDeath]);
	strcat(MEGAString, string);
	format(string, sizeof(string), "{E9CC4C}Madeiras: {FFFFFF}%d.\n", pInfo[id][pMadeira]);
	strcat(MEGAString, string);
	format(string, sizeof(string), "{E9CC4C}Dinheiro: {FFFFFF}%d.\n", pInfo[id][pDinheiro]);
	strcat(MEGAString, string);
	format(string, sizeof(string), "{E9CC4C}Ferros: {FFFFFF}%d.\n", pInfo[id][pFerro]);
	strcat(MEGAString, string);
	format(string, sizeof(string), "{E9CC4C}XP: {FFFFFF}%d/1000.\n", pInfo[id][pXp]);
	strcat(MEGAString, string);
    format(string, sizeof(string), "{E9CC4C}Score: {FFFFFF}%d.\n", pInfo[id][pLevel]);
	strcat(MEGAString, string);
    format(string, sizeof(string), "{E9CC4C}Horas Jogadas: {FFFFFF}%d.\n", pInfo[id][pHorasJ]);
	strcat(MEGAString, string);
    format(string, sizeof(string), "{E9CC4C}Registro: {FFFFFF}%02d/%02d/%d.\n", pInfo[id][pDiaReg], pInfo[id][pMesReg], pInfo[id][pAnoReg]);
	strcat(MEGAString, string);
    format(string, sizeof(string), "{E9CC4C}FPS: {FFFFFF}%d.", GetPlayerFPS(id));
	strcat(MEGAString, string);
	ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Info Player", MEGAString, "Informado","");
    return 1;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
    if(pInfo[playerid][pAdmin] > 0)
    {
        TlpX[playerid] = fX;	TlpY[playerid] = fY;	TlpZ[playerid] = fZ;
        if(IsPlayerInAnyVehicle(playerid)){VehTele[playerid] = GetPlayerVehicleID(playerid);}
        ShowPlayerDialog(playerid, TELEPORT_MAPA, DIALOG_STYLE_MSGBOX, "Teleporte pelo mapa", "Voce deseja teleportar ate o local?\nCaso nao queria clique em 'cancelar'", "Ir", "Cancelar");
    }
    return true;
}
CallBack:VerVip(playerid)
{
	if(pInfo[playerid][pVip] >= 1)
	{
	    if(pInfo[playerid][pTempoVip] - gettime() <= 0)
		{
			SendClientMessage(playerid, Vermelho, "[DOS-EXPIRACAO] Seu VIP acaba de expirar, caso queira renovar, entre em contato pelo discord.");
            pInfo[playerid][pVip] = 0;
            pInfo[playerid][pTempoVip] = 0;
		}
	}
	return 1;
}
CallBack:DestroyArmas()
{
    for(new i; i < MAX_ARMAS; i++)
	{
         DestroyArma(i);
	}
    return 1;
}
CallBack:DestroyLoots()
{
    for(new i=1; i < MAX_DROPS; i++)
	{
         DestroyDrop(i);
	}
    return 1;
}
CallBack:SecundsCheck()
{
    new hour, minute, second;
    gettime(hour, minute, second);
    new str2[30];
    //format(str1,sizeof str1, "Horario:_%02d:%02d", hour, minute);
    //TextDrawSetString(TextGHud[5], str1);
    
    format(str2, sizeof str2, "respawn_loots:_%02d:%02d:%02d", horarespawnL, MinutosrespawnL, segundosrespawnL);
    TextDrawSetString(TextGHud[2], str2);

    segundosdrop++;
	if(segundosdrop == 1740){
        SendClientMessageToAll(Preto, "</Air-Drop> Faltam 1 minuto para um drop ser solto.");
	}
	if(segundosdrop == 1800){
        AtivarAir();
        segundosdrop = 0;
	}
	if(MinutosrespawnL == 0 && horarespawnL > 0 && segundosrespawnL == 0){
	    horarespawnL--;
	    MinutosrespawnL = 59;
    }
	if(segundosrespawnL == 0) {
	    MinutosrespawnL--;
	    segundosrespawnL = 60;
	}
	segundosrespawnL--;
	if(horarespawnL == 0 && MinutosrespawnL == 1 && segundosrespawnL == 0)
	{
        SendClientMessageToAll(Preto, "</Reloot> Faltam 1 minuto para o respawn automatico de Loots.");
	    GameTextForAll("~R~Respawn de loot em 1 minuto", 5000, 3);
	}
	if(horarespawnL == 0 && MinutosrespawnL == 0 && segundosrespawnL == 0)
	{
	    SetTimer("finalreloot", 500, false);
	    segundosrespawnL = 0;
		MinutosrespawnL = 30;
		horarespawnL = 1;
        AtualizarRank();
	}
	GetarHorario(hour, minute, second);
	return 1;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
    if(pickupid == PickSafe[0])//entrar lojinha
    {
        SetPlayerPosEx(playerid, 316.4680,-167.6013,999.5938);
        SetPlayerInterior(playerid, 6);
        SendClientMessage(playerid, Verde, "* Voce entrou na lojinha.");
    }else if(pickupid == PickSafe[1])// sair lojinha
    {
        SetPlayerPosEx(playerid, 1125.6403,-2036.8788,69.8807);
        SetPlayerInterior(playerid, 0);
        SendClientMessage(playerid, Verde, "* Voce saiu na lojinha.");
    }
    return 1;
}
/*CallBack:ColorAltern(playerid)
{
    if(CorCalango[playerid] == false) return 1;
    if(CorRandom[playerid] == 1)
    {
		SetPlayerColor(playerid, 0xB22222FF);
        CorRandom[playerid] = 0;
    }else{
        SetPlayerColor(playerid, 0x00FF00FF);
        CorRandom[playerid] = 1;
    }
    SetTimerEx("ColorAltern", 500, false, "i", playerid);
	return 1;
}*/
stock GetarHorario(hour, minute, second)
{
    if(hour == 00 && minute == 58 && second == 59)
	{
	    SendClientMessageToAll(Vermelho, "[AVISO] O Servidor ira se reiniciando automaticamente daqui 1 minuto.");
 	}
	if(hour == 00 && minute == 59 && second == 59)
	{
	    for(new cc = 0; cc < 10; cc++) SendClientMessageToAll(-1, " ");
	    SendClientMessageToAll(Vermelho, "[GMX] O Servidor esta se reiniciando automaticamente. Horario: 01:00.");
		SetTimer("reiniciando1", 500, false);
	}
	
	if(hour == 05 && minute == 58 && second == 59)
	{
	    SendClientMessageToAll(Vermelho, "[AVISO] O Servidor ira se reiniciando automaticamente daqui 1 minuto.");
	}
	if(hour == 05 && minute == 59 && second == 59)
	{
	    for(new cc = 0; cc < 10; cc++) SendClientMessageToAll(-1, " ");
	    SendClientMessageToAll(Vermelho, "[GMX] O Servidor esta se reiniciando automaticamente. Horario: 06:00.");
		SetTimer("reiniciando1", 500, false);
	}
	
	if(hour == 15 && minute == 58 && second == 59)
	{
	    SendClientMessageToAll(Vermelho, "[AVISO] O Servidor ira se reiniciando automaticamente daqui 1 minuto.");
	}
	if(hour == 16 && minute == 00 && second == 00)
	{
	    for(new cc = 0; cc < 10; cc++) SendClientMessageToAll(-1, " ");
	    SendClientMessageToAll(Vermelho, "[GMX] O Servidor esta se reiniciando automaticamente. Horario: 16:00.");
		SetTimer("reiniciando1", 500, false);
	}
	return 1;
}
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    //editor de acessorios
    
    return 1;
}
public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
    if(GetPVarInt(playerid, "EditandoParede") == 999)
    {
		if(EditandoCraftInfo[playerid] == true)
		{
            if ( response == EDIT_RESPONSE_FINAL )
            {
		   		new p = ideditorp[playerid];
				DestroyDynamicObject(CraftInfo[p][ObjectJ]);
				CraftInfo[p][ObjectJ] = CreateDynamicObject(CraftInfo[p][Modelo], x, y, z, rx, ry, rz);

				CraftInfo[p][PosX] = x;
				CraftInfo[p][PosY] = y;
				CraftInfo[p][PosZ] = z;

				CraftInfo[p][RX] = rx;
				CraftInfo[p][RY] = ry;
				CraftInfo[p][RZ] = rz;
                if(CraftInfo[p][Modelo] == 19831) SetObjectCarne(p);//churrasqueira
				SendClientMessage(playerid, Verde, "[CRAFT] Salva!");
				EditandoCraftInfo[playerid] = false;
				ideditorp[playerid] = 0;
				new st[128];
				DestroyDynamic3DTextLabel(CraftInfo[p][Text3Dp]);
	  			format(st, sizeof(st), "{81d358}/editarp {d3cd58}%d\n{58aed3}Protecao: %d",p, CraftInfo[p][metallife]);
		   		CraftInfo[p][Text3Dp] = CreateDynamic3DTextLabel(st, AMARELO, CraftInfo[p][PosX],CraftInfo[p][PosY],CraftInfo[p][PosZ], 5.0);
			}
		}
	}
    if(GetPVarInt(playerid, "EditandoTritu") == 999)
    {
		if(EditandoTritu[playerid] == true)
		{
            if ( response == EDIT_RESPONSE_FINAL )
            {
		   			new p = GetPVarInt(playerid, "EDTR");
				    DestroyDynamicObject(Tritu[p][ObjectT]);
				    Tritu[p][ObjectT] = CreateDynamicObject(19915, x, y, z, rx, ry, rz);
					Tritu[p][PosX] = x;
				    Tritu[p][PosY] = y;
					Tritu[p][PosZ] = z;
					Tritu[p][RX] = rx;
					Tritu[p][RY] = ry;
					Tritu[p][RZ] = rz;
					SendClientMessage(playerid, Verde, "[Recicladora] Salva aqui!");
					EditandoTritu[playerid] = false;
					SetPVarInt(playerid, "EDTR", 0);
					new st[128];
					DestroyDynamic3DTextLabel(Tritu[p][Text3Dt]);
	  				format(st, sizeof(st), "{81d358}/reciclar\nRecicladora: {FFFFFF}[%d]",p);
		   			Tritu[p][Text3Dt] = CreateDynamic3DTextLabel(st, AMARELO, Tritu[p][PosX],Tritu[p][PosY],Tritu[p][PosZ], 30.0);
			}
		}
    }
	if(GetPVarInt(playerid, "EditandoVeado") == 999)
    {
		if(EditandoVeado[playerid] == true)
		{
            if ( response == EDIT_RESPONSE_FINAL )
            {
		   			new p = GetPVarInt(playerid, "EDVE");
				    DestroyDynamicObject(InfoVeado[p][VeadoID]);
				    InfoVeado[p][VeadoID] = CreateDynamicObject(19315, x, y, z, rx, ry, rz);
					InfoVeado[p][VeadoX] = x;
				    InfoVeado[p][VeadoY] = y;
					InfoVeado[p][VeadoZ] = z;
					InfoVeado[p][RX] = rx;
					InfoVeado[p][RY] = ry;
					InfoVeado[p][RZ] = rz;
					InfoVeado[p][StatusVeado] = 0;
	                SalvarVeado(p);
					SendClientMessage(playerid, Verde, "[SUCESSO] Veado Salvo!");
					EditandoVeado[playerid] = false;
					SetPVarInt(playerid, "EDVE", 0);
					new st[34];
					DestroyDynamic3DTextLabel(InfoVeado[p][TextVeado]);
	  				format(st, sizeof(st), "Veado: %d\nStatus: Vivo", p);
		   			InfoVeado[p][TextVeado] = CreateDynamic3DTextLabel(st, AMARELO, InfoVeado[p][VeadoX], InfoVeado[p][VeadoY], InfoVeado[p][VeadoZ], 2.0);
			}
		}
    }
    return 1;
}
stock checkIp(playerid) {
	new plrIP[16], named[24];
    GetPlayerIp(playerid, plrIP, sizeof(plrIP));
    GetPlayerName(playerid, named, 24);
    new DBResult: result, query[128];
    format(query, 128, "SELECT * FROM ips WHERE nome='%q' AND ip='%q'", named, plrIP);
    result = db_query(IpsDB, query);
    if(db_num_rows(result)) {
        // return true; // Ja existe uma conta com o mesmo ip (logo nao precisaamos adicionar )
    }
    else {
        format(query, 128, "INSERT INTO ips (nome, ip) VALUES ('%q', '%q')", named, plrIP);
        db_query(IpsDB, query);
    }
	db_free_result(result);
	format(query, 128, "SELECT * FROM ips WHERE ip='%q'", plrIP);
	result = db_query(IpsDB, query);
	db_free_result(result);
}
public OnPlayerConnect(playerid)
{
    if(IsPlayerNPC(playerid)) return 1;
    //exterior shopping
    RemoveBuildingForPlayer(playerid, 6130, 1117.5859, -1490.0078, 32.7188, 10.0);
    RemoveBuildingForPlayer(playerid, 6255, 1117.5859, -1490.0078, 32.7188, 10.0);
    RemoveBuildingForPlayer(playerid, 762, 1175.3594, -1420.1875, 19.8828, 0.25);
    RemoveBuildingForPlayer(playerid, 615, 1166.3516, -1417.6953, 13.9531, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1134.0781, -1500.3750, 22.2813, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1123.2500, -1500.5313, 22.2813, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1124.3672, -1476.9844, 22.2813, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 1133.2266, -1476.2266, 22.2813, 0.25);
    
	//Area militar
	
    //Remove houses lv
    RemoveBuildingForPlayer(playerid, 3464, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3536, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3445, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3546, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3446, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3547, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3443, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3548, 0.0, 0.0, 0.0, 10000.0);

    //Remove houses LS
    RemoveBuildingForPlayer(playerid, 3589, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3592, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3648, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3647, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3646, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3706, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3642, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3720, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3555, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3563, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 5626, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 5664, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3590, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3591, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3649, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3654, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 5416, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 5672, 0.0, 0.0, 0.0, 10000.0);
    //remove house 1 sf
    RemoveBuildingForPlayer(playerid, 9510, -2719.02, 861.211, 72.1562, 250.0); // Building
    RemoveBuildingForPlayer(playerid, 9671, -2719.02, 861.211, 72.1562, 250.0); // LOD
    RemoveBuildingForPlayer(playerid, 715, -2693.24, 852.60, 71.74, 8.0); // Tree (casts a shadow inside)
    //REMOVE HOUSES SF
    RemoveBuildingForPlayer(playerid, 3821, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3832, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3824, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3835, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3827, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3838, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3825, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3841, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3826, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3840, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3822, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3833, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3844, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3848, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3830, 0.0, 0.0, 0.0, 10000.0);
    RemoveBuildingForPlayer(playerid, 3836, 0.0, 0.0, 0.0, 10000.0);
	//Remove Base BPS
	RemoveBuildingForPlayer(playerid, 16597, 437.3828, 2547.5156, 15.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 16501, 429.9844, 2546.5156, 17.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 16409, 437.3828, 2547.5156, 15.1484, 0.25);
    //Remove base iluminaty
    RemoveBuildingForPlayer(playerid, 11491, -688.109, 928.132, 12.625, 0.250);
    RemoveBuildingForPlayer(playerid, 11490, -688.117, 939.179, 11.125, 0.250);
    RemoveBuildingForPlayer(playerid, 11618, -688.117, 939.179, 11.125, 0.250);
    RemoveBuildingForPlayer(playerid, 11663, -688.117, 939.179, 11.125, 0.250);
    RemoveBuildingForPlayer(playerid, 11618, -688.117, 939.179, 11.125, 0.250);
    RemoveBuildingForPlayer(playerid, 1294, -3.780, 1093.698, 23.202, 0.250);
    RemoveBuildingForPlayer(playerid, 11665, -685.171, 935.695, 13.319, 0.250);
    RemoveBuildingForPlayer(playerid, 11664, -685.093, 941.914, 13.140, 0.250);
    RemoveBuildingForPlayer(playerid, 11631, -691.593, 942.718, 13.875, 0.250);
    RemoveBuildingForPlayer(playerid, 11666, -688.140, 934.820, 14.390, 0.250);
    //Remove Black Market SF
    RemoveBuildingForPlayer(playerid, 3851, -1941.540, 258.773, 42.046, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1941.800, 265.375, 40.500, 0.250);
    RemoveBuildingForPlayer(playerid, 3851, -1941.540, 271.914, 42.046, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1957.920, 284.085, 40.500, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1957.229, 297.867, 40.500, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1950.199, 303.656, 40.500, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1950.300, 306.929, 40.500, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1950.530, 289.273, 40.500, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1949.199, 276.171, 40.500, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1957.349, 254.757, 40.500, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1957.609, 268.187, 40.500, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1950.410, 304.890, 34.890, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1950.750, 307.093, 34.890, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1952.869, 307.171, 34.890, 0.250);
    RemoveBuildingForPlayer(playerid, 625, -1960.839, 305.351, 35.367, 0.250);
    RemoveBuildingForPlayer(playerid, 625, -1960.839, 277.585, 35.367, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1950.599, 278.359, 34.890, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1950.640, 275.921, 34.890, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1948.880, 276.070, 34.890, 0.250);
    RemoveBuildingForPlayer(playerid, 632, -1943.239, 256.960, 34.890, 0.250);
    RemoveBuildingForPlayer(playerid, 625, -1960.839, 264.757, 35.367, 0.250);
    RemoveBuildingForPlayer(playerid, 3851, -1947.199, 253.108, 42.046, 0.250);
    RemoveBuildingForPlayer(playerid, 3851, -1965.219, 258.773, 42.046, 0.250);
    RemoveBuildingForPlayer(playerid, 3851, -1965.219, 271.914, 42.046, 0.250);
    RemoveBuildingForPlayer(playerid, 3851, -1965.219, 285.062, 42.046, 0.250);
    RemoveBuildingForPlayer(playerid, 3851, -1965.219, 302.859, 42.046, 0.250);
    RemoveBuildingForPlayer(playerid, 3851, -1965.219, 302.859, 36.468, 0.250);
    RemoveBuildingForPlayer(playerid, 3851, -1965.219, 285.062, 36.468, 0.250);
    RemoveBuildingForPlayer(playerid, 3851, -1965.219, 271.914, 36.468, 0.250);
    RemoveBuildingForPlayer(playerid, 3851, -1965.219, 258.773, 36.468, 0.250);
    //------------------------------
	//REMOVE MAPA DO FARINHA
	RemoveBuildingForPlayer(playerid, 5156, 2838.0391, -2423.8828, 10.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 5162, 2838.0391, -2423.8828, 10.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 5163, 2838.0391, -2532.7734, 17.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 5164, 2838.1406, -2447.8438, 15.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3746, 2814.2656, -2356.5703, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 5157, 2838.0391, -2532.7734, 17.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 5154, 2838.1406, -2447.8438, 15.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3620, 2814.2656, -2356.5703, 25.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3724, 2838.1953, -2407.1406, 29.3125, 0.25);
	//remove base solitario
    RemoveBuildingForPlayer(playerid, 3564, 2262.280, -2259.290, 14.156, 0.250);
	RemoveBuildingForPlayer(playerid, 3585, 2252.699, -2263.090, 14.156, 0.250);
	RemoveBuildingForPlayer(playerid, 3585, 2246.429, -2269.370, 14.156, 0.250);
	RemoveBuildingForPlayer(playerid, 3564, 2243.479, -2278.090, 14.156, 0.250);
	RemoveBuildingForPlayer(playerid, 3585, 2234.429, -2287.389, 14.156, 0.250);
	RemoveBuildingForPlayer(playerid, 3585, 2231.840, -2284.639, 14.156, 0.250);
	//OBJETOS PELO MAPA
	/*RemoveBuildingForPlayer(playerid, 4986, 1179.140, -2036.989, 65.726, 0.250);
	RemoveBuildingForPlayer(playerid, 951, 1209.630, -2008.550, 68.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1211.229, -2019.680, 68.351, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1208.910, -2012.849, 75.757, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1208.910, -2025.930, 75.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1204.489, -2039.800, 68.375, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1208.430, -2045.239, 75.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1211.229, -2052.989, 68.265, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1208.709, -2059.320, 75.757, 0.250);
	RemoveBuildingForPlayer(playerid, 951, 1209.910, -2065.580, 68.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1205.339, -2070.030, 71.781, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1205.410, -2003.910, 71.781, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1175.180, -2003.910, 71.781, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1187.250, -2034.050, 68.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1138.439, -2003.910, 71.781, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1136.900, -2012.689, 68.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1136.900, -2025.719, 68.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1142.199, -2034.050, 68.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1136.900, -2046.479, 68.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1159.439, -2039.800, 68.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1136.900, -2061.300, 68.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1137.510, -2070.030, 71.781, 0.250);
	RemoveBuildingForPlayer(playerid, 691, 1144.079, -2076.379, 68.101, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1174.750, -2070.030, 71.781, 0.250);
	RemoveBuildingForPlayer(playerid, 951, 1104.160, -2060.770, 68.648, 0.250);
	RemoveBuildingForPlayer(playerid, 951, 1082.800, -2034.770, 68.695, 0.250);
	RemoveBuildingForPlayer(playerid, 951, 1103.880, -2011.969, 68.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1290, 1242.729, -2060.879, 64.609, 0.250);
	RemoveBuildingForPlayer(playerid, 1290, 1280.199, -2062.100, 63.773, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1323.520, -2052.629, 60.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1290, 1280.199, -2007.380, 63.773, 0.250);
	RemoveBuildingForPlayer(playerid, 1290, 1242.729, -2007.380, 64.609, 0.250);
	//exteriores ls
	RemoveBuildingForPlayer(playerid, 6130, 1117.585, -1490.007, 32.718, 10.000);
	RemoveBuildingForPlayer(playerid, 6255, 1117.585, -1490.007, 32.718, 10.000);
	RemoveBuildingForPlayer(playerid, 762, 1175.359, -1420.187, 19.882, 0.250);
	RemoveBuildingForPlayer(playerid, 615, 1166.351, -1417.695, 13.953, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1134.078, -1500.375, 22.281, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1123.250, -1500.531, 22.281, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1124.367, -1476.984, 22.281, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1133.226, -1476.226, 22.281, 0.250);
	//casas ls
	RemoveBuildingForPlayer(playerid, 3589, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3592, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3648, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3647, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3646, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3706, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3642, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3720, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3555, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3563, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 5626, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 5664, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3590, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3591, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3649, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3654, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 5416, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 5672, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 4007, 1421.375, -1477.601, 42.203, 0.250);
	RemoveBuildingForPlayer(playerid, 4000, 1787.132, -1565.679, 11.968, 0.250);
	RemoveBuildingForPlayer(playerid, 5767, 1160.960, -1180.578, 70.414, 0.250);
	RemoveBuildingForPlayer(playerid, 12853, 666.710, -565.132, 17.335, 0.250);
	//casas sf
    RemoveBuildingForPlayer(playerid, 3821, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3832, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3824, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3835, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3827, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3838, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3825, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3841, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3826, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3840, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3822, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3833, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3844, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3848, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3830, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3836, 0.000, 0.000, 0.000, 10000.000);
	//
	//Casas LV
	RemoveBuildingForPlayer(playerid, 3464, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3536, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3445, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3546, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3446, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3547, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3443, 0.000, 0.000, 0.000, 10000.000);
	RemoveBuildingForPlayer(playerid, 3548, 0.000, 0.000, 0.000, 10000.000);*/
	//
	//Mina
    /*RemoveBuildingForPlayer(playerid, 3414, 2351.830, -652.921, 129.188, 0.250);
	RemoveBuildingForPlayer(playerid, 3421, 2351.830, -652.921, 129.188, 0.250);
	RemoveBuildingForPlayer(playerid, 696, 2373.879, -740.617, 130.132, 0.250);
	RemoveBuildingForPlayer(playerid, 790, 2389.120, -728.328, 126.844, 0.250);
	RemoveBuildingForPlayer(playerid, 696, 2375.300, -666.726, 131.882, 0.250);
	RemoveBuildingForPlayer(playerid, 693, 2349.479, -680.875, 136.632, 0.250);*/
	//
    RemoveBuildingForPlayer(playerid, 17349, -542.0078, -522.8438, 29.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 17019, -606.0313, -528.8203, 30.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -541.4297, -561.2266, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 17012, -542.0078, -522.8438, 29.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -513.7578, -561.0078, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -503.6172, -540.5313, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -502.6094, -528.6484, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -502.1172, -521.0313, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -502.4063, -513.0156, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -620.4141, -490.5078, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, -619.6250, -473.4531, 24.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 17018, -565.7656, -489.1406, 29.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -553.6875, -481.6328, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -554.4531, -496.1797, 25.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -537.0391, -469.1172, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -516.9453, -496.6484, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -503.1250, -509.0000, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 17020, -475.9766, -544.8516, 28.1172, 0.25);
    RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 6935, 2686.1953, 2663.4063, 23.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 6936, 2729.4375, 2685.6328, 35.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 6937, 2572.2422, 2703.9609, 19.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 6938, 2693.4844, 2696.6641, 19.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 6940, 2505.9141, 2690.5000, 43.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 6941, 2717.9453, 2773.6250, 43.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 6942, 2593.2578, 2638.3359, 61.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 6943, 2632.5547, 2832.2500, 75.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 7038, 2527.8203, 2703.9609, 10.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 7169, 2514.5859, 2822.9531, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 7170, 2706.4531, 2762.9141, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 7171, 2627.2266, 2850.5078, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 7201, 2615.5000, 2740.6719, 85.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 7237, 2692.0703, 2784.8984, 35.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 7239, 2592.2578, 2660.4453, 23.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 7276, 2686.1953, 2663.4063, 23.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 6932, 2505.9141, 2690.5000, 43.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2511.5234, 2706.1484, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2500.2188, 2706.1484, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2534.1328, 2706.1484, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2522.8281, 2706.1484, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2529.0625, 2723.9922, 12.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2529.0625, 2742.5859, 12.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2529.0625, 2764.2266, 12.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 7102, 2514.5859, 2822.9531, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3474, 2523.9688, 2818.4922, 16.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 6929, 2572.2422, 2703.9609, 19.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2555.3047, 2707.2188, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2545.4375, 2706.1484, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2555.7578, 2724.6953, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2556.0156, 2715.9375, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 7095, 2545.5469, 2751.3828, 11.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2546.1797, 2742.5859, 12.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2546.1797, 2764.2266, 12.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2563.9844, 2742.5859, 12.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2563.9844, 2764.2266, 12.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2578.7031, 2796.8672, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2564.8516, 2796.8672, 10.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2552.1719, 2796.8672, 10.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2538.5078, 2796.8672, 10.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 6934, 2593.2578, 2638.3359, 61.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 7238, 2592.2578, 2660.4453, 23.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 7040, 2594.3750, 2680.0234, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 6931, 2686.1953, 2663.4063, 23.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 6928, 2729.4375, 2685.6328, 35.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2591.2031, 2730.0547, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2591.2031, 2742.1328, 10.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2591.2031, 2754.2109, 10.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2591.2031, 2766.2891, 10.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2591.2031, 2778.3672, 10.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2592.5703, 2735.9297, 24.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2592.5703, 2764.7422, 24.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 7229, 2629.2188, 2742.9922, 14.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 7039, 2629.2891, 2742.9219, 10.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 6930, 2693.4844, 2696.6641, 19.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3474, 2664.7969, 2704.4141, 16.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2675.2031, 2705.7266, 24.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2675.2031, 2746.3984, 24.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 7104, 2706.4531, 2762.9141, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 6933, 2717.9453, 2773.6250, 43.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2591.2031, 2796.8672, 10.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 7236, 2692.0703, 2784.8984, 35.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2675.2031, 2787.0625, 24.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 7291, 2632.5547, 2832.2500, 75.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 7025, 2627.2266, 2850.5078, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
    RemoveBuildingForPlayer(playerid, 11579, -840.1875, 1895.3047, 9.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 11609, -1003.2422, 1859.2266, 88.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 11567, -756.1016, 1638.7656, 25.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 1223, -802.5156, 1813.0078, 5.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1223, -802.3203, 1817.2813, 5.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1223, -802.0859, 1821.3828, 5.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 11541, -840.1875, 1895.3047, 9.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 3273, -824.7500, 1890.3359, 21.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3273, -820.2891, 1866.2578, 21.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3273, -829.3281, 1915.0391, 21.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3273, -833.8203, 1939.2422, 21.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 16265, -606.0859, 1910.1016, 9.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 16573, -453.1406, 2524.8594, 48.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 16612, -569.6172, 2593.5313, 56.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3273, -626.5703, 1850.6641, 6.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 3273, -629.1250, 1838.5313, 6.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 16731, -620.0156, 1811.4922, 2.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 3273, -619.9141, 1874.7422, 6.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 3273, -623.5391, 1862.8516, 6.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 3273, -616.8828, 1886.9375, 6.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 16376, -606.0859, 1910.1016, 9.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 16010, -569.6172, 2593.5313, 56.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 16104, -453.1406, 2524.8594, 48.5469,0.25);

    pInfo[playerid][pConectado] = false;
    
    ideditorp[playerid] = 0;
    Secundshit[playerid] = 0;
    TotalHit[playerid] = 0;
    TotalDamage[playerid] = 0;
    PlayerHit[playerid] = -1;
    ListaClans[playerid] = 1;
    PagListaClans[playerid] = 1;

    idParedeMina[playerid] = -1;
    Pagina_WCreate[playerid] = 1;
    PaginaInventario[playerid] = 1;
    NoAtendimento[playerid] = false;
    Acao_Ativa[playerid] = false;
    IdAtendimento[playerid] = -1;
    AtendL[playerid] = 0;
    PermEdit[playerid] = -1;
    BoxAeroSelect[playerid] = -1; 
    pSelecionandoTXDMesa[playerid] = true;
    PiscaCarColor[playerid] = false;
	PiscaCarLuz[playerid] = false;
    SecundsAction[playerid] = 0;
    //ResetVarsA_C(playerid);
    SkinSelected[playerid] = 1;
    AvisosFakeTiro[playerid] = 0;
    AntiFloodFakeTiro[playerid] = false;
    Equipado[playerid][CHAVE_DE_FENDA]=0;
    Equipado[playerid][CHAVE_COMBINADA]=0;
    Equipado[playerid][MARTELO]=0;
    Equipado[playerid][MARRETA]=0;
    Equipado[playerid][MASCARA]=0;
    Equipado[playerid][PE_DE_CABRA]=0;
    pUsandoMesa[playerid] = 0;
    JaVotou[playerid] = false;
    PediuAtendimento[playerid] = false;
    admirSelect[playerid]=-1;
	VendoInv[playerid] = false;
    EditVelo[playerid] = 0.3;
    sWeaponSelected[playerid] = -1;
    
    ResetPlayerWeaponsEx(playerid);
    
	VendoCam[playerid] = false;
	MatSelect[playerid] = 0;
    ACaixa[playerid] = false;
	DeletePVar(playerid, "NickRgb");
	floodChat[playerid] = gettime();
	FloodCmd[playerid] = gettime();
	NoEvento[playerid] = false;
	PlayerSelecionandoItem[playerid] = true;
	//CorCalango[playerid] = false;
	EditandoCraft[playerid] = 0;
	PermissaoRaid[playerid] = false;
    pInfo[playerid][pClan] = 0;
    pInfo[playerid][pCargoClan] = 0;
	//SetPVarInt(playerid, "AvisadoTP", 0);
	TomouTiro[playerid] = 0;
	vercmds[playerid] = 0;
	conectando[playerid] = true;
	PermSenha[playerid] = false;
	PermNick[playerid] = false;
    format(pInfo[playerid][pPassword], 40, "");
	pInfo[playerid][Youtuber] = 0;
	pInfo[playerid][pLevel] = 0;
	pInfo[playerid][pCoins] = 0;
	Morreu[playerid] = 0;
	//Ver se esta jogando no celular//Pc
	Plataforma[playerid] = 1;
    if(!strcmp(GetPlayerSerial(playerid), "3952314F524834355456464955525858554F3353")) Plataforma[playerid] = 0;
    if(!strcmp(GetPlayerSerial(playerid), "ED40ED0E8089CC44C08EE9580F4C8C44EE8EE990")) Plataforma[playerid] = 0;
    if(!strcmp(GetPlayerSerial(playerid), "5638413348335738345A4536524D4A524539334B")) Plataforma[playerid] = 0;
    //caidosegundos[playerid] = 0;
    //caido[playerid] = false;

    Avaliado[playerid] = -1;
    specing[playerid] = 0;
	CarregarPlayerText(playerid);
    checkBan(playerid);

    for(new i; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) RemovePlayerAttachedObject(playerid, i);// Remove os objetos

    TogglePlayerSpectating(playerid, true);
    CreateTextBox(playerid);
    if(!CheckWhitelist(PegarNome(playerid)))
    {
        LimparChat(playerid, 10);
        ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Liberacao - Discord", "{FFFFFF}Ola, Caro Jogador(a)! Parece que voce nao possui Whitelist no servidor *(\n\
        {cacaca}Mas fique tranquilo(a), para liberar sua jogatina, entre em nosso discord.\n\
        {FFFFFF}Digitando o comando #wl [Seu Nick] No canal de texto #liberarnick para liberacao.\n\
        {cacaca}Duvida? Nossos staffs estarao a disposicao!\n\
        {FFFFFF}Discord: {33AA33}https://discord.gg/fjXNuPgP5E", "Entendido", "");
        SetTimerEx("banindo", 200, false, "i", playerid);
    }else{
        PlayAudioStreamForPlayer(playerid, "https://server1.mtabrasil.com.br/youtube/play?id=Z0tNiaa2lQU");

        SetTimerEx("carregandologin",1000,false, "i",playerid);
	}
	return 1;
}
stock LimparChat(playerid, linhas){
    for(new i = 0; i < linhas; i++) SendClientMessage(playerid, -1, " ");
    return true;
}
stock LimparChatAll(linhas){
    for(new i = 0; i < linhas; i++) SendClientMessageToAll(-1, " ");
    return true;
}
stock checkBan(playerid)
{
	new uip[16], cs[70];
	GetPlayerIp(playerid, uip, sizeof(uip));
	format(cs, sizeof(cs), "Ips/%s.ini", uip);
	if(DOF2_FileExists(cs))
	{
        new dia, mes, ano, staff[24], nick[24], motivo[60];
        dia =  DOF2_GetInt(cs, "Dia");
        mes =  DOF2_GetInt(cs, "Mes");
        ano =  DOF2_GetInt(cs, "Ano");
        format(staff, sizeof staff, DOF2_GetString(cs, "Staff"));
        format(nick, sizeof nick, DOF2_GetString(cs, "Nome"));
        format(motivo, sizeof motivo, DOF2_GetString(cs, "Motivo"));
		new infban[500];
	    format(infban, sizeof(infban), "{808080}Nick: {FFFFFF}%s\n\
        {808080}IP Banido: {FFFFFF}%s\n\
        {808080}Staff Responsavel: {FFFFFF}%s\n\
        {808080}Motivo: {FFFFFF}%s\n\
        {808080}Data: {FFFFFF}%02d/%02d/%d\n\
        {808080}Se voce foi banido injustamente\n\
        {808080}Acesse nosso discord: {FFFFFF}https://discord.gg/fjXNuPgP5E", PegarNome(playerid), uip, staff, motivo, dia, mes, ano);
	    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{808080} IP - Banido", infban, "Informado", "");
	    SetTimerEx("banindo", 100, false, "i", playerid);
        return 1;
	}

    new arquivo[60];
	format(arquivo, sizeof(arquivo), "Banidos/%s.ban", PegarNome(playerid));
	if(DOF2_FileExists(arquivo))
	{
        new dia, mes, ano, staff[24], motivo[60];
        dia =  DOF2_GetInt(arquivo, "Dia");
        mes =  DOF2_GetInt(arquivo, "Mes");
        ano =  DOF2_GetInt(arquivo, "Ano");
        format(staff, sizeof staff, DOF2_GetString(arquivo, "Staff"));
        format(motivo, sizeof motivo, DOF2_GetString(arquivo, "Motivo"));
		new infban[500];
	    format(infban, sizeof(infban), "{808080}Nick Banido: {FFFFFF}%s\n\
        {808080}Staff Responsavel: {FFFFFF}%s\n\
        {808080}Motivo: {FFFFFF}%s\n\
        {808080}Data: {FFFFFF}%02d/%02d/%d\n\
        {808080}Se voce foi banido injustamente\n\
        {808080}Acesse nosso discord: {FFFFFF}https://discord.gg/fjXNuPgP5E", PegarNome(playerid), staff, motivo, dia, mes, ano);
	    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{808080} Nick - Banido", infban, "Informado", "");
	    SetTimerEx("banindo", 100, false, "i", playerid);
        return 1;
	}
    return 0;
}

CallBack:AllCheater()
{
    new Float:x, Float:y, Float:z, Float:r_r, Float:pX, Float:pY, Float:pZ;
    foreach(new i : Player)
	{
        if(IsPlayerConnected(i) && conectando[i] == false)
        {
            if(TimerAC_Weapon[i] < gettime()){
                new gunid = GetPlayerWeapon(i);
                
                if(gunid != GetPlayerWeaponEx(i, GetSlotWeapon(gunid)) && gunid != 46
                && !morto[i])
                {
                    
                    if(gunid != 2 || gunid != 25)
                    {
                        PlayerCheater(i, WEAPON_HACK, gunid);
                        RemovePlayerWeapon(i, gunid);
                    }else{
                        RemovePlayerWeapon(i, gunid);
                    }
                }
            }

            GetPlayerPos(i, pX, pY, pZ);
            if(!IsPlayerInRangeOfPoint(i, 10.0,1206.9175,-1746.3632,13.5930))
            {
                if(ah_Info[i][AGUARDO] > 0) ah_Info[i][AGUARDO]--;
                x = ah_Info[i][PLAYER_POS_X],
        		y = ah_Info[i][PLAYER_POS_Y],
        		z = ah_Info[i][PLAYER_POS_Z];
                if(IsPlayerInAnyVehicle(i))r_r = Range_Driver;
    	        if(!IsPlayerInAnyVehicle(i)) r_r = RangeAB;
                if(!IsPlayerInRangeOfPoint(i, r_r, x, y, z)
        		&& gettime() < ah_Info[i][PLAYER_TIMER]
        		&& ah_Info[i][AGUARDO] < 1
        		&& GetPlayerSurfingVehicleID(i) == 0xFFFF)
        		{
        		    if((GetPlayerState(i) == PLAYER_STATE_ONFOOT || GetPlayerState(i) == PLAYER_STATE_DRIVER))
        		    {
        				if(!IsPlayerInRangeOfPoint(i, 20.0,
        				ah_Info[i][Teleport_X], ah_Info[i][Teleport_Y], ah_Info[i][Teleport_Z]))
        				{
                            PlayerCheater(i, AirBreak_Teleport, 0);
        				}
        			}
        		}
        		ah_Info[i][PLAYER_TIMER] = gettime()+2;
        		ah_Info[i][PLAYER_POS_X] = pX;
        		ah_Info[i][PLAYER_POS_Y] = pY;
        		ah_Info[i][PLAYER_POS_Z] = pZ;
            }
        }
        if(GetPlayerVehicleID(i) != 0)
    	{
    		if(GetPlayerVehicleID(i) != GetPVarInt(i, "Veiculo_Anterior"))
    		{
    			if(pInfo[i][pAdmin] == 0)
    			{
    				if(GetPVarInt(i, "Troca_Veiculo") > gettime())
    				{
                        PlayerCheater(i, CAR_SHOT, 0);
    				}
    				SetPVarInt(i, "Veiculo_Anterior", GetPlayerVehicleID(i));
    				SetPVarInt(i, "Troca_Veiculo", gettime() + 2);
    			}
    		}
    	}
    	if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK)
       	{
    	   	if(pInfo[i][pAdmin] == 0)
    	   	{
                PlayerCheater(i, USE_JETPACK, 0);
        	}
       	}
        new
	        pstate = GetPlayerState(i);
        // Anti vehicle health
		if (pstate == PLAYER_STATE_DRIVER)
		{
		    new
		        Float:vhealth;

			new p_veh = GetPlayerVehicleID(i);
			GetVehicleHealth(p_veh, vhealth);
			if (vhealth < vInfo[p_veh][vHealth]) {
			    vInfo[p_veh][vHealth] = vhealth;
			}
			else if (vhealth >= 980.0)
			{
                PlayerCheater(i, Repair_Vehicle, 0);
			    SetVehicleHealth(p_veh, vInfo[p_veh][vHealth]);
			}
			else if(vhealth > vInfo[p_veh][vHealth]) {
			    SetVehicleHealth(p_veh, vInfo[p_veh][vHealth]);
			}

		}
        // Anti Cheat - Speed Hack
        new speed = GetPlayerSpeed(i, true);
        if(!IsPlayerInAnyVehicle(i) && speed > 265)
		{
            PlayerCheater(i, Speed_Hack, 0);
		}
    }
    return true;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
    if(morto[playerid] == true)
    {
        SendClientMessage(playerid, Vermelho, "|D.o.s-Informa| Voce esta morto e nao pode executar nenhum comando!");
        return 0;
    }
    if(pInfo[playerid][pPreso] > 0)
    {
        if(strfind(cmdtext, "/senha", true) != -1 || strfind(cmdtext, "/pm", true) != -1 || strfind(cmdtext, "/soltar", true) != -1 || strfind(cmdtext, "/tempopreso", true) != -1)
        {
        }else{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Presos podem usar apenas /senha ,/pm e /tempopreso!");
            return 0;
        }
    }
	if(pInfo[playerid][pConectado] == false)
	{
	    SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao pode digitar nenhum comando enquanto nao estiver logado.");
	    return 0;
	}
	if(pInfo[playerid][pAdmin] ==0){
		if(FloodCmd[playerid] > gettime())
		{
		    SendClientMessage(playerid, COR_VERMELHO, "</!Anti-Flood> Aguarde alguns segundos para digitar outro comando.");
		    return 0;
		}
	}
	FloodCmd[playerid] = gettime()+2;
	return 1;
}
SetPlayerPosEx(playerid, Float:X, Float:Y, Float:Z)
{
    ah_Info[playerid][AGUARDO] = 10;
	ah_Info[playerid][PLAYER_POS_X] = X;
	ah_Info[playerid][PLAYER_POS_Y] = Y;
	ah_Info[playerid][PLAYER_POS_Z] = Z;
	ah_Info[playerid][Teleport_X] = X;
	ah_Info[playerid][Teleport_Y] = Y;
	ah_Info[playerid][Teleport_Z] = Z;
    return SetPlayerPos(playerid, ah_Info[playerid][PLAYER_POS_X], ah_Info[playerid][PLAYER_POS_Y], ah_Info[playerid][PLAYER_POS_Z]);
}
SetVehiclePosEx(playerid, vehicleid, Float:X, Float:Y, Float:Z)
{
    ah_Info[playerid][AGUARDO] = 10;

	ah_Info[playerid][PLAYER_POS_X] = X;
	ah_Info[playerid][PLAYER_POS_Y] = Y;
	ah_Info[playerid][PLAYER_POS_Z] = Z;

	ah_Info[playerid][Teleport_X] = X;
	ah_Info[playerid][Teleport_Y] = Y;
	ah_Info[playerid][Teleport_Z] = Z;
    return SetVehiclePos(vehicleid, ah_Info[playerid][PLAYER_POS_X], ah_Info[playerid][PLAYER_POS_Y], ah_Info[playerid][PLAYER_POS_Z]);
}

public OnDiscordCommandAttempt(DCC_User:user, DCC_Channel:channel, cmdtext[])
{
    /*if(!AdminPerm) return 0;
    if(!strcmp(cmdtext, "teste", false)) {

        //if user has no particular role or privilege:
        DCC_SendChannelMessage(channel, "`* Comando !teste testado.`");
        return 0;
    }*/
    return 1;
}

public OnDiscordCommandPerformed(DCC_User:user, DCC_Channel:channel, cmdtext[], success)
{
    if(!success)
 	{
    	DCC_SendChannelMessage(channel, "ERRO | Comando inexistente.");
    }
    return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
 	{
    	SendClientMessage(playerid, Vermelho,  "[ERRO]{BABABA} Comando inexistente.");
    }
    foreach(new i : Player)
	{
        if(IsPlayerConnected(i))
        {
            if(pInfo[i][pAdmin] >= 2)
    		{
                if(pInfo[playerid][pAdmin] <= 9)
                {
	    		    if(vercmds[i] == 1)
	    		    {
	                    new string[128];
	                    format(string, sizeof(string), "[CMD] %s[%d] digitou: %s", PegarNome(playerid), playerid, cmdtext);
	    	            SendClientMessage(i, 0x00CCCCAA, string);
	    			}
    			}
    		}
        }
    }
    return 1;
}

CallBack:banindo2(playerid)
{
	new str[90];
	format(str, sizeof(str), "[AVISO] %s foi kikado por suspeita de fazer cbug!", PegarNome(playerid));
	SendClientMessageToAll(Vermelho, str);
	Kick(playerid);
	return 1;
}
CallBack:banindo(playerid)
{
	Kick(playerid);
	return 1;
}
CallBack:carregandologin(playerid)
{
    new DBResult:result, query[100];
    format(query, sizeof query, "SELECT * FROM Contas WHERE PlayerName='%q'", PegarNome(playerid));
    result = db_query(Database, query);
    if(db_num_rows(result) > 0){
	    showTelaLogin(playerid);
    }else{
        RegisterDialog(playerid);
    }
    db_free_result(result);
    for(new i; i < 10; i++) SendClientMessage(playerid, -1, " ");
	antibug(playerid);
	return 1;
}
CallBack:ResetAVTP(playerid)
{
    SetPVarInt(playerid, "AvisadoTP", 0);
    return 1; 
}
CallBack:DesligarMotor(vehid)
{
    vInfo[vehid][vMTLigado] = false;
    new engine,lights,alarm,doors,bonnet,boot,objective;
    GetVehicleParamsEx(vehid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(vehid,VEHICLE_PARAMS_OFF,0,alarm,doors,bonnet,boot,objective);
    return true;
}
CallBack:LigarMotor(vehid)
{
    vInfo[vehid][vMTLigado] = true;
    new engine,lights,alarm,doors,bonnet,boot,objective;
    GetVehicleParamsEx(vehid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(vehid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
    return true;
}
CallBack:AlarmeVeh(vehid){
    new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(vehid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(alarm == VEHICLE_PARAMS_OFF){
		SetVehicleParamsEx(vehid,engine,lights,VEHICLE_PARAMS_ON,doors,bonnet,boot,objective);
	}else{
        SetVehicleParamsEx(vehid,engine,lights,VEHICLE_PARAMS_OFF,doors,bonnet,boot,objective);
	}
	return true;
}
// # stocks e callbacks #

LoadItensAeroBox(){
    for(new i=0; i < MAX_ITEM_BOX_AERO; i++){
        ItensBoxAero[0][i] = GetRandomItemDrop();
    }
    for(new i=0; i < MAX_ITEM_BOX_AERO; i++){
        ItensBoxAero[1][i] = GetRandomItemDrop();
    }
    for(new i=0; i < MAX_ITEM_BOX_AERO; i++){
        ItensBoxAero[2][i] = GetRandomItemDrop();
    }
    return true;
}

ShowPlayerAeroLootBox(playerid){
    new str[156], box = BoxAeroSelect[playerid];
    format(str, sizeof str, "Item 1: %s\n\
    Item 2: %s\n\
    Item 3: %s\n\
    Item 4: %s\n\
    Item 5: %s", GetNameItemY(ItensBoxAero[box][0]), GetNameItemY(ItensBoxAero[box][1]), GetNameItemY(ItensBoxAero[box][2]), GetNameItemY(ItensBoxAero[box][3]), GetNameItemY(ItensBoxAero[box][4]));
    
    ShowPlayerDialog(playerid, D_AEROBOX, DIALOG_STYLE_LIST, "Itens Caixa - Aeroporto", str, "Pegar", "Fechar");
    return true;
}

stock CarregarPlayerText(playerid)
{    
    TXDCCraft[playerid][0] = CreatePlayerTextDraw(playerid, 320.000000, 130.000000, "_");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][0], 1);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][0], 0.600000, 25.799943);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][0], 298.500000, 285.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][0], 1);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][0], 2);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][0], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][0], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][0], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][0], 0);

    TXDCCraft[playerid][1] = CreatePlayerTextDraw(playerid, 320.000000, 130.000000, "_");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][1], 1);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][1], 0.600000, 25.799943);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][1], 298.500000, 285.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][1], 1);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][1], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][1], 2);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][1], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][1], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][1], -236);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][1], 0);

    TXDCCraft[playerid][2] = CreatePlayerTextDraw(playerid, 178.000000, 142.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][2], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][2], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][2], 50.000000, 50.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][2], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][2], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][2], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][2], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][2], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][2], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][2], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][2], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][2], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][2], 19412);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][2], 0.000000, 0.000000, -90.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][2], 1, 1);

    TXDCCraft[playerid][3] = CreatePlayerTextDraw(playerid, 178.000000, 194.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][3], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][3], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][3], 50.000000, 50.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][3], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][3], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][3], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][3], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][3], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][3], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][3], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][3], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][3], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][3], 19403);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][3], 0.000000, 0.000000, -90.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][3], 1, 1);

    TXDCCraft[playerid][4] = CreatePlayerTextDraw(playerid, 178.000000, 246.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][4], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][4], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][4], 50.000000, 50.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][4], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][4], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][4], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][4], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][4], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][4], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][4], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][4], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][4], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][4], 19410);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][4], 0.000000, 0.000000, -90.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][4], 1, 1);

    TXDCCraft[playerid][5] = CreatePlayerTextDraw(playerid, 178.000000, 298.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][5], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][5], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][5], 50.000000, 50.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][5], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][5], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][5], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][5], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][5], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][5], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][5], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][5], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][5], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][5], 19406);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][5], 0.000000, 0.000000, -90.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][5], 1, 1);

    TXDCCraft[playerid][6] = CreatePlayerTextDraw(playerid, 273.000000, 142.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][6], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][6], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][6], 50.000000, 50.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][6], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][6], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][6], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][6], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][6], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][6], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][6], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][6], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][6], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][6], 19366);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][6], 0.000000, 0.000000, -90.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][6], 1, 1);

    TXDCCraft[playerid][7] = CreatePlayerTextDraw(playerid, 273.000000, 194.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][7], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][7], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][7], 50.000000, 50.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][7], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][7], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][7], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][7], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][7], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][7], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][7], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][7], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][7], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][7], 19357);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][7], 0.000000, 0.000000, -90.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][7], 1, 1);

    TXDCCraft[playerid][8] = CreatePlayerTextDraw(playerid, 273.000000, 246.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][8], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][8], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][8], 50.000000, 50.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][8], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][8], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][8], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][8], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][8], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][8], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][8], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][8], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][8], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][8], 19358);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][8], 0.000000, 0.000000, -90.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][8], 1, 1);

    TXDCCraft[playerid][9] = CreatePlayerTextDraw(playerid, 273.000000, 298.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][9], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][9], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][9], 50.000000, 50.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][9], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][9], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][9], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][9], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][9], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][9], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][9], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][9], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][9], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][9], 2036);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][9], 90.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][9], 1, 1);

    TXDCCraft[playerid][10] = CreatePlayerTextDraw(playerid, 368.000000, 142.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][10], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][10], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][10], 50.000000, 50.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][10], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][10], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][10], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][10], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][10], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][10], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][10], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][10], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][10], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][10], 19893);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][10], -30.000000, 0.000000, -180.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][10], 1, 1);

    TXDCCraft[playerid][11] = CreatePlayerTextDraw(playerid, 368.000000, 194.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][11], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][11], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][11], 50.000000, 50.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][11], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][11], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][11], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][11], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][11], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][11], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][11], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][11], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][11], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][11], 3279);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][11], 0.000000, 0.000000, -90.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][11], 1, 1);

    TXDCCraft[playerid][12] = CreatePlayerTextDraw(playerid, 368.000000, 246.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][12], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][12], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][12], 50.000000, 50.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][12], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][12], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][12], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][12], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][12], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][12], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][12], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][12], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][12], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][12], 1622);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][12], -10.000000, 0.000000, -105.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][12], 1, 1);

    TXDCCraft[playerid][13] = CreatePlayerTextDraw(playerid, 368.000000, 298.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][13], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][13], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][13], 50.000000, 50.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][13], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][13], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][13], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][13], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][13], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][13], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][13], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][13], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][13], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][13], 1508);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][13], 0.000000, 0.000000, -90.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][13], 1, 1);

    TXDCCraft[playerid][14] = CreatePlayerTextDraw(playerid, 451.000000, 129.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][14], 5);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][14], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][14], 12.000000, 12.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][14], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][14], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][14], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][14], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][14], 125);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][14], 255);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][14], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][14], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][14], 1);
    PlayerTextDrawSetPreviewModel(playerid, TXDCCraft[playerid][14], 19412);
    PlayerTextDrawSetPreviewRot(playerid, TXDCCraft[playerid][14], 0.000000, 0.000000, -90.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TXDCCraft[playerid][14], 1, 1);

    TXDCCraft[playerid][15] = CreatePlayerTextDraw(playerid, 457.000000, 130.000000, "X");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][15], 1);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][15], 0.291666, 1.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][15], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][15], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][15], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][15], 2);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][15], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][15], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][15], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][15], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][15], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][15], 0);

    TXDCCraft[playerid][16] = CreatePlayerTextDraw(playerid, 230.000000, 143.000000, " ");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][16], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][16], 0.179167, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][16], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][16], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][16], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][16], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][16], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][16], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][16], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][16], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][16], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][16], 0);

    TXDCCraft[playerid][17] = CreatePlayerTextDraw(playerid, 230.000000, 195.000000, " ");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][17], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][17], 0.179167, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][17], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][17], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][17], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][17], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][17], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][17], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][17], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][17], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][17], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][17], 0);

    TXDCCraft[playerid][18] = CreatePlayerTextDraw(playerid, 230.000000, 247.000000, " ");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][18], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][18], 0.179167, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][18], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][18], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][18], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][18], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][18], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][18], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][18], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][18], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][18], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][18], 0);

    TXDCCraft[playerid][19] = CreatePlayerTextDraw(playerid, 230.000000, 299.000000, " ");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][19], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][19], 0.179167, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][19], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][19], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][19], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][19], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][19], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][19], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][19], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][19], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][19], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][19], 0);

    TXDCCraft[playerid][20] = CreatePlayerTextDraw(playerid, 325.000000, 143.000000, " ");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][20], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][20], 0.179167, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][20], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][20], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][20], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][20], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][20], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][20], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][20], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][20], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][20], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][20], 0);

    TXDCCraft[playerid][21] = CreatePlayerTextDraw(playerid, 325.000000, 195.000000, " ");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][21], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][21], 0.179167, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][21], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][21], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][21], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][21], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][21], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][21], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][21], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][21], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][21], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][21], 0);

    TXDCCraft[playerid][22] = CreatePlayerTextDraw(playerid, 325.000000, 247.000000, " ");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][22], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][22], 0.179167, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][22], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][22], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][22], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][22], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][22], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][22], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][22], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][22], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][22], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][22], 0);

    TXDCCraft[playerid][23] = CreatePlayerTextDraw(playerid, 325.000000, 299.000000, " ");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][23], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][23], 0.179167, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][23], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][23], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][23], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][23], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][23], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][23], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][23], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][23], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][23], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][23], 0);

    TXDCCraft[playerid][24] = CreatePlayerTextDraw(playerid, 420.000000, 143.000000, " ");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][24], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][24], 0.179167, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][24], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][24], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][24], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][24], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][24], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][24], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][24], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][24], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][24], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][24], 0);

    TXDCCraft[playerid][25] = CreatePlayerTextDraw(playerid, 420.000000, 195.000000, " ");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][25], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][25], 0.179167, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][25], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][25], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][25], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][25], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][25], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][25], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][25], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][25], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][25], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][25], 0);

    TXDCCraft[playerid][26] = CreatePlayerTextDraw(playerid, 420.000000, 247.000000, " ");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][26], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][26], 0.179167, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][26], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][26], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][26], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][26], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][26], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][26], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][26], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][26], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][26], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][26], 0);

    TXDCCraft[playerid][27] = CreatePlayerTextDraw(playerid, 420.000000, 299.000000, " ");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][27], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][27], 0.179167, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][27], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][27], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][27], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][27], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][27], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][27], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][27], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][27], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][27], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][27], 0);

    TXDCCraft[playerid][28] = CreatePlayerTextDraw(playerid, 418.000000, 349.000000, "ld_beat:left");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][28], 4);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][28], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][28], 14.500000, 13.500000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][28], 1);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][28], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][28], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][28], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][28], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][28], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][28], 1);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][28], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][28], 1);

    TXDCCraft[playerid][29] = CreatePlayerTextDraw(playerid, 448.000000, 349.000000, "ld_beat:right");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][29], 4);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][29], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][29], 14.500000, 13.500000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][29], 1);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][29], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][29], 1);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][29], -1);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][29], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][29], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][29], 1);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][29], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][29], 1);

    TXDCCraft[playerid][30] = CreatePlayerTextDraw(playerid, 440.000000, 351.000000, "1/10");
    PlayerTextDrawFont(playerid, TXDCCraft[playerid][30], 2);
    PlayerTextDrawLetterSize(playerid, TXDCCraft[playerid][30], 0.170833, 0.850000);
    PlayerTextDrawTextSize(playerid, TXDCCraft[playerid][30], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TXDCCraft[playerid][30], 0);
    PlayerTextDrawSetShadow(playerid, TXDCCraft[playerid][30], 0);
    PlayerTextDrawAlignment(playerid, TXDCCraft[playerid][30], 2);
    PlayerTextDrawColor(playerid, TXDCCraft[playerid][30], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, TXDCCraft[playerid][30], 255);
    PlayerTextDrawBoxColor(playerid, TXDCCraft[playerid][30], 50);
    PlayerTextDrawUseBox(playerid, TXDCCraft[playerid][30], 0);
    PlayerTextDrawSetProportional(playerid, TXDCCraft[playerid][30], 1);
    PlayerTextDrawSetSelectable(playerid, TXDCCraft[playerid][30], 0);

    HitInformer[playerid] = CreatePlayerTextDraw(playerid, 62.000000, 270.000000, "~g~[I2F]_BUIMANO_gg~n~~w~Acertos_Totais:_1~n~Danos_Totais:_100");
    PlayerTextDrawFont(playerid, HitInformer[playerid], 1);
    PlayerTextDrawLetterSize(playerid, HitInformer[playerid], 0.179165, 0.949998);
    PlayerTextDrawTextSize(playerid, HitInformer[playerid], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, HitInformer[playerid], 1);
    PlayerTextDrawSetShadow(playerid, HitInformer[playerid], 0);
    PlayerTextDrawAlignment(playerid, HitInformer[playerid], 2);
    PlayerTextDrawColor(playerid, HitInformer[playerid], -1);
    PlayerTextDrawBackgroundColor(playerid, HitInformer[playerid], 255);
    PlayerTextDrawBoxColor(playerid, HitInformer[playerid], 50);
    PlayerTextDrawUseBox(playerid, HitInformer[playerid], 0);
    PlayerTextDrawSetProportional(playerid, HitInformer[playerid], 1);
    PlayerTextDrawSetSelectable(playerid, HitInformer[playerid], 0);


    TxdPlayerSkin[playerid][0] = CreatePlayerTextDraw(playerid, 215.000000, 148.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TxdPlayerSkin[playerid][0], 5);
    PlayerTextDrawLetterSize(playerid, TxdPlayerSkin[playerid][0], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TxdPlayerSkin[playerid][0], 100.000000, 100.000000);
    PlayerTextDrawSetOutline(playerid, TxdPlayerSkin[playerid][0], 0);
    PlayerTextDrawSetShadow(playerid, TxdPlayerSkin[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, TxdPlayerSkin[playerid][0], 1);
    PlayerTextDrawColor(playerid, TxdPlayerSkin[playerid][0], -1);
    PlayerTextDrawBackgroundColor(playerid, TxdPlayerSkin[playerid][0], 0);
    PlayerTextDrawBoxColor(playerid, TxdPlayerSkin[playerid][0], 255);
    PlayerTextDrawUseBox(playerid, TxdPlayerSkin[playerid][0], 0);
    PlayerTextDrawSetProportional(playerid, TxdPlayerSkin[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, TxdPlayerSkin[playerid][0], 0);
    PlayerTextDrawSetPreviewModel(playerid, TxdPlayerSkin[playerid][0], 12);
    PlayerTextDrawSetPreviewRot(playerid, TxdPlayerSkin[playerid][0], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TxdPlayerSkin[playerid][0], 1, 1);

    TxdPlayerSkin[playerid][1] = CreatePlayerTextDraw(playerid, 300.000000, 165.000000, "-Roupa_N:_~r~10");
    PlayerTextDrawFont(playerid, TxdPlayerSkin[playerid][1], 2);
    PlayerTextDrawLetterSize(playerid, TxdPlayerSkin[playerid][1], 0.187500, 1.300000);
    PlayerTextDrawTextSize(playerid, TxdPlayerSkin[playerid][1], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TxdPlayerSkin[playerid][1], 0);
    PlayerTextDrawSetShadow(playerid, TxdPlayerSkin[playerid][1], 0);
    PlayerTextDrawAlignment(playerid, TxdPlayerSkin[playerid][1], 1);
    PlayerTextDrawColor(playerid, TxdPlayerSkin[playerid][1], -1);
    PlayerTextDrawBackgroundColor(playerid, TxdPlayerSkin[playerid][1], 255);
    PlayerTextDrawBoxColor(playerid, TxdPlayerSkin[playerid][1], 50);
    PlayerTextDrawUseBox(playerid, TxdPlayerSkin[playerid][1], 0);
    PlayerTextDrawSetProportional(playerid, TxdPlayerSkin[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, TxdPlayerSkin[playerid][1], 0);

    TextMCraft[playerid][0] = CreatePlayerTextDraw(playerid, 320.000000, 195.000000, "_");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][0], 1);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][0], 0.600000, 10.300003);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][0], 298.500000, 203.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][0], 1);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][0], 2);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][0], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][0], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][0], 255);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][0], 0);

    TextMCraft[playerid][1] = CreatePlayerTextDraw(playerid, 320.000000, 195.000000, "_");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][1], 1);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][1], 0.600000, 10.300003);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][1], 298.500000, 203.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][1], 1);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][1], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][1], 2);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][1], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][1], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][1], -226);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][1], 0);

    TextMCraft[playerid][2] = CreatePlayerTextDraw(playerid, 219.000000, 196.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][2], 5);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][2], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][2], 60.000000, 60.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][2], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][2], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][2], 1);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][2], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][2], 125);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][2], 255);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][2], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][2], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][2], 1);
    PlayerTextDrawSetPreviewModel(playerid, TextMCraft[playerid][2], 2936);
    PlayerTextDrawSetPreviewRot(playerid, TextMCraft[playerid][2], -30.000000, 0.000000, -140.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TextMCraft[playerid][2], 1, 1);

    TextMCraft[playerid][3] = CreatePlayerTextDraw(playerid, 290.000000, 196.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][3], 5);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][3], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][3], 60.000000, 60.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][3], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][3], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][3], 1);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][3], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][3], 125);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][3], 255);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][3], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][3], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][3], 1);
    PlayerTextDrawSetPreviewModel(playerid, TextMCraft[playerid][3], 18871);
    PlayerTextDrawSetPreviewRot(playerid, TextMCraft[playerid][3], -90.000000, 0.000000, 180.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TextMCraft[playerid][3], 1, 1);

    TextMCraft[playerid][4] = CreatePlayerTextDraw(playerid, 361.000000, 196.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][4], 5);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][4], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][4], 60.000000, 60.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][4], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][4], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][4], 1);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][4], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][4], 125);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][4], 255);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][4], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][4], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][4], 1);
    PlayerTextDrawSetPreviewModel(playerid, TextMCraft[playerid][4], 1463);
    PlayerTextDrawSetPreviewRot(playerid, TextMCraft[playerid][4], -50.000000, 0.000000, 0.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TextMCraft[playerid][4], 1, 1);

    TextMCraft[playerid][5] = CreatePlayerTextDraw(playerid, 278.000000, 246.000000, "1x");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][5], 2);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][5], 0.158333, 1.049999);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][5], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][5], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][5], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][5], 3);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][5], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][5], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][5], 50);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][5], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][5], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][5], 0);

    TextMCraft[playerid][6] = CreatePlayerTextDraw(playerid, 349.000000, 246.000000, "2x");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][6], 2);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][6], 0.158333, 1.049999);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][6], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][6], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][6], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][6], 3);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][6], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][6], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][6], 50);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][6], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][6], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][6], 0);

    TextMCraft[playerid][7] = CreatePlayerTextDraw(playerid, 284.000000, 215.000000, "+");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][7], 1);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][7], 0.437500, 1.850000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][7], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][7], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][7], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][7], 2);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][7], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][7], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][7], 50);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][7], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][7], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][7], 0);

    TextMCraft[playerid][8] = CreatePlayerTextDraw(playerid, 356.000000, 215.000000, "=");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][8], 1);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][8], 0.437500, 1.850000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][8], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][8], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][8], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][8], 2);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][8], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][8], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][8], 50);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][8], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][8], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][8], 0);

    TextMCraft[playerid][9] = CreatePlayerTextDraw(playerid, 320.000000, 262.000000, "_");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][9], 1);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][9], 0.600000, 2.899996);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][9], 298.500000, 203.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][9], 1);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][9], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][9], 2);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][9], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][9], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][9], 255);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][9], 1);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][9], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][9], 0);

    TextMCraft[playerid][10] = CreatePlayerTextDraw(playerid, 219.000000, 261.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][10], 5);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][10], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][10], 60.000000, 13.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][10], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][10], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][10], 1);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][10], -156);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][10], 1296911871);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][10], 255);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][10], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][10], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][10], 1);
    PlayerTextDrawSetPreviewModel(playerid, TextMCraft[playerid][10], 1575);
    PlayerTextDrawSetPreviewRot(playerid, TextMCraft[playerid][10], -39.000000, -20.000000, 0.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TextMCraft[playerid][10], 1, 1);

    TextMCraft[playerid][11] = CreatePlayerTextDraw(playerid, 219.000000, 275.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][11], 5);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][11], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][11], 60.000000, 13.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][11], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][11], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][11], 1);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][11], -156);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][11], 9109759);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][11], 255);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][11], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][11], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][11], 1);
    PlayerTextDrawSetPreviewModel(playerid, TextMCraft[playerid][11], 1575);
    PlayerTextDrawSetPreviewRot(playerid, TextMCraft[playerid][11], -39.000000, -20.000000, 0.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TextMCraft[playerid][11], 1, 1);

    TextMCraft[playerid][12] = CreatePlayerTextDraw(playerid, 361.000000, 268.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][12], 5);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][12], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][12], 60.000000, 13.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][12], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][12], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][12], 1);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][12], -156);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][12], -1962934017);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][12], 255);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][12], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][12], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][12], 1);
    PlayerTextDrawSetPreviewModel(playerid, TextMCraft[playerid][12], 1575);
    PlayerTextDrawSetPreviewRot(playerid, TextMCraft[playerid][12], -39.000000, -20.000000, 0.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TextMCraft[playerid][12], 1, 1);

    TextMCraft[playerid][13] = CreatePlayerTextDraw(playerid, 249.000000, 262.000000, "Combinacoes");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][13], 1);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][13], 0.200000, 1.149999);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][13], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][13], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][13], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][13], 2);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][13], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][13], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][13], 50);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][13], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][13], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][13], 0);

    TextMCraft[playerid][14] = CreatePlayerTextDraw(playerid, 249.000000, 277.000000, "Materiais");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][14], 1);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][14], 0.220833, 1.000000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][14], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][14], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][14], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][14], 2);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][14], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][14], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][14], 50);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][14], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][14], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][14], 0);

    TextMCraft[playerid][15] = CreatePlayerTextDraw(playerid, 391.000000, 269.000000, "FECHAR");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][15], 1);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][15], 0.200000, 1.149999);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][15], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][15], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][15], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][15], 2);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][15], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][15], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][15], 50);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][15], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][15], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][15], 0);

    TextMCraft[playerid][16] = CreatePlayerTextDraw(playerid, 305.000000, 260.000000, "Combinando:");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][16], 1);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][16], 0.220833, 1.000000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][16], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][16], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][16], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][16], 2);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][16], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][16], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][16], 50);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][16], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][16], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][16], 0);

    TextMCraft[playerid][17] = CreatePlayerTextDraw(playerid, 282.000000, 272.000000, "-1_Tnt");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][17], 1);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][17], 0.220833, 1.000000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][17], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][17], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][17], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][17], 1);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][17], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][17], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][17], 50);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][17], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][17], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][17], 0);

    TextMCraft[playerid][18] = CreatePlayerTextDraw(playerid, 282.000000, 279.000000, "-1_Celular");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][18], 1);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][18], 0.220833, 1.000000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][18], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][18], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][18], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][18], 1);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][18], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][18], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][18], 50);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][18], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][18], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][18], 0);

    TextMCraft[playerid][19] = CreatePlayerTextDraw(playerid, 421.000000, 249.000000, "explosivo_remoto");
    PlayerTextDrawFont(playerid, TextMCraft[playerid][19], 2);
    PlayerTextDrawLetterSize(playerid, TextMCraft[playerid][19], 0.125000, 0.750000);
    PlayerTextDrawTextSize(playerid, TextMCraft[playerid][19], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextMCraft[playerid][19], 0);
    PlayerTextDrawSetShadow(playerid, TextMCraft[playerid][19], 0);
    PlayerTextDrawAlignment(playerid, TextMCraft[playerid][19], 3);
    PlayerTextDrawColor(playerid, TextMCraft[playerid][19], -1);
    PlayerTextDrawBackgroundColor(playerid, TextMCraft[playerid][19], 255);
    PlayerTextDrawBoxColor(playerid, TextMCraft[playerid][19], 50);
    PlayerTextDrawUseBox(playerid, TextMCraft[playerid][19], 0);
    PlayerTextDrawSetProportional(playerid, TextMCraft[playerid][19], 1);
    PlayerTextDrawSetSelectable(playerid, TextMCraft[playerid][19], 0);


    TextPHud[playerid][0] = CreatePlayerTextDraw(playerid, 319.000000, 440.000000, "_");
    PlayerTextDrawFont(playerid, TextPHud[playerid][0], 2);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][0], 0.279166, 1.350000);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][0], 12.000000, 652.500000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][0], 0);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][0], 2);
    PlayerTextDrawColor(playerid, TextPHud[playerid][0], -6);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][0], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][0], 220);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][0], 0);

    TextPHud[playerid][1] = CreatePlayerTextDraw(playerid, 5.500000, 438.000000, "madeiras:_100.000");
    PlayerTextDrawFont(playerid, TextPHud[playerid][1], 2);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][1], 0.154165, 0.999998);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][1], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][1], 0);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][1], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][1], 1);
    PlayerTextDrawColor(playerid, TextPHud[playerid][1], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][1], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][1], 50);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][1], 0);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][1], 0);

    TextPHud[playerid][2] = CreatePlayerTextDraw(playerid, 320.000000, 436.000000, "of");
    PlayerTextDrawFont(playerid, TextPHud[playerid][2], 2);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][2], 0.208333, 1.399997);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][2], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][2], 0);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][2], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][2], 2);
    PlayerTextDrawColor(playerid, TextPHud[playerid][2], -16777106);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][2], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][2], 50);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][2], 0);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][2], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][2], 0);

    TextPHud[playerid][3] = CreatePlayerTextDraw(playerid, 303.000000, 437.000000, "day");
    PlayerTextDrawFont(playerid, TextPHud[playerid][3], 2);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][3], 0.200000, 1.249999);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][3], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][3], 0);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][3], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][3], 2);
    PlayerTextDrawColor(playerid, TextPHud[playerid][3], -46);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][3], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][3], 50);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][3], 0);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][3], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][3], 0);

    TextPHud[playerid][4] = CreatePlayerTextDraw(playerid, 347.000000, 437.000000, "survival");
    PlayerTextDrawFont(playerid, TextPHud[playerid][4], 2);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][4], 0.200000, 1.249999);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][4], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][4], 0);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][4], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][4], 2);
    PlayerTextDrawColor(playerid, TextPHud[playerid][4], -46);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][4], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][4], 50);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][4], 0);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][4], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][4], 0);

    TextPHud[playerid][5] = CreatePlayerTextDraw(playerid, 120.500000, 438.000000, "ferros:_0");
    PlayerTextDrawFont(playerid, TextPHud[playerid][5], 2);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][5], 0.154165, 0.999998);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][5], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][5], 0);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][5], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][5], 2);
    PlayerTextDrawColor(playerid, TextPHud[playerid][5], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][5], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][5], 50);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][5], 0);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][5], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][5], 0);

    TextPHud[playerid][6] = CreatePlayerTextDraw(playerid, 631.500000, 438.000000, "coins:_10");
    PlayerTextDrawFont(playerid, TextPHud[playerid][6], 2);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][6], 0.154165, 0.999998);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][6], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][6], 0);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][6], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][6], 3);
    PlayerTextDrawColor(playerid, TextPHud[playerid][6], 16777215);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][6], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][6], 50);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][6], 0);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][6], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][6], 0);

    TextPHud[playerid][7] = CreatePlayerTextDraw(playerid, 516.500000, 438.000000, "Sem_Clan");
    PlayerTextDrawFont(playerid, TextPHud[playerid][7], 2);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][7], 0.154165, 0.999998);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][7], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][7], 0);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][7], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][7], 2);
    PlayerTextDrawColor(playerid, TextPHud[playerid][7], 9109759);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][7], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][7], 50);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][7], 0);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][7], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][7], 0);

    TextPHud[playerid][8] = CreatePlayerTextDraw(playerid, 4.000000, 250.000000, "_");
    PlayerTextDrawFont(playerid, TextPHud[playerid][8], 1);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][8], 0.625000, -2.799993);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][8], 17.500000, 4.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][8], 1);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][8], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][8], 1);
    PlayerTextDrawColor(playerid, TextPHud[playerid][8], -1);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][8], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][8], 200);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][8], 1);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][8], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][8], 0);

    TextPHud[playerid][9] = CreatePlayerTextDraw(playerid, 4.000000, 250.000000, "_");
    PlayerTextDrawFont(playerid, TextPHud[playerid][9], 1);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][9], 0.625000, -2.799993);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][9], 13.000000, 4.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][9], 1);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][9], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][9], 1);
    PlayerTextDrawColor(playerid, TextPHud[playerid][9], -764862721);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][9], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][9], -1962934072);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][9], 1);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][9], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][9], 0);

    TextPHud[playerid][10] = CreatePlayerTextDraw(playerid, 4.000000, 273.000000, "_");
    PlayerTextDrawFont(playerid, TextPHud[playerid][10], 1);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][10], 0.625000, -2.799993);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][10], 17.500000, 4.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][10], 1);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][10], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][10], 1);
    PlayerTextDrawColor(playerid, TextPHud[playerid][10], -1);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][10], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][10], 200);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][10], 1);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][10], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][10], 0);

    TextPHud[playerid][11] = CreatePlayerTextDraw(playerid, 4.000000, 273.000000, "_");
    PlayerTextDrawFont(playerid, TextPHud[playerid][11], 1);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][11], 0.625000, -2.799993);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][11], 7.000000, 4.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][11], 1);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][11], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][11], 1);
    PlayerTextDrawColor(playerid, TextPHud[playerid][11], -1);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][11], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][11], 9145288);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][11], 1);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][11], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][11], 0);

    TextPHud[playerid][12] = CreatePlayerTextDraw(playerid, 1.500000, 223.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TextPHud[playerid][12], 5);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][12], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][12], 19.000000, 24.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][12], 0);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][12], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][12], 1);
    PlayerTextDrawColor(playerid, TextPHud[playerid][12], -1);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][12], 0);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][12], 0);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][12], 0);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][12], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][12], 0);
    PlayerTextDrawSetPreviewModel(playerid, TextPHud[playerid][12], 2703);
    PlayerTextDrawSetPreviewRot(playerid, TextPHud[playerid][12], -90.000000, 0.000000, -10.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TextPHud[playerid][12], 1, 1);

    TextPHud[playerid][13] = CreatePlayerTextDraw(playerid, 2.000000, 251.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, TextPHud[playerid][13], 5);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][13], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][13], 17.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][13], 0);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][13], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][13], 1);
    PlayerTextDrawColor(playerid, TextPHud[playerid][13], -1);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][13], 0);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][13], 0);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][13], 0);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][13], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][13], 0);
    PlayerTextDrawSetPreviewModel(playerid, TextPHud[playerid][13], 1669);
    PlayerTextDrawSetPreviewRot(playerid, TextPHud[playerid][13], 0.000000, 0.000000, 60.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, TextPHud[playerid][13], 1, 1);

    TextPHud[playerid][14] = CreatePlayerTextDraw(playerid, 90.000000, 309.000000, "ped:_0");
    PlayerTextDrawFont(playerid, TextPHud[playerid][14], 2);
    PlayerTextDrawLetterSize(playerid, TextPHud[playerid][14], 0.162498, 1.099998);
    PlayerTextDrawTextSize(playerid, TextPHud[playerid][14], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextPHud[playerid][14], 0);
    PlayerTextDrawSetShadow(playerid, TextPHud[playerid][14], 0);
    PlayerTextDrawAlignment(playerid, TextPHud[playerid][14], 2);
    PlayerTextDrawColor(playerid, TextPHud[playerid][14], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, TextPHud[playerid][14], 255);
    PlayerTextDrawBoxColor(playerid, TextPHud[playerid][14], 50);
    PlayerTextDrawUseBox(playerid, TextPHud[playerid][14], 0);
    PlayerTextDrawSetProportional(playerid, TextPHud[playerid][14], 1);
    PlayerTextDrawSetSelectable(playerid, TextPHud[playerid][14], 0);

    /*InvText[playerid][0] = CreatePlayerTextDraw(playerid, 319.000000, 133.000000, "_");
    PlayerTextDrawFont(playerid, InvText[playerid][0], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][0], 0.279166, 22.599973);
    PlayerTextDrawTextSize(playerid, InvText[playerid][0], 12.000000, 332.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][0], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][0], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][0], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][0], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][0], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][0], 0);

    InvText[playerid][1] = CreatePlayerTextDraw(playerid, 319.000000, 145.000000, "_");
    PlayerTextDrawFont(playerid, InvText[playerid][1], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][1], 0.279166, 21.299993);
    PlayerTextDrawTextSize(playerid, InvText[playerid][1], 12.000000, 331.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][1], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][1], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][1], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][1], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][1], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][1], 943208874);
    PlayerTextDrawUseBox(playerid, InvText[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][1], 0);

    InvText[playerid][2] = CreatePlayerTextDraw(playerid, 214.500000, 145.000000, "_");
    PlayerTextDrawFont(playerid, InvText[playerid][2], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][2], 0.279166, 9.699997);
    PlayerTextDrawTextSize(playerid, InvText[playerid][2], 12.000000, 122.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][2], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][2], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][2], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][2], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][2], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][2], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][2], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][2], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][2], 0);

    InvText[playerid][3] = CreatePlayerTextDraw(playerid, 423.500000, 145.000000, "_");
    PlayerTextDrawFont(playerid, InvText[playerid][3], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][3], 0.279166, 21.299993);
    PlayerTextDrawTextSize(playerid, InvText[playerid][3], 12.000000, 122.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][3], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][3], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][3], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][3], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][3], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][3], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][3], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][3], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][3], 0);

    InvText[playerid][4] = CreatePlayerTextDraw(playerid, 157.000000, 132.000000, "-_Inventario:_24/25");
    PlayerTextDrawFont(playerid, InvText[playerid][4], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][4], 0.145833, 0.999997);
    PlayerTextDrawTextSize(playerid, InvText[playerid][4], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][4], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][4], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][4], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][4], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][4], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][4], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][4], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][4], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][4], 0);

    InvText[playerid][5] = CreatePlayerTextDraw(playerid, 214.500000, 145.000000, "_");
    PlayerTextDrawFont(playerid, InvText[playerid][5], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][5], 0.279166, 0.650004);
    PlayerTextDrawTextSize(playerid, InvText[playerid][5], 12.000000, 122.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][5], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][5], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][5], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][5], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][5], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][5], 1433087999);
    PlayerTextDrawUseBox(playerid, InvText[playerid][5], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][5], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][5], 0);

    InvText[playerid][6] = CreatePlayerTextDraw(playerid, 423.500000, 145.000000, "_");
    PlayerTextDrawFont(playerid, InvText[playerid][6], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][6], 0.279166, 0.650004);
    PlayerTextDrawTextSize(playerid, InvText[playerid][6], 12.000000, 122.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][6], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][6], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][6], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][6], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][6], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][6], 1433087999);
    PlayerTextDrawUseBox(playerid, InvText[playerid][6], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][6], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][6], 0);

    InvText[playerid][7] = CreatePlayerTextDraw(playerid, 362.000000, 142.000000, "-_itens:");
    PlayerTextDrawFont(playerid, InvText[playerid][7], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][7], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][7], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][7], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][7], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][7], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][7], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][7], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][7], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][7], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][7], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][7], 0);

    InvText[playerid][8] = CreatePlayerTextDraw(playerid, 214.500000, 248.000000, "_");
    PlayerTextDrawFont(playerid, InvText[playerid][8], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][8], 0.279166, 9.900006);
    PlayerTextDrawTextSize(playerid, InvText[playerid][8], 12.000000, 122.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][8], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][8], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][8], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][8], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][8], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][8], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][8], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][8], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][8], 0);

    InvText[playerid][9] = CreatePlayerTextDraw(playerid, 153.000000, 159.000000, "-_Madeiras:");
    PlayerTextDrawFont(playerid, InvText[playerid][9], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][9], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][9], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][9], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][9], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][9], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][9], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][9], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][9], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][9], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][9], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][9], 0);

    InvText[playerid][10] = CreatePlayerTextDraw(playerid, 153.000000, 171.000000, "-_ferros:");
    PlayerTextDrawFont(playerid, InvText[playerid][10], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][10], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][10], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][10], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][10], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][10], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][10], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][10], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][10], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][10], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][10], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][10], 0);

    InvText[playerid][11] = CreatePlayerTextDraw(playerid, 153.000000, 183.000000, "-_level:");
    PlayerTextDrawFont(playerid, InvText[playerid][11], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][11], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][11], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][11], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][11], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][11], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][11], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][11], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][11], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][11], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][11], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][11], 0);

    InvText[playerid][12] = CreatePlayerTextDraw(playerid, 153.000000, 195.000000, "---------");
    PlayerTextDrawFont(playerid, InvText[playerid][12], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][12], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][12], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][12], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][12], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][12], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][12], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][12], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][12], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][12], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][12], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][12], 0);

    InvText[playerid][13] = CreatePlayerTextDraw(playerid, 153.000000, 207.000000, "---------");
    PlayerTextDrawFont(playerid, InvText[playerid][13], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][13], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][13], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][13], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][13], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][13], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][13], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][13], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][13], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][13], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][13], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][13], 0);

    InvText[playerid][14] = CreatePlayerTextDraw(playerid, 153.000000, 219.000000, "---------");
    PlayerTextDrawFont(playerid, InvText[playerid][14], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][14], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][14], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][14], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][14], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][14], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][14], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][14], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][14], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][14], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][14], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][14], 0);

    InvText[playerid][15] = CreatePlayerTextDraw(playerid, 274.000000, 159.000000, "1000x");
    PlayerTextDrawFont(playerid, InvText[playerid][15], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][15], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][15], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][15], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][15], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][15], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][15], 1433087914);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][15], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][15], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][15], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][15], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][15], 0);

    InvText[playerid][16] = CreatePlayerTextDraw(playerid, 274.000000, 171.000000, "2000x");
    PlayerTextDrawFont(playerid, InvText[playerid][16], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][16], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][16], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][16], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][16], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][16], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][16], 1433087914);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][16], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][16], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][16], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][16], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][16], 0);

    InvText[playerid][17] = CreatePlayerTextDraw(playerid, 274.000000, 183.000000, "3000x");
    PlayerTextDrawFont(playerid, InvText[playerid][17], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][17], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][17], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][17], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][17], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][17], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][17], 1433087914);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][17], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][17], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][17], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][17], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][17], 0);

    InvText[playerid][18] = CreatePlayerTextDraw(playerid, 274.000000, 195.000000, "---------");
    PlayerTextDrawFont(playerid, InvText[playerid][18], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][18], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][18], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][18], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][18], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][18], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][18], 1433087914);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][18], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][18], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][18], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][18], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][18], 0);

    InvText[playerid][19] = CreatePlayerTextDraw(playerid, 274.000000, 207.000000, "---------");
    PlayerTextDrawFont(playerid, InvText[playerid][19], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][19], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][19], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][19], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][19], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][19], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][19], 1433087914);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][19], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][19], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][19], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][19], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][19], 0);

    InvText[playerid][20] = CreatePlayerTextDraw(playerid, 274.000000, 219.000000, "---------");
    PlayerTextDrawFont(playerid, InvText[playerid][20], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][20], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][20], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][20], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][20], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][20], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][20], 1433087914);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][20], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][20], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][20], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][20], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][20], 0);

    InvText[playerid][21] = CreatePlayerTextDraw(playerid, 214.500000, 248.000000, "_");
    PlayerTextDrawFont(playerid, InvText[playerid][21], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][21], 0.279166, 0.650004);
    PlayerTextDrawTextSize(playerid, InvText[playerid][21], 12.000000, 122.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][21], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][21], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][21], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][21], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][21], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][21], 1433087999);
    PlayerTextDrawUseBox(playerid, InvText[playerid][21], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][21], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][21], 0);

    InvText[playerid][22] = CreatePlayerTextDraw(playerid, 153.000000, 247.000000, "-_necessidades:");
    PlayerTextDrawFont(playerid, InvText[playerid][22], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][22], 0.149994, 0.949998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][22], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][22], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][22], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][22], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][22], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][22], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][22], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][22], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][22], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][22], 0);

    InvText[playerid][23] = CreatePlayerTextDraw(playerid, 153.000000, 267.000000, "-_Fome:");
    PlayerTextDrawFont(playerid, InvText[playerid][23], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][23], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][23], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][23], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][23], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][23], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][23], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][23], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][23], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][23], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][23], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][23], 0);

    InvText[playerid][24] = CreatePlayerTextDraw(playerid, 160.000000, 283.000000, "_");
    PlayerTextDrawFont(playerid, InvText[playerid][24], 1);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][24], 0.600000, 0.400000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][24], 256.000000, 10.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][24], 1);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][24], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][24], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][24], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][24], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][24], 1296911781);
    PlayerTextDrawUseBox(playerid, InvText[playerid][24], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][24], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][24], 0);

    InvText[playerid][25] = CreatePlayerTextDraw(playerid, 262.000000, 279.000000, "100");
    PlayerTextDrawFont(playerid, InvText[playerid][25], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][25], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][25], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][25], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][25], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][25], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][25], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][25], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][25], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][25], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][25], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][25], 0);

    InvText[playerid][26] = CreatePlayerTextDraw(playerid, 153.000000, 299.000000, "-_sede:");
    PlayerTextDrawFont(playerid, InvText[playerid][26], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][26], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][26], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][26], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][26], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][26], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][26], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][26], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][26], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][26], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][26], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][26], 0);

    InvText[playerid][27] = CreatePlayerTextDraw(playerid, 160.000000, 316.000000, "_");
    PlayerTextDrawFont(playerid, InvText[playerid][27], 1);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][27], 0.600000, 0.400000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][27], 256.000000, 10.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][27], 1);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][27], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][27], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][27], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][27], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][27], 1296911781);
    PlayerTextDrawUseBox(playerid, InvText[playerid][27], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][27], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][27], 0);

    InvText[playerid][28] = CreatePlayerTextDraw(playerid, 262.000000, 312.000000, "100");
    PlayerTextDrawFont(playerid, InvText[playerid][28], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][28], 0.170833, 1.149999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][28], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][28], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][28], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][28], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][28], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][28], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][28], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][28], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][28], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][28], 0);

    InvText[playerid][29] = CreatePlayerTextDraw(playerid, 271.000000, 143.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][29], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][29], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][29], 94.500000, 96.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][29], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][29], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][29], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][29], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][29], 0);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][29], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][29], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][29], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][29], 0);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][29], 42);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][29], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][29], 1, 1);

    InvText[playerid][30] = CreatePlayerTextDraw(playerid, 361.000000, 155.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][30], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][30], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][30], 40.000000, 36.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][30], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][30], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][30], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][30], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][30], 1296911846);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][30], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][30], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][30], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][30], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][30], 1650);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][30], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][30], 1, 1);

    InvText[playerid][31] = CreatePlayerTextDraw(playerid, 403.500000, 155.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][31], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][31], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][31], 40.000000, 36.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][31], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][31], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][31], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][31], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][31], 1296911846);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][31], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][31], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][31], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][31], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][31], 19602);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][31], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][31], 1, 1);

    InvText[playerid][32] = CreatePlayerTextDraw(playerid, 446.000000, 155.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][32], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][32], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][32], 40.000000, 36.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][32], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][32], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][32], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][32], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][32], 1296911846);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][32], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][32], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][32], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][32], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][32], 358);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][32], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][32], 1, 1);

    InvText[playerid][33] = CreatePlayerTextDraw(playerid, 361.000000, 194.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][33], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][33], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][33], 40.000000, 36.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][33], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][33], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][33], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][33], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][33], 1296911846);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][33], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][33], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][33], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][33], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][33], 3026);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][33], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][33], 1, 1);

    InvText[playerid][34] = CreatePlayerTextDraw(playerid, 403.500000, 194.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][34], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][34], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][34], 40.000000, 36.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][34], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][34], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][34], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][34], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][34], 1296911846);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][34], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][34], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][34], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][34], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][34], 1310);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][34], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][34], 1, 1);

    InvText[playerid][35] = CreatePlayerTextDraw(playerid, 446.000000, 194.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][35], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][35], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][35], 40.000000, 36.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][35], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][35], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][35], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][35], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][35], 1296911846);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][35], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][35], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][35], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][35], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][35], 1550);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][35], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][35], 1, 1);

    InvText[playerid][36] = CreatePlayerTextDraw(playerid, 361.000000, 233.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][36], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][36], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][36], 40.000000, 36.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][36], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][36], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][36], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][36], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][36], 1296911846);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][36], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][36], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][36], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][36], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][36], 19559);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][36], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][36], 1, 1);

    InvText[playerid][37] = CreatePlayerTextDraw(playerid, 403.500000, 233.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][37], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][37], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][37], 40.000000, 36.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][37], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][37], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][37], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][37], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][37], 1296911846);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][37], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][37], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][37], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][37], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][37], 11738);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][37], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][37], 1, 1);

    InvText[playerid][38] = CreatePlayerTextDraw(playerid, 446.000000, 233.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][38], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][38], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][38], 40.000000, 36.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][38], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][38], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][38], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][38], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][38], 1296911846);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][38], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][38], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][38], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][38], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][38], 2752);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][38], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][38], 1, 1);

    InvText[playerid][39] = CreatePlayerTextDraw(playerid, 361.000000, 272.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][39], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][39], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][39], 40.000000, 36.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][39], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][39], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][39], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][39], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][39], 1296911846);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][39], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][39], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][39], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][39], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][39], 2709);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][39], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][39], 1, 1);

    InvText[playerid][40] = CreatePlayerTextDraw(playerid, 403.500000, 272.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][40], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][40], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][40], 40.000000, 36.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][40], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][40], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][40], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][40], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][40], 1296911846);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][40], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][40], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][40], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][40], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][40], 1580);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][40], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][40], 1, 1);

    InvText[playerid][41] = CreatePlayerTextDraw(playerid, 446.000000, 272.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][41], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][41], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][41], 40.000000, 36.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][41], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][41], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][41], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][41], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][41], 1296911846);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][41], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][41], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][41], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][41], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][41], 2683);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][41], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][41], 1, 1);

    InvText[playerid][42] = CreatePlayerTextDraw(playerid, 401.000000, 185.000000, "1x");
    PlayerTextDrawFont(playerid, InvText[playerid][42], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][42], 0.137500, 0.699998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][42], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][42], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][42], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][42], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][42], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][42], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][42], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][42], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][42], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][42], 0);

    InvText[playerid][43] = CreatePlayerTextDraw(playerid, 443.000000, 185.000000, "2x");
    PlayerTextDrawFont(playerid, InvText[playerid][43], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][43], 0.137500, 0.699998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][43], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][43], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][43], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][43], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][43], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][43], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][43], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][43], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][43], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][43], 0);

    InvText[playerid][44] = CreatePlayerTextDraw(playerid, 485.000000, 185.000000, "3x");
    PlayerTextDrawFont(playerid, InvText[playerid][44], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][44], 0.137500, 0.699998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][44], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][44], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][44], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][44], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][44], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][44], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][44], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][44], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][44], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][44], 0);

    InvText[playerid][45] = CreatePlayerTextDraw(playerid, 401.000000, 224.000000, "4x");
    PlayerTextDrawFont(playerid, InvText[playerid][45], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][45], 0.137500, 0.699998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][45], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][45], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][45], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][45], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][45], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][45], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][45], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][45], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][45], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][45], 0);

    InvText[playerid][46] = CreatePlayerTextDraw(playerid, 443.000000, 224.000000, "5x");
    PlayerTextDrawFont(playerid, InvText[playerid][46], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][46], 0.137500, 0.699998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][46], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][46], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][46], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][46], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][46], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][46], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][46], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][46], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][46], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][46], 0);

    InvText[playerid][47] = CreatePlayerTextDraw(playerid, 485.000000, 224.000000, "6x");
    PlayerTextDrawFont(playerid, InvText[playerid][47], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][47], 0.137500, 0.699998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][47], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][47], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][47], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][47], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][47], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][47], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][47], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][47], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][47], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][47], 0);

    InvText[playerid][48] = CreatePlayerTextDraw(playerid, 401.000000, 263.000000, "7x");
    PlayerTextDrawFont(playerid, InvText[playerid][48], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][48], 0.137500, 0.699998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][48], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][48], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][48], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][48], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][48], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][48], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][48], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][48], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][48], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][48], 0);

    InvText[playerid][49] = CreatePlayerTextDraw(playerid, 443.000000, 263.000000, "8x");
    PlayerTextDrawFont(playerid, InvText[playerid][49], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][49], 0.137500, 0.699998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][49], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][49], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][49], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][49], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][49], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][49], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][49], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][49], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][49], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][49], 0);

    InvText[playerid][50] = CreatePlayerTextDraw(playerid, 485.000000, 263.000000, "9x");
    PlayerTextDrawFont(playerid, InvText[playerid][50], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][50], 0.137500, 0.699998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][50], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][50], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][50], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][50], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][50], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][50], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][50], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][50], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][50], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][50], 0);

    InvText[playerid][51] = CreatePlayerTextDraw(playerid, 401.000000, 302.000000, "10x");
    PlayerTextDrawFont(playerid, InvText[playerid][51], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][51], 0.137500, 0.699998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][51], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][51], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][51], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][51], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][51], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][51], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][51], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][51], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][51], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][51], 0);

    InvText[playerid][52] = CreatePlayerTextDraw(playerid, 443.000000, 302.000000, "11x");
    PlayerTextDrawFont(playerid, InvText[playerid][52], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][52], 0.137500, 0.699998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][52], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][52], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][52], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][52], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][52], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][52], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][52], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][52], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][52], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][52], 0);

    InvText[playerid][53] = CreatePlayerTextDraw(playerid, 485.000000, 302.000000, "12x");
    PlayerTextDrawFont(playerid, InvText[playerid][53], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][53], 0.137500, 0.699998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][53], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][53], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][53], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][53], 3);
    PlayerTextDrawColor(playerid, InvText[playerid][53], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][53], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][53], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][53], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][53], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][53], 0);

    InvText[playerid][54] = CreatePlayerTextDraw(playerid, 319.000000, 248.000000, "_");
    PlayerTextDrawFont(playerid, InvText[playerid][54], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][54], 0.279166, 0.749997);
    PlayerTextDrawTextSize(playerid, InvText[playerid][54], 12.000000, 64.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][54], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][54], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][54], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][54], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][54], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][54], 1433087999);
    PlayerTextDrawUseBox(playerid, InvText[playerid][54], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][54], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][54], 0);

    InvText[playerid][55] = CreatePlayerTextDraw(playerid, 319.000000, 247.000000, "item");
    PlayerTextDrawFont(playerid, InvText[playerid][55], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][55], 0.125000, 0.899999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][55], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][55], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][55], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][55], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][55], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][55], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][55], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][55], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][55], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][55], 0);

    InvText[playerid][56] = CreatePlayerTextDraw(playerid, 319.000000, 259.000000, "_");
    PlayerTextDrawFont(playerid, InvText[playerid][56], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][56], 0.279166, 8.649993);
    PlayerTextDrawTextSize(playerid, InvText[playerid][56], 12.000000, 64.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][56], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][56], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][56], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][56], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][56], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][56], 171);
    PlayerTextDrawUseBox(playerid, InvText[playerid][56], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][56], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][56], 0);

    InvText[playerid][57] = CreatePlayerTextDraw(playerid, 299.000000, 261.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][57], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][57], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][57], 38.500000, 31.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][57], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][57], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][57], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][57], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][57], 1296911616);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][57], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][57], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][57], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][57], 0);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][57], 99999);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][57], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][57], 1, 1);

    InvText[playerid][58] = CreatePlayerTextDraw(playerid, 319.000000, 297.000000, "descricao~n~de~n~um~n~item.");
    PlayerTextDrawFont(playerid, InvText[playerid][58], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][58], 0.125000, 0.899999);
    PlayerTextDrawTextSize(playerid, InvText[playerid][58], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][58], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][58], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][58], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][58], 1433087999);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][58], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][58], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][58], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][58], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][58], 0);

    InvText[playerid][59] = CreatePlayerTextDraw(playerid, 401.000000, 316.000000, "<<<");
    PlayerTextDrawFont(playerid, InvText[playerid][59], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][59], 0.199999, 1.750000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][59], 12.000000, 32.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][59], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][59], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][59], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][59], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][59], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][59], 200);
    PlayerTextDrawUseBox(playerid, InvText[playerid][59], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][59], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][59], 1);

    InvText[playerid][60] = CreatePlayerTextDraw(playerid, 446.000000, 316.000000, ">>>");
    PlayerTextDrawFont(playerid, InvText[playerid][60], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][60], 0.199999, 1.750000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][60], 12.000000, 32.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][60], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][60], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][60], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][60], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][60], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][60], 200);
    PlayerTextDrawUseBox(playerid, InvText[playerid][60], 1);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][60], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][60], 1);

    InvText[playerid][61] = CreatePlayerTextDraw(playerid, 423.000000, 319.000000, "1/5");
    PlayerTextDrawFont(playerid, InvText[playerid][61], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][61], 0.195831, 0.949998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][61], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][61], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][61], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][61], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][61], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][61], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][61], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][61], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][61], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][61], 0);

    InvText[playerid][62] = CreatePlayerTextDraw(playerid, 488.000000, 257.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][62], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][62], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][62], 61.500000, 19.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][62], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][62], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][62], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][62], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][62], 1296911871);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][62], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][62], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][62], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][62], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][62], 0);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][62], -10.000000, 0.000000, -20.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][62], 1, 1);

    InvText[playerid][63] = CreatePlayerTextDraw(playerid, 488.000000, 278.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][63], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][63], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][63], 61.500000, 19.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][63], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][63], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][63], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][63], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][63], 1296911871);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][63], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][63], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][63], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][63], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][63], 0);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][63], -10.000000, 0.000000, -20.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][63], 1, 1);

    InvText[playerid][64] = CreatePlayerTextDraw(playerid, 488.000000, 299.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][64], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][64], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][64], 61.500000, 19.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][64], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][64], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][64], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][64], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][64], 1296911871);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][64], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][64], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][64], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][64], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][64], 0);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][64], -10.000000, 0.000000, -20.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][64], 1, 1);

    InvText[playerid][65] = CreatePlayerTextDraw(playerid, 488.000000, 320.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, InvText[playerid][65], 5);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][65], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, InvText[playerid][65], 61.500000, 19.500000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][65], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][65], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][65], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][65], -1);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][65], -1962934017);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][65], 255);
    PlayerTextDrawUseBox(playerid, InvText[playerid][65], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][65], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][65], 1);
    PlayerTextDrawSetPreviewModel(playerid, InvText[playerid][65], 0);
    PlayerTextDrawSetPreviewRot(playerid, InvText[playerid][65], -10.000000, 0.000000, -20.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, InvText[playerid][65], 1, 1);

    InvText[playerid][66] = CreatePlayerTextDraw(playerid, 518.000000, 261.000000, "utilizar");
    PlayerTextDrawFont(playerid, InvText[playerid][66], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][66], 0.166666, 1.199998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][66], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][66], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][66], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][66], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][66], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][66], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][66], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][66], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][66], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][66], 0);

    InvText[playerid][67] = CreatePlayerTextDraw(playerid, 518.000000, 282.000000, "Dropar");
    PlayerTextDrawFont(playerid, InvText[playerid][67], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][67], 0.166666, 1.199998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][67], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][67], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][67], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][67], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][67], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][67], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][67], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][67], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][67], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][67], 0);

    InvText[playerid][68] = CreatePlayerTextDraw(playerid, 518.000000, 303.000000, "juntar");
    PlayerTextDrawFont(playerid, InvText[playerid][68], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][68], 0.166666, 1.199998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][68], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][68], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][68], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][68], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][68], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][68], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][68], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][68], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][68], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][68], 0);

    InvText[playerid][69] = CreatePlayerTextDraw(playerid, 518.000000, 324.000000, "fechar");
    PlayerTextDrawFont(playerid, InvText[playerid][69], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][69], 0.166666, 1.199998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][69], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][69], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][69], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][69], 2);
    PlayerTextDrawColor(playerid, InvText[playerid][69], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][69], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][69], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][69], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][69], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][69], 0);

    InvText[playerid][70] = CreatePlayerTextDraw(playerid, 153.000000, 143.000000, "-_Informacoes:");
    PlayerTextDrawFont(playerid, InvText[playerid][70], 2);
    PlayerTextDrawLetterSize(playerid, InvText[playerid][70], 0.149994, 0.949998);
    PlayerTextDrawTextSize(playerid, InvText[playerid][70], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, InvText[playerid][70], 0);
    PlayerTextDrawSetShadow(playerid, InvText[playerid][70], 0);
    PlayerTextDrawAlignment(playerid, InvText[playerid][70], 1);
    PlayerTextDrawColor(playerid, InvText[playerid][70], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, InvText[playerid][70], 255);
    PlayerTextDrawBoxColor(playerid, InvText[playerid][70], 50);
    PlayerTextDrawUseBox(playerid, InvText[playerid][70], 0);
    PlayerTextDrawSetProportional(playerid, InvText[playerid][70], 1);
    PlayerTextDrawSetSelectable(playerid, InvText[playerid][70], 0);*/

    TimerTextAcao[playerid][0] = CreatePlayerTextDraw(playerid, 319.000000, 370.000000, "abrindo_caixa...");
    PlayerTextDrawFont(playerid, TimerTextAcao[playerid][0], 2);
    PlayerTextDrawLetterSize(playerid, TimerTextAcao[playerid][0], 0.179166, 0.899999);
    PlayerTextDrawTextSize(playerid, TimerTextAcao[playerid][0], 12.000000, 108.500000);
    PlayerTextDrawSetOutline(playerid, TimerTextAcao[playerid][0], 0);
    PlayerTextDrawSetShadow(playerid, TimerTextAcao[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, TimerTextAcao[playerid][0], 2);
    PlayerTextDrawColor(playerid, TimerTextAcao[playerid][0], -1);
    PlayerTextDrawBackgroundColor(playerid, TimerTextAcao[playerid][0], 255);
    PlayerTextDrawBoxColor(playerid, TimerTextAcao[playerid][0], 1296911736);
    PlayerTextDrawUseBox(playerid, TimerTextAcao[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, TimerTextAcao[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, TimerTextAcao[playerid][0], 0);

    TimerTextAcao[playerid][1] = CreatePlayerTextDraw(playerid, 319.000000, 383.000000, "_");
    PlayerTextDrawFont(playerid, TimerTextAcao[playerid][1], 2);
    PlayerTextDrawLetterSize(playerid, TimerTextAcao[playerid][1], 0.179166, 1.599997);
    PlayerTextDrawTextSize(playerid, TimerTextAcao[playerid][1], 12.000000, 108.500000);
    PlayerTextDrawSetOutline(playerid, TimerTextAcao[playerid][1], 0);
    PlayerTextDrawSetShadow(playerid, TimerTextAcao[playerid][1], 0);
    PlayerTextDrawAlignment(playerid, TimerTextAcao[playerid][1], 2);
    PlayerTextDrawColor(playerid, TimerTextAcao[playerid][1], -1);
    PlayerTextDrawBackgroundColor(playerid, TimerTextAcao[playerid][1], 255);
    PlayerTextDrawBoxColor(playerid, TimerTextAcao[playerid][1], 120);
    PlayerTextDrawUseBox(playerid, TimerTextAcao[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid, TimerTextAcao[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, TimerTextAcao[playerid][1], 0);

    TimerTextAcao[playerid][2] = CreatePlayerTextDraw(playerid, 319.000000, 384.000000, "02:50");
    PlayerTextDrawFont(playerid, TimerTextAcao[playerid][2], 2);
    PlayerTextDrawLetterSize(playerid, TimerTextAcao[playerid][2], 0.299998, 1.149999);
    PlayerTextDrawTextSize(playerid, TimerTextAcao[playerid][2], 12.000000, 108.500000);
    PlayerTextDrawSetOutline(playerid, TimerTextAcao[playerid][2], 0);
    PlayerTextDrawSetShadow(playerid, TimerTextAcao[playerid][2], 0);
    PlayerTextDrawAlignment(playerid, TimerTextAcao[playerid][2], 2);
    PlayerTextDrawColor(playerid, TimerTextAcao[playerid][2], -1);
    PlayerTextDrawBackgroundColor(playerid, TimerTextAcao[playerid][2], 255);
    PlayerTextDrawBoxColor(playerid, TimerTextAcao[playerid][2], 1433087999);
    PlayerTextDrawUseBox(playerid, TimerTextAcao[playerid][2], 0);
    PlayerTextDrawSetProportional(playerid, TimerTextAcao[playerid][2], 1);
    PlayerTextDrawSetSelectable(playerid, TimerTextAcao[playerid][2], 0);

    DosInfect[playerid][0] = CreatePlayerTextDraw(playerid, 627.500000, 366.000000, "-5_vida.");
    PlayerTextDrawFont(playerid, DosInfect[playerid][0], 2);
    PlayerTextDrawLetterSize(playerid, DosInfect[playerid][0], 0.195832, 1.049997);
    PlayerTextDrawTextSize(playerid, DosInfect[playerid][0], 12.000000, 108.500000);
    PlayerTextDrawSetOutline(playerid, DosInfect[playerid][0], 0);
    PlayerTextDrawSetShadow(playerid, DosInfect[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, DosInfect[playerid][0], 3);
    PlayerTextDrawColor(playerid, DosInfect[playerid][0], -1962934017);
    PlayerTextDrawBackgroundColor(playerid, DosInfect[playerid][0], 255);
    PlayerTextDrawBoxColor(playerid, DosInfect[playerid][0], 1296911736);
    PlayerTextDrawUseBox(playerid, DosInfect[playerid][0], 0);
    PlayerTextDrawSetProportional(playerid, DosInfect[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, DosInfect[playerid][0], 0);

    DosInfect[playerid][1] = CreatePlayerTextDraw(playerid, 320.000000, -1.000000, "_");
    PlayerTextDrawFont(playerid, DosInfect[playerid][1], 2);
    PlayerTextDrawLetterSize(playerid, DosInfect[playerid][1], 0.179166, 50.000007);
    PlayerTextDrawTextSize(playerid, DosInfect[playerid][1], 12.000000, 640.500000);
    PlayerTextDrawSetOutline(playerid, DosInfect[playerid][1], 0);
    PlayerTextDrawSetShadow(playerid, DosInfect[playerid][1], 0);
    PlayerTextDrawAlignment(playerid, DosInfect[playerid][1], 2);
    PlayerTextDrawColor(playerid, DosInfect[playerid][1], -1);
    PlayerTextDrawBackgroundColor(playerid, DosInfect[playerid][1], 255);
    PlayerTextDrawBoxColor(playerid, DosInfect[playerid][1], 9109664);
    PlayerTextDrawUseBox(playerid, DosInfect[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid, DosInfect[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, DosInfect[playerid][1], 0);

    DosInfect[playerid][2] = CreatePlayerTextDraw(playerid, 600.000000, 354.000000, "infectado...");
    PlayerTextDrawFont(playerid, DosInfect[playerid][2], 1);
    PlayerTextDrawLetterSize(playerid, DosInfect[playerid][2], 0.287499, 1.349997);
    PlayerTextDrawTextSize(playerid, DosInfect[playerid][2], 12.000000, 108.500000);
    PlayerTextDrawSetOutline(playerid, DosInfect[playerid][2], 0);
    PlayerTextDrawSetShadow(playerid, DosInfect[playerid][2], 1);
    PlayerTextDrawAlignment(playerid, DosInfect[playerid][2], 2);
    PlayerTextDrawColor(playerid, DosInfect[playerid][2], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, DosInfect[playerid][2], 255);
    PlayerTextDrawBoxColor(playerid, DosInfect[playerid][2], 1296911736);
    PlayerTextDrawUseBox(playerid, DosInfect[playerid][2], 0);
    PlayerTextDrawSetProportional(playerid, DosInfect[playerid][2], 1);
    PlayerTextDrawSetSelectable(playerid, DosInfect[playerid][2], 0);

    TextLoginP[playerid] = CreatePlayerTextDraw(playerid, 50.500000, 250.500000, "Logar");
    PlayerTextDrawFont(playerid, TextLoginP[playerid], 2);
    PlayerTextDrawLetterSize(playerid, TextLoginP[playerid], 0.195832, 1.299999);
    PlayerTextDrawTextSize(playerid, TextLoginP[playerid], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, TextLoginP[playerid], 0);
    PlayerTextDrawSetShadow(playerid, TextLoginP[playerid], 0);
    PlayerTextDrawAlignment(playerid, TextLoginP[playerid], 2);
    PlayerTextDrawColor(playerid, TextLoginP[playerid], 255);
    PlayerTextDrawBackgroundColor(playerid, TextLoginP[playerid], 255);
    PlayerTextDrawBoxColor(playerid, TextLoginP[playerid], 50);
    PlayerTextDrawUseBox(playerid, TextLoginP[playerid], 0);
    PlayerTextDrawSetProportional(playerid, TextLoginP[playerid], 1);
    PlayerTextDrawSetSelectable(playerid, TextLoginP[playerid], 0);

    EditorTipo[playerid] = CreatePlayerTextDraw(playerid, 564.000000, 195.000000, "Posicao");
    PlayerTextDrawFont(playerid, EditorTipo[playerid], 2);
    PlayerTextDrawLetterSize(playerid, EditorTipo[playerid], 0.191666, 1.149999);
    PlayerTextDrawTextSize(playerid, EditorTipo[playerid], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, EditorTipo[playerid], 0);
    PlayerTextDrawSetShadow(playerid, EditorTipo[playerid], 0);
    PlayerTextDrawAlignment(playerid, EditorTipo[playerid], 2);
    PlayerTextDrawColor(playerid, EditorTipo[playerid], -1);
    PlayerTextDrawBackgroundColor(playerid, EditorTipo[playerid], 255);
    PlayerTextDrawBoxColor(playerid, EditorTipo[playerid], 50);
    PlayerTextDrawUseBox(playerid, EditorTipo[playerid], 0);
    PlayerTextDrawSetProportional(playerid, EditorTipo[playerid], 1);
    PlayerTextDrawSetSelectable(playerid, EditorTipo[playerid], 0);

    Box_WeaponText[playerid][0] = CreatePlayerTextDraw(playerid, 319.000000, 160.000000, "_");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][0], 1);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][0], 0.600000, 25.950002);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][0], 298.500000, 373.500000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][0], 1);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][0], 2);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][0], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][0], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][0], 246);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][0], 0);

    Box_WeaponText[playerid][1] = CreatePlayerTextDraw(playerid, 319.000000, 162.000000, "_");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][1], 1);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][1], 0.600000, 23.050024);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][1], 298.500000, 369.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][1], 1);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][1], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][1], 2);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][1], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][1], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][1], -1094795726);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][1], 0);

    Box_WeaponText[playerid][2] = CreatePlayerTextDraw(playerid, 136.000000, 165.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][2], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][2], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][2], 72.000000, 72.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][2], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][2], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][2], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][2], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][2], 1296911741);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][2], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][2], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][2], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][2], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][2], 356);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][2], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][2], 1, 1);

    Box_WeaponText[playerid][3] = CreatePlayerTextDraw(playerid, 209.000000, 165.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][3], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][3], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][3], 72.000000, 72.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][3], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][3], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][3], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][3], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][3], 1296911741);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][3], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][3], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][3], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][3], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][3], 347);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][3], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][3], 1, 1);

    Box_WeaponText[playerid][4] = CreatePlayerTextDraw(playerid, 282.500000, 165.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][4], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][4], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][4], 72.000000, 72.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][4], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][4], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][4], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][4], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][4], 1296911741);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][4], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][4], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][4], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][4], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][4], 347);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][4], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][4], 1, 1);

    Box_WeaponText[playerid][5] = CreatePlayerTextDraw(playerid, 356.000000, 165.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][5], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][5], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][5], 72.000000, 72.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][5], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][5], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][5], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][5], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][5], 1296911741);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][5], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][5], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][5], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][5], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][5], 347);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][5], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][5], 1, 1);

    Box_WeaponText[playerid][6] = CreatePlayerTextDraw(playerid, 429.500000, 165.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][6], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][6], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][6], 72.000000, 72.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][6], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][6], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][6], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][6], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][6], 1296911741);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][6], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][6], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][6], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][6], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][6], 347);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][6], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][6], 1, 1);

    Box_WeaponText[playerid][7] = CreatePlayerTextDraw(playerid, 136.000000, 239.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][7], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][7], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][7], 72.000000, 72.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][7], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][7], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][7], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][7], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][7], 1296911741);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][7], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][7], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][7], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][7], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][7], 347);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][7], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][7], 1, 1);

    Box_WeaponText[playerid][8] = CreatePlayerTextDraw(playerid, 209.000000, 239.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][8], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][8], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][8], 72.000000, 72.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][8], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][8], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][8], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][8], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][8], 1296911741);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][8], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][8], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][8], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][8], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][8], 347);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][8], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][8], 1, 1);

    Box_WeaponText[playerid][9] = CreatePlayerTextDraw(playerid, 282.500000, 239.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][9], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][9], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][9], 72.000000, 72.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][9], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][9], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][9], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][9], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][9], 1296911741);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][9], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][9], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][9], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][9], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][9], 347);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][9], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][9], 1, 1);

    Box_WeaponText[playerid][10] = CreatePlayerTextDraw(playerid, 356.000000, 239.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][10], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][10], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][10], 72.000000, 72.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][10], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][10], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][10], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][10], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][10], 1296911741);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][10], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][10], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][10], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][10], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][10], 347);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][10], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][10], 1, 1);

    Box_WeaponText[playerid][11] = CreatePlayerTextDraw(playerid, 429.500000, 239.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][11], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][11], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][11], 72.000000, 72.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][11], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][11], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][11], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][11], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][11], 1296911741);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][11], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][11], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][11], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][11], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][11], 347);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][11], -10.000000, 0.000000, -20.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][11], 1, 1);

    Box_WeaponText[playerid][12] = CreatePlayerTextDraw(playerid, 138.000000, 222.000000, "M4-A1~n~municao:_10");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][12], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][12], 0.141664, 0.750000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][12], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][12], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][12], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][12], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][12], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][12], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][12], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][12], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][12], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][12], 0);

    Box_WeaponText[playerid][13] = CreatePlayerTextDraw(playerid, 211.000000, 222.000000, "Pistola_M9_SD~n~Municao:_1000");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][13], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][13], 0.141664, 0.750000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][13], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][13], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][13], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][13], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][13], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][13], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][13], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][13], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][13], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][13], 0);

    Box_WeaponText[playerid][14] = CreatePlayerTextDraw(playerid, 284.000000, 222.000000, "Pistola_M9_SD~n~Municao:_1000");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][14], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][14], 0.141664, 0.750000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][14], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][14], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][14], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][14], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][14], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][14], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][14], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][14], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][14], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][14], 0);

    Box_WeaponText[playerid][15] = CreatePlayerTextDraw(playerid, 357.000000, 222.000000, "Pistola_M9_SD~n~Municao:_1000");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][15], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][15], 0.141664, 0.750000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][15], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][15], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][15], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][15], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][15], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][15], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][15], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][15], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][15], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][15], 0);

    Box_WeaponText[playerid][16] = CreatePlayerTextDraw(playerid, 431.000000, 222.000000, "Pistola_M9_SD~n~Municao:_1000");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][16], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][16], 0.141664, 0.750000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][16], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][16], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][16], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][16], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][16], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][16], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][16], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][16], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][16], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][16], 0);

    Box_WeaponText[playerid][17] = CreatePlayerTextDraw(playerid, 138.000000, 296.000000, "Pistola_M9_SD~n~Municao:_1000");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][17], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][17], 0.141664, 0.750000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][17], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][17], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][17], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][17], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][17], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][17], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][17], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][17], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][17], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][17], 0);

    Box_WeaponText[playerid][18] = CreatePlayerTextDraw(playerid, 211.000000, 296.000000, "Pistola_M9_SD~n~Municao:_1000");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][18], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][18], 0.141664, 0.750000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][18], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][18], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][18], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][18], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][18], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][18], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][18], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][18], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][18], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][18], 0);

    Box_WeaponText[playerid][19] = CreatePlayerTextDraw(playerid, 284.000000, 296.000000, "Pistola_M9_SD~n~Municao:_1000");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][19], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][19], 0.141664, 0.750000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][19], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][19], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][19], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][19], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][19], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][19], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][19], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][19], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][19], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][19], 0);

    Box_WeaponText[playerid][20] = CreatePlayerTextDraw(playerid, 357.000000, 296.000000, "Pistola_M9_SD~n~Municao:_1000");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][20], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][20], 0.141664, 0.750000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][20], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][20], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][20], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][20], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][20], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][20], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][20], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][20], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][20], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][20], 0);

    Box_WeaponText[playerid][21] = CreatePlayerTextDraw(playerid, 430.000000, 296.000000, "Pistola_M9_SD~n~Municao:_1000");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][21], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][21], 0.141664, 0.750000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][21], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][21], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][21], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][21], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][21], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][21], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][21], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][21], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][21], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][21], 0);

    Box_WeaponText[playerid][22] = CreatePlayerTextDraw(playerid, 256.000000, 330.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][22], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][22], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][22], 56.500000, 17.500000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][22], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][22], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][22], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][22], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][22], 1296911741);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][22], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][22], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][22], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][22], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][22], 0);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][22], -10.000000, 0.000000, -20.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][22], 1, 1);

    Box_WeaponText[playerid][23] = CreatePlayerTextDraw(playerid, 314.000000, 330.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][23], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][23], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][23], 56.500000, 17.500000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][23], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][23], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][23], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][23], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][23], 1296911741);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][23], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][23], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][23], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][23], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][23], 0);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][23], -10.000000, 0.000000, -20.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][23], 1, 1);

    Box_WeaponText[playerid][24] = CreatePlayerTextDraw(playerid, 418.500000, 330.500000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][24], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][24], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][24], 56.500000, 17.500000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][24], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][24], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][24], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][24], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][24], -2686851);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][24], -1962934017);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][24], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][24], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][24], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][24], 0);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][24], -10.000000, 0.000000, -20.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][24], 1, 1);

    Box_WeaponText[playerid][25] = CreatePlayerTextDraw(playerid, 273.000000, 331.000000, "<<<");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][25], 1);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][25], 0.324999, 1.600000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][25], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][25], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][25], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][25], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][25], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][25], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][25], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][25], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][25], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][25], 0);

    Box_WeaponText[playerid][26] = CreatePlayerTextDraw(playerid, 332.000000, 331.000000, ">>>");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][26], 1);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][26], 0.324999, 1.600000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][26], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][26], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][26], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][26], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][26], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][26], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][26], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][26], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][26], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][26], 0);

    Box_WeaponText[playerid][27] = CreatePlayerTextDraw(playerid, 448.000000, 349.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][27], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][27], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][27], 56.500000, 17.500000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][27], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][27], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][27], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][27], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][27], -1962934147);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][27], 255);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][27], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][27], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][27], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][27], 0);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][27], -10.000000, 0.000000, -20.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][27], 1, 1);

    Box_WeaponText[playerid][28] = CreatePlayerTextDraw(playerid, 390.000000, 349.000000, "Preview_Model");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][28], 5);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][28], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][28], 56.500000, 17.500000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][28], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][28], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][28], 1);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][28], -1);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][28], 9109629);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][28], 255);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][28], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][28], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][28], 1);
    PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][28], 0);
    PlayerTextDrawSetPreviewRot(playerid, Box_WeaponText[playerid][28], -10.000000, 0.000000, -20.000000, 15.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, Box_WeaponText[playerid][28], 1, 1);

    Box_WeaponText[playerid][29] = CreatePlayerTextDraw(playerid, 418.000000, 353.000000, "Pegar_Arma");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][29], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][29], 0.158333, 1.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][29], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][29], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][29], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][29], 2);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][29], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][29], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][29], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][29], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][29], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][29], 0);

    Box_WeaponText[playerid][30] = CreatePlayerTextDraw(playerid, 475.500000, 353.000000, "Fechar");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][30], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][30], 0.158333, 1.000000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][30], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][30], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][30], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][30], 2);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][30], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][30], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][30], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][30], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][30], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][30], 0);

    Box_WeaponText[playerid][31] = CreatePlayerTextDraw(playerid, 446.500000, 334.000000, "Guardar_Arma");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][31], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][31], 0.137500, 1.049998);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][31], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][31], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][31], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][31], 2);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][31], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][31], 255);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][31], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][31], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][31], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][31], 0);

    Box_WeaponText[playerid][32] = CreatePlayerTextDraw(playerid, 191.000000, 333.000000, "Pagina:_(1/2)");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][32], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][32], 0.216664, 1.100000);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][32], 212.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][32], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][32], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][32], 2);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][32], -1094795521);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][32], -1094795521);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][32], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][32], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][32], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][32], 0);

    Box_WeaponText[playerid][33] = CreatePlayerTextDraw(playerid, 313.000000, 378.000000, "Caixa_de_equipamentos_(100)");
    PlayerTextDrawFont(playerid, Box_WeaponText[playerid][33], 2);
    PlayerTextDrawLetterSize(playerid, Box_WeaponText[playerid][33], 0.191667, 1.149999);
    PlayerTextDrawTextSize(playerid, Box_WeaponText[playerid][33], 212.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, Box_WeaponText[playerid][33], 0);
    PlayerTextDrawSetShadow(playerid, Box_WeaponText[playerid][33], 0);
    PlayerTextDrawAlignment(playerid, Box_WeaponText[playerid][33], 2);
    PlayerTextDrawColor(playerid, Box_WeaponText[playerid][33], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, Box_WeaponText[playerid][33], -1094795521);
    PlayerTextDrawBoxColor(playerid, Box_WeaponText[playerid][33], 50);
    PlayerTextDrawUseBox(playerid, Box_WeaponText[playerid][33], 0);
    PlayerTextDrawSetProportional(playerid, Box_WeaponText[playerid][33], 1);
    PlayerTextDrawSetSelectable(playerid, Box_WeaponText[playerid][33], 0);
    /*PedText[playerid] = CreatePlayerTextDraw(playerid, 87.000000, 307.000000, "Ped's:_0");
    PlayerTextDrawFont(playerid, PedText[playerid], 2);
    PlayerTextDrawLetterSize(playerid, PedText[playerid], 0.229166, 1.200000);
    PlayerTextDrawTextSize(playerid, PedText[playerid], 400.000000, 38.000000);
    PlayerTextDrawSetOutline(playerid, PedText[playerid], 0);
    PlayerTextDrawSetShadow(playerid, PedText[playerid], 0);
    PlayerTextDrawAlignment(playerid, PedText[playerid], 2);
    PlayerTextDrawColor(playerid, PedText[playerid], -1);
    PlayerTextDrawBackgroundColor(playerid, PedText[playerid], 255);
    PlayerTextDrawBoxColor(playerid, PedText[playerid], 50);
    PlayerTextDrawUseBox(playerid, PedText[playerid], 0);
    PlayerTextDrawSetProportional(playerid, PedText[playerid], 1);
    PlayerTextDrawSetSelectable(playerid, PedText[playerid], 0);

    TextInv[playerid][0] = CreatePlayerTextDraw(playerid, 159.000000, 145.000000, "-");
	PlayerTextDrawFont(playerid, TextInv[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][0], 4.949995, 9.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][0], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][0], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][0], 1296911831);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][0], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][0], 0);

	TextInv[playerid][1] = CreatePlayerTextDraw(playerid, 166.000000, 166.000000, "-");
	PlayerTextDrawFont(playerid, TextInv[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][1], 5.016664, 9.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][1], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][1], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][1], 1296911831);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][1], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][1], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][1], 0);

	TextInv[playerid][2] = CreatePlayerTextDraw(playerid, 159.000000, 189.000000, "-");
	PlayerTextDrawFont(playerid, TextInv[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][2], 4.933331, 9.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][2], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][2], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][2], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][2], 1296911831);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][2], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][2], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][2], 0);

	TextInv[playerid][3] = CreatePlayerTextDraw(playerid, 377.000000, 126.000000, "_");
	PlayerTextDrawFont(playerid, TextInv[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][3], 0.600000, 21.450107);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][3], 298.500000, 277.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][3], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][3], 2);
	PlayerTextDrawColor(playerid, TextInv[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][3], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][3], 79);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][3], 0);

	TextInv[playerid][4] = CreatePlayerTextDraw(playerid, 144.000000, 269.000000, ".");
	PlayerTextDrawFont(playerid, TextInv[playerid][4], 1);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][4], 4.816666, 4.050000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][4], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][4], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][4], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][4], 1296911831);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][4], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][4], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][4], 0);

	TextInv[playerid][5] = CreatePlayerTextDraw(playerid, 179.000000, 126.000000, "_");
	PlayerTextDrawFont(playerid, TextInv[playerid][5], 1);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][5], 0.600000, 25.650043);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][5], 298.500000, 105.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][5], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][5], 2);
	PlayerTextDrawColor(playerid, TextInv[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][5], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][5], 79);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][5], 0);

	TextInv[playerid][6] = CreatePlayerTextDraw(playerid, 102.000000, 166.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][6], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][6], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][6], 137.500000, 148.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][6], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][6], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][6], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][6], 255);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][6], 0);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][6], 0);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][6], 0);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][6], 88);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][6], -10.000000, 0.000000, 8.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][6], 1, 1);

	TextInv[playerid][7] = CreatePlayerTextDraw(playerid, 214.000000, 213.000000, "HUD:radar_datedrink");
	PlayerTextDrawFont(playerid, TextInv[playerid][7], 4);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][7], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][7], 9.500000, 8.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][7], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][7], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][7], -741092353);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][7], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][7], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][7], 0);

	TextInv[playerid][8] = CreatePlayerTextDraw(playerid, 208.000000, 237.000000, "HUD:radar_datefood");
	PlayerTextDrawFont(playerid, TextInv[playerid][8], 4);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][8], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][8], 9.500000, 8.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][8], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][8], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][8], -741092353);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][8], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][8], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][8], 1);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][8], 0);

	TextInv[playerid][9] = CreatePlayerTextDraw(playerid, 207.000000, 193.000000, "HUD:radar_girlfriend");
	PlayerTextDrawFont(playerid, TextInv[playerid][9], 4);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][9], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][9], 9.500000, 8.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][9], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][9], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][9], -1094795521);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][9], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][9], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][9], 1);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][9], 0);

	TextInv[playerid][10] = CreatePlayerTextDraw(playerid, 196.000000, 237.000000, "100%");
	PlayerTextDrawFont(playerid, TextInv[playerid][10], 2);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][10], 0.183329, 0.850000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][10], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][10], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][10], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][10], 2);
	PlayerTextDrawColor(playerid, TextInv[playerid][10], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][10], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][10], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][10], 0);

	TextInv[playerid][11] = CreatePlayerTextDraw(playerid, 202.000000, 213.000000, "100%");
	PlayerTextDrawFont(playerid, TextInv[playerid][11], 2);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][11], 0.183329, 0.850000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][11], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][11], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][11], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][11], 2);
	PlayerTextDrawColor(playerid, TextInv[playerid][11], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][11], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][11], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][11], 0);

	TextInv[playerid][12] = CreatePlayerTextDraw(playerid, 193.000000, 192.000000, "100%");
	PlayerTextDrawFont(playerid, TextInv[playerid][12], 2);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][12], 0.183329, 0.850000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][12], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][12], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][12], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][12], 2);
	PlayerTextDrawColor(playerid, TextInv[playerid][12], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][12], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][12], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][12], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][12], 0);

	TextInv[playerid][13] = CreatePlayerTextDraw(playerid, 178.000000, 143.000000, "JaozinN_exe");
	PlayerTextDrawFont(playerid, TextInv[playerid][13], 1);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][13], 0.249999, 1.599997);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][13], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][13], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][13], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][13], 2);
	PlayerTextDrawColor(playerid, TextInv[playerid][13], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][13], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][13], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][13], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][13], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][13], 0);

	TextInv[playerid][14] = CreatePlayerTextDraw(playerid, 148.000000, 323.000000, "DAY");
	PlayerTextDrawFont(playerid, TextInv[playerid][14], 2);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][14], 0.266665, 1.599997);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][14], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][14], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][14], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][14], 2);
	PlayerTextDrawColor(playerid, TextInv[playerid][14], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][14], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][14], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][14], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][14], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][14], 0);

	TextInv[playerid][15] = CreatePlayerTextDraw(playerid, 170.000000, 335.000000, "SURVIVAL");
	PlayerTextDrawFont(playerid, TextInv[playerid][15], 2);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][15], 0.341666, 2.049998);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][15], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][15], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][15], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][15], 2);
	PlayerTextDrawColor(playerid, TextInv[playerid][15], -1962934017);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][15], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][15], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][15], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][15], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][15], 0);

	TextInv[playerid][16] = CreatePlayerTextDraw(playerid, 377.000000, 327.000000, "_");
	PlayerTextDrawFont(playerid, TextInv[playerid][16], 1);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][16], 0.600000, 3.300041);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][16], 298.500000, 277.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][16], 1);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][16], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][16], 2);
	PlayerTextDrawColor(playerid, TextInv[playerid][16], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][16], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][16], 79);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][16], 1);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][16], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][16], 0);

	TextInv[playerid][17] = CreatePlayerTextDraw(playerid, 165.000000, 326.000000, "OF");
	PlayerTextDrawFont(playerid, TextInv[playerid][17], 2);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][17], 0.195831, 1.200000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][17], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][17], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][17], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][17], 2);
	PlayerTextDrawColor(playerid, TextInv[playerid][17], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][17], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][17], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][17], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][17], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][17], 0);

	TextInv[playerid][18] = CreatePlayerTextDraw(playerid, 425.000000, 334.000000, "USAR");
	PlayerTextDrawFont(playerid, TextInv[playerid][18], 2);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][18], 0.291664, 1.499997);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][18], 455.000000, 13.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][18], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][18], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][18], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][18], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][18], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][18], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][18], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][18], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][18], 1);

	TextInv[playerid][19] = CreatePlayerTextDraw(playerid, 464.000000, 334.500000, "DROPAR");
	PlayerTextDrawFont(playerid, TextInv[playerid][19], 2);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][19], 0.295832, 1.449998);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][19], 510.000000, 13.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][19], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][19], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][19], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][19], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][19], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][19], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][19], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][19], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][19], 1);

	TextInv[playerid][20] = CreatePlayerTextDraw(playerid, 377.000000, 125.000000, "mochila_drybag_(12/30)");
	PlayerTextDrawFont(playerid, TextInv[playerid][20], 2);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][20], 0.174998, 1.250000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][20], 400.000000, 17.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][20], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][20], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][20], 2);
	PlayerTextDrawColor(playerid, TextInv[playerid][20], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][20], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][20], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][20], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][20], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][20], 0);

	TextInv[playerid][21] = CreatePlayerTextDraw(playerid, 241.000000, 335.000000, "FECHAR");
	PlayerTextDrawFont(playerid, TextInv[playerid][21], 2);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][21], 0.279163, 1.399999);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][21], 284.000000, 13.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][21], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][21], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][21], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][21], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][21], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][21], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][21], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][21], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][21], 1);

	TextInv[playerid][22] = CreatePlayerTextDraw(playerid, 240.000000, 139.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][22], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][22], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][22], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][22], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][22], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][22], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][22], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][22], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][22], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][22], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][22], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][22], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][22], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][22], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][22], 1, 1);

	TextInv[playerid][23] = CreatePlayerTextDraw(playerid, 295.000000, 139.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][23], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][23], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][23], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][23], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][23], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][23], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][23], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][23], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][23], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][23], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][23], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][23], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][23], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][23], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][23], 1, 1);

	TextInv[playerid][24] = CreatePlayerTextDraw(playerid, 350.000000, 139.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][24], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][24], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][24], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][24], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][24], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][24], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][24], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][24], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][24], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][24], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][24], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][24], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][24], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][24], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][24], 1, 1);

	TextInv[playerid][25] = CreatePlayerTextDraw(playerid, 405.000000, 139.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][25], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][25], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][25], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][25], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][25], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][25], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][25], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][25], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][25], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][25], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][25], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][25], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][25], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][25], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][25], 1, 1);

	TextInv[playerid][26] = CreatePlayerTextDraw(playerid, 460.000000, 139.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][26], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][26], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][26], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][26], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][26], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][26], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][26], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][26], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][26], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][26], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][26], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][26], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][26], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][26], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][26], 1, 1);

	TextInv[playerid][27] = CreatePlayerTextDraw(playerid, 240.000000, 199.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][27], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][27], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][27], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][27], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][27], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][27], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][27], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][27], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][27], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][27], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][27], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][27], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][27], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][27], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][27], 1, 1);

	TextInv[playerid][28] = CreatePlayerTextDraw(playerid, 295.000000, 199.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][28], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][28], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][28], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][28], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][28], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][28], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][28], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][28], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][28], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][28], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][28], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][28], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][28], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][28], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][28], 1, 1);

	TextInv[playerid][29] = CreatePlayerTextDraw(playerid, 350.000000, 199.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][29], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][29], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][29], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][29], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][29], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][29], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][29], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][29], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][29], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][29], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][29], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][29], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][29], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][29], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][29], 1, 1);

	TextInv[playerid][30] = CreatePlayerTextDraw(playerid, 405.000000, 199.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][30], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][30], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][30], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][30], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][30], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][30], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][30], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][30], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][30], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][30], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][30], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][30], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][30], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][30], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][30], 1, 1);

	TextInv[playerid][31] = CreatePlayerTextDraw(playerid, 460.000000, 199.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][31], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][31], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][31], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][31], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][31], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][31], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][31], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][31], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][31], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][31], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][31], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][31], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][31], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][31], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][31], 1, 1);

	TextInv[playerid][32] = CreatePlayerTextDraw(playerid, 240.000000, 259.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][32], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][32], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][32], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][32], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][32], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][32], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][32], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][32], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][32], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][32], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][32], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][32], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][32], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][32], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][32], 1, 1);

	TextInv[playerid][33] = CreatePlayerTextDraw(playerid, 295.000000, 259.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][33], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][33], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][33], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][33], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][33], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][33], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][33], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][33], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][33], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][33], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][33], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][33], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][33], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][33], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][33], 1, 1);

	TextInv[playerid][34] = CreatePlayerTextDraw(playerid, 350.000000, 259.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][34], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][34], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][34], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][34], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][34], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][34], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][34], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][34], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][34], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][34], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][34], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][34], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][34], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][34], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][34], 1, 1);

	TextInv[playerid][35] = CreatePlayerTextDraw(playerid, 405.000000, 259.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][35], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][35], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][35], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][35], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][35], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][35], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][35], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][35], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][35], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][35], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][35], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][35], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][35], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][35], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][35], 1, 1);

	TextInv[playerid][36] = CreatePlayerTextDraw(playerid, 460.000000, 259.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, TextInv[playerid][36], 5);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][36], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][36], 53.500000, 58.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][36], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][36], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][36], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][36], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][36], 200);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][36], 255);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][36], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][36], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][36], 1);
	PlayerTextDrawSetPreviewModel(playerid, TextInv[playerid][36], 99999);
	PlayerTextDrawSetPreviewRot(playerid, TextInv[playerid][36], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, TextInv[playerid][36], 1, 1);

	TextInv[playerid][37] = CreatePlayerTextDraw(playerid, 526.000000, 130.000000, "Galao de gasolina");
	PlayerTextDrawFont(playerid, TextInv[playerid][37], 2);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][37], 0.174998, 1.250000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][37], 400.000000, 17.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][37], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][37], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][37], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][37], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][37], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][37], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][37], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][37], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][37], 0);

	TextInv[playerid][38] = CreatePlayerTextDraw(playerid, 345.000000, 334.000000, "(1/2)");
	PlayerTextDrawFont(playerid, TextInv[playerid][38], 1);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][38], 0.249999, 1.350000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][38], 400.000000, 17.500000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][38], 0);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][38], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][38], 2);
	PlayerTextDrawColor(playerid, TextInv[playerid][38], -1);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][38], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][38], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][38], 0);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][38], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][38], 0);

	TextInv[playerid][39] = CreatePlayerTextDraw(playerid, 316.000000, 334.000000, "ld_beat:left");
	PlayerTextDrawFont(playerid, TextInv[playerid][39], 4);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][39], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][39], 17.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][39], 1);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][39], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][39], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][39], 1296911871);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][39], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][39], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][39], 1);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][39], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][39], 1);

	TextInv[playerid][40] = CreatePlayerTextDraw(playerid, 358.000000, 334.000000, "ld_beat:right");
	PlayerTextDrawFont(playerid, TextInv[playerid][40], 4);
	PlayerTextDrawLetterSize(playerid, TextInv[playerid][40], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, TextInv[playerid][40], 17.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, TextInv[playerid][40], 1);
	PlayerTextDrawSetShadow(playerid, TextInv[playerid][40], 0);
	PlayerTextDrawAlignment(playerid, TextInv[playerid][40], 1);
	PlayerTextDrawColor(playerid, TextInv[playerid][40], 1296911871);
	PlayerTextDrawBackgroundColor(playerid, TextInv[playerid][40], 255);
	PlayerTextDrawBoxColor(playerid, TextInv[playerid][40], 50);
	PlayerTextDrawUseBox(playerid, TextInv[playerid][40], 1);
	PlayerTextDrawSetProportional(playerid, TextInv[playerid][40], 1);
	PlayerTextDrawSetSelectable(playerid, TextInv[playerid][40], 1);*/

    //Ofc Textdraws
    /*HudFs[playerid][0] = CreatePlayerTextDraw(playerid, 572.000000, 424.000000, "_");
    PlayerTextDrawFont(playerid, HudFs[playerid][0], 1);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][0], 0.600000, 1.250002);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][0], 298.500000, 112.500000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][0], 1);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][0], 2);
    PlayerTextDrawColor(playerid, HudFs[playerid][0], -1);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][0], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][0], 30);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][0], 0);

    HudFs[playerid][1] = CreatePlayerTextDraw(playerid, 572.000000, 406.000000, "_");
    PlayerTextDrawFont(playerid, HudFs[playerid][1], 1);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][1], 0.600000, 1.250002);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][1], 298.500000, 112.500000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][1], 1);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][1], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][1], 2);
    PlayerTextDrawColor(playerid, HudFs[playerid][1], -1);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][1], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][1], 30);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][1], 0);

    HudFs[playerid][2] = CreatePlayerTextDraw(playerid, 621.000000, 387.000000, "_");
    PlayerTextDrawFont(playerid, HudFs[playerid][2], 0);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][2], 0.654164, 1.350002);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][2], 298.500000, 15.000000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][2], 1);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][2], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][2], 2);
    PlayerTextDrawColor(playerid, HudFs[playerid][2], -764862721);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][2], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][2], 1296911786);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][2], 1);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][2], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][2], 0);

    HudFs[playerid][3] = CreatePlayerTextDraw(playerid, 520.000000, 391.000000, "_");
    PlayerTextDrawFont(playerid, HudFs[playerid][3], 0);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][3], 0.591665, 0.950003);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][3], 298.500000, 9.500000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][3], 1);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][3], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][3], 2);
    PlayerTextDrawColor(playerid, HudFs[playerid][3], -764862721);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][3], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][3], -1962934182);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][3], 1);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][3], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][3], 0);

    HudFs[playerid][4] = CreatePlayerTextDraw(playerid, 517.000000, 388.000000, "D");
    PlayerTextDrawFont(playerid, HudFs[playerid][4], 2);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][4], 0.245827, 1.450000);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][4], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][4], 0);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][4], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][4], 1);
    PlayerTextDrawColor(playerid, HudFs[playerid][4], -106);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][4], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][4], 50);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][4], 0);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][4], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][4], 0);

    HudFs[playerid][5] = CreatePlayerTextDraw(playerid, 527.000000, 391.000000, "ay_of_survival");
    PlayerTextDrawFont(playerid, HudFs[playerid][5], 2);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][5], 0.154164, 1.299998);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][5], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][5], 0);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][5], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][5], 1);
    PlayerTextDrawColor(playerid, HudFs[playerid][5], -1962934192);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][5], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][5], 50);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][5], 0);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][5], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][5], 0);

    HudFs[playerid][6] = CreatePlayerTextDraw(playerid, 630.000000, 392.000000, "10");
    PlayerTextDrawFont(playerid, HudFs[playerid][6], 2);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][6], 0.150000, 1.200000);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][6], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][6], 0);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][6], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][6], 3);
    PlayerTextDrawColor(playerid, HudFs[playerid][6], -176);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][6], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][6], 50);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][6], 0);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][6], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][6], 0);

    HudFs[playerid][7] = CreatePlayerTextDraw(playerid, 530.000000, 407.500000, "_");
    PlayerTextDrawFont(playerid, HudFs[playerid][7], 1);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][7], 0.299997, 0.929000);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][7], 627.000000, 82.000000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][7], 0);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][7], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][7], 1);
    PlayerTextDrawColor(playerid, HudFs[playerid][7], -764862721);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][7], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][7], 9145343);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][7], 1);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][7], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][7], 0);

    HudFs[playerid][8] = CreatePlayerTextDraw(playerid, 530.000000, 425.500000, "_");
    PlayerTextDrawFont(playerid, HudFs[playerid][8], 1);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][8], 0.299997, 0.929000);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][8], 627.000000, 84.000000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][8], 0);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][8], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][8], 1);
    PlayerTextDrawColor(playerid, HudFs[playerid][8], -764862721);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][8], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][8], -1962934017);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][8], 1);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][8], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][8], 0);

    HudFs[playerid][9] = CreatePlayerTextDraw(playerid, 614.000000, 386.500000, "HUD:radar_gangn");
    PlayerTextDrawFont(playerid, HudFs[playerid][9], 4);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][9], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][9], 10.000000, 13.500000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][9], 1);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][9], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][9], 1);
    PlayerTextDrawColor(playerid, HudFs[playerid][9], -86);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][9], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][9], 50);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][9], 1);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][9], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][9], 0);

    HudFs[playerid][10] = CreatePlayerTextDraw(playerid, 516.000000, 407.500000, "HUD:radar_datedrink");
    PlayerTextDrawFont(playerid, HudFs[playerid][10], 4);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][10], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][10], 8.500000, 8.500000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][10], 1);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][10], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][10], 1);
    PlayerTextDrawColor(playerid, HudFs[playerid][10], -86);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][10], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][10], 50);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][10], 1);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][10], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][10], 0);

    HudFs[playerid][11] = CreatePlayerTextDraw(playerid, 516.000000, 425.500000, "HUD:radar_datefood");
    PlayerTextDrawFont(playerid, HudFs[playerid][11], 4);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][11], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][11], 8.500000, 8.500000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][11], 1);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][11], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][11], 1);
    PlayerTextDrawColor(playerid, HudFs[playerid][11], -86);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][11], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][11], 50);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][11], 1);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][11], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][11], 0);

    HudFs[playerid][12] = CreatePlayerTextDraw(playerid, 530.000000, 405.500000, "100");
    PlayerTextDrawFont(playerid, HudFs[playerid][12], 2);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][12], 0.179166, 1.149999);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][12], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][12], 0);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][12], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][12], 1);
    PlayerTextDrawColor(playerid, HudFs[playerid][12], -156);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][12], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][12], 50);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][12], 0);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][12], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][12], 0);

    HudFs[playerid][13] = CreatePlayerTextDraw(playerid, 530.000000, 423.500000, "90");
    PlayerTextDrawFont(playerid, HudFs[playerid][13], 2);
    PlayerTextDrawLetterSize(playerid, HudFs[playerid][13], 0.179166, 1.149999);
    PlayerTextDrawTextSize(playerid, HudFs[playerid][13], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, HudFs[playerid][13], 0);
    PlayerTextDrawSetShadow(playerid, HudFs[playerid][13], 0);
    PlayerTextDrawAlignment(playerid, HudFs[playerid][13], 1);
    PlayerTextDrawColor(playerid, HudFs[playerid][13], -156);
    PlayerTextDrawBackgroundColor(playerid, HudFs[playerid][13], 255);
    PlayerTextDrawBoxColor(playerid, HudFs[playerid][13], 50);
    PlayerTextDrawUseBox(playerid, HudFs[playerid][13], 0);
    PlayerTextDrawSetProportional(playerid, HudFs[playerid][13], 1);
    PlayerTextDrawSetSelectable(playerid, HudFs[playerid][13], 0);

    ProgressFS[playerid][0] = CreatePlayerProgressBar(playerid, 564.000000, 399.000000, 68.000000, 9.000000, -1962934102, 100.000000, 0);
    ProgressFS[playerid][1] = CreatePlayerProgressBar(playerid, 564.000000, 418.000000, 68.000000, 9.000000, -1378294102, 100.000000, 0); */
	
    velocimetro[playerid][0] = CreatePlayerTextDraw(playerid, 303.000000, 395.000000, "(");
    PlayerTextDrawFont(playerid, velocimetro[playerid][0], 1);
    PlayerTextDrawLetterSize(playerid, velocimetro[playerid][0], 0.800000, 4.249999);
    PlayerTextDrawTextSize(playerid, velocimetro[playerid][0], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, velocimetro[playerid][0], 0);
    PlayerTextDrawSetShadow(playerid, velocimetro[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, velocimetro[playerid][0], 1);
    PlayerTextDrawColor(playerid, velocimetro[playerid][0], -1962934017);
    PlayerTextDrawBackgroundColor(playerid, velocimetro[playerid][0], 255);
    PlayerTextDrawBoxColor(playerid, velocimetro[playerid][0], 50);
    PlayerTextDrawUseBox(playerid, velocimetro[playerid][0], 0);
    PlayerTextDrawSetProportional(playerid, velocimetro[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, velocimetro[playerid][0], 0);

    velocimetro[playerid][1] = CreatePlayerTextDraw(playerid, 323.000000, 405.000000, "0");
    PlayerTextDrawFont(playerid, velocimetro[playerid][1], 2);
    PlayerTextDrawLetterSize(playerid, velocimetro[playerid][1], 0.279163, 1.899996);
    PlayerTextDrawTextSize(playerid, velocimetro[playerid][1], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, velocimetro[playerid][1], 0);
    PlayerTextDrawSetShadow(playerid, velocimetro[playerid][1], 0);
    PlayerTextDrawAlignment(playerid, velocimetro[playerid][1], 2);
    PlayerTextDrawColor(playerid, velocimetro[playerid][1], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, velocimetro[playerid][1], 255);
    PlayerTextDrawBoxColor(playerid, velocimetro[playerid][1], 50);
    PlayerTextDrawUseBox(playerid, velocimetro[playerid][1], 0);
    PlayerTextDrawSetProportional(playerid, velocimetro[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, velocimetro[playerid][1], 0);

    velocimetro[playerid][2] = CreatePlayerTextDraw(playerid, 323.000000, 419.000000, "km/h");
    PlayerTextDrawFont(playerid, velocimetro[playerid][2], 2);
    PlayerTextDrawLetterSize(playerid, velocimetro[playerid][2], 0.120832, 0.899998);
    PlayerTextDrawTextSize(playerid, velocimetro[playerid][2], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, velocimetro[playerid][2], 0);
    PlayerTextDrawSetShadow(playerid, velocimetro[playerid][2], 0);
    PlayerTextDrawAlignment(playerid, velocimetro[playerid][2], 2);
    PlayerTextDrawColor(playerid, velocimetro[playerid][2], -1061109505);
    PlayerTextDrawBackgroundColor(playerid, velocimetro[playerid][2], 255);
    PlayerTextDrawBoxColor(playerid, velocimetro[playerid][2], 50);
    PlayerTextDrawUseBox(playerid, velocimetro[playerid][2], 0);
    PlayerTextDrawSetProportional(playerid, velocimetro[playerid][2], 1);
    PlayerTextDrawSetSelectable(playerid, velocimetro[playerid][2], 0);

    velocimetro[playerid][3] = CreatePlayerTextDraw(playerid, 241.000000, 410.000000, "_");
    PlayerTextDrawFont(playerid, velocimetro[playerid][3], 1);
    PlayerTextDrawLetterSize(playerid, velocimetro[playerid][3], 0.600000, 0.599995);
    PlayerTextDrawTextSize(playerid, velocimetro[playerid][3], 297.000000, 75.000000);
    PlayerTextDrawSetOutline(playerid, velocimetro[playerid][3], 1);
    PlayerTextDrawSetShadow(playerid, velocimetro[playerid][3], 0);
    PlayerTextDrawAlignment(playerid, velocimetro[playerid][3], 1);
    PlayerTextDrawColor(playerid, velocimetro[playerid][3], -1);
    PlayerTextDrawBackgroundColor(playerid, velocimetro[playerid][3], 255);
    PlayerTextDrawBoxColor(playerid, velocimetro[playerid][3], 255);
    PlayerTextDrawUseBox(playerid, velocimetro[playerid][3], 1);
    PlayerTextDrawSetProportional(playerid, velocimetro[playerid][3], 1);
    PlayerTextDrawSetSelectable(playerid, velocimetro[playerid][3], 0);

    velocimetro[playerid][4] = CreatePlayerTextDraw(playerid, 241.000000, 421.000000, "_");
    PlayerTextDrawFont(playerid, velocimetro[playerid][4], 0);
    PlayerTextDrawLetterSize(playerid, velocimetro[playerid][4], 0.600000, 0.599995);
    PlayerTextDrawTextSize(playerid, velocimetro[playerid][4], 297.000000, 75.000000);
    PlayerTextDrawSetOutline(playerid, velocimetro[playerid][4], 1);
    PlayerTextDrawSetShadow(playerid, velocimetro[playerid][4], 0);
    PlayerTextDrawAlignment(playerid, velocimetro[playerid][4], 1);
    PlayerTextDrawColor(playerid, velocimetro[playerid][4], -1);
    PlayerTextDrawBackgroundColor(playerid, velocimetro[playerid][4], 255);
    PlayerTextDrawBoxColor(playerid, velocimetro[playerid][4], 255);
    PlayerTextDrawUseBox(playerid, velocimetro[playerid][4], 1);
    PlayerTextDrawSetProportional(playerid, velocimetro[playerid][4], 1);
    PlayerTextDrawSetSelectable(playerid, velocimetro[playerid][4], 0);

    velocimetro[playerid][5] = CreatePlayerTextDraw(playerid, 250.000000, 411.000000, "_");
    PlayerTextDrawFont(playerid, velocimetro[playerid][5], 1);
    PlayerTextDrawLetterSize(playerid, velocimetro[playerid][5], 0.600000, 0.399993);
    PlayerTextDrawTextSize(playerid, velocimetro[playerid][5], 296.500000, 75.000000);
    PlayerTextDrawSetOutline(playerid, velocimetro[playerid][5], 1);
    PlayerTextDrawSetShadow(playerid, velocimetro[playerid][5], 0);
    PlayerTextDrawAlignment(playerid, velocimetro[playerid][5], 1);
    PlayerTextDrawColor(playerid, velocimetro[playerid][5], -1);
    PlayerTextDrawBackgroundColor(playerid, velocimetro[playerid][5], 255);
    PlayerTextDrawBoxColor(playerid, velocimetro[playerid][5], 1296911871);
    PlayerTextDrawUseBox(playerid, velocimetro[playerid][5], 1);
    PlayerTextDrawSetProportional(playerid, velocimetro[playerid][5], 1);
    PlayerTextDrawSetSelectable(playerid, velocimetro[playerid][5], 0);

    velocimetro[playerid][6] = CreatePlayerTextDraw(playerid, 250.000000, 422.000000, "_");
    PlayerTextDrawFont(playerid, velocimetro[playerid][6], 1);
    PlayerTextDrawLetterSize(playerid, velocimetro[playerid][6], 0.600000, 0.299993);
    PlayerTextDrawTextSize(playerid, velocimetro[playerid][6], 296.500000, 75.000000);
    PlayerTextDrawSetOutline(playerid, velocimetro[playerid][6], 1);
    PlayerTextDrawSetShadow(playerid, velocimetro[playerid][6], 0);
    PlayerTextDrawAlignment(playerid, velocimetro[playerid][6], 1);
    PlayerTextDrawColor(playerid, velocimetro[playerid][6], -1);
    PlayerTextDrawBackgroundColor(playerid, velocimetro[playerid][6], 255);
    PlayerTextDrawBoxColor(playerid, velocimetro[playerid][6], 1296911871);
    PlayerTextDrawUseBox(playerid, velocimetro[playerid][6], 1);
    PlayerTextDrawSetProportional(playerid, velocimetro[playerid][6], 1);
    PlayerTextDrawSetSelectable(playerid, velocimetro[playerid][6], 0);

    velocimetro[playerid][7] = CreatePlayerTextDraw(playerid, 238.500000, 406.500000, "Preview_Model");
    PlayerTextDrawFont(playerid, velocimetro[playerid][7], 5);
    PlayerTextDrawLetterSize(playerid, velocimetro[playerid][7], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, velocimetro[playerid][7], 10.000000, 12.500000);
    PlayerTextDrawSetOutline(playerid, velocimetro[playerid][7], 0);
    PlayerTextDrawSetShadow(playerid, velocimetro[playerid][7], 0);
    PlayerTextDrawAlignment(playerid, velocimetro[playerid][7], 1);
    PlayerTextDrawColor(playerid, velocimetro[playerid][7], -1);
    PlayerTextDrawBackgroundColor(playerid, velocimetro[playerid][7], 0);
    PlayerTextDrawBoxColor(playerid, velocimetro[playerid][7], 255);
    PlayerTextDrawUseBox(playerid, velocimetro[playerid][7], 0);
    PlayerTextDrawSetProportional(playerid, velocimetro[playerid][7], 1);
    PlayerTextDrawSetSelectable(playerid, velocimetro[playerid][7], 0);
    PlayerTextDrawSetPreviewModel(playerid, velocimetro[playerid][7], 1650);
    PlayerTextDrawSetPreviewRot(playerid, velocimetro[playerid][7], -10.000000, 0.000000, 0.000000, 1.000000);
    PlayerTextDrawSetPreviewVehCol(playerid, velocimetro[playerid][7], 1, 1);

    velocimetro[playerid][8] = CreatePlayerTextDraw(playerid, 240.500000, 419.500000, "HUD:radar_impound");
    PlayerTextDrawFont(playerid, velocimetro[playerid][8], 4);
    PlayerTextDrawLetterSize(playerid, velocimetro[playerid][8], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, velocimetro[playerid][8], 7.000000, 7.000000);
    PlayerTextDrawSetOutline(playerid, velocimetro[playerid][8], 1);
    PlayerTextDrawSetShadow(playerid, velocimetro[playerid][8], 0);
    PlayerTextDrawAlignment(playerid, velocimetro[playerid][8], 1);
    PlayerTextDrawColor(playerid, velocimetro[playerid][8], -1378294017);
    PlayerTextDrawBackgroundColor(playerid, velocimetro[playerid][8], 255);
    PlayerTextDrawBoxColor(playerid, velocimetro[playerid][8], 50);
    PlayerTextDrawUseBox(playerid, velocimetro[playerid][8], 1);
    PlayerTextDrawSetProportional(playerid, velocimetro[playerid][8], 1);
    PlayerTextDrawSetSelectable(playerid, velocimetro[playerid][8], 0);

	AcaoText[playerid][0] = CreatePlayerTextDraw(playerid, 319.000000, 355.000000, "Cortando_Arvore...");
	PlayerTextDrawFont(playerid, AcaoText[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid, AcaoText[playerid][0], 0.279166, 1.350000);
	PlayerTextDrawTextSize(playerid, AcaoText[playerid][0], 12.000000, 782.000000);
	PlayerTextDrawSetOutline(playerid, AcaoText[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, AcaoText[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, AcaoText[playerid][0], 2);
	PlayerTextDrawColor(playerid, AcaoText[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, AcaoText[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, AcaoText[playerid][0], 101);
	PlayerTextDrawUseBox(playerid, AcaoText[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, AcaoText[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, AcaoText[playerid][0], 0);

    ActionTXD[playerid] = CreatePlayerTextDraw(playerid, 320.000000, 337.000000, "voce_esta_com_fome!");
    PlayerTextDrawFont(playerid, ActionTXD[playerid], 2);
    PlayerTextDrawLetterSize(playerid, ActionTXD[playerid], 0.208332, 1.249999);
    PlayerTextDrawTextSize(playerid, ActionTXD[playerid], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, ActionTXD[playerid], 1);
    PlayerTextDrawSetShadow(playerid, ActionTXD[playerid], 0);
    PlayerTextDrawAlignment(playerid, ActionTXD[playerid], 2);
    PlayerTextDrawColor(playerid, ActionTXD[playerid], -1);
    PlayerTextDrawBackgroundColor(playerid, ActionTXD[playerid], 255);
    PlayerTextDrawBoxColor(playerid, ActionTXD[playerid], 50);
    PlayerTextDrawUseBox(playerid, ActionTXD[playerid], 0);
    PlayerTextDrawSetProportional(playerid, ActionTXD[playerid], 1);
    PlayerTextDrawSetSelectable(playerid, ActionTXD[playerid], 0);

    // # Login #


	/*Sangue1[playerid][0] = CreatePlayerTextDraw(playerid, 307.000000, -12.000000, "_");
	PlayerTextDrawFont(playerid, Sangue1[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid, Sangue1[playerid][0], 0.600000, 54.649982);
	PlayerTextDrawTextSize(playerid, Sangue1[playerid][0], 298.500000, 702.000000);
	PlayerTextDrawSetOutline(playerid, Sangue1[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, Sangue1[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, Sangue1[playerid][0], 2);
	PlayerTextDrawColor(playerid, Sangue1[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, Sangue1[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, Sangue1[playerid][0], -16777144);
	PlayerTextDrawUseBox(playerid, Sangue1[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, Sangue1[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, Sangue1[playerid][0], 0);*/
	return 1;
}
stock RegisterDialog(playerid)
{
	new strlogin[256];
	format(strlogin,sizeof(strlogin),"{6cb827}Seja bem-vindo: {FFFFFF}%s\n\n{6cb827}Seu ID no Servidor:{FFFFFF} %i\n{6cb827}Status: {FFFFFF}Conta nao registrada\n\n{6cb827}Digite uma senha para salvar sua conta:",PegarNome(playerid),playerid);
	ShowPlayerDialog(playerid, DIALOG_REGISTRO, DIALOG_STYLE_INPUT, "{FFFFFF}DOS - Registro",strlogin,"Registrar", "Sair");
	return 1;
}

stock LoginDialog(playerid)
{
	new strlogin[256];
	format(strlogin,sizeof(strlogin),"{6cb827}Bem-Vindo novamente: {FFFFFF}%s\n\n{6cb827}Seu ID no Servidor:{FFFFFF} %i\n{6cb827}Conta: {FFFFFF}Registrada\n\n{6cb827}Digite a senha para logar em sua conta:",PegarNome(playerid),playerid);
	ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "{FFFFFF}DOS - Login",strlogin,"Logar", "Sair");
	return 1;
}
stock ShowCaixaSelect(playerid)
{
	new id = idcaixap[playerid];
    if(Caixa[id][ModelC] == 1271)
    {
        new str[30], stt[10], ccc, cc;
    	format(str,sizeof(str), "Caixa_%d", id);
        if(Caixa[id][Upgrade] == 1){
            for(new c=0;c<15;c++){
                ccc = c+4;
                cc = c+19;
                if(c < 5){
                    if(Box_Item[id][c][ItemC] != -1){
                        new Float:X, Float:Y, Float:Z;
                        X = ItemRot[Box_Item[id][c][ItemC]][PosX];
                        Y = ItemRot[Box_Item[id][c][ItemC]][PosY];
                        Z = ItemRot[Box_Item[id][c][ItemC]][PosZ];
                        PlayerTextDrawSetPreviewRot(playerid, TextCaixa[playerid][ccc], X, Y, Z, 1.0);
                    }
                    PlayerTextDrawSetPreviewModel(playerid, TextCaixa[playerid][ccc], GetItemObject(Box_Item[id][c][ItemC]));
                    format(stt,sizeof stt, "%dx", Box_Item[id][c][QuantiaC]);
                    PlayerTextDrawSetString(playerid, TextCaixa[playerid][cc], stt);
                }else{
                    PlayerTextDrawSetPreviewModel(playerid, TextCaixa[playerid][ccc], 19804);
                    format(stt,sizeof stt, "%dx", Box_Item[id][c][QuantiaC]);
                    PlayerTextDrawSetString(playerid, TextCaixa[playerid][cc], stt);
                }

            }
        }else if(Caixa[id][Upgrade] == 2){
            for(new c=0;c<15;c++){
                ccc = c+4;
                cc = c+19;
                if(c < 10){
                    if(Box_Item[id][c][ItemC] != -1){
                        new Float:X, Float:Y, Float:Z;
                        X = ItemRot[Box_Item[id][c][ItemC]][PosX];
                        Y = ItemRot[Box_Item[id][c][ItemC]][PosY];
                        Z = ItemRot[Box_Item[id][c][ItemC]][PosZ];
                        PlayerTextDrawSetPreviewRot(playerid, TextCaixa[playerid][ccc], X, Y, Z, 1.0);
                    }
                    PlayerTextDrawSetPreviewModel(playerid, TextCaixa[playerid][ccc], GetItemObject(Box_Item[id][c][ItemC]));
                    format(stt,sizeof stt, "%dx", Box_Item[id][c][QuantiaC]);
                    PlayerTextDrawSetString(playerid, TextCaixa[playerid][cc], stt);
                }else{
                    PlayerTextDrawSetPreviewModel(playerid, TextCaixa[playerid][ccc], 19804);
                    format(stt,sizeof stt, "%dx", Box_Item[id][c][QuantiaC]);
                    PlayerTextDrawSetString(playerid, TextCaixa[playerid][cc], stt);
                }
            }
        }else if(Caixa[id][Upgrade] == 3){
            for(new c=0;c<15;c++){
                ccc = c+4;
                cc = c+19;
                if(Box_Item[id][c][ItemC] != -1){
                    new Float:X, Float:Y, Float:Z;
                    X = ItemRot[Box_Item[id][c][ItemC]][PosX];
                    Y = ItemRot[Box_Item[id][c][ItemC]][PosY];
                    Z = ItemRot[Box_Item[id][c][ItemC]][PosZ];
                    PlayerTextDrawSetPreviewRot(playerid, TextCaixa[playerid][ccc], X, Y, Z, 1.0);
                }
                PlayerTextDrawSetPreviewModel(playerid, TextCaixa[playerid][ccc], GetItemObject(Box_Item[id][c][ItemC]));
                format(stt,sizeof stt, "%dx", Box_Item[id][c][QuantiaC]);
                PlayerTextDrawSetString(playerid, TextCaixa[playerid][cc], stt);
            }
        }
        new titleid[30]; format(titleid, sizeof titleid, "Caixa:_%d", id); 
        PlayerTextDrawSetString(playerid, TextCaixa[playerid][39], titleid);
        for(new i=0; i < 41; i++)PlayerTextDrawShow(playerid, TextCaixa[playerid][i]);
        SelectTextDraw(playerid, Preto);
    }
    if(Caixa[id][ModelC] == 3014)
    {
        if(Pagina_WCreate[playerid] == 1)
        {
            new number_slot = -1, str[30];
            for(new w=0; w < 10; w++)
            {
                number_slot=w+2;
                PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][number_slot],F_GunObjects(WeaponBox[id][w][ArmaID]));
                number_slot=w+12;
                format(str, sizeof str, "%s~n~municao:_%d", GetNameWeaponB(WeaponBox[id][w][ArmaID]), WeaponBox[id][w][MunicaoID]);
                PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][number_slot], str);
                //WeaponBox[id][w][MunicaoID]
            }
        }else if(Pagina_WCreate[playerid] == 2)
        {
            new number_slot = -1, str[30];
            for(new w=10; w < 20; w++)
            {
                number_slot=w-8;
                PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][number_slot],F_GunObjects(WeaponBox[id][w][ArmaID]));
                number_slot=w+2;
                format(str, sizeof str, "%s~n~municao:_%d", GetNameWeaponB(WeaponBox[id][w][ArmaID]), WeaponBox[id][w][MunicaoID]);
                PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][number_slot], str);
            }
        }
        new str[30];
        format(str, sizeof str, "Pagina:_(%d/2)", Pagina_WCreate[playerid]);
        PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][32], str);
    	format(str,sizeof(str), "Caixa_de_equipamentos_(%d)", id);
    	PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][33], str);
        for(new w=0; w < 34; w++) PlayerTextDrawShow(playerid, Box_WeaponText[playerid][w]);
        SelectTextDraw(playerid, Preto);
    }
    return 1;
}
stock AtualizarCaixaW(playerid)
{
    new id = idcaixap[playerid];
    if(Pagina_WCreate[playerid] == 1)
    {
        new number_slot = -1, str[30];
        for(new w=0; w < 10; w++)
        {
            number_slot=w+2;
            PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][number_slot],F_GunObjects(WeaponBox[id][w][ArmaID]));
            PlayerTextDrawShow(playerid, Box_WeaponText[playerid][number_slot]);
            number_slot=w+12;
            format(str, sizeof str, "%s~n~municao:_%d", GetNameWeaponB(WeaponBox[id][w][ArmaID]), WeaponBox[id][w][MunicaoID]);
            PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][number_slot], str);

        }
    }else if(Pagina_WCreate[playerid] == 2)
    {
        new number_slot = -1, str[30];
        for(new w=10; w < 20; w++)
        {
            number_slot=w-8;
            PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][number_slot],F_GunObjects(WeaponBox[id][w][ArmaID]));
            PlayerTextDrawShow(playerid, Box_WeaponText[playerid][number_slot]);
            number_slot=w+2;
            format(str, sizeof str, "%s~n~municao:_%d", GetNameWeaponB(WeaponBox[id][w][ArmaID]), WeaponBox[id][w][MunicaoID]);
            PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][number_slot], str);
        }
    }
    return 1;
}
stock HideCaixaSelect(playerid, id_box)
{
    if(Caixa[id_box][ModelC] == 1271)
    {
        for(new i=0; i < 41; i++)PlayerTextDrawHide(playerid, TextCaixa[playerid][i]);
    }
    if(Caixa[id_box][ModelC] == 3014)
    {
        for(new w=0; w < 34; w++) PlayerTextDrawHide(playerid, Box_WeaponText[playerid][w]);
    }
    CancelSelectTextDraw(playerid);
    return 1;
}
stock ResetKills(playerid)
{
    pInfo[playerid][pkill] = 0;
    /*new str[15]; format(str, sizeof str, "%d_kills", pInfo[playerid][pkill]);
    PlayerTextDrawSetString(playerid, TextPHud[playerid][13], str);*/
    return 1;
}
stock ResetDeaths(playerid)
{
    pInfo[playerid][pDeath]  = 0;
    /*new str[15]; format(str, sizeof str, "%d_mortes", pInfo[playerid][pDeath]);
    PlayerTextDrawSetString(playerid, TextHUD[playerid][14], str);*/
    return 1;
}
stock ResetZKills(playerid)
{
    pInfo[playerid][pkillZ] = 0;
    return 1;
}
stock SetPlayerZKill(playerid, quantia)
{
    pInfo[playerid][pKillZ] += quantia;
    return 1;
}
stock SetPlayerKill(playerid, quantia)
{
    pInfo[playerid][pkill] += quantia;
    /*new str[15]; format(str, sizeof str, "%d_kills", pInfo[playerid][pkill]);
    PlayerTextDrawSetString(playerid, TextHUD[playerid][13], str);*/
    return 1;
}
stock SetPlayerDeath(playerid, quantia)
{
    pInfo[playerid][pDeath] += quantia;
    /*new str[15]; format(str, sizeof str, "%d_mortes", pInfo[playerid][pDeath]);
    PlayerTextDrawSetString(playerid, TextHUD[playerid][14], str);*/
    return 1;
}
/*stock ShowParedeSelect_b(playerid)
{
    new str[40];
	format(str, sizeof(str), "Modelo:_%d", CreateCInfo[ModelCraftEscolhida[playerid]][0][ModelCraft]);
	PlayerTextDrawSetString(playerid, CraftPainel[playerid][3], str);
	//////////////////////////////////////////////////////////////
	format(str, sizeof(str), "%s_%s", ConvertToQuantia(CreateCInfo[ModelCraftEscolhida[playerid]][0][ValorCraft]), GetTipoValueCraft(playerid));
	PlayerTextDrawSetString(playerid, CraftPainel[playerid][5], str);
	//////////////////////////////////////////////////////////////
    format(str, sizeof str, "%s", GetTipoCraft(playerid));
    PlayerTextDrawSetString(playerid, CraftPainel[playerid][2], str);
    //////////////////////////////////////////////////////////////
    format(str, sizeof str, "Protecao:_%d", GetVidaCraft(CreateCInfo[ModelCraftEscolhida[playerid]][0][ModelCraft]));
    PlayerTextDrawSetString(playerid, CraftPainel[playerid][15], str);

    PlayerTextDrawSetPreviewRot(playerid, CraftPainel[playerid][7], -10.000000, 0.000000, CreateCInfo[ModelCraftEscolhida[playerid]][0][RotZ], 1.000000);
	PlayerTextDrawSetPreviewModel(playerid, CraftPainel[playerid][7], CreateCInfo[ModelCraftEscolhida[playerid]][0][ModelCraft]);
	PlayerTextDrawShow(playerid, CraftPainel[playerid][7]);//abrir menu craft ...
	return 1;
}
stock ShowParedeSelect(playerid)
{
    new str[40];
    format(str, sizeof(str), "%s_madeiras", ConvertToQuantia(pInfo[playerid][pMadeira]));
	PlayerTextDrawSetString(playerid, CraftPainel[playerid][29], str);

    format(str, sizeof(str), "%s_ferros", ConvertToQuantia(pInfo[playerid][pFerro]));
	PlayerTextDrawSetString(playerid, CraftPainel[playerid][30], str);

	format(str, sizeof(str), "Modelo:_%d", CreateCInfo[ModelCraftEscolhida[playerid]][0][ModelCraft]);
	PlayerTextDrawSetString(playerid, CraftPainel[playerid][3], str);
	//////////////////////////////////////////////////////////////
	format(str, sizeof(str), "%s_%s", ConvertToQuantia(CreateCInfo[ModelCraftEscolhida[playerid]][0][ValorCraft]), GetTipoValueCraft(playerid));
	PlayerTextDrawSetString(playerid, CraftPainel[playerid][5], str);
	//////////////////////////////////////////////////////////////
    format(str, sizeof str, "%s", GetTipoCraft(playerid));
    PlayerTextDrawSetString(playerid, CraftPainel[playerid][2], str);
    //////////////////////////////////////////////////////////////
    format(str, sizeof str, "Protecao:_%d", GetVidaCraft(CreateCInfo[ModelCraftEscolhida[playerid]][0][ModelCraft]));
    PlayerTextDrawSetString(playerid, CraftPainel[playerid][15], str);

    PlayerTextDrawSetPreviewRot(playerid, CraftPainel[playerid][7], -10.000000, 0.000000, CreateCInfo[ModelCraftEscolhida[playerid]][0][RotZ], 1.000000);
	PlayerTextDrawSetPreviewModel(playerid, CraftPainel[playerid][7], CreateCInfo[ModelCraftEscolhida[playerid]][0][ModelCraft]);
	for(new i = 0; i < 32; i++) PlayerTextDrawShow(playerid, CraftPainel[playerid][i]);//abrir menu craft ...
    SelectTextDraw(playerid, 0x00FF00FF);
	return 1;
}
stock HideParedeSelect(playerid)
{
    for(new i = 0; i < 32; i++) PlayerTextDrawHide(playerid, CraftPainel[playerid][i]);//fechar menu craft ...
    CancelSelectTextDraw(playerid);
	return 1;
}*/
stock ShowEditorParede(playerid)
{
    TextDrawShowForPlayer(playerid, EditMob[0]);
    TextDrawShowForPlayer(playerid, EditMob[1]);
    TextDrawShowForPlayer(playerid, EditMob[2]);
    TextDrawShowForPlayer(playerid, EditMob[3]);
    TextDrawShowForPlayer(playerid, EditMob[4]);
    TextDrawShowForPlayer(playerid, EditMob[5]);
    TextDrawShowForPlayer(playerid, EditMob[6]);
    TextDrawShowForPlayer(playerid, EditMob[7]);
    TextDrawShowForPlayer(playerid, EditMob[8]);
    TextDrawShowForPlayer(playerid, EditMob[9]);
    TextDrawShowForPlayer(playerid, EditMob[10]);
    TextDrawShowForPlayer(playerid, EditMob[11]);
    TextDrawShowForPlayer(playerid, EditMob[12]);
    TextDrawShowForPlayer(playerid, EditMob[13]);
    TextDrawShowForPlayer(playerid, EditMob[14]);
    TextDrawShowForPlayer(playerid, EditMob[15]);
    TextDrawShowForPlayer(playerid, EditMob[16]);
    PlayerTextDrawShow(playerid, EditorTipo[playerid]);
    SelectTextDraw(playerid, Vermelho);
	return 1;
}
stock HideEditorParede(playerid)
{
    TextDrawHideForPlayer(playerid, EditMob[0]);
    TextDrawHideForPlayer(playerid, EditMob[1]);
    TextDrawHideForPlayer(playerid, EditMob[2]);
    TextDrawHideForPlayer(playerid, EditMob[3]);
    TextDrawHideForPlayer(playerid, EditMob[4]);
    TextDrawHideForPlayer(playerid, EditMob[5]);
    TextDrawHideForPlayer(playerid, EditMob[6]);
    TextDrawHideForPlayer(playerid, EditMob[7]);
    TextDrawHideForPlayer(playerid, EditMob[8]);
    TextDrawHideForPlayer(playerid, EditMob[9]);
    TextDrawHideForPlayer(playerid, EditMob[10]);
    TextDrawHideForPlayer(playerid, EditMob[11]);
    TextDrawHideForPlayer(playerid, EditMob[12]);
    TextDrawHideForPlayer(playerid, EditMob[13]);
    TextDrawHideForPlayer(playerid, EditMob[14]);
    TextDrawHideForPlayer(playerid, EditMob[15]);
    TextDrawHideForPlayer(playerid, EditMob[16]);
    PlayerTextDrawHide(playerid, EditorTipo[playerid]);
    CancelSelectTextDraw(playerid);
	return 1;
}
stock antibug(playerid)
{
    pInfo[playerid][pConectado] = false;
    pInfo[playerid][pDuty] = false;

    JaFabricando[playerid] = 0;
    TempACaixa[playerid] = 0;
    idcabrir[playerid] = -1;
	ArrombandoSecunds[playerid] = 0;
	ArrombandoCarro[playerid] = false;
    RepairVeh[playerid] = false;
    AbastecVEH[playerid] = false;
    RemovendoGV[playerid] = false;
    RemovendoMotor[playerid] = false;
    TremovendoMotor[playerid] = 0;
    AdicionandoMotor[playerid] = false;
    TadicionandoMotor[playerid] = 0;
    PlayerLogado[playerid] = false;
	errousenha[playerid] = 0;
	morto[playerid] = false;
    DelayClick[playerid] = gettime();
	minaplayer[playerid] = 0;
	Curando[playerid] = 0;
    SecundGToxicZ[playerid] = 0;
	KillTimer(verifiqued[playerid]);
    KillTimer(P_Timer_Secunds[playerid]);
	KillTimer(timeF[playerid]);
    if(pInfo[playerid][pPreso] > 0) KillTimer(TimerPreso[playerid]);
    if(SizeTelaLogin[playerid] >= 228 && SizeTelaLogin[playerid] != 218) KillTimer(TelaLoading[playerid]);
    if(Acao_Ativa[playerid])HideTimerAcao(playerid);
    for(new Player_Data:i; i < Player_Data; i++) pInfo[playerid][i] = 0;
	return 1;
}
public OnPlayerDisconnect(playerid, reason)
{
    //printf("OnPlayerDisconnect Playerid: %d, reason: %d", playerid, reason);

    if(IsPlayerNPC(playerid)) return 1;
    if(minaplayer[playerid] == 1)
    {
        minaplayer[playerid] = 0;
	    DestroyObject(objmina[playerid]);
	}
    if(pUsandoMesa[playerid] > 0){
        MesaSendoUsada[pUsandoMesa[playerid]] = false;
        pUsandoMesa[playerid] = 0;
    }
    new str4[128];
    if(pInfo[playerid][pConectado] == true)
	{
		if(morto[playerid] == true)
		{
			ResetPlayerInventory(playerid);
			ResetPlayerWeaponsEx(playerid);
			pInfo[playerid][pBackpack] = 8;
			pInfo[playerid][pFome] = 50;
			pInfo[playerid][pSede] = 50;
            SetPlayerHealthEx(playerid, 100.0);
            SetPlayerArmourEx(playerid, 0.0);
			pInfo[playerid][pTemRADIO] = 0;
			pInfo[playerid][pTemGPS] = 0;

            pInfo[playerid][pNvlColete] = 0;
			if(pInfo[playerid][pArmour] <= 0)RemovePlayerAttachedObject(playerid, SlotColete);
			format(str4, sizeof(str4), "{B22222}[AVISO] {C0C0C0}O jogador %s foi resetado! {B22222}(Deslogou Morto){C0C0C0}.", PegarNome(playerid));
			SendClientMessageToAll(-1, str4);
		}
		SalvarJogador(playerid);
		SaveInventory(playerid);
	    SaveWeaponsToFile(playerid);
	}
	VerAtendimento(playerid);
    //Delete3DTextLabel(PlayerNickName[playerid]);
	if(pInfo[playerid][pConectado] == true)
	{
        /*foreach(new p : Player) {
            SetPlayerMarkerForPlayer(p, playerid, 0x00000000);
        }*/
		new message[128];
		switch(reason)
	    {
	        case 0: format(message, sizeof(message), "| ! | %s saiu do servidor por erro de conexao ou crash.", PegarNome(playerid));
	        case 1: format(message, sizeof(message), "| ! | %s saiu do servidor por Vontade Propria.", PegarNome(playerid));
	        case 2: format(message, sizeof(message), "| ! | %s saiu do servidor Banido ou Kickado.", PegarNome(playerid));
	    }
	    ProxDetector(30.0, playerid, message, Vermelho);
    }
	HidePHud(playerid);
    TextDrawHideForPlayer(playerid, TextGHud[0]);
    TextDrawHideForPlayer(playerid, TextGHud[1]);
    TextDrawHideForPlayer(playerid, TextGHud[2]);
 
	pInfo[playerid][pConectado] = false;
	antibug(playerid);
	return 1;
}

HidePHud(playerid){
    PlayerTextDrawHide(playerid, TextPHud[playerid][0]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][1]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][2]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][3]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][4]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][5]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][6]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][7]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][8]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][9]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][10]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][11]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][12]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][13]);
    PlayerTextDrawHide(playerid, TextPHud[playerid][14]);
    return true;
}
ShowPHud(playerid){
    PlayerTextDrawShow(playerid, TextPHud[playerid][0]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][1]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][2]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][3]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][4]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][5]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][6]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][7]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][8]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][9]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][10]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][11]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][12]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][13]);
    PlayerTextDrawShow(playerid, TextPHud[playerid][14]);
    return true;
}

stock LogsDSADM(const titulo[], cor, const msg[], const link[])
{
    new DCC_Channel:g_CanalID; 
    g_CanalID = DCC_FindChannelById("1112564969972715690"); // Discord channel ID

    new DCC_Embed:Msg_Embed, Discord_Encode[320];
    Msg_Embed = DCC_CreateEmbed();

	DCC_SetEmbedTitle(Msg_Embed, titulo);

	utf8encode(Discord_Encode, msg);
	DCC_SetEmbedDescription(Msg_Embed, Discord_Encode);

    DCC_SetEmbedColor(Msg_Embed, cor);
    if(strcmp(link, INVALID_LINK, true)){
        DCC_SetEmbedImage(Msg_Embed,link);
    }
    DCC_SendChannelEmbedMessage(g_CanalID, Msg_Embed);
    return 1;
}
stock SetToRespawnPlayer(playerid)
{
    SetPlayerPosEx(playerid, pInfo[playerid][pPosX], pInfo[playerid][pPosY], pInfo[playerid][pPosZ]+0.5);
    SetPlayerInterior(playerid, pInfo[playerid][pInterior]);
    SetPlayerVirtualWorld(playerid, pInfo[playerid][pVirtualW]);
    return 1;
}
stock CreateAccount(playerid, password[]) 
{
    new DBResult:result, query[256];
    format(query, sizeof query, "SELECT * FROM Contas WHERE PlayerName='%q'", PegarNome(playerid));
    result = db_query(Database, query);
    if(db_num_rows(result) == 0)
    {
        format(query, sizeof(query), "INSERT INTO Contas (PlayerName, Senha) VALUES ('%q', '%q')", PegarNome(playerid), password);
        result = db_query(Database, query);
        printf("Conta de %s criada com sucesso.", PegarNome(playerid));
    }
    db_free_result(result);
    return true;
}
stock LoadPlayerMapIcons(playerid)
{
    SetPlayerMapIcon(playerid, ICON_SAFELS, 1196.8474,-2033.5332,69.0078, 23, -1, MAPICON_LOCAL);
    SetPlayerMapIcon(playerid, ICON_SAFEROCA, -387.0307,-1148.6685,69.3924, 23, -1, MAPICON_LOCAL);
    SetPlayerMapIcon(playerid, ICON_BASEM1, 837.8048,-2134.5125,12.9146, 6, -1, MAPICON_LOCAL);
    SetPlayerMapIcon(playerid, ICON_BASEM2, 2592.8057,-2502.8474,13.4922, 6, -1, MAPICON_LOCAL);
    SetPlayerMapIcon(playerid, ICON_BASEM3, 212.0649,1949.8152,17.6406, 6, -1, MAPICON_LOCAL);
    SetPlayerMapIcon(playerid, ICON_BASEM4, -1074.3921,-1000.7889,129.2188, 6, -1, MAPICON_LOCAL);
    SetPlayerMapIcon(playerid, ICON_BASEM5, -1378.8224,399.9563,30.0859, 6, -1, MAPICON_LOCAL);
    SetPlayerMapIcon(playerid, ICON_BLACKM1, 1360.2970,2155.1289,11.0156, 18, -1, MAPICON_LOCAL);
    SetPlayerMapIcon(playerid, ICON_BLACKM2, -1932.4391,293.3207,47.7031, 18, -1, MAPICON_LOCAL);
    SetPlayerMapIcon(playerid, ICON_FLORESTA, 2849.2292,-352.1194,7.9363, 9, -1, MAPICON_LOCAL);
    SetPlayerMapIcon(playerid, ICON_SAFELS, 1554.9523,-1675.6664,16.1953, 30, -1, MAPICON_LOCAL);
    return true;
}
public OnPlayerSpawn(playerid)
{
    if(IsPlayerNPC(playerid)) return 1;
    TogglePlayerSpectating(playerid, false);
    if(!pInfo[playerid][pConectado])
    {
        SetPlayerColor(playerid, 0xFFFFFF00);
        StopAudioStreamForPlayer(playerid);

        if(pInfo[playerid][pClan] > 0) CheckMemberClan(playerid, pInfo[playerid][pClan]);



        LoadPlayerMapIcons(playerid);
        SetToRespawnPlayer(playerid);
        SetPlayerXp(playerid, pInfo[playerid][pXp]);
        pInfo[playerid][pConectado] = true;

        if(ChecarAdmin(playerid) == 0 && pInfo[playerid][pAdmin] > 0){
            SendClientMessage(playerid, 0x37C83FFF, "| STAFF | {FFFFFF}Voce foi expulso da staff enquanto estava offline!");
            RemovePStaff(playerid);
        }

        TogglePlayerControllable(playerid, false);

        SetAtualNameClan(playerid);
        SetTimerEx("TempoConectar", 3000, false, "i", playerid);
    	VerVip(playerid);
        verificacao2(playerid);
        new str[40];
        format(str, sizeof(str), "Presos/%s.ini", PegarNome(playerid));
        if(DOF2_FileExists(str)){
            pInfo[playerid][pPreso] = DOF2_GetInt(str, "Preso");
            VerificarPreso(playerid);
        }
        else{pInfo[playerid][pPreso] = 0;}
    }
    if(Trancado == true && pInfo[playerid][pAdmin] == 0)
	{
		new string[90];
		MEGAString[0]=EOS;
		format(string, sizeof(string), "{808080}* O servidor esta em manutencao!\n");
		strcat(MEGAString, string);
		format(string, sizeof(string), "{808080}* Somente membros da staff podem jogar!\n");
		strcat(MEGAString, string);
		format(string, sizeof(string), "{808080}* Aguarde o retorno, avisaremos em nosso discord!\n");
		strcat(MEGAString, string);
		format(string, sizeof(string), "{808080}* Acesse nosso discord.");
		strcat(MEGAString, string);
		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Manutencao", MEGAString, "Ok","");
	    SetTimerEx("KickingP", 100, false, "i", playerid);
	    return 1;
	}
    if(morto[playerid] == true){
        SetToRespawnPlayer(playerid);
		SetPlayerSkin(playerid, pInfo[playerid][pSkin]);
        SetPlayerHealthEx(playerid, 100);
        SetPlayerArmourEx(playerid, 0.0);
        UpdateFS(playerid);
        morto[playerid] = false;
	}
    
	/*if(caido[playerid]) {
        KillTimer(timercaido[playerid]);
        caido[playerid] = false;
        TogglePlayerControllable(playerid, true);
        caidosegundos[playerid] = 0;
    }
    if(jarilando[playerid] == 1){
        rilandosegundos[playerid] = 0;
        jarilando[playerid] = 0;
        RilandoAmigoID[playerid] = -1;
        KillTimer(timerrilando[playerid]);
    }*/
    if(pInfo[playerid][pTemGPS] == 1)
	{
		GangZoneHideForPlayer(playerid, gps);
	}else{
		GangZoneShowForPlayer(playerid, gps, 0x000000FF);
	}
	if(pInfo[playerid][pAdmin] >= 1){
		GangZoneHideForPlayer(playerid, gps);
	}
    //GangZoneShowForPlayer(playerid, AreaRestrita_gz , 0x356c58FF);
	GangZoneShowForPlayer(playerid, Area51, 0xFF000096);
	GangZoneShowForPlayer(playerid, Area52, 0xFF000096);
	GangZoneShowForPlayer(playerid, safezonesf, Preto);
	GangZoneShowForPlayer(playerid, safezonels, 0x00FF4096);
    GangZoneShowForPlayer(playerid, aerozone, 0xFF000096);
	GangZoneShowForPlayer(playerid, safezoneroca, 0x00FF4096);
	GangZoneShowForPlayer(playerid, docaszone,0xFF000096);
	GangZoneShowForPlayer(playerid, blackzone, Preto);
    GangZoneShowForPlayer(playerid, naviozone, 0xFF000096);
    GangZoneShowForPlayer(playerid, fazendazone, 0xFF000096);

    SetPlayerObject(playerid);
    SincronizarAttached(playerid);
    CancelSelectTextDraw(playerid);
    if(pInfo[playerid][pSkin] == 0) pInfo[playerid][pSkin] = 32;
    SetPlayerSkin(playerid, pInfo[playerid][pSkin]);
    return 1;
}
SetAtualNameClan(playerid){

    if(pInfo[playerid][pClan] > 0)
    {
        new nameclan[MAX_CLAN_NAME];
        format(nameclan, sizeof nameclan, "%s", ClanInfo[pInfo[playerid][pClan]][NomeC]);

        for(new s; s < sizeof(nameclan); s++){
            if(nameclan[s] == ' '){
                nameclan[s] = '_';
            }
        }
        PlayerTextDrawSetString(playerid, TextPHud[playerid][7], nameclan);
    }
    else                             
    { 
        PlayerTextDrawSetString(playerid, TextPHud[playerid][7], "Sem_Clan");
    }
    return true;
}
stock VerAtendimento(playerid)
{
	if(NoAtendimento[playerid] == true)
	{
		if(IdAtendimento[playerid] != -1){
	        NoAtendimento[IdAtendimento[playerid]] = false;
			PediuAtendimento[IdAtendimento[playerid]] = false;
	        IdAtendimento[IdAtendimento[playerid]] = -1;
	        SendClientMessage(IdAtendimento[playerid], Vermelho, "[SENHA] Atendimento finalizado. Motivo: Player saiu do servidor!");
	    }
	}
	return true;
}

stock RemovePStaff(playerid)
{
    pInfo[playerid][pAdmin] = 0;
    new DBResult:result, query[90];
    format(query, sizeof query, "SELECT * FROM Admins WHERE `PlayerName`='%q'", PegarNome(playerid));
    result = db_query(Database, query);
    if(db_num_rows(result) > 0){
        format(query, sizeof query, "DELETE FROM Admins WHERE `PlayerName`='%q'", PegarNome(playerid));
        result = db_query(Database, query);
    }
    db_free_result(result);
    printf("%s foi removido da staff quando logou.");
    return true;
}
CallBack:verificacao2(playerid)
{
    ShowPHud(playerid);
    TextDrawShowForPlayer(playerid, TextGHud[0]);
    TextDrawShowForPlayer(playerid, TextGHud[1]);
    TextDrawShowForPlayer(playerid, TextGHud[2]);

    LoadArmasToFile(playerid);
    UpdateFS(playerid);
   	verifiqued[playerid] = SetTimerEx("verificacao", 300, true, "i", playerid);
    P_Timer_Secunds[playerid] = SetTimerEx("P_Secunds", 1000, true, "i", playerid);
   	new uip[16], dia, mes, ano;
    getdate(ano, mes, dia);
    GetPlayerIp(playerid, uip, sizeof(uip));
	format(pInfo[playerid][pIP], 16, "%s", uip);
    pInfo[playerid][pUltimoLogin] = getdate() + 7;
	pInfo[playerid][pDiaLogin] = dia;
	pInfo[playerid][pMesLogin] = mes;
	pInfo[playerid][pAnoLogin] = ano;
	return 1;
}

/*stock GuardarWeapon(playerid, weaponid){
    new itemW = WeaponItem(weaponid);
    if(itemW > 0){
        if(VerMochila(playerid, 1)){

            new Float:Position[3];
            GetPlayerPos(playerid, Position[0], Position[1], Position[2]);

            SendClientMessage(playerid, Verde, "* {FFFFFF}Sua municao acabou e sua arma foi dropada, pois voce esta com o inventario cheio.");

            //add item no inventario
            CreateDrop(itemW, Position[0], Position[1], Position[2]);
        }else{ 
            SendClientMessage(playerid, Verde, "* {FFFFFF}Sua municao acabou e sua arma foi enviada para o inventario.");
                
            //add item no inventario
            AddItem(playerid, itemW, 1);
        }
    }
    AC_ResetWeaponPlayer(playerid, weaponid);
    return true;
}*/

CallBack:P_Secunds(playerid)
{
    if(!pInfo[playerid][pConectado]) return 0;

    if(AC_Info[playerid][CheatAvisos] > 0){
        if(AC_Info[playerid][CheatTempRAvisos] > 0){
            AC_Info[playerid][CheatTempRAvisos]--;
        }
        else if(AC_Info[playerid][CheatTempRAvisos] <= 0){
            AC_Info[playerid][CheatTempRAvisos]=0;
            AC_Info[playerid][CheatAvisos]=0;
        }
    }
    if(!IsPlayerPaused(playerid))
    {
        pInfo[playerid][pSecundsJ]++;
        if(pInfo[playerid][pSecundsJ] == 3600)
        {
            new str[60];
            pInfo[playerid][pSecundsJ] = 0;
            pInfo[playerid][pHorasJ]++;
            pInfo[playerid][pLevel]++;
            SetHourJogada(playerid, pInfo[playerid][pHorasJ]);
            SetPlayerScore(playerid, pInfo[playerid][pLevel]);
            new drnd = random(3000);
            SetPlayerMoney(playerid, drnd);
            SendClientMessage(playerid, Verde, "* Voce completou +1 hora jogada e recebeu:");
            format(str, sizeof str, "* Dinheiro: %d  ||  Score: +1.", drnd);
            SendClientMessage(playerid, Verde, str);
        }
    }
    if(SecundGToxicZ[playerid] > 0)
    {
        new rnd = random(5);
        SecundGToxicZ[playerid]--;
        Decrease_Health(playerid, rnd);
        new st[10]; format(st, sizeof st, "-%d_vida", rnd);
        PlayerTextDrawSetString(playerid, DosInfect[playerid][0], st);
        //SendClientMessage(playerid, Vermelho, "* Voce esta perdendo vida por estar infectado pelo gas do zumbi.");
        if(SecundGToxicZ[playerid] == 1){
            SecundGToxicZ[playerid] = 0;
            HideTextInfect(playerid);
        }
    }
    if(morto[playerid] == false){
        //GuardarArma(playerid);

        pInfo[playerid][pTempoVivo]++;
        new str2[40]; format(str2, sizeof str2, "tempo_vivo:_%02d:%02d", pInfo[playerid][pTempoVivo] / 60, pInfo[playerid][pTempoVivo] % 60);
        //PlayerTextDrawSetString(playerid, TextPHud[playerid][11], str2);
    }
    if(pInfo[playerid][pTomouTiro] > 0) pInfo[playerid][pTomouTiro]--;
    if(SecundsAction[playerid] > 0) {
        SecundsAction[playerid] --;
        if(SecundsAction[playerid] == 0)
        {
            HideActionPlayer(playerid);
        }
    }
    if(Secundshit[playerid] > 0){ Secundshit[playerid]--; }
    else if(Secundshit[playerid] == 0 && PlayerHit[playerid] != -1) {

        Secundshit[playerid] = 0;
        TotalHit[playerid] = 0;
        TotalDamage[playerid] = 0;
        PlayerHit[playerid] = -1;

        PlayerTextDrawHide(playerid, HitInformer[playerid]);
    }
    /*if(MuteVoip[playerid] > 0){
		MuteVoip[playerid]--;
		if(MuteVoip[playerid] == 0) return SendClientMessage(playerid, Verde, "* Voce foi liberado para usar o VOIP. Respeite as regras.");
	}*/
    return 1;
}
stock UpdateFS(playerid)
{                 
    if(pInfo[playerid][pSede] > 100) pInfo[playerid][pSede]=100;
    if(pInfo[playerid][pFome] > 100) pInfo[playerid][pFome]=100;

    PlayerTextDrawTextSize(playerid, TextPHud[playerid][9], 0.0+(17.500 / 100 * pInfo[playerid][pFome]), 4.000000);
    PlayerTextDrawShow(playerid, TextPHud[playerid][9]);

    PlayerTextDrawTextSize(playerid, TextPHud[playerid][11], 0.0+(17.500 / 100 * pInfo[playerid][pSede]), 4.000000);
    PlayerTextDrawShow(playerid, TextPHud[playerid][11]);
    return 1;
}
SalvarJogador(playerid)
{
    new str[64];
    if(pInfo[playerid][pPreso] > 0){
        format(str, sizeof(str), "Presos/%s.ini", PegarNome(playerid));
        DOF2_SetInt(str, "Preso", pInfo[playerid][pPreso]);
	}
	GetPlayerPos(playerid,pInfo[playerid][pPosX],pInfo[playerid][pPosY],pInfo[playerid][pPosZ]);
    pInfo[playerid][pInterior] = GetPlayerInterior(playerid);
    pInfo[playerid][pVirtualW] = GetPlayerVirtualWorld(playerid);
    if(morto[playerid] == true)
	{
	    new rnd = random(sizeof(Respawns));
       	pInfo[playerid][pPosX] = Respawns[rnd][0];
       	pInfo[playerid][pPosY] = Respawns[rnd][1];
       	pInfo[playerid][pPosZ] = Respawns[rnd][2];
        pInfo[playerid][pInterior]=0;
        pInfo[playerid][pVirtualW]=0;
	}
    SaveAdmin(playerid);
    new DBResult:result, query[60];
    format(query, sizeof query, "SELECT * FROM Contas WHERE PlayerName='%q'", PegarNome(playerid));
    result = db_query(Database, query);
    if(db_num_rows(result) > 0)
    {
        new savestr[1300];
        format(savestr, sizeof(savestr), "UPDATE `Contas` SET `Ip`='%q',`Coins`='%i',`Youtuber`='%i',`Level`='%i',`Clan`='%i',`Skin`='%i',`Fome`='%i',`Sede`='%i',`Radio`='%i',`Mochila`='%i',`FloodKVip`='%i',`UPosX`='%f',`UPosY`='%f',`UPosZ`='%f',`Interior`='%i',`VWorld`='%i',`Gps`='%i',`Xp`='%i',`Vida`='%f',`Colete`='%f',`NvlColete`='%i',`Madeira`='%i',`Ferro`='%i',`Dinheiro`='%i',`Kills`='%i',`Mortes`='%i',`ZKills`='%i',`UlDia`='%i',`UlMes`='%i',`UlAno`='%i',`RDia`='%i',`RMes`='%i',`RAno`='%i',`UltimoLogin`='%i',`MuteVoip`='%i',`CamaID`='%i',`HorasJ`='%i',`SegundosJ`='%i',`TempoVivo`='%i',`EMartelo`='%i',`EMarreta`='%i',`ECFenda`='%i',`ECInglesa`='%i',`EMascara`='%i',`EPeDeCabra`='%i', `Vip`='%i',`TempoVip`='%i' WHERE `PlayerName`='%q'",
        pInfo[playerid][pIP],
        pInfo[playerid][pCoins],
        pInfo[playerid][Youtuber],
        pInfo[playerid][pLevel],
        pInfo[playerid][pClan],
        pInfo[playerid][pSkin],
        pInfo[playerid][pFome],              
        pInfo[playerid][pSede],
        pInfo[playerid][pTemRADIO],
        pInfo[playerid][pBackpack],
        Flood[playerid],
        pInfo[playerid][pPosX],                
        pInfo[playerid][pPosY],         
        pInfo[playerid][pPosZ],           
        pInfo[playerid][pInterior],
        pInfo[playerid][pVirtualW], 
        pInfo[playerid][pTemGPS],
        pInfo[playerid][pXp],
        pInfo[playerid][pHealth],
        pInfo[playerid][pArmour],
        pInfo[playerid][pNvlColete],
        pInfo[playerid][pMadeira],
        pInfo[playerid][pFerro],
        pInfo[playerid][pDinheiro],
        pInfo[playerid][pkill],
        pInfo[playerid][pDeath],
        pInfo[playerid][pKillZ],
        pInfo[playerid][pAnoLogin],
		pInfo[playerid][pMesLogin],
		pInfo[playerid][pDiaLogin],
        pInfo[playerid][pAnoReg],
		pInfo[playerid][pMesReg],
		pInfo[playerid][pDiaReg],
        pInfo[playerid][pUltimoLogin],
        MuteVoip[playerid],
        pInfo[playerid][pCama],
        pInfo[playerid][pHorasJ],
        pInfo[playerid][pSecundsJ],
        pInfo[playerid][pTempoVivo],
        Equipado[playerid][MARTELO],
        Equipado[playerid][MARRETA],
        Equipado[playerid][CHAVE_DE_FENDA],
        Equipado[playerid][CHAVE_COMBINADA],
        Equipado[playerid][MASCARA],
        Equipado[playerid][PE_DE_CABRA],
        pInfo[playerid][pVip],  
        pInfo[playerid][pTempoVip], 
        PegarNome(playerid));
        db_free_result(db_query(Database, savestr));
        //printf("Conta de %s salva com sucesso", PegarNome(playerid));
    }
	return 1;
}

stock SaveAdmin(playerid) 
{
    if(pInfo[playerid][pAdmin] > 0)
	{
        new query[160], DBResult:result;
        format(query, sizeof(query), "SELECT * FROM Admins WHERE PlayerName='%q'", PegarNome(playerid));
        result = db_query(Database, query);
        if(db_num_rows(result) > 0){
            format(query, sizeof query, "UPDATE `Admins` SET `AdminLevel`='%d', `Atendimentos`='%d', `Bom`='%d', `Medio`='%d', `Ruim`='%d' WHERE PlayerName='%q'", 
            pInfo[playerid][pAdmin],
            pInfo[playerid][pAtendidos],
            pInfo[playerid][pBom],
            pInfo[playerid][pMedio],
            pInfo[playerid][pRuim],
            PegarNome(playerid));
            result = db_query(Database, query);
            printf("Admin de %s salvo com exito.", PegarNome(playerid));
        }
        db_free_result(result);
    }
    return true;
}
stock SaveAdmins() 
{
    new query[160], DBResult:result;
    for(new a=1; a < MAX_VAGAS; a++){ 
        format(query, sizeof(query), "SELECT * FROM Admins WHERE `Vaga`='%d'", a);
        result = db_query(Database, query);
        if(db_num_rows(result) > 0){
            format(query, sizeof query, "UPDATE `Admins` SET `AdminLevel`='%d', `Atendimentos`='%d', `Bom`='%d', `Medio`='%d', `Ruim`='%d' WHERE PlayerName='%q'", 
            pInfo[playerid][pAdmin],
            pInfo[playerid][pAtendidos],
            pInfo[playerid][pBom],
            pInfo[playerid][pMedio],
            pInfo[playerid][pRuim],
            PegarNome(playerid));
            result = db_query(Database, query);
            printf("Admin de %s salvo com exito.", PegarNome(playerid));
        }
        db_free_result(result);
    }
    return true;
}

stock NickNameRegistrado(nickname[]){
    new DBResult:result, query[60];
    format(query, sizeof query, "SELECT * FROM Contas WHERE PlayerName='%q'", nickname);
    result = db_query(Database, query);
    if(db_num_rows(result) > 0) return true;
    db_free_result(result);
    return false;
}

AdjustArmour(playerid){
    new Float:Armour;
    GetPlayerArmour(playerid, Armour);

    if(Armour < pInfo[playerid][pArmour])
    {   
        pInfo[playerid][pArmour] = Armour;
        SetPlayerArmour(playerid, pInfo[playerid][pArmour]);
    }else{                      
        SetPlayerArmour(playerid, pInfo[playerid][pArmour]);
    }
    return true;
}

AdjustHealth(playerid){   
    new Float:vida;
    GetPlayerHealth(playerid, vida);

    if(vida < pInfo[playerid][pHealth]){       
        pInfo[playerid][pHealth] = vida;
        SetPlayerHealth(playerid, pInfo[playerid][pHealth]);
    }else{                 
        SetPlayerHealth(playerid, pInfo[playerid][pHealth]);
    }
    return true;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
    //printf("CALL-BACK: OnPlayerGiveDamage Playerid: %d, damagedid: %d, Dano: %02f, Arma: %d, Parte do corpo: %d",playerid, damagedid, amount, weaponid, bodypart );
    if(!pInfo[damagedid][pConectado] || morto[playerid])
        return 0;

    if ( amount == 0.0000 && amount >= 100.0)
    	return 0;

    if (!IsPlayerConnected(damagedid))
    	return 0;

    if ( IsPlayerNPC(damagedid) )
    	return 0;

    if ( IsPlayerNPC(playerid) )
    	return 0;

    if(pInfo[damagedid][pAdmin] >= 1 && pInfo[damagedid][pDuty])
    {
        GameTextForPlayer(playerid, "NAO ATAQUE ADMINS!", 1000, 5);
        return 0;
    }
    else if(conectando[damagedid] == true)
    {
        GameTextForPlayer(playerid, "Anti Spawn-Kill!", 1000, 5);
        return 0;
    }
    if(pInfo[damagedid][pClan] == pInfo[playerid][pClan])
    {
        if(ClanInfo[pInfo[playerid][pClan]][FriendFire] == 1)
        {
            GameTextForPlayer(playerid, "~r~Fogo Amigo!", 1000, 5);
            
            if(weaponid == 0) ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.1, 0, 0, 0, 0, 0, 1);

            AdjustArmour(damagedid);
            AdjustHealth(damagedid);
            return 0;
    	}
    }

    if(IsPlayerInArea(damagedid, 1094.178222, -2085.197021, 1304.875488, -1978.394409) || IsPlayerInArea(damagedid, -401.641082, -1162.057373, -374.419433, -1126.190551)
    || IsPlayerInArea(playerid, 1094.178222, -2085.197021, 1304.875488, -1978.394409) || IsPlayerInArea(playerid, -401.641082, -1162.057373, -374.419433, -1126.190551))//cord safe LS
	{
        GameTextForPlayer(playerid, "~r~Safe - Zone", 1000, 5);
        pInfo[playerid][pAvisoDM]++;
        new htr[120];
        format(htr, sizeof htr, "{c75a5a}INFO: Voce foi avisado.\n\
        {c75a5a}Avisos: {FFFFFF}[%d/3]\n\
        {c75a5a}Ao completar 3 avisos voce sera kickado!", pInfo[playerid][pAvisoDM]);
        ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Safe - Zone", htr, "Informado", "");
        if(pInfo[playerid][pAvisoDM] >= 3)
        {
            pInfo[playerid][pAvisoDM] = 0;
            new g_str[128];
            format(g_str, sizeof g_str, "< DM-SAFE > O(a) Jogador %s(%d) foi kickado por atingir o limite de DM em safe.", PegarNome(playerid), playerid);
	        SendClientMessageToAll(Preto, g_str);
            SetTimerEx("banindo", 100, false, "i", playerid);//Kickar playerid
        }
        return 0;
    }

    //================== DANO DAS ARMAS ======================
    /*switch(weaponid){
        case 0: amount = 3.0;//soco
        case 9: amount = 2.0;//motoserra
        case 24:amount = 43.2;//desert
        case 34:amount = 45.0;//awp
        case 23:amount = 10.0;//silenc
        case 31:amount = 9.0;//M4
        case 30:amount = 10.0;//AK
        case 8:amount = 12.0;//katana
        case 28, 29, 32: amount = 10.0;//submetralhadoras
    }*/
    //========================================================

    new Float:N_Dano;
    if(!morto[damagedid])
    {
        /*if(bodypart == 9 && weaponid == 34){ //sistema de headshot
            if(pInfo[damagedid][pCapacete] > 0){
                SendTXDMessage(damagedid, "Capacete_Avariado!");
                pInfo[damagedid][pCapacete] = 0;
                RemovePlayerAttachedObject(damagedid, SlotCapacete);
            }else{                     
                SendTXDMessage(damagedid, "Voce_levou_um_headshot!");
                amount = 200.0;
            }
        }*/
        if(pInfo[damagedid][pArmour] > 0)// se o jogador tem colete
        {
            if(pInfo[damagedid][pArmour] < amount){
                N_Dano = amount-pInfo[damagedid][pArmour];
                SetPlayerArmourEx(damagedid, 0.0);
                GivePlayerHealth(damagedid, -N_Dano);
                pInfo[damagedid][pNvlColete] = 0;
                RemovePlayerAttachedObject(damagedid, SlotColete);
                return 0;
            }
            GivePlayerArmour(damagedid, -amount);//tirar colete
        }else{
            GivePlayerHealth(damagedid, -amount);//tirar vida
        }
        new string[128];
        if(Secundshit[playerid] == 0 || PlayerHit[playerid] != damagedid)
        {

            PlayerHit[playerid] = damagedid; 
            
            format(string, sizeof string, "~g~%s~n~Dano:_%d", PegarNome(damagedid), floatround(amount, floatround_round));
            PlayerTextDrawSetString(playerid, HitInformer[playerid], string);
            
            if(Secundshit[playerid] == 0){
                PlayerTextDrawShow(playerid, HitInformer[playerid]);
            }

            Secundshit[playerid] = 2;
        }else{
            //TotalHit[playerid]++;
            //TotalDamage[playerid] += floatround(amount,floatround_round);
            Secundshit[playerid] = 2;
            
            format(string, sizeof string, "~g~%s~n~Dano:_%d", PegarNome(damagedid), floatround(amount, floatround_round));
            PlayerTextDrawSetString(playerid, HitInformer[playerid], string);
        }
    }
    //derrubar Jogador
    if(morto[damagedid] == false && pInfo[damagedid][pHealth] <= 0.0){
        SetKillForPlayer(damagedid, playerid, weaponid);//kill player
    }
	return 0;
}
stock DelayAnimations(playerid){
    
    ApplyAnimation(playerid, "CRACK", "CRCKDETH2", 4.1, 0, 0, 0, 0, 0, 1);
    ApplyAnimation(playerid, "CRACK", "CRCKDETH2", 4.1, 0, 0, 0, 0, 0, 1);
    ApplyAnimation(playerid, "CRACK", "CRCKDETH2", 4.1, 0, 0, 0, 0, 0, 1);
    ApplyAnimation(playerid, "CRACK", "CRCKDETH2", 4.1, 0, 0, 0, 0, 0, 1);
    ApplyAnimation(playerid, "CRACK", "CRCKDETH2", 4.1, 0, 0, 0, 0, 0, 1);
    ApplyAnimation(playerid, "CRACK", "CRCKDETH2", 4.1, 0, 0, 0, 0, 0, 1);
    return true;
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
    if (pHealth > 50.0 && !isPlayerBleeding[playerid])
	{
       	isPlayerBleeding[playerid] = true;
        bleedTimer[playerid] = SetTimerEx("BleedPlayer", 1000, true, "i", playerid);
    }
    /*new str[1000];
    format(str, sizeof str, "CALL-BACK: OnPlayerTakeDamage Playerid: %d, issuerid: %d, Dano: %02f, Arma: %d, Parte do corpo: %d",playerid, issuerid, amount, weaponid, bodypart);
    SendClientMessage(playerid,-1, str);*/
    
    if(!pInfo[playerid][pConectado])
        return 0;

    if(pInfo[playerid][pTomouTiro] < 10)    pInfo[playerid][pTomouTiro] = 10;
    new bool:validreason=false;
    /*if(issuerid == INVALID_PLAYER_ID){
        validreason=true;
    }*/

    switch(weaponid)
    {
        case 47, 49, 50, 51, 53, 54, 255:
        {
            validreason=true;
        }
    }
    if(validreason){
        if(pInfo[playerid][pAdmin] > 0 && pInfo[playerid][pDuty]) return 0;//Nao dar dano em adm modo trabalho
        
        if(issuerid != INVALID_PLAYER_ID){
            if(pInfo[issuerid][pClan] == pInfo[playerid][pClan])
            {
                if(ClanInfo[pInfo[playerid][pClan]][FriendFire] == 1)
                {
                    GameTextForPlayer(issuerid, "~w~Fogo Amigo!", 1000, 5);
                    return 0;
                }
            }
        }
        new Float:N_Dano;
        if(weaponid == 51 && pInfo[playerid][pArmour] > 0)// se o dano nao for fatal [explosao]
        {
            if(pInfo[playerid][pArmour] < amount){
                N_Dano = amount-pInfo[playerid][pArmour];
                SetPlayerArmourEx(playerid, 0.0);
                GivePlayerHealth(playerid, -N_Dano);
                RemovePlayerAttachedObject(playerid, SlotColete);
                return 1;
            }
            GivePlayerArmour(playerid, -amount);//tirar colete
            return 1;
        }
        if(morto[playerid] == false && pInfo[playerid][pHealth] > 0){
            GivePlayerHealth(playerid, -amount);//tirar vida
        }

        if(morto[playerid] == false && pInfo[playerid][pHealth] <= 0.0){
            SetKillForPlayer(playerid, issuerid, weaponid);//kill player
        }   
    }
	return 1;
}
CallBack: ResetAvisoFTiro(playerid)
{
    //SendClientMessage(playerid, Vermelho, "[DEBUG] Aviso FTiro resetado com sucesso.");
    AvisosFakeTiro[playerid] = 0;
    return true;
}
//new TypeExplosion[MAX_PLAYERS];
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(VendoCam[playerid] == true)
	{
		GivePlayerWeapon(playerid, 0, 0);
		SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Nao atire aqui. Sujeito a banimento.");
		cmd_vcamera(playerid, "");
        return 0;
	}
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && weaponid == 24){

        fAutoC[playerid] ++;

        if(gettime() > GetPVarInt(playerid, "UmSegundo")){

            SetPVarInt(playerid, "UmSegundo", gettime() + 1);
            fAutoC[playerid] = 0;

        }else{
            if(fAutoC[playerid] > 5){

                SendClientMessage(playerid, 0xB22222FF, "* Pare com o CBUG. Ou sera banido automaticamente.");
                SetTimerEx( "banindo2", 200, false, "i", playerid);
                fAutoC[playerid] = 0;
            }
        }
    }
    if(GetPlayerWeapon(playerid) != 28)
	{
		if(GetPlayerWeapon(playerid) != 29)
		{
		    if(GetPlayerWeapon(playerid) != 38)
		    {
	            if(GetPlayerWeapon(playerid) != 32)
		        {
					new JoaoSTR[128];
					if((gettime() - GetPVarInt(playerid, "AntiRapid") < 1))
					{
					    TomouTiro[playerid] ++;
					}else{
			            TomouTiro[playerid] = 0;
				    }
				    if(TomouTiro[playerid] > 12)
					{
			            TomouTiro[playerid] = 0;
					    format(JoaoSTR, sizeof(JoaoSTR), "</!Anti-Cheat> %s(%d) foi kikado por suspeita de Rapid-Fire.", PegarNome(playerid), playerid);
					    MensageAdmin(0xFF8080FF, JoaoSTR);
					    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Cheater - RapidFire", "{c75a5a}INFO: Voce foi kickado.\n\
                        {c75a5a}Motivo: {FFFFFF}Suspeita Rapid-Fire\n\
                        {c75a5a}Todos os Administradores foram avisados!", "Informado", "");
					    SetTimerEx("banindo", 200, false, "i", playerid);
					 	return 1;
				    }
				}
		    }
		}
    }
    SetPVarInt(playerid, "AntiRapid", gettime());
    return 1;
}
public OnPlayerShootDynamicObject(playerid, weaponid, objectid, Float:x, Float:y, Float:z)
{
    
    if(GetDynamicObjectModel(objectid) == 19315)
	{
        for(new a; a < 100; a++)
	    {
            if(objectid == InfoVeado[a][VeadoID])
		    {
			    if(InfoVeado[a][StatusVeado] == 0)
			    {
			        new Float:X, Float:Y, Float:Z;
				    GetDynamicObjectPos(objectid, X, Y, Z);
				    MoveDynamicObject(objectid, X, Y, Z-0.3, 0.3, 90.0000, 0.0000, 0.0000);
				    DestroyDynamic3DTextLabel(InfoVeado[a][TextVeado]);
				    new ale = minrand(2 , 100);
					new ganho[80];
					format(ganho, 80,  "* Voce ganhou %d XP por matar um Veado.", ale);
					SendClientMessage(playerid, Verde, ganho);
					//pInfo[playerid][pXp] += ale;
                    GivePlayerXp(playerid, ale);
                    if(pInfo[playerid][pXp] >= 1000)
					{
					    //pInfo[playerid][pXp] -= 1000;
                        GivePlayerXp(playerid, -1000);
                        pInfo[playerid][pLevel]++;
					    new up[60];
					   	format(up, 60, "| Level-Up | Voce subiu 1 score e esta no Score: %d.", pInfo[playerid][pLevel]);
					    SendClientMessage(playerid, Preto, up);
					    SetPlayerScore(playerid, pInfo[playerid][pLevel]);
					}
				    new str[56];
				    format(str, sizeof(str), "Veado: %d\nStatus: Morto\n{FF8000}Use: /pegarcarne", a);
				    InfoVeado[a][TextVeado] = CreateDynamic3DTextLabel(str, 0xB22222FF, InfoVeado[a][VeadoX], InfoVeado[a][VeadoY], InfoVeado[a][VeadoZ], 2.0);
				    InfoVeado[a][StatusVeado] = 1;
				    return 1;
				}
		    }
	    }
	}
	return 1;
}
GetPlayerSerial(playerid)
{
	new serial[512];
 	gpci(playerid,serial,sizeof(serial));
  	return serial;
}
stock Pegar(playerid)
{
		new f = -1;
		for(new a; a < MAX_ARMAS; a++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, ArmaInfo[a][ArmaX], ArmaInfo[a][ArmaY], ArmaInfo[a][ArmaZ]))
			{
				f = a;
				break;
			}
		}
		if(f == -1) return SendClientMessage(playerid, 0x33AA3300, "{B22222}Erro: {ffffff}Voce nao esta proximo a uma arma!");
		else
		{
            if(pInfo[playerid][pAdmin] <= 4)
			{
			    if(!WeaponsServer(ArmaInfo[f][ArmaID])) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem permissao para pegar essa arma!");
			}
		    new gunname[25], string[128];

			ArmaInfo[f][ArmaX] = 0.0;
			ArmaInfo[f][ArmaY] = 0.0;
			ArmaInfo[f][ArmaZ] = 0.0;

            ArmaInfo[f][ArmaExiste] = false;
			DestroyDynamicObject(ArmaInfo[f][ArmaObj]);
			DestroyDynamic3DTextLabel(ArmaInfo[f][ArmaText]);
			GivePlayerWeaponEx(playerid, ArmaInfo[f][ArmaID], ArmaInfo[f][ArmaMuni]);
			GetWeaponNameEx(ArmaInfo[f][ArmaID], gunname, sizeof(gunname));
			format(string, sizeof(string), "| INFO | {FFFFFF}Voce pegou um(a) {6cb827}%s {FFFFFF}no chao com {6cb827}%i {FFFFFF}Municoes.", gunname, ArmaInfo[f][ArmaMuni]);
			SendClientMessage(playerid, Verde, string);
		}
		return 1;
}
stock GetNameWeaponB(weaponid)
{
    new gunname[25];
    if(weaponid != INVALID_OBJECT_BOX) GetWeaponNameEx(weaponid, gunname, sizeof(gunname));
    if(weaponid == INVALID_OBJECT_BOX) gunname = "<Vazio>";
    return gunname;
}
stock F_GunObjects(armaid)
{
    new Objibox = -1;
    if(armaid == INVALID_OBJECT_BOX){ Objibox = INVALID_OBJECT_BOX; return Objibox;}
    Objibox = GunObjects[armaid][0];
    return Objibox;
}
stock Jogar(playerid)
{
        new wep, slot; wep = GetPlayerWeapon(playerid);

        slot = GetSlotWeapon(wep);

		new gunID = GetPlayerWeaponEx(playerid, slot);
		new gunAmmo = GetPlayerAmmoEx(playerid, slot);
		
        new string[130];
		if(gunID != 0 && gunAmmo != 0)
		{
			new f = -1;
            for(new a; a < MAX_ARMAS; a++)
			{
				if(!ArmaInfo[a][ArmaExiste])
				{
					f = a;
					break;
				}
			}
			if(f == -1) return SendClientMessage(playerid, 0x33AA3300, "{B22222}Erro: {ffffff}Foi atingido o maximo de armas no chao no server! tente novamente em breve."); // *ste m
		    new gunname[25];
			GetWeaponNameEx(gunID, gunname, sizeof(gunname));
			RemovePlayerWeapon(playerid, gunID);
			format(string, sizeof(string), "| INFO | {FFFFFF}Voce soltou um(a) {6cb827}%s {FFFFFF}no chao com {6cb827}%i {FFFFFF}Municoes.", gunname, gunAmmo);
			SendClientMessage(playerid, Verde, string);
			ArmaInfo[f][ArmaID] = gunID;
			ArmaInfo[f][ArmaMuni] = gunAmmo;
			ArmaInfo[f][ArmaExiste] = true;
			DestroyDynamic3DTextLabel(ArmaInfo[f][ArmaText]);
	        GetPlayerPos(playerid, ArmaInfo[f][ArmaX], ArmaInfo[f][ArmaY], ArmaInfo[f][ArmaZ]);
	        new str[100];
	        format(str, sizeof(str), "%s[%d]\n/pegararma", gunname, f);
	        ArmaInfo[f][ArmaText] = CreateDynamic3DTextLabel(str, Verde,ArmaInfo[f][ArmaX], ArmaInfo[f][ArmaY], ArmaInfo[f][ArmaZ]-1, 30.0);
	        ArmaInfo[f][ArmaObj] = CreateDynamicObject(GunObjects[gunID][0],ArmaInfo[f][ArmaX], ArmaInfo[f][ArmaY], ArmaInfo[f][ArmaZ]-1,93.7,120.0,120.0);
			return 1;
		}
		return 1;
}
public BleedPlayer(playerid)
{
    pInfo[playerid][pHealth] -= 5.0; // Quantidade de vida perdida por segundo

    if (pInfo[playerid][pHealth] <= 0.0)
    {
    	pInfo[playerid][pHealth] = 0.0;
    	StopBleeding(playerid);
   	}
		return 1;
}
public StopBleeding(playerid)
{
    if (isBleeding[playerid])
    {
        isBleeding[playerid] = false;
        KillTimer(bleedTimer[playerid]);
	}
    return 1;
}
public CheckBleeding(playerid)
{
    if(pInfo[playerid][pHealth] <= 50.0 && !isBleeding[playerid])
    {
        StartBleeding(playerid);
    }
    return 1;
}
public StartBleeding(playerid)
{
   if (!isBleeding[playerid])
    {
        isBleeding[playerid] = true;
        bleedTimer[playerid] = SetTimerEx("BleedPlayer", 1000, true, "i", playerid);
    }
	return 1;
}
/*public OnPlayerUseItem(playerid, itemid)
{

}*/
public OnPlayerDeath(playerid, killerid, reason)
{
    //printf("CALL-BACK: OnPlayerDeath Playerid: %d, killerid: %d, reason: %d", playerid, killerid, reason);

    if(!IsPlayerNPC(playerid) && !morto[playerid]) {
        OnPlayerDeathEx(playerid, killerid, reason);
	}
	return 1;
}

CallBack:DelayedKick(playerid)
{
    Kick(playerid);
    return 1;
}
public OnPlayerText(playerid, text[])
{
    if(floodChat[playerid] > gettime())
    {
        SendClientMessage(playerid, Vermelho, "</!Anti-Flood> Nao cometa Flood/Spam!");
        return 0;
    }
    floodChat[playerid] = gettime() + 1;
    if(pInfo[playerid][pConectado] == false)
	{
	    SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Nao e possivel escrever no login.");
	    return 0;
	}
    new message[200];
    if(text[0] == '@')
    {
        if(pInfo[playerid][pVip] >= 1)
        {
    		format(gstring, sizeof gstring, ">> VIP(@): {FFFFFF}%s[%d]: {a28724}%s", PegarNome(playerid), playerid, text[1]);
    		MensageVip(COR_VIP, gstring);
        }
        return 0;
    }
    if(text[0] == '!')
	{
	    if(pInfo[playerid][pClan] != 0)
	    {
            format(gstring, sizeof(gstring), "{%s}| CHAT-CLAN | %s(%d): {FFFFFF}%s", ClanInfo[pInfo[playerid][pClan]][CorC], PegarNome(playerid), playerid, text[1]);
			MessageClan(-1, gstring, pInfo[playerid][pClan]);
		}
		return 0;
	}
    if(NoAtendimento[playerid] == true && pInfo[playerid][pAdmin] > 0)
    {
		format(message, sizeof(message), "{FFFFFF}[{b5ee0b}SENHA{FFFFFF}] {14f1dd}Admin {b5ee0b}%s[%d]: %s", PegarNome(playerid), playerid, text);
		SendClientMessage(IdAtendimento[playerid], -1, message);
		SendClientMessage(playerid, -1, message);
		return 0;
    }
    if(NoAtendimento[playerid] == true)
    {
		format(message, sizeof(message), "{FFFFFF}[{b5ee0b}SENHA{FFFFFF}] {b5ee0b}%s[%d]: %s", PegarNome(playerid), playerid, text);
		SendClientMessage(IdAtendimento[playerid], -1, message);
		SendClientMessage(playerid, -1, message);
		return 0;
    }
 	
    if(pInfo[playerid][pClan] != 0 && pInfo[playerid][pVip] >= 1 && pInfo[playerid][Youtuber] == 1)
	{
		format(message, sizeof(message), "[L] {FF0000}[YT] {%s}[%s] {a28724}[VIP]{ffffff} %s[%d]: %s", ClanInfo[pInfo[playerid][pClan]][CorC],ClanInfo[pInfo[playerid][pClan]][TagC], PegarNome(playerid),playerid, text);
		ProxDetector(30.0, playerid, message, -1);
		return 0;
	}
	if(pInfo[playerid][pClan] != 0 && pInfo[playerid][Youtuber] == 1)
	{
		format(message, sizeof(message), "[L] {FF0000}[YT] {%s}[%s] {ffffff}%s[%d]: %s", ClanInfo[pInfo[playerid][pClan]][CorC],ClanInfo[pInfo[playerid][pClan]][TagC], PegarNome(playerid),playerid, text);
	 	ProxDetector(30.0, playerid, message, -1);
	 	return 0;
	}
   	if(pInfo[playerid][pClan] != 0 && pInfo[playerid][pVip] >= 1)
	{
		format(message, sizeof(message), "[L] {%s}[%s] {a28724}[VIP] {FFFFFF}%s[%d]: %s", ClanInfo[pInfo[playerid][pClan]][CorC],ClanInfo[pInfo[playerid][pClan]][TagC], PegarNome(playerid),playerid, text);
		ProxDetector(30.0, playerid, message, -1);
		return 0;
	}
	if(pInfo[playerid][pClan] != 0)
	{
		format(message, sizeof(message), "[L] {%s}[%s]{ffffff} %s[%d]: %s", ClanInfo[pInfo[playerid][pClan]][CorC],ClanInfo[pInfo[playerid][pClan]][TagC], PegarNome(playerid),playerid, text);
		ProxDetector(30.0, playerid, message, -1);
		return 0;
	}
    if(pInfo[playerid][pDuty] == true && pInfo[playerid][pAdmin] >= 1 && pInfo[playerid][pVip] >= 1 && pInfo[playerid][Youtuber] == 1)
    {
        format(message, sizeof(message), "[L] {FF0000}[YT] {a28724}[VIP] {004ffd}[ADM]{ffffff} %s[%d]: {FFFFFF}%s", PegarNome(playerid), playerid, text);
		ProxDetector(30.0, playerid, message, -1);
		return 0;
    }
   	if(pInfo[playerid][pVip] >= 1 && pInfo[playerid][Youtuber] == 1)
	{
		format(message, sizeof(message), "[L] {FF0000}[YT] {a28724}[VIP]{ffffff} %s[%d]: %s", PegarNome(playerid), playerid, text);
		ProxDetector(30.0, playerid, message, -1);
		return 0;
	}
	if(pInfo[playerid][Youtuber] == 1)
	{
		format(message, sizeof(message), "[L] {FF0000}[YT]{ffffff} %s[%d]: %s", PegarNome(playerid),playerid, text);
		ProxDetector(30.0, playerid, message, -1);
		return 0;
	}
    if(pInfo[playerid][pDuty] == true && pInfo[playerid][pAdmin] >= 1 && pInfo[playerid][pVip] >= 1)
    {
        format(message, sizeof(message), "[L] {a28724}[VIP] {004ffd}[ADM]{ffffff} %s[%d]: %s", PegarNome(playerid), playerid, text);
		ProxDetector(30.0, playerid, message, -1);
		return 0;
    }
    if(pInfo[playerid][pDuty] == true && pInfo[playerid][pAdmin] >= 1)
    {
        format(message, sizeof(message), "[L] {004ffd}[ADM]{ffffff} %s[%d]: %s", PegarNome(playerid), playerid, text);
		ProxDetector(30.0, playerid, message, -1);
		return 0;
    }
	if(pInfo[playerid][pVip] >= 1)
	{
		format(message, sizeof(message), "[L] {a28724}[VIP]{ffffff} %s[%d]: %s", PegarNome(playerid), playerid, text);
		ProxDetector(30.0, playerid, message, -1);
		return 0;
	}
    format(message, sizeof(message), "[L] %s[%d]: %s", PegarNome(playerid),playerid, text);
    ProxDetector(30.0, playerid, message, -1);
    return 0;
}
public OnPlayerUpdate(playerid)
{
  	if(pInfo[playerid][pHealth] <= -50.0 && !isBleeding[playerid])
    {
        isBleeding[playerid] = true;
        StartBleeding(playerid);
    }
    if(GetPlayerMoney(playerid) > pInfo[playerid][pDinheiro] && pInfo[playerid][pConectado])
    {
        ResetPlayerMoney(playerid);
        GivePlayerMoney(playerid, pInfo[playerid][pDinheiro]);
    }
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);
	if(newkeys == 16 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
{
	cmd_entrardelegacia(playerid);
	cmd_sairdelegacia(playerid);
}

    if(newkeys & KEY_CROUCH)
        fAutoC[playerid] = 0;

    if(PRESSED(KEY_YES))
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
        	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
            {
                new vehicleid = GetPlayerVehicleID(playerid);
                if(IsABike(vehicleid)) return 1;
                if(vInfo[vehicleid][vMTLigado] == false)
            	{
                    GameTextForPlayer(playerid, "~w~Motor: ~g~Ligado", 1000, 4);
                    vInfo[vehicleid][vMTLigado] = true;
            		LigarMotor(vehicleid);
                }
                else if(vInfo[vehicleid][vMTLigado] == true)
            	{
                    GameTextForPlayer(playerid, "~w~Motor: ~r~Desligado", 1000, 4);
                    vInfo[vehicleid][vMTLigado] = false;
            		DesligarMotor(vehicleid);

                }
            }
        }
    }
    if(PRESSED(KEY_NO))//clicou 'N'
    {
        //Churrasqueira
        new idc = GetPlayerPosChurrasqueira(playerid);
        if(idc != -1)
        {
            if(CraftInfo[idc][IChurrasqueira] == 19847)
            {
                if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);

                AddItem(playerid, 71,1);
                    

                CraftInfo[idc][IChurrasqueira] = -1;
                SetObjectCarne(idc);
                return SendTXDMessage(playerid, "Voce_pegou_uma_carne_assada~n~Na_Churrasqueira.");
            }
            idchurrasqueira[playerid] = idc;
            new str[50]; format(str, sizeof str,  "Madeiras: %d\n{FF0000}Assar Carne", CraftInfo[idchurrasqueira[playerid]][MChurrasqueira]);
            ShowPlayerDialog(playerid, D_ASSARCARNE, DIALOG_STYLE_LIST, "{FF0000}Churrasqueira:", str, "Selecionar", "Fechar");
            return true;
        }
        if(GetPlayerRangeArvore(playerid) != -1)
		{
            if(GetPlayerWeapon(playerid) == 9)
            {
                if(natora[playerid] == false)
                {
                    new id = GetPlayerRangeArvore(playerid);
                    new str[128];
					if(Arvore[id][VidaArvore] == 0) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Arvore sem madeiras.");
				    if(Arvore[id][VidaArvore] == 20)
					{
						new ale = minrand(100 , 200);
				        new ganho[80];
					    format(ganho, 80,  "* Voce ganhou %d XP por terminar de cortar esta arvore.", ale);
					    SendClientMessage(playerid, Verde, ganho);
					    //pInfo[playerid][pXp] += ale;
                        GivePlayerXp(playerid, ale);
                        Arvore[id][VidaArvore] -= 20;
					    if(pInfo[playerid][pXp] >= 1000)
						{
						    //pInfo[playerid][pXp] -= 1000;
                            GivePlayerXp(playerid, -1000);
                            pInfo[playerid][pLevel]++;
						    new up[60];
						   	format(up, 60, "| Level-Up | Voce subiu 1 score e esta no Score: %d.", pInfo[playerid][pLevel]);
						    SendClientMessage(playerid, Preto, up);
						    SetPlayerScore(playerid, pInfo[playerid][pLevel]);
						}
                        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 0, 0, 0, 0);

                        SetTimerEx("pegandomadeira_b", 2000, false, "ii", playerid, id);
			            natora[playerid] = true;
                        DestroyDynamic3DTextLabel(Arvore[id][TextArvore]);
                        DestroyDynamicObject(Arvore[id][ObjectA]);
                        return 1;
					}
				    Arvore[id][VidaArvore] -= 20;
					format(str, sizeof(str), "{c4dd30}- Arvore %d\n{C0C0C0}Madeiras: %d", id, Arvore[id][VidaArvore]);
					UpdateDynamic3DTextLabelText(Arvore[id][TextArvore] , 0xFFFF00FF, str);
                  	PlayerTextDrawShow(playerid, AcaoText[playerid][0]);
                 	ApplyAnimation(playerid, "CHAINSAW", "CSAW_2", 4.1, 1, 0, 0, 1, 0, 0);
			      	SetTimerEx("pegandomadeira", 5000, false, "ii", playerid, id);
			        natora[playerid] = true;
			    }
 		        else return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta coletando madeira");
            }
 		    else return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui uma Motoserra.");
	    }
        if(GetPlayerRangePedra(playerid) != -1)
		{
            if(Equipado[playerid][MARRETA] == 1)
            {
                if(natora[playerid] == false)
                {
					new str[128];
                    new id = GetPlayerRangePedra(playerid);
                    if(Pedra[id][VidaPedra] == 0) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Pedra Sem Irons.");
					if(Pedra[id][VidaPedra] == 20)
					{
						new ale = minrand(90 , 250);
					    new ganho[80];
					    format(ganho, 80,  "* Voce ganhou %d XP por terminar de minerar esta pedra.", ale);
					    SendClientMessage(playerid, Verde, ganho);
					    //pInfo[playerid][pXp] += ale;
                        GivePlayerXp(playerid, ale);
                        if(pInfo[playerid][pXp] >= 1000)
						{
						    //pInfo[playerid][pXp] -= 1000;
                            GivePlayerXp(playerid, -1000);
                            pInfo[playerid][pLevel]++;
						    new up[60];
						   	format(up, 60, "| Level-Up | Voce subiu 1 score e esta no Score: %d.", pInfo[playerid][pLevel]);
						    SendClientMessage(playerid, Preto, up);
						    SetPlayerScore(playerid, pInfo[playerid][pLevel]);
						}
				    }
					Pedra[id][VidaPedra] -= 20;
		            format(str, sizeof(str), "{04bef3} * Pedra *\n{C0C0C0}id: %d\n{C0C0C0}Irons: %d", id, Pedra[id][VidaPedra]);
		            UpdateDynamic3DTextLabelText(Pedra[id][TextPedra] , 0x00FF00FF, str);
					SendClientMessage(playerid, AMARELO, "* Minerando. Aguarde...");
					//SetPlayerAttachedObject(playerid, 0, 19631, 6, 0.0769, -0.0200, 0.2120, -79.6000, -93.4999, 0.0000, 1.0000, 1.0000, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF);
                 	ApplyAnimation(playerid, "CHAINSAW", "CSAW_1", 4.1, 1, 0, 0, 1, 0, 1);
			      	SetTimerEx( "pegandoirons", 4000, false, "i", playerid);
			        natora[playerid] = true;
			    }
 		        else return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta coletando Irons");
            }
 		    else return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui uma marreta em maos");
	    }
	    new id = GetPlayerRangeCaixa(playerid);
        if(id != -1)
        {
            if(strcmp(Caixa[id][Dono], PegarNome(playerid)))
        	{
        	    if(Caixa[id][caberta] == false) return SendClientMessage(playerid, 0xE80000FF, "[ERRO]{BABABA} Caixa Trancada. Use /abrircaixa.");
            	idcaixap[playerid] = id;
            	ShowCaixaSelect(playerid);
            	itemselecionado[playerid] = -1;
        		return true;
        	}
        	PlayerSelecionandoItem[playerid] = true;
            idcaixap[playerid] = id;
            ShowCaixaSelect(playerid);
            itemselecionado[playerid] = -1;
        }
	}
    if(newkeys == KEY_SECONDARY_ATTACK && GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
    {
        if(GetRangeLootPlayer(playerid) != -1)
		{
			ShowPlayerDialogLoot(playerid);
		}
        if(IsPlayerInRangeOfPoint(playerid, 1.5, 284.0032,1867.3855,8.7578) && !GatePrivateOpen[PORTAO_SALA_AREA51]){// se o portao estiver fechado
            if(PlayerHasItem(playerid, 54)){
                RemoveItem(playerid,54,1);
                ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);

                GatePrivateOpen[PORTAO_SALA_AREA51] = true;
                new Float:X, Float:Y, Float:Z;
                GetDynamicObjectPos(MapArea51[2], X, Y, Z);
                MoveDynamicObject(MapArea51[2], X, Y, Z+5, 0.3, 0.0, 0.0, 0.0);

                SendClientMessage(playerid, Verde, "| INFO | {FFFFFF}Voce abriu o portao da Area 51 - Sala Restrita.");
                SendClientMessage(playerid, Verde, "| INFO | {FFFFFF}Aguarde alguns segundos...");
            }else{                
                SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao possui um cartao de acesso para abrir este portao!");
            }
        }
        else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1862.9882,-2590.7644,13.5469) && !GatePrivateOpen[PORTAO_AREA_AEROPORTO]){// se o portao estiver fechado
            if(PlayerHasItem(playerid, 54)){
                RemoveItem(playerid,54,1);
                ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);

                GatePrivateOpen[PORTAO_AREA_AEROPORTO] = true;
                new Float:X, Float:Y, Float:Z;
                GetObjectPos(AreaAero[132], X, Y, Z);
                MoveObject(AreaAero[132], X, Y, Z-10, 0.10, 0.0, 0.0, -90.7997);

                SendClientMessage(playerid, Verde, "| INFO | {FFFFFF}Voce abriu o portao da area privada do aeroporto - Sala Restrita do aeroporto.");
                SendClientMessage(playerid, Verde, "| INFO | {FFFFFF}Aguarde alguns segundos...");
            }else{                
                SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao possui um cartao de acesso para abrir este portao!");
            }
        }
        else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1685.8850,-2542.8115,13.6843) && GatePrivateOpen[PORTAO_AREA_AEROPORTO])//na caixa 1 do aeroporto
        {
            BoxAeroSelect[playerid] = 0;
            ShowPlayerAeroLootBox(playerid);
        }
        else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1684.5656,-2546.2144,13.6843) && GatePrivateOpen[PORTAO_AREA_AEROPORTO])//na caixa 2 do aeroporto
        {
            BoxAeroSelect[playerid] = 1;
            ShowPlayerAeroLootBox(playerid);
        }
        else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1784.0095,-2522.3057,49.5400) && GatePrivateOpen[PORTAO_AREA_AEROPORTO])//na caixa 3 do aeroporto
        {
            BoxAeroSelect[playerid] = 2;
            ShowPlayerAeroLootBox(playerid);
        }
        else if(IsPlayerInRangeOfPoint(playerid, 3.0, 312.6254,-165.4930,999.6010) || IsPlayerInRangeOfPoint(playerid, 3.0, -387.0307,-1148.6685,69.3924) || IsPlayerInRangeOfPoint(playerid, 3.0, 1410.8461,2107.7568,12.0156))//se estiver aonde vc criou o Pkup
        {
            cmd_loja(playerid);
        }

        new idmesa = GetPlayerRangeMesaCraft(playerid, 2.0);
        if(idmesa != -1) 
        {
            if(!MesaSendoUsada[idmesa] || pUsandoMesa[playerid] == idmesa){
                ShowInfoMesaCraft(playerid, idmesa);
            }else{           
                SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Alguem ja esta utilizando esta mesa!");
            }
        }
	}
	if(newkeys & KEY_FIRE && oldkeys & KEY_CROUCH)
	{
		if(GetPlayerWeapon(playerid) == 24 && pInfo[playerid][pAdmin] == 0)
		{
			ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.1, 0, 0, 0, 0, 0, 1);
			SendClientMessage(playerid, COR_VERMELHO, "[Anti - CBUG] Pare com o cbug!");
		}
	}
	if(newkeys & 16 && !IsPlayerInAnyVehicle(playerid))
	{
	    new string[60];
	    if(idairdrop == 0)
     	{
	        if(IsPlayerInRangeOfPoint(playerid, 2, AirDropEnum[0][CoordX],AirDropEnum[0][CoordY],LabelZ))
	        {
                if(pInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode pegar Airdrop por nao ter nivel minimo, nivel minimo: 2.");
                MEGAString[0]=EOS;
	            format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[0][Item1]), AirDropEnum2[0][QItem1]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[0][Item2]), AirDropEnum2[0][QItem2]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[0][Item3]), AirDropEnum2[0][QItem3]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[0][Item4]), AirDropEnum2[0][QItem4]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[0][Item5]), AirDropEnum2[0][QItem5]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[0][Item6]), AirDropEnum2[0][QItem6]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades",GetNameItemY(AirDropEnum2[0][Item7]), AirDropEnum2[0][QItem7]);
		        strcat(MEGAString, string);
		        ShowPlayerDialog(playerid, 2200, DIALOG_STYLE_LIST, "Airdrop",  MEGAString, "Pegar","Fechar");
		        return 1;
			}
        }
        else if(idairdrop == 1)
        {
	        if(IsPlayerInRangeOfPoint(playerid, 2, AirDropEnum[1][CoordX],AirDropEnum[1][CoordY],LabelZ))
	        {
                if(pInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode pegar Airdrop por nao ter nivel minimo, nivel minimo: 2.");
                MEGAString[0]=EOS;
	            format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[1][Item1]), AirDropEnum2[1][QItem1]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[1][Item2]), AirDropEnum2[1][QItem2]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[1][Item3]), AirDropEnum2[1][QItem3]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[1][Item4]), AirDropEnum2[1][QItem4]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[1][Item5]), AirDropEnum2[1][QItem5]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[1][Item6]), AirDropEnum2[1][QItem6]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades",GetNameItemY(AirDropEnum2[1][Item7]), AirDropEnum2[1][QItem7]);
		        strcat(MEGAString, string);
		        ShowPlayerDialog(playerid, 2200, DIALOG_STYLE_LIST, "Airdrop",  MEGAString, "Pegar","Fechar");
		        return 1;
	        }
        }
        else if(idairdrop == 2)
        {
        	if(IsPlayerInRangeOfPoint(playerid, 2, AirDropEnum[2][CoordX],AirDropEnum[2][CoordY],LabelZ))
        	{
                if(pInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode pegar Airdrop por nao ter nivel minimo, nivel minimo: 2.");
                MEGAString[0]=EOS;
	            format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[2][Item1]), AirDropEnum2[2][QItem1]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[2][Item2]), AirDropEnum2[2][QItem2]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[2][Item3]), AirDropEnum2[2][QItem3]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[2][Item4]), AirDropEnum2[2][QItem4]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[2][Item5]), AirDropEnum2[2][QItem5]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[2][Item6]), AirDropEnum2[2][QItem6]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades",GetNameItemY(AirDropEnum2[2][Item7]), AirDropEnum2[2][QItem7]);
		        strcat(MEGAString, string);
		        ShowPlayerDialog(playerid, 2200, DIALOG_STYLE_LIST, "Airdrop",  MEGAString, "Pegar","Fechar");
		        return 1;
			}
        }
        else if(idairdrop == 3)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2, AirDropEnum[3][CoordX],AirDropEnum[3][CoordY],LabelZ))
	        {
                if(pInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode pegar Airdrop por nao ter nivel minimo, nivel minimo: 2.");
                MEGAString[0]=EOS;
	        	format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[3][Item1]), AirDropEnum2[3][QItem1]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[3][Item2]), AirDropEnum2[3][QItem2]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[3][Item3]), AirDropEnum2[3][QItem3]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[3][Item4]), AirDropEnum2[3][QItem4]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[3][Item5]), AirDropEnum2[3][QItem5]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[3][Item6]), AirDropEnum2[3][QItem6]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades",GetNameItemY(AirDropEnum2[3][Item7]), AirDropEnum2[3][QItem7]);
		        strcat(MEGAString, string);
		        ShowPlayerDialog(playerid, 2200, DIALOG_STYLE_LIST, "Airdrop",  MEGAString, "Pegar","Fechar");
		        return 1;
			}
        }
        else if(idairdrop == 4)
        {
	        if(IsPlayerInRangeOfPoint(playerid, 2, AirDropEnum[4][CoordX],AirDropEnum[4][CoordY],LabelZ))
	        {
                if(pInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode pegar Airdrop por nao ter nivel minimo, nivel minimo: 2.");
				MEGAString[0]=EOS;
		       	format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[4][Item1]), AirDropEnum2[4][QItem1]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[4][Item2]), AirDropEnum2[4][QItem2]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[4][Item3]), AirDropEnum2[4][QItem3]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[4][Item4]), AirDropEnum2[4][QItem4]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[4][Item5]), AirDropEnum2[4][QItem5]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[4][Item6]), AirDropEnum2[4][QItem6]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades",GetNameItemY(AirDropEnum2[4][Item7]), AirDropEnum2[4][QItem7]);
		        strcat(MEGAString, string);
		        ShowPlayerDialog(playerid, 2200, DIALOG_STYLE_LIST, "Airdrop",  MEGAString, "Pegar","Fechar");
		        return 1;
			}
        }
        else if(idairdrop == 5)
        {
	        if(IsPlayerInRangeOfPoint(playerid, 2, AirDropEnum[5][CoordX],AirDropEnum[5][CoordY],LabelZ))
	        {
                if(pInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode pegar Airdrop por nao ter nivel minimo, nivel minimo: 2.");
				MEGAString[0]=EOS;
		       	format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[5][Item1]), AirDropEnum2[5][QItem1]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[5][Item2]), AirDropEnum2[5][QItem2]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[5][Item3]), AirDropEnum2[5][QItem3]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[5][Item4]), AirDropEnum2[5][QItem4]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[5][Item5]), AirDropEnum2[5][QItem5]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[5][Item6]), AirDropEnum2[5][QItem6]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades",GetNameItemY(AirDropEnum2[5][Item7]), AirDropEnum2[5][QItem7]);
		        strcat(MEGAString, string);
		        ShowPlayerDialog(playerid, 2200, DIALOG_STYLE_LIST, "Airdrop",  MEGAString, "Pegar","Fechar");
		        return 1;
			}
        }
        else if(idairdrop == 6)
        {
	        if(IsPlayerInRangeOfPoint(playerid, 2, AirDropEnum[6][CoordX],AirDropEnum[6][CoordY],LabelZ))
	        {
                if(pInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode pegar Airdrop por nao ter nivel minimo, nivel minimo: 2.");
				MEGAString[0]=EOS;
		       	format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[6][Item1]), AirDropEnum2[6][QItem1]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[6][Item2]), AirDropEnum2[6][QItem2]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[6][Item3]), AirDropEnum2[6][QItem3]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[6][Item4]), AirDropEnum2[6][QItem4]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[6][Item5]), AirDropEnum2[6][QItem5]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[6][Item6]), AirDropEnum2[6][QItem6]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades",GetNameItemY(AirDropEnum2[6][Item7]), AirDropEnum2[6][QItem7]);
		        strcat(MEGAString, string);
		        ShowPlayerDialog(playerid, 2200, DIALOG_STYLE_LIST, "Airdrop",  MEGAString, "Pegar","Fechar");
		        return 1;
			}
        }
        else if(idairdrop == 7)
        {
	        if(IsPlayerInRangeOfPoint(playerid, 2, AirDropEnum[7][CoordX],AirDropEnum[7][CoordY],LabelZ))
	        {
                if(pInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode pegar Airdrop por nao ter nivel minimo, nivel minimo: 2.");
	            MEGAString[0]=EOS;
		       	format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[7][Item1]), AirDropEnum2[7][QItem1]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[7][Item2]), AirDropEnum2[7][QItem2]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[7][Item3]), AirDropEnum2[7][QItem3]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[7][Item4]), AirDropEnum2[7][QItem4]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[7][Item5]), AirDropEnum2[7][QItem5]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades\n",GetNameItemY(AirDropEnum2[7][Item6]), AirDropEnum2[7][QItem6]);
		        strcat(MEGAString, string);
		        format(string, sizeof(string), "%s - %d Unidades",GetNameItemY(AirDropEnum2[7][Item7]), AirDropEnum2[7][QItem7]);
		        strcat(MEGAString, string);
		        ShowPlayerDialog(playerid, 2200, DIALOG_STYLE_LIST, "Airdrop",  MEGAString, "Pegar","Fechar");
		        return 1;
			}
        }
	}
	if(pInfo[playerid][pConectado] == true && IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
	{
		Item_OnPlayerKeyStateChange(playerid, newkeys, oldkeys);
	}
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(dialogid == DIALOG_REGISTRO)
	{
        if(!response)
        {
            SetTimerEx("banindo", 100, false, "i", playerid);
            return SendClientMessage(playerid, Vermelho, "* Voce optou por sair do Registro e foi kickado!");
        }
        new CryptoG[90];
        SHA256_PassHash(inputtext, "78sdjs86d2h", CryptoG, sizeof(CryptoG));
	    if(strlen(inputtext) >= 5 && strlen(inputtext) <= 20)
		{
            new rnd = random(sizeof(Respawns));
            pInfo[playerid][Youtuber] = 0;
            pInfo[playerid][pLevel] = 0;
	        pInfo[playerid][pAdmin] = 0;
	        pInfo[playerid][pClan] = 0;
            pInfo[playerid][pCargoClan] = 0;
	        pInfo[playerid][pLevel] = 0;

            ResetPlayerMoneyEx(playerid);
            ResetPlayerMadeira(playerid);
            ResetPlayerFerro(playerid);

	        pInfo[playerid][pCoins]= 0;
	        pInfo[playerid][pkill] = 0;
            pInfo[playerid][pKillZ] = 0;
	        pInfo[playerid][pDeath] = 0;
	        pInfo[playerid][pBackpack] = 8;
	        pInfo[playerid][pFome] = 50;
	        pInfo[playerid][pSede] = 50;
	        pInfo[playerid][pPosX] = Respawns[rnd][0];
	        pInfo[playerid][pPosY] = Respawns[rnd][1];
	        pInfo[playerid][pPosZ] = Respawns[rnd][2];
	        pInfo[playerid][pVip] = 0;
	        pInfo[playerid][pTemGPS] = 0;
	        pInfo[playerid][pXp] = 0;
	        pInfo[playerid][pMadeira] = 0;
	        pInfo[playerid][pTemRADIO] = 0;
	        
	        pInfo[playerid][pTempoVip] = 0;
	        pInfo[playerid][pSkin] = 32;
	        pInfo[playerid][pHealth] = 100.0;
	        pInfo[playerid][pArmour] = 0;
            pInfo[playerid][pCama] = 0;
            pInfo[playerid][pHorasJ] = 0;
            pInfo[playerid][pTempoVivo] = 0;

            pInfo[playerid][pSecundsJ] = 0;
	        SetPlayerHealthEx(playerid, 100.0);
            SetPlayerArmourEx(playerid, 0.0);
            SetPlayerKill(playerid, 0);
            SetPlayerDeath(playerid, 0);
            SetPlayerZKill(playerid, 0);

            CreateAccount(playerid, CryptoG);
            SetSpawnInfo(playerid, 1, pInfo[playerid][pSkin], pInfo[playerid][pPosX],pInfo[playerid][pPosY],pInfo[playerid][pPosZ],0.0,0,0,0,0,0,0);
            new day, month, year;
            getdate(year, month, day);
            pInfo[playerid][pDiaReg] = day; pInfo[playerid][pMesReg] = month; pInfo[playerid][pAnoReg] = year;
            SpawnPlayer(playerid);
	        LoadInventory(playerid);
	        new registrou[120];
	        SendClientMessage(playerid,Verde, "[REGISTRO] Registrado(a) com sucesso!");
            SendClientMessage(playerid,Verde, "* Utilize /duvida ou /senha caso duvidas!");
            SendClientMessage(playerid,Verde, "* Obrigado pela preferencia!");
	        format(registrou, 120, "* Jogador {FFFFFF}%s{004ffd}[{FFFFFF}%d{004ffd}] se registrou!", PegarNome(playerid), playerid);
	       	MensageAdmin(COR_ADMIN, registrou);
	    }else{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Senha muito pequena ou muito grande");
            RegisterDialog(playerid);
        }
        return 1;
    }
	else if(dialogid == DIALOG_LOGIN)
	{
        if(!response) return 1;
        new CryptoG[90];
        SHA256_PassHash(inputtext, "78sdjs86d2h", CryptoG, sizeof(CryptoG));

        new DBResult:result, queryn[100];
        format(queryn, sizeof queryn, "SELECT * FROM Admins WHERE PlayerName = '%q'", PegarNome(playerid));
        result = db_query(Database, queryn);

	    new DBResult:resultado, query[100];
        format(query, sizeof query, "SELECT * FROM Contas WHERE PlayerName = '%q'", PegarNome(playerid));
        resultado = db_query(Database, query);
        
        new field[130];
        db_get_field_assoc(resultado, "Senha", field, sizeof(field));

        if(!strlen(inputtext)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Digite sua senha!");
        if(strcmp(CryptoG,field,true))
		{
	        if(errousenha[playerid] == 3) return Kick(playerid);
			errousenha[playerid]++;
			new erro[50];
			format(erro, sizeof(erro), "[ERRO]{BABABA} Voce errou sua senha! (%d/3)", errousenha[playerid]);
            SendClientMessage(playerid, Vermelho, erro);
            LoginDialog(playerid);
            return 1;
		}
	    else
		{
            SetPlayerCoin(playerid, db_get_field_assoc_int(resultado, "Coins"));
            pInfo[playerid][Youtuber] = db_get_field_assoc_int(resultado, "Youtuber");

	        pInfo[playerid][pLevel] = db_get_field_assoc_int(resultado, "Level");
	        pInfo[playerid][pClan] = db_get_field_assoc_int(resultado, "Clan");
	        pInfo[playerid][pSkin] = db_get_field_assoc_int(resultado, "Skin");
	        pInfo[playerid][pFome] = db_get_field_assoc_int(resultado, "Fome");
	        pInfo[playerid][pSede] = db_get_field_assoc_int(resultado, "Sede");
            pInfo[playerid][pBackpack] = db_get_field_assoc_int(resultado, "Mochila");
            pInfo[playerid][pTemRADIO] = db_get_field_assoc_int(resultado, "Radio");
            
            Flood[playerid] = db_get_field_assoc_int(resultado, "FloodKVip");

            pInfo[playerid][pPosX] = db_get_field_assoc_float(resultado, "UPosX");
	        pInfo[playerid][pPosY] = db_get_field_assoc_float(resultado, "UPosY");
	        pInfo[playerid][pPosZ] = db_get_field_assoc_float(resultado, "UPosZ");
            pInfo[playerid][pInterior] = db_get_field_assoc_int(resultado, "Interior");
            pInfo[playerid][pVirtualW] = db_get_field_assoc_int(resultado, "VWorld");
            
            pInfo[playerid][pTemGPS] = db_get_field_assoc_int(resultado, "Gps");
            pInfo[playerid][pXp] = db_get_field_assoc_int(resultado, "Xp");
            pInfo[playerid][pHealth] = db_get_field_assoc_float(resultado, "Vida");
            pInfo[playerid][pArmour] = db_get_field_assoc_float(resultado, "Colete");

            pInfo[playerid][pNvlColete] = db_get_field_assoc_int(resultado, "NvlColete");
	        
            SetPlayerMadeira(playerid, db_get_field_assoc_int(resultado, "Madeira"));
            SetPlayerFerro(playerid, db_get_field_assoc_int(resultado,"Ferro"));
            SetPlayerMoney(playerid, db_get_field_assoc_int(resultado, "Dinheiro"));
            SetPlayerKill(playerid, db_get_field_assoc_int(resultado, "Kills"));
            SetPlayerDeath(playerid, db_get_field_assoc_int(resultado, "Mortes"));
            SetPlayerZKill(playerid, db_get_field_assoc_int(resultado, "ZKills"));

            pInfo[playerid][pAnoReg] = db_get_field_assoc_int(resultado, "RAno");
    		pInfo[playerid][pMesReg] = db_get_field_assoc_int(resultado, "RMes");
    		pInfo[playerid][pDiaReg] = db_get_field_assoc_int(resultado, "RDia");

            MuteVoip[playerid] = db_get_field_assoc_int(resultado, "MuteVoip");
            pInfo[playerid][pCama] = db_get_field_assoc_int(resultado, "CamaID");

            SetHourJogada(playerid, db_get_field_assoc_int(resultado, "HorasJ"));
            pInfo[playerid][pSecundsJ] = db_get_field_assoc_int(resultado, "SegundosJ");
            pInfo[playerid][pTempoVivo] = db_get_field_assoc_int(resultado, "TempoVivo");

            Equipado[playerid][MARTELO] = db_get_field_assoc_int(resultado, "EMartelo");
            Equipado[playerid][MARRETA] = db_get_field_assoc_int(resultado, "EMarreta");
            Equipado[playerid][CHAVE_DE_FENDA] = db_get_field_assoc_int(resultado, "ECFenda");
            Equipado[playerid][CHAVE_COMBINADA] = db_get_field_assoc_int(resultado, "ECInglesa");
            Equipado[playerid][MASCARA] = db_get_field_assoc_int(resultado, "EMascara");
            Equipado[playerid][PE_DE_CABRA] = db_get_field_assoc_int(resultado, "EPeDeCabra");

            pInfo[playerid][pVip] = db_get_field_assoc_int(resultado, "Vip");
            pInfo[playerid][pTempoVip] = db_get_field_assoc_int(resultado, "TempoVip");

            if(db_num_rows(result) > 0)
            {
                pInfo[playerid][pAdmin] = db_get_field_assoc_int(result, "AdminLevel");
			    pInfo[playerid][pAtendidos] = db_get_field_assoc_int(result, "Atendimentos");
			    pInfo[playerid][pBom] = db_get_field_assoc_int(result, "Bom");
		        pInfo[playerid][pMedio] = db_get_field_assoc_int(result, "Medio");
			    pInfo[playerid][pRuim] = db_get_field_assoc_int(result, "Ruim");
            }
			checkIp(playerid);
            SetSpawnInfo(playerid, 1, pInfo[playerid][pSkin], pInfo[playerid][pPosX],pInfo[playerid][pPosY],pInfo[playerid][pPosZ],0.0,0,0,0,0,0,0);

            new hour, minute, second;
            gettime(hour,minute,second);
            if(pInfo[playerid][pAdmin] > 0 && pInfo[playerid][pAdmin] < 4)
            {
                HoraL[playerid] = hour;
                MinutoL[playerid] = minute;
            }
            for(new i; i < 10; i++) SendClientMessage(playerid, -1, " ");

            PlayerLogado[playerid] = true;
            PlayerTextDrawSetString(playerid, TextLoginP[playerid], "Jogar");

			SetPlayerScore(playerid, pInfo[playerid][pLevel]);
			LoadInventory(playerid);
		}
        db_free_result(result);
        db_free_result(resultado);
        return 1;
	}
	else if(dialogid ==  D_SENHAMALAS)
	{
	    if(!response) return 1;
    	if(response)
		{
            new idv = idcarrop[playerid];
		    if(vInfo[idv][vLock] == true)
		    {
			    if(Comparar(inputtext, vInfo[idv][cSenha]))
			    {
                    OpenPortaMalasCar(IDVehP[playerid]);
                    new string[40];
			        MEGAString[0]=EOS;
	 				for(new n = 1; n < MAX_LOOT_PMALA; n++)
	 				{
	 				    format(string, sizeof(string), "[%i] %s\n", n, GetNameItemY(InfoPMalas[idcarrop[playerid]][n]));
	 				    strcat(MEGAString, string);
	 				}
					ShowPlayerDialog(playerid,D_PMALAS,DIALOG_STYLE_LIST,"Porta Malas"COL_GREEN"(50 slots)" ,MEGAString, "Selecionar","Fechar");
					SendClientMessage(playerid, Verde, "* Porta Malas aberto com sucesso");
			    }
			    else
			    {
				    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Senha do porta malas incorreta");
			    }
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} porta malas ja esta aberto");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} voce nao esta perto de nenhum veiculo");
		}
	}
	else if(dialogid == D_CRIARITEM){
		if(!response) return true;
		if(response)
		{
            if(PaginaCreateItem[playerid] == 1 && listitem == 50)
            {
                MEGAString[0]=EOS;
                PaginaCreateItem[playerid] = 2;
                for(new i=listitem, j = sizeof(ItemInfo); i < j; i++)
                {
                    new pstring[100];
                    format(pstring, sizeof(pstring), "{FF0000}Item: {FFFFFF}%s\t{FF0000}ID: {FFFFFF}%d\n", ItemInfo[i][Item_Name], i);
                    strcat(MEGAString, pstring);
                    if(i == 99){
                        strcat(MEGAString, ">>>");
                        break;
                    }
                }
                ShowPlayerDialog(playerid, D_CRIARITEM, DIALOG_STYLE_LIST, "{FFFFFF}Criar Itens", MEGAString, "Criar", "Fechar");
                return 1;
            }

            if(listitem < 0 || listitem > sizeof(ItemInfo)-1) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Algo deu errado.");
            
            if(PaginaCreateItem[playerid] == 1){
                IDItemCreate[playerid] = listitem;
                new str[60];
                format(str, sizeof str, "{00FF00}[%s].", ItemInfo[IDItemCreate[playerid]][Item_Name]);
                ShowPlayerDialog(playerid, D_CRIARITEM2, DIALOG_STYLE_INPUT, str, "{00FF00}Quantia de item a criar:\n\
                {FF0000}Obs: No minimo [1] e no maximo [40].", "Criar", "Voltar");
            }else if(PaginaCreateItem[playerid] == 2){
                IDItemCreate[playerid] = listitem+50;
                new str[60];
                format(str, sizeof str, "{00FF00}[%s].", ItemInfo[IDItemCreate[playerid]][Item_Name]);
                ShowPlayerDialog(playerid, D_CRIARITEM2, DIALOG_STYLE_INPUT, str, "{00FF00}Quantia de item a criar:\n\
                {FF0000}Obs: No minimo [1] e no maximo [40].", "Criar", "Voltar");
            }
        }
	}
    else if(dialogid == D_CRIARITEM2){
		if(!response) return true;
		if(response)
		{
            if(strval(inputtext) < 1 || strval(inputtext) > 40)
            {
                new str[60];
                format(str, sizeof str, "{00FF00}[%s].", ItemInfo[IDItemCreate[playerid]][Item_Name]);
                ShowPlayerDialog(playerid, D_CRIARITEM2, DIALOG_STYLE_INPUT, str, "{00FF00}Quantia de item a criar:\n\
                {FF0000}Obs: No minimo [1] e no maximo [40].", "Criar", "Voltar");
                return 1;
            }
            new criado[60];
            for(new i, j = strval(inputtext); i < j; i++)
            {
                new Float:X, Float:Y, Float:Z;
    		    GetPlayerPos(playerid, X, Y, Z);
    		    GetXYInFrontOfPlayer(playerid, X, Y, 1.0);
    		    CreateDrop(IDItemCreate[playerid], X, Y, Z);
            }
            format(criado, sizeof(criado), "| INFO | {FFFFFF}Item: %s criado. Quantia: %d!", ItemInfo[IDItemCreate[playerid]][Item_Name], strval(inputtext));
    		SendClientMessage(playerid, AMARELO, criado);
            new strr[120];
            format(strr, sizeof strr, "O(a) Staff %s criou %s. Quantia: %d.", PegarNome(playerid), ItemInfo[IDItemCreate[playerid]][Item_Name], strval(inputtext));
            LogsDSADM("Item - Criado", embed_blue, strr, INVALID_LINK);
        }
	}
    else if(dialogid == TELEPORT_MAPA)
    {
        if(!response)
        {
            VehTele[playerid]=0;
            return 1;
        }
        if(response)
        {
            MapAndreas_FindZ_For2DCoord(TlpX[playerid], TlpY[playerid], TlpZ[playerid]);
            if(IsPlayerInAnyVehicle(playerid))
            {
                SetVehiclePosEx(playerid, VehTele[playerid], TlpX[playerid], TlpY[playerid], TlpZ[playerid]+1);
            }
            SetPlayerPosEx(playerid, TlpX[playerid], TlpY[playerid], TlpZ[playerid]+1);
            PutPlayerInVehicle(playerid, VehTele[playerid], 0);
            VehTele[playerid] = 0;
            return 1;
        }
    }
    /*
    MEGAString[0] = EOS;
	    strcat(MEGAString, "Item\tGanho\n");
	    strcat(MEGAString, "Martelo\t150 Madeira e 50 Ferro\n");
	    strcat(MEGAString, "Motor\t150 Ferros\n");
	    strcat(MEGAString, "AK-47\t40 Ferros e 100 madeiras\n");
        strcat(MEGAString, "M4\t200 Ferros\n");
        strcat(MEGAString, "Katana\t50 Ferros\n");
        strcat(MEGAString, "Pa\t25 Ferros e 40 Madeiras");
    */
	else if(dialogid == D_AVALIACAO)
	{
		if(!response){
			ShowPlayerDialog(playerid, D_AVALIACAO, DIALOG_STYLE_LIST, "Avaliacao Staff", "{00FF00}Bom\n{eb680f}Medio\n{B22222}Ruim", "Avaliar", "");
			return true;
		}
		if(response){
		    if(listitem == 0)
			{
				//nota boa
                AtendL[IdAtendimento[playerid]] ++;
				pInfo[IdAtendimento[playerid]][pAtendidos]++;
				pInfo[IdAtendimento[playerid]][pBom]++;
				SendClientMessage(playerid, Verde, "[AVALIACAO] Voce avaliou nosso staff com nota: Boa. Obrigado!");
				new str[100];
				format(str, sizeof(str), "[AVALIACAO] %s(%d) te avaliou com nota [Boa]. Totalizando: %d atendimentos.", PegarNome(playerid), playerid, pInfo[IdAtendimento[playerid]][pAtendidos]);
				SendClientMessage(IdAtendimento[playerid], Verde, str);
				NoAtendimento[playerid] = false;
                NoAtendimento[IdAtendimento[playerid]] = false;
				IdAtendimento[IdAtendimento[playerid]] = -1;
                IdAtendimento[playerid] = -1;
				return true;
			}
		    if(listitem == 1)
			{
				//nota media
                AtendL[IdAtendimento[playerid]] ++;
				pInfo[IdAtendimento[playerid]][pAtendidos]++;
				pInfo[IdAtendimento[playerid]][pMedio]++;
				SendClientMessage(playerid, COR_LARANJA, "[AVALIACAO] Voce avaliou nosso staff com nota: Media. Obrigado!");
				new str[100];
				format(str, sizeof(str), "[AVALIACAO] %s(%d) te avaliou com nota [Media]. Totalizando: %d atendimentos.", PegarNome(playerid), playerid, pInfo[IdAtendimento[playerid]][pAtendidos]);
				SendClientMessage(IdAtendimento[playerid], COR_LARANJA, str);
				NoAtendimento[playerid] = false;
                NoAtendimento[IdAtendimento[playerid]] = false;
				IdAtendimento[IdAtendimento[playerid]] = -1;
                IdAtendimento[playerid] = -1;
				return true;
		    }
		    if(listitem == 2)
			{
				//nota ruim
                AtendL[IdAtendimento[playerid]] ++;
				pInfo[IdAtendimento[playerid]][pAtendidos]++;
				pInfo[IdAtendimento[playerid]][pRuim]++;
				SendClientMessage(playerid, Vermelho, "[AVALIACAO] Voce avaliou nosso staff com nota: Ruim. Obrigado!");
				new str[100];
				format(str, sizeof(str), "[AVALIACAO] %s(%d) te avaliou com nota [Ruim]. Totalizando: %d atendimentos.", PegarNome(playerid), playerid, pInfo[IdAtendimento[playerid]][pAtendidos]);
				SendClientMessage(IdAtendimento[playerid], Vermelho, str);
				NoAtendimento[playerid] = false;
                NoAtendimento[IdAtendimento[playerid]] = false;
				IdAtendimento[IdAtendimento[playerid]] = -1;
                IdAtendimento[playerid] = -1;
				return true;
		    }
		}
	}
    else if(dialogid == D_ADMCMDS)
    {
        if(!response) return 1;
        if(response)
        {
            new adm_level=listitem+1;
            switch(adm_level)
            {
                case 1://Ajudante
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Ajudante-Cmds", "{8dbc9c}/veh /vcriados /destruirv /destruirvs\n\
                    {8dbc9c}/agendarban /ban /banoff /veripoff /bannome /infobanido /contas\n\
                    {8dbc9c}/irveado /irpedra /ircaixa /irarvore /irv /ircadeia /basestaff\n\
                    {8dbc9c}/cadeia /cadeiaoff /soltar\n\
                    {8dbc9c}/destruirarvore /destruirpedra /destruircaixa /destruircraft\n\
                    {8dbc9c}/criarpedra /criararvore\n\
                    {8dbc9c}/permitirraidar /bloquearraid /ir /trazer /a /oculto /tra /av /fixar\n\
                    {8dbc9c}/respawnv /trazerv /tapa /fs /verlogin\n\
                    {8dbc9c}/verdcaixa /verdcraft /verinv /tv /sairtv /logsserver /ciclo /admskin /jetpack\n\
                    {8dbc9c}/irsenha /meusatendimentos /atendimentos /finalizar\n\
                    {8dbc9c}/atrocarsenha /kick /scan", "Informado", "");
                }
                case 2://moderador
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Moderador-Cmds", "{a6ba55}/infoclan /enquete /destruirenquete\n\
                    {a6ba55}/clima /entrarv /desbanip /bchat /vercmds /verip /repararv /avg\n\
                    {a6ba55}/congelar /descongelar/limparchat /ls /safels /saferoca /sf /lv /desbanir", "Informado", "");
                }
                case 3://Administrador
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Administrador-Cmds", "{00faec}/criarevento /abrirevento /iniciar /fecharevento /destruirevento /removerevento\n\
                    {00faec}/reanimar /setarvida /trazertodos /dararmas /resetararmas /ircord\n\
                    {00faec}/criarrank /deletarrank /atualizarrank /ativarair /teleairdrop", "Informado", "");
                }
                case 4://Master-Administrador
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Master-Admin-Cmds", "{da004e}/destruircaixas /destruircrafts /destarmas\n\
                    {da004e}/reloot /gmx /editarplayer", "Informado", "");
                }
                case 5://Gerente
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Gerente-Cmds", "{533db0}/resetarinv /trazercaixa /speed /fakecmd\n\
                    {533db0}/criarveado /destruirveado /destruirtriturador\n\
                    {533db0}/tirarstaff /tirarstaffoff /daradmin /tirarliderc /darliderc", "Informado", "");
                }
                case 6://Sub-Fundador
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Sub-Fundador-Cmds", "{ae6800}/amudarnick /matar /destruirveh", "Informado", "");
                }
                case 7://Fundador
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Fundador-Cmds", "{356c58}[NADA POR AQUI]", "Informado", "");
                }
                case 8://Sub-Dono
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Sub-Dono-Cmds", "{125363}[NADA POR AQUI]", "Informado", "");
                }
                case 9://Dono
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Dono-Cmds", "{ffb3d3}/kickart /liberarcaixa /bloquearcaixa /tapao", "Informado", "");
                }
                case 10://Dono-Geral
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Dono Geral-Cmds", "{ff5596}/darvipall /darvip /darvipt /rconta\n\
                    {ff5596}/conta /criarkey /atrocarnick /daradmin /daryt /tiraryt /tirarvip /joaozinho\n\
                    {ff5596}/criaritem /deletelogs", "Informado", "");
                }
            }
        }
    }
	else if(dialogid == CLIMA) // Menu
	{
		if(response)
		{
	  		if(listitem == 0) // Clima
			{
				ShowPlayerDialog(playerid, CLIMA+1, DIALOG_STYLE_LIST, "Clima", "Ensolarado \nTemporal \nNublado \nCeu Verde \nTempestade de Areia \nEscuro \nQuente \nVoltar", "Selecionar", "Cancelar");
			}
			if(listitem == 1) // Hora
			{
				ShowPlayerDialog(playerid, CLIMA+2, DIALOG_STYLE_LIST, "Hora", "1:00 \n3:00 \n5:00 \n7:00 \n9:00 \n11:00 \n13:00 \n15:00 \n17:00 \n19:00 \n21:00 \n23:00 \nVoltar", "Selecionar", "Cancelar");
			}
		}
		return 1;
	}
	else if(dialogid == CLIMA+1) // Clima
	{
		if(response)
		{
			if(listitem == 0) // Ensolarado
			{
			SetWeather(5);
			}
			if(listitem == 1) // Temporal
			{
			SetWeather(8);
			}
			if(listitem == 2) // Nublado
			{
			SetWeather(9);
			}
			if(listitem == 3) // Ceu Verde
			{
			SetWeather(10);
			}
			if(listitem == 4) // Tempestade de Areia
			{
			SetWeather(19);
			}
			if(listitem == 5) // Escuro
			{
			SetWeather(45);
			}
			if(listitem == 6) // Quente
			{
			SetWeather(11);
			}
			if(listitem == 7) // Voltar
			{
			ShowPlayerDialog(playerid, CLIMA, DIALOG_STYLE_LIST, "Ambr*sio Clima/Hora System", "Clima \nHora", "Selecionar", "Cancelar");
			}
		}
		return 1;
	}
	else if(dialogid == CLIMA+2) // Hora
	{
		if(response)
		{
			if(listitem == 0) //
			{
			    SetPlayerTime(playerid,1,0);
			}
			if(listitem == 1) //
			{
			    SetPlayerTime(playerid,3,0);
			}
			if(listitem == 2) //
			{
			    SetPlayerTime(playerid,5,0);
			}
			if(listitem == 3) //
			{
			    SetPlayerTime(playerid,7,0);
			}
			if(listitem == 4) //
			{
			    SetPlayerTime(playerid,9,0);
			}
			if(listitem == 5) //
			{
			    SetPlayerTime(playerid,11,0);
			}
			if(listitem == 6) //
			{
			    SetPlayerTime(playerid,13,0);
			}
			if(listitem == 7) //
			{
			    SetPlayerTime(playerid,15,0);
			}
			if(listitem == 8) //
			{
			    SetPlayerTime(playerid,17,0);
			}
			if(listitem == 9) //
			{
			    SetPlayerTime(playerid,19,0);
			}
			if(listitem == 10) //
			{
			    SetPlayerTime(playerid,21,0);
			}
			if(listitem == 11) //
			{
			    SetPlayerTime(playerid,23,0);
			}
			if(listitem == 12) //
			{
			    ShowPlayerDialog(playerid, CLIMA, DIALOG_STYLE_LIST, "Ambr*sio Clima/Hora System", "Clima \nHora", "Selecionar", "Cancelar");
			}
		}
		return 1;
	}
    else if(dialogid == D_DDSPORTAO)
	{
		if(!response)
        {
            ShowPlayerDialog(playerid, D_DDSPORTAO, DIALOG_STYLE_INPUT, "{FFFF00}Definir Senha Porta/Portao", "{FFFFFF}Digite {FFFF00}Abaixo {FFFFFF} uma senha para essa porta/portao\n\
            {B22222}A senha deve conter de 1 a 50 caracteres\n\
            {B22222}OBS: Sera cobrado 5.000 $!", "Confirmar", #);
            return 1;
        }
		if(response)
		{
            if(strlen(inputtext) < 1 || strlen(inputtext) > 50)
            {
                ShowPlayerDialog(playerid, D_DDSPORTAO, DIALOG_STYLE_INPUT, "{FFFF00}Definir Senha Porta/Portao", "{FFFFFF}Digite {FFFF00}Abaixo {FFFFFF} uma senha para essa porta/portao\n\
                {B22222}A senha deve conter de 1 a 50 caracteres\n\
                {B22222}OBS: Sera cobrado 5.000 $!", "Confirmar", #);
                return 1;
            }
            if(pInfo[playerid][pDinheiro] < 5000) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui 5.000 $!");
			new id = idporta[playerid];
			format(CraftInfo[id][Senha], 60, inputtext);
			SendClientMessage(playerid, 0xFFFF00FF, "[PORTAO/PORTA] Senha definida com sucesso!");
            SetPlayerMoney(playerid, -5000);
		}
	}
	else if(dialogid == D_DSENHAPORTAO)
	{
		if(!response)
        {
            ShowPlayerDialog(playerid, D_DSENHAPORTAO, DIALOG_STYLE_INPUT, "{FFFF00}Definir Senha Porta/Portao", "{FFFFFF}Digite {FFFF00}Abaixo {FFFFFF} uma senha para essa porta/portao\n\
            {B22222}A senha deve conter de 1 a 50 caracteres\n\
            {B22222}OBS: Caso esqueca a senha ou queira trocar, sera cobrado 5.000 $!", "Confirmar", #);
            return 1;
        }
		if(response)
		{
            if(strlen(inputtext) < 1 || strlen(inputtext) > 50)
            {
                ShowPlayerDialog(playerid, D_DSENHAPORTAO, DIALOG_STYLE_INPUT, "{FFFF00}Definir Senha Porta/Portao", "{FFFFFF}Digite {FFFF00}Abaixo {FFFFFF} uma senha para essa porta/portao\n\
                {B22222}A senha deve conter de 1 a 50 caracteres\n\
                {B22222}OBS: Caso esqueca a senha ou queira trocar, sera cobrado 5.000 $!", "Confirmar", #);
                return 1;
            }
			new id = idporta[playerid];
			format(CraftInfo[id][Senha], 60, inputtext);
			SendClientMessage(playerid, 0xFFFF00FF, "[PORTAO/PORTA] Senha definida com sucesso!");
            ideditorp[playerid] = id;
            if(!strcmp(PegarNome(playerid), CraftInfo[id][Dono]) && Plataforma[playerid] == 1)
            {
		        SendClientMessage(playerid, Vermelho, "[CRAFT] Editando...");
	            SetPVarInt(playerid, "EditandoParede", 999);
		        EditDynamicObject(playerid, CraftInfo[id][ObjectJ]);
		        EditandoCraftInfo[playerid] = true;
	        }
	        if(!strcmp(PegarNome(playerid), CraftInfo[id][Dono]) && Plataforma[playerid] == 0)
	        {
                EditandoStyle[playerid] = Style_Craft;
		        ShowEditorParede(playerid);
	        }
		}
	}
	else if(dialogid == D_ABRIRPORTAO)
	{
        if(!response) return 1;
		if(response)
		{
		    if(!strlen(inputtext)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Digite algo.");
			new id = idporta[playerid];
			if(CraftInfo[id][Fechada] == false) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Esta Porta ja esta aberta.");
            if(strcmp(CraftInfo[id][Senha], inputtext)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Senha incorreta.");
			DestroyDynamicObject(CraftInfo[id][ObjectJ]);
			CraftInfo[id][Fechada] = false;
			SendTXDMessage(playerid, "Porta/Portao_Aberto!");
		}
	}
	else if(dialogid == 2100)
	{
		if(!response)return 1;
	    switch(listitem)
	    {
	        case 0:
	        {
	            ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_MSGBOX, "Rank: Kills", getrank("Kills", "Kills"), "Sair", "");
	        }
	        case 1:
	        {
	            ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_MSGBOX, "Rank: Mortes", getrank("Mortes", "Mortes"), "Sair", "");
	        }
	        case 2:
	        {
	            ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_MSGBOX, "Rank: Dinheiro", getrank("Dinheiro", "Dinheiro"), "Sair", "");
	        }
	        case 3:
	        {
	            ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_MSGBOX, "Rank: Madeiras", getrank("Madeiras", "Madeiras"), "Sair", "");
	        }
	        case 4:
	        {
	            ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_MSGBOX, "Rank: Ferros", getrank("Ferros", "Ferros"), "Sair", "");
	        }
	        case 5:
	        {
	            ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_MSGBOX, "Rank: Score", getrank("Score", "Score"), "Sair", "");
	        }
            case 6:
            {
                ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_MSGBOX, "Rank: Horas Jogadas", getrank("HorasJ", "Horas Jogadas"), "Sair", "");
            }
            case 7:
            {
                ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_MSGBOX, "Rank: Tempo Vivo", getrank("TempoVivo", "Tempo Vivo"), "Sair", "");
            }
            case 8:
            {
                ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_MSGBOX, "Rank: Zumbi Killer", getrank("ZKiller", "Kills Zumbi"), "Sair", "");
            }
	        /*case 9:
	        {
	            ShowPlayerDialog(playerid, 2102, DIALOG_STYLE_LIST, "Rank Clans", "{6cb827} >> Kills\n{6cb827} >> Mortes", "Ver", "Fechar");
	        }*/

	    }
	}
	else if(dialogid == 2102)
	{
		if(!response)
		{
			return true;
		}
		if(response)
		{
			switch(listitem)
			{
				/*case 0:
		        {
		            ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_MSGBOX, "Rank Clan: Kills", getrank("KillsC", "Kills"), "Sair", "");
		        }
		        case 1:
		        {
		            ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_MSGBOX, "Rank Clan: Mortes", getrank("MortesC", "Mortes"), "Sair", "");
		        }*/
	        }
		}
	}
    else if(dialogid == D_ESCOLHASKIN){
        if(!response) return 1;
        if(response)       
        {
            if(strval(inputtext) < 1 || strval(inputtext) > 311 || strval(inputtext) == 74){
                ShowPlayerDialog(playerid, D_ESCOLHASKIN, DIALOG_STYLE_INPUT, "{00FF00}Escolha de skin:", "Digite abaixo o ID da Skin,\n\
                Que voce deseja comprar.\n\
                Skins de 1 a 311, exceto 74.", "Escolher", "Cancelar");
                return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} ID Invalido. Ids de 1 a 311, exceto 74.");
            }
            SkinSelected[playerid] = strval(inputtext);
            UpdateTXDSkinSafe(playerid);
        }
    }
	else if(dialogid == D_CONFSKIN)
	{
		if(!response) return 1;
		if(response)
		{
			if(pInfo[playerid][pDinheiro] < 10000) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem 10000 Dinheiro para comprar essa skin.");
			if(SkinSelected[playerid] == 211 || SkinSelected[playerid] == 217) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Essa Skin e de Staff, portanto e proibido o uso da mesma.");
            SetPlayerMoney(playerid, -10000);
			pInfo[playerid][pSkin] = SkinSelected[playerid];
			SetPlayerSkin(playerid, pInfo[playerid][pSkin]);
			SendClientMessage(playerid, Verde, "[SAFE] {FFFFFF}Voce comprou essa skin permanente por {6cb827}10.000 $.");
		}
	}
	else if(dialogid == 2200)
	{
		if(!response) return 1;
		switch (listitem)
		{
		    case 0:
		    {
                new itemd, quantiaitemd;
                itemd = AirDropEnum2[idairdrop][Item1];
                quantiaitemd = AirDropEnum2[idairdrop][QItem1];
                if(quantiaitemd < 1)
		            return SendClientMessage(playerid, Verde, "* Nao existem unidades dispon*veis.");
		        
                if(VerMochila(playerid, quantiaitemd)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
		        
                AddItem(playerid, itemd, quantiaitemd);
		        MensagemFormatada(playerid, 0xFF8C00FF, "* {FFFFFF}Voce pegou %d Unidades de {FF8C00}%s!",quantiaitemd, GetNameItemY(itemd));
				if(pInfo[playerid][pAdmin] >= 1)
				{
			        new str[128];
		            format(str, 128, "| AVISO | {FFFFFF}O admin %s pegou %d Unidades de {FF8C00}%s!", PegarNome(playerid), quantiaitemd, GetNameItemY(itemd));
		            SendClientMessageToAll(Vermelho, str);
		        }
		        AirDropEnum2[idairdrop][Item1] = -1;
                AirDropEnum2[idairdrop][QItem1] = 0;
			}
            case 1:
		    {
                new itemd, quantiaitemd;
                itemd = AirDropEnum2[idairdrop][Item2];
                quantiaitemd = AirDropEnum2[idairdrop][QItem2];
                if(quantiaitemd < 1)
		            return SendClientMessage(playerid, Verde, "* Nao existem unidades dispon*veis.");
		        
                if(VerMochila(playerid, quantiaitemd)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
		        
                AddItem(playerid, itemd, quantiaitemd);
		        MensagemFormatada(playerid, 0xFF8C00FF, "* {FFFFFF}Voce pegou %d Unidades de {FF8C00}%s!",quantiaitemd, GetNameItemY(itemd));
				if(pInfo[playerid][pAdmin] >= 1)
				{
			        new str[128];
		            format(str, 128, "| AVISO | {FFFFFF}O admin %s pegou %d Unidades de {FF8C00}%s!", PegarNome(playerid), quantiaitemd, GetNameItemY(itemd));
		            SendClientMessageToAll(Vermelho, str);
		        }
		        AirDropEnum2[idairdrop][Item2] = -1;
                AirDropEnum2[idairdrop][QItem2] = 0;
			}
            case 2:
		    {
                new itemd, quantiaitemd;
                itemd = AirDropEnum2[idairdrop][Item3];
                quantiaitemd = AirDropEnum2[idairdrop][QItem3];
                if(quantiaitemd < 1)
		            return SendClientMessage(playerid, Verde, "* Nao existem unidades dispon*veis.");
		        
                if(VerMochila(playerid, quantiaitemd)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
		        
                AddItem(playerid, itemd, quantiaitemd);
		        MensagemFormatada(playerid, 0xFF8C00FF, "* {FFFFFF}Voce pegou %d Unidades de {FF8C00}%s!",quantiaitemd, GetNameItemY(itemd));
				if(pInfo[playerid][pAdmin] >= 1)
				{
			        new str[128];
		            format(str, 128, "| AVISO | {FFFFFF}O admin %s pegou %d Unidades de {FF8C00}%s!", PegarNome(playerid), quantiaitemd, GetNameItemY(itemd));
		            SendClientMessageToAll(Vermelho, str);
		        }
		        AirDropEnum2[idairdrop][Item3] = -1;
                AirDropEnum2[idairdrop][QItem3] = 0;
			}
            case 3:
		    {
                new itemd, quantiaitemd;
                itemd = AirDropEnum2[idairdrop][Item4];
                quantiaitemd = AirDropEnum2[idairdrop][QItem4];
                if(quantiaitemd < 1)
		            return SendClientMessage(playerid, Verde, "* Nao existem unidades dispon*veis.");
		        
                if(VerMochila(playerid, quantiaitemd)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
		        
                AddItem(playerid, itemd, quantiaitemd);
		        MensagemFormatada(playerid, 0xFF8C00FF, "* {FFFFFF}Voce pegou %d Unidades de {FF8C00}%s!",quantiaitemd, GetNameItemY(itemd));
				if(pInfo[playerid][pAdmin] >= 1)
				{
			        new str[128];
		            format(str, 128, "| AVISO | {FFFFFF}O admin %s pegou %d Unidades de {FF8C00}%s!", PegarNome(playerid), quantiaitemd, GetNameItemY(itemd));
		            SendClientMessageToAll(Vermelho, str);
		        }
		        AirDropEnum2[idairdrop][Item4] = -1;
                AirDropEnum2[idairdrop][QItem4] = 0;
			}
            case 4:
		    {
                new itemd, quantiaitemd;
                itemd = AirDropEnum2[idairdrop][Item5];
                quantiaitemd = AirDropEnum2[idairdrop][QItem5];
                if(quantiaitemd < 1)
		            return SendClientMessage(playerid, Verde, "* Nao existem unidades dispon*veis.");
		        
                if(VerMochila(playerid, quantiaitemd)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
		        
                AddItem(playerid, itemd, quantiaitemd);
		        MensagemFormatada(playerid, 0xFF8C00FF, "* {FFFFFF}Voce pegou %d Unidades de {FF8C00}%s!",quantiaitemd, GetNameItemY(itemd));
				if(pInfo[playerid][pAdmin] >= 1)
				{
			        new str[128];
		            format(str, 128, "| AVISO | {FFFFFF}O admin %s pegou %d Unidades de {FF8C00}%s!", PegarNome(playerid), quantiaitemd, GetNameItemY(itemd));
		            SendClientMessageToAll(Vermelho, str);
		        }
		        AirDropEnum2[idairdrop][Item5] = -1;
                AirDropEnum2[idairdrop][QItem5] = 0;
			}
            case 5:
		    {
                new itemd, quantiaitemd;
                itemd = AirDropEnum2[idairdrop][Item6];
                quantiaitemd = AirDropEnum2[idairdrop][QItem6];
                if(quantiaitemd < 1)
		            return SendClientMessage(playerid, Verde, "* Nao existem unidades dispon*veis.");
		        
                if(VerMochila(playerid, quantiaitemd)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
		        
                AddItem(playerid, itemd, quantiaitemd);
		        MensagemFormatada(playerid, 0xFF8C00FF, "* {FFFFFF}Voce pegou %d Unidades de {FF8C00}%s!",quantiaitemd, GetNameItemY(itemd));
				if(pInfo[playerid][pAdmin] >= 1)
				{
			        new str[128];
		            format(str, 128, "| AVISO | {FFFFFF}O admin %s pegou %d Unidades de {FF8C00}%s!", PegarNome(playerid), quantiaitemd, GetNameItemY(itemd));
		            SendClientMessageToAll(Vermelho, str);
		        }
		        AirDropEnum2[idairdrop][Item6] = -1;
                AirDropEnum2[idairdrop][QItem6] = 0;
			}
            case 6:
		    {
                new itemd, quantiaitemd;
                itemd = AirDropEnum2[idairdrop][Item7];
                quantiaitemd = AirDropEnum2[idairdrop][QItem7];
                if(quantiaitemd < 1)
		            return SendClientMessage(playerid, Verde, "* Nao existem unidades dispon*veis.");
		        
                SetPlayerMoney(playerid, quantiaitemd);
		        MensagemFormatada(playerid, 0xFF8C00FF, "* {FFFFFF}Voce pegou %d Unidades de {FF8C00}%s!",quantiaitemd, GetNameItemY(itemd));
				if(pInfo[playerid][pAdmin] >= 1)
				{
			        new str[128];
		            format(str, 128, "| AVISO | {FFFFFF}O admin %s pegou %d Unidades de {FF8C00}%s!", PegarNome(playerid), quantiaitemd, GetNameItemY(itemd));
		            SendClientMessageToAll(Vermelho, str);
		        }
		        AirDropEnum2[idairdrop][Item7] = -1;
                AirDropEnum2[idairdrop][QItem7] = 0;
			}
		}
	}
	else if(dialogid == D_COINS)
	{
        if(!response) return 1;
		switch(listitem)
		{
		    case 0:
		    {
                new str[100];
                MEGAString[0] = EOS;
            	strcat(MEGAString, "Itens\tDias\tPreco\n");
                format(str, sizeof(str), "{B22222}Meu Coins: %d\n", pInfo[playerid][pCoins]);
                strcat(MEGAString, str);
                strcat(MEGAString, "{FFFF00}Vip\t{FFFFFF}45\t{33AA33}15 Coins\n");
                strcat(MEGAString, "{FFFF00}Vip\t{FFFFFF}30\t{33AA33}10 Coins\n");
                strcat(MEGAString, "{B22222}Troca Nick\t{FFFFFF}Expira no Proximo Login\t{33AA33}5 Coins");
                ShowPlayerDialog(playerid, D_COINS, DIALOG_STYLE_TABLIST_HEADERS, "Loja Day Of Survival", MEGAString, "Comprar", "Cancelar");
		    }
		    case 1:
		    {
                if(pInfo[playerid][pCoins] < 15) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem coins o suficiente.");
		        SetPlayerCoin(playerid, -15);
                SetPlayerMoney(playerid, 25000);
                SetarVip(playerid, 45);
		        return 1;
		    }
		    case 2:
		    {
                if(pInfo[playerid][pCoins] < 10) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem coins o suficiente.");
		        SetPlayerCoin(playerid, -10);
                SetPlayerMoney(playerid, 15000);
                SetarVip(playerid, 30);
		        return 1;
		    }
		    case 3:
            {
                /*if(pInfo[playerid][pCoins] < 5) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem coins o suficiente.");
                PermNick[playerid] = true;
                pInfo[playerid][pCoins] -= 5;*/
		        SendClientMessage(playerid, COR_ADMIN, "* Este item foi desativado temporariamente.");
		        SendClientMessage(playerid, COR_ADMIN, "* Em breve voltara! OBS: Voce nao perdeu seus coins!");
		        return 1;
		    }
		}
	}
	else if(dialogid == 2300)
	{
		if(!response) return 1;
		switch(listitem)
		{
		    case 0: SetPlayerPosEx(playerid, 215.398437, 1901.633789, 23.5);
		    case 1: SetPlayerPosEx(playerid, 1755.343261, 1457.519409, 18.2);
		    case 2: SetPlayerPosEx(playerid, 2494.0974,-279.7162, 23.4);
		    case 3: SetPlayerPosEx(playerid, 2273.487792, -1069.818359, 53.9);
		    case 4: SetPlayerPosEx(playerid, 792.841674, 1102.588378, 36.9);
		    case 5: SetPlayerPosEx(playerid, -1977.0120,289.0115,41.5719);//antiga safe
		    case 6: SetPlayerPosEx(playerid, 1563.7526,-2543.8713,13.5469);//aeroporto ls
		    case 7: SetPlayerPosEx(playerid, -785.4116,-921.1522,105.5182);//morro random
		}
	}
	else if(dialogid == D_PLANTANDOB)
	{
		if(!response){
			return 1;
		}
        if(response){
            new id = listitem;
            idparedebomb[playerid] = IdCraftRaid[playerid][id];
            if(IdCraftRaid[playerid][id] == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Algo deu errado.");
            new Float:XX, Float:YY, Float:ZZ;
    		GetDynamicObjectPos(CraftInfo[id][ObjectJ], XX, YY, ZZ);
    		SetPlayerFacingAngleToPos(playerid, XX, YY);
        	TogglePlayerControllable(playerid, 0);
    		ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
        	ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
    		GameTextForPlayer(playerid, "~r~Plantando bomba...", 2500, 4);
    		SetTimerEx("Platandobomba", 5000, false, "i",playerid);
    		
            switch(BombaUsada[playerid]){
                case BOMBAGALAO: RemoveItem(playerid, 82, 1);
                case BOMBADINAMITE: RemoveItem(playerid, 67, 1);
                case BOMBAC4: RemoveItem(playerid, 81, 1);
            }
        }
    }
	else if(dialogid == D_SAFEZONE)
	{
		if(response)
		{
            if(listitem == 0){
                ShowPlayerDialog(playerid, D_SAFEZONE, DIALOG_STYLE_LIST, "Zona Segura", "{840f15}O que deseja fazer?\n\
                {FFFFFF}Comprar\n\
                Vender", "Selecionar", "Fechar");
            }
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, D_COMPRAR_SAFE, DIALOG_STYLE_LIST, "Zona Segura - Comprar", "{840f15}O que voce deseja comprar?\n\
                {FFFFFF}Armas\n\
                Municoes\n\
                Roupas\n\
                Comidas/Bebidas\n\
			    Materiais", "Selecionar", "Voltar");
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, D_VENDER_SAFE, DIALOG_STYLE_LIST, "Zona Segura - Vender", "{840f15}O que voce deseja vender?\n\
                Municoes\n\
                Itens\n\
                Materiais", "Selecionar", "Voltar");
			}
		}
	}
	else if(dialogid == D_COMPRAR_SAFE)//compra
	{
		if(response)
		{
            if(listitem == 0){
                ShowPlayerDialog(playerid, D_COMPRAR_SAFE, DIALOG_STYLE_LIST, "Zona Segura - Comprar", "{840f15}O que voce deseja comprar?\n\
                {FFFFFF}Armas\n\
                Municoes\n\
                Roupas\n\
                Comidas/Bebidas\n\
	            Materiais", "Selecionar", "Voltar");
            }
			if(listitem == 1)//arma
			{
				ShowPlayerDialog(playerid, D_COMPRAR_AEM, DIALOG_STYLE_LIST, "Zona Segura - Comprar Armas", "{FFFFFF}Pump Shotgun || {33AA33}$ 8000\n\
                {FFFFFF}Ak-47 || {33AA33}$ 7.500\n\
                {FFFFFF}Desert-Eagle || {33AA33}$ 6.500\n\
                {FFFFFF}MP5 || {33AA33}$ 5.300", "Comprar", "Voltar");
			}
			if(listitem == 2)//municao
			{
				ShowPlayerDialog(playerid, D_COMPRAR_MUNI, DIALOG_STYLE_LIST, "Zona Segura - Comprar Municoes", "{FFFFFF}Municao 9mm - 30 Unidades || {33AA33}$ 1000\n\
                {FFFFFF}Municao SMG - 30 Municoes || {33AA33}$ 2.600\n\
                {FFFFFF}Municao Escopeta - 30 municoes || {33AA33}$ 3.000\n\
                {FFFFFF}Municao AR - 30 municoes || {33AA33}$ 3.500\n\
                {FFFFFF}Municao Rifle - 10 Municoes || {33AA33}$ 3.600\n\
                {FFFFFF}Municao.50 - 30 Municoes || {33AA33}$ 3.200", "Comprar", "Voltar");
			}
            if(listitem == 3)//roupa
            {
                ShowTXDSkinSafe(playerid); 
            }
            if(listitem == 4)//comidas e...
            {
                ShowPlayerDialog(playerid, D_COMIDABEBIDA, DIALOG_STYLE_LIST, "Zona Segura - Comprar Comida/Bebida", "{FFFFFF}Comidas\n\
                {FFFFFF}Bebidas", "Selecionar", "Voltar");
            }
            if(listitem == 5)//materiais
            {
                ShowPlayerDialog(playerid, D_VENDAMAT, DIALOG_STYLE_LIST, "Zona Segura - Comprar Materiais", "{FFFFFF}Madeira\t{33AA33}$1 {FFFFFF}Cada.\n\
                {FFFFFF}Ferros\t{33AA33}$2 {FFFFFF}Cada.", "Selecionar", "Voltar");
            }
		}else{            
            ShowPlayerDialog(playerid, D_SAFEZONE, DIALOG_STYLE_LIST, "Zona Segura", "{840f15}O que deseja fazer?\n\
            {FFFFFF}Comprar\n\
            Vender", "Selecionar", "Fechar");
        }
	}
    else if(dialogid == D_VENDAMAT)
    {
        if(response)
		{
            if(listitem == 0)//madeiras comprar 1 real
            {
                ShowPlayerDialog(playerid, D_VENDAMADEIRA, DIALOG_STYLE_INPUT, "Zona Segura - Comprar Madeiras", "{FFFFFF}Digite o valor que voce deseja comprar\n\
                {FFFFFF}Cada madeira tem o valor de {33AA33}$ 1\n\
                {FF0000}OBS: Minimo: 100 - Maximo: 100.000", "Comprar", "Voltar");
            }else if(listitem == 1)//ferros comprar 2 real
            {
                ShowPlayerDialog(playerid, D_VENDAFERRO, DIALOG_STYLE_INPUT, "Zona Segura - Comprar Ferros", "{FFFFFF}Digite o valor que voce deseja comprar\n\
                {FFFFFF}Cada Ferro tem o valor de {33AA33}$ 2\n\
                {FF0000}OBS: Minimo: 100 - Maximo: 100.000", "Comprar", "Voltar");
            }
		}else{               
            ShowPlayerDialog(playerid, D_COMPRAR_SAFE, DIALOG_STYLE_LIST, "Zona Segura - Comprar", "{840f15}O que voce deseja comprar?\n\
            {FFFFFF}Armas\n\
            Municoes\n\
            Roupas\n\
            Comidas/Bebidas\n\
            Materiais", "Selecionar", "Voltar");
        }
    }
    else if(dialogid == D_VENDAMADEIRA){
        new madeiras = strval(inputtext);
        if(response)
        {
            if(madeiras < 100 || madeiras > 100000) {
                ShowPlayerDialog(playerid, D_VENDAMADEIRA, DIALOG_STYLE_INPUT, "Zona Segura - Comprar Madeiras", "{FFFFFF}Digite o valor que voce deseja comprar\n\
                {FFFFFF}Cada madeira tem o valor de {33AA33}$ 1\n\
                {FF0000}OBS: Minimo: 100 - Maximo: 100.000", "Comprar", "Voltar");
                return true;
            }
            if(pInfo[playerid][pDinheiro] < madeiras) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem dinheiro o suficiente.");
            SetPlayerMadeira(playerid, madeiras);
            SetPlayerMoney(playerid, -madeiras);

            new str[100];
            format(str, sizeof str, "* {FFFFFF}Compra de Madeiras efetuada com sucesso. Valor: {33AA33}$ %d", madeiras);
            SendClientMessage(playerid, Verde, str);
        }else {            
            ShowPlayerDialog(playerid, D_VENDAMAT, DIALOG_STYLE_LIST, "Zona Segura - Comprar Materiais", "{FFFFFF}Madeira\t{33AA33}$1 {FFFFFF}Cada.\n\
            {FFFFFF}Ferros\t{33AA33}$2 {FFFFFF}Cada.", "Selecionar", "Voltar");
        }
    }
    else if(dialogid == D_VENDAFERRO){
        new ferros = strval(inputtext);
        if(response)
        {
            if(ferros < 100 || ferros > 100000) {
                ShowPlayerDialog(playerid, D_VENDAFERRO, DIALOG_STYLE_INPUT, "Zona Segura - Comprar Ferros", "{FFFFFF}Digite o valor que voce deseja comprar\n\
                {FFFFFF}Cada Ferro tem o valor de {33AA33}$ 2\n\
                {FF0000}OBS: Minimo: 100 - Maximo: 100.000", "Comprar", "Voltar");
                return true;
            }
            if(pInfo[playerid][pDinheiro] < ferros*2) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem dinheiro o suficiente.");
            SetPlayerFerro(playerid, ferros);
            SetPlayerMoney(playerid, -ferros*2);

            new str[100];
            format(str, sizeof str, "* {FFFFFF}Compra de %d Ferros efetuada com sucesso. Valor: {33AA33}$ %d", ferros, ferros*2);
            SendClientMessage(playerid, Verde, str);
        }else {            
            ShowPlayerDialog(playerid, D_VENDAMAT, DIALOG_STYLE_LIST, "Zona Segura - Comprar Materiais", "{FFFFFF}Madeira\t{33AA33}$1 {FFFFFF}Cada.\n\
            {FFFFFF}Ferros\t{33AA33}$2 {FFFFFF}Cada.", "Selecionar", "Voltar");
        }
    }
    else if(dialogid == D_COMIDABEBIDA)   
    {
        if(response)
		{
            if(listitem == 0)//comidas
            {
                ShowVendaAlimentoDialog(playerid, 1);//dialog comida
            }
            else if(listitem == 1)//bebidas
            {
                ShowVendaAlimentoDialog(playerid, 2);//dialog bebida
            }
		}else{               
            ShowPlayerDialog(playerid, D_COMPRAR_SAFE, DIALOG_STYLE_LIST, "Zona Segura - Comprar", "{840f15}O que voce deseja comprar?\n\
            {FFFFFF}Armas\n\
            Municoes\n\
            Roupas\n\
            Comidas/Bebidas\n\
	        Materiais", "Selecionar", "Voltar");
        }
    }
    else if(dialogid == D_VENDACOMIDA)
    {
        new id = listitem;
        if(response)
        {
            new valor=ComidasVenda[id][AlimentoValor];
            if(pInfo[playerid][pDinheiro] < valor) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem dinheiro o suficiente.");
            if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
            SetPlayerMoney(playerid, -valor);
            AddItem(playerid, ComidasVenda[id][AlimentoID],1);
            
            new str[100];
            format(str, sizeof str, "* {FFFFFF}Compra de %s efetuada com sucesso. Valor: {33AA33}$ %d", ItemInfo[ComidasVenda[id][AlimentoID]][Item_Name], valor);
            SendClientMessage(playerid, Verde, str);
        }else {           
            ShowPlayerDialog(playerid, D_COMIDABEBIDA, DIALOG_STYLE_LIST, "Zona Segura - Comprar Comida/Bebida", "{FFFFFF}Comidas\n\
            {FFFFFF}Bebidas", "Selecionar", "Voltar");
        }
    }
    else if(dialogid == D_VENDABEBIDA)
    {
        new id = listitem;
        if(response)
        {
            new valor=BebidasVenda[id][AlimentoValor];
            if(pInfo[playerid][pDinheiro] < valor) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem dinheiro o suficiente.");
            if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
            SetPlayerMoney(playerid, -valor);
            AddItem(playerid, BebidasVenda[id][AlimentoID],1);
            
            
            new str[100];
            format(str, sizeof str, "* {FFFFFF}Compra de %s efetuada com sucesso. Valor: {33AA33}$ %d", ItemInfo[BebidasVenda[id][AlimentoID]][Item_Name], valor);
            SendClientMessage(playerid, Verde, str);
        }else {           
            ShowPlayerDialog(playerid, D_COMIDABEBIDA, DIALOG_STYLE_LIST, "Zona Segura - Comprar Comida/Bebida", "{FFFFFF}Comidas\n\
            {FFFFFF}Bebidas", "Selecionar", "Voltar");
        }
    }
	else if(dialogid == D_COMPRAR_AEM)
	{
		if(response)
		{
			if(listitem == 0) //Ao clickar no primeiro item
            {
                if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
				if(pInfo[playerid][pDinheiro] < 8000) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao possui Dinheiro suficientes");
                SetPlayerMoney(playerid, -8000);
                AddItem(playerid, 62, 1);//pump shotgun
    			SendClientMessage(playerid, Verde, "* {FFFFFF}Compra Efetuada");
            }
            if(listitem == 1) //Ao clickar no segundo item
            {
                if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
            	if(pInfo[playerid][pDinheiro] < 7500) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao possui Dinheiro suficientes");
                SetPlayerMoney(playerid, -7500);
                AddItem(playerid, 65, 1);//ak 47
    			SendClientMessage(playerid, Verde, "* {FFFFFF}Compra Efetuada");
            }
            if(listitem == 2) //Ao clickar no terceiro item
            {
                if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
            	if(pInfo[playerid][pDinheiro] < 6500) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao possui Dinheiro suficientes");
                SetPlayerMoney(playerid, -6500);
                AddItem(playerid, 29, 1);//PISTOLA. 50
				SendClientMessage(playerid, Verde, "* {FFFFFF}Compra Efetuada");
            }
			if(listitem == 3) //Ao clickar no quarto item
            {
                if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
				if(pInfo[playerid][pDinheiro] < 5300) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao possui Dinheiro suficientes");
                SetPlayerMoney(playerid, -5300);
                AddItem(playerid, 32, 1);//MP5
    			SendClientMessage(playerid, Verde, "* {FFFFFF}Compra Efetuada");
            }
		}else{               
            ShowPlayerDialog(playerid, D_COMPRAR_SAFE, DIALOG_STYLE_LIST, "Zona Segura - Comprar", "{840f15}O que voce deseja comprar?\n\
            {FFFFFF}Armas\n\
            Municoes\n\
            Roupas\n\
            Comidas/Bebidas\n\
            Materiais", "Selecionar", "Voltar");
        }
	}

    else if(dialogid == D_VENDERMUNI){
        if(response){
            switch(listitem)
            {
                case 0://9mm
                {
                    if(!PlayerHasItem(playerid, 72)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem [Municao 9mm] no inventario para vender.");
                    SetPlayerMoney(playerid, 500);
                    RemoveItem(playerid, 72, 1);
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
                }
                case 1://SMG
                {
                    if(!PlayerHasItem(playerid, 73)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem [Municao SMG] no inventario para vender.");
                    SetPlayerMoney(playerid, 550);
                    RemoveItem(playerid, 73, 1);
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
                }
                case 2://escopeta
                {
                    if(!PlayerHasItem(playerid, 74)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem [Municao Escopeta] no inventario para vender.");
                    SetPlayerMoney(playerid, 600);
                    RemoveItem(playerid, 74, 1);
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
                }
                case 3://ar
                {
                    if(!PlayerHasItem(playerid, 75)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem [Municao AR] no inventario para vender.");
                    SetPlayerMoney(playerid, 630);
                    RemoveItem(playerid, 75, 1);
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
                }
                case 4://rifle
                {
                    if(!PlayerHasItem(playerid, 76)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem [Municao Rifle] no inventario para vender.");
                    SetPlayerMoney(playerid, 750);
                    RemoveItem(playerid, 76, 1);
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
                }
                case 5://.50
                {
                    if(!PlayerHasItem(playerid, 77)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem [Municao .50] no inventario para vender.");
                    SetPlayerMoney(playerid, 630);
                    RemoveItem(playerid, 77, 1);
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
                }
            }
        }else{             

        }
    }

	else if(dialogid == D_COMPRAR_MUNI)
	{
		if(response)
		{
            switch(listitem)
            {
                case 0: //municao 9mm
                {
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    if(pInfo[playerid][pDinheiro] < 1000) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao possui Dinheiro suficientes");
                    SetPlayerMoney(playerid, -1000);
                    AddItem(playerid, 72, 1);
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Compra Efetuada");
                }
                case 1: //municao smg
                {
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    if(pInfo[playerid][pDinheiro] < 2600) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao possui Dinheiro suficientes");
                    SetPlayerMoney(playerid, -2600);
                    AddItem(playerid, 73, 1);
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Compra Efetuada");
                }
                case 2: //municao escopeta
                {
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    if(pInfo[playerid][pDinheiro] < 3000) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao possui Dinheiro suficientes");
                    SetPlayerMoney(playerid, -3000);
                    AddItem(playerid, 74, 1);
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Compra Efetuada");
                }
                case 3: //municao ar
                {
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    if(pInfo[playerid][pDinheiro] < 3500) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao possui Dinheiro suficientes");
                    SetPlayerMoney(playerid, -3500);
                    AddItem(playerid, 75, 1);
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Compra Efetuada");
                }
                case 4: //municao rifle
                {
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    if(pInfo[playerid][pDinheiro] < 3600) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao possui Dinheiro suficientes");
                    SetPlayerMoney(playerid, -3600);
                    AddItem(playerid, 76, 1);
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Compra Efetuada");
                }
                case 5: //municao desert eagle
                {
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    if(pInfo[playerid][pDinheiro] < 3200) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao possui Dinheiro suficientes");
                    SetPlayerMoney(playerid, -3200);
                    AddItem(playerid, 77, 1);
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Compra Efetuada");
                }
            }
		}else{               
            ShowPlayerDialog(playerid, D_COMPRAR_SAFE, DIALOG_STYLE_LIST, "Zona Segura - Comprar", "{840f15}O que voce deseja comprar?\n\
            {FFFFFF}Armas\n\
            Municoes\n\
            Roupas\n\
            Comidas/Bebidas\n\
            Materiais", "Selecionar", "Voltar");
        }
	}
	else if(dialogid == D_VENDER_SAFE)//venda
	{
		if(response)
		{
            if(listitem == 0)
            {
                ShowPlayerDialog(playerid, D_VENDER_SAFE, DIALOG_STYLE_LIST, "Zona Segura - Vender", "{840f15}O que voce deseja vender?\n\
                Municoes\n\
                Itens\n\
                Materiais", "Selecionar", "Voltar");
            }
            else if(listitem == 1)//municoes
			{
                ShowPlayerDialog(playerid, D_VENDERMUNI, DIALOG_STYLE_LIST, "Zona Segura - Vender Municao", "{FFFFFF}Municao 9mm || {33AA33}$ 500\n\
                {FFFFFF}Municao SMG || {33AA33}$ 550\n\
                {FFFFFF}Municao Escopeta || {33AA33}$ 600\n\
                {FFFFFF}Municao AR || {33AA33}$ 630\n\
                {FFFFFF}Municao Rifle || {33AA33}$ 750\n\
                {FFFFFF}Municao.50 || {33AA33}$ 630", "Vender", "Voltar");
            }
			else if(listitem == 2)//itens
			{
				ShowPlayerDialog(playerid, D_VENDER_ITEM, DIALOG_STYLE_LIST, "Zona Segura - Vender Itens", "{FFFFFF}School backpack\t{33AA33}$ 500\n\
                {FFFFFF}Parachute backpack\t{33AA33}$ 350\n\
                {FFFFFF}Camping backpack\t{33AA33}$ 495\n\
                {FFFFFF}Coyote Backpack\t{33AA33}$ 620\n\
                {FFFFFF}Arma Quebrada\t{33AA33}$ 420\n\
                {FFFFFF}Corda\t{33AA33}$ 300\n\
                {FFFFFF}Radio Quebrado\t{33AA33}$ 450", "Vender", "Voltar");
                
			}
            else if(listitem == 3)//materiais
			{
				ShowPlayerDialog(playerid, D_VENDER_MT, DIALOG_STYLE_LIST, "Materiais de Construcao", "{FFFFFF}Madeira\t{33AA33}$0,5 {FFFFFF}Cada.\n\
                {FFFFFF}Ferros\t{33AA33}$1 {FFFFFF}Cada.", "Vender", "Fechar");
			}
		}else{            
            ShowPlayerDialog(playerid, D_SAFEZONE, DIALOG_STYLE_LIST, "Zona Segura", "{840f15}O que deseja fazer?\n\
            {FFFFFF}Comprar\n\
            Vender", "Selecionar", "Fechar");
        }
	}
	else if(dialogid == D_VENDER_MT)
	{
		if(response)
		{
			if(listitem == 0) 
            {
                ShowPlayerDialog(playerid, D_QMADEIRA, DIALOG_STYLE_INPUT, "Vendendo Madeiras", "Digite abaixo a quantia\n\
                A cada 1 madeira, voce consegue metade de Dinheiro, ou seja, [200 Madeiras = 100 Dinheiro].\n\n\
                {B22222}OBS: Quantia minima: 200 e Quantia Maxima: 100.000\n\
                Por Vez!", "Vender", "Cancelar");
            }
            if(listitem == 1) 
            {
                ShowPlayerDialog(playerid, D_QFERRO, DIALOG_STYLE_INPUT, "Vendendo Ferros", "Digite abaixo a quantia\n\
                A cada 1 Ferro, voce consegue 1 de Dinheiro, ou seja, [200 Ferros = 200 Dinheiro].\n\n\
                {B22222}OBS: Quantia minima: 200 e Quantia Maxima: 100.000\n\
                Por Vez!", "Vender", "Cancelar");
            }
		}else{                
            ShowPlayerDialog(playerid, D_VENDER_SAFE, DIALOG_STYLE_LIST, "Zona Segura - Vender", "{840f15}O que voce deseja vender?\n\
            Municoes\n\
            Itens\n\
            Materiais", "Selecionar", "Voltar");
        }
	}
    else if(dialogid == D_QFERRO)
    {
        if(!response)return 1;
        if(response)
        {
            if(!strlen(inputtext)){
                ShowPlayerDialog(playerid, D_QFERRO, DIALOG_STYLE_INPUT, "Vendendo Ferros", "Digite abaixo a quantia\n\
                A cada 1 Ferro, voce consegue 1 de Dinheiro, ou seja, [200 Ferros = 200 Dinheiro].\n\n\
                {B22222}OBS: Quantia minima: 200 e Quantia Maxima: 100.000\n\
                Por Vez!", "Vender", "Cancelar");
                return 1;
            }
            new quantia = strval(inputtext);
            if(quantia < 200 || quantia > 100000) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Valor muito abaixo ou muito elevado ao valor permitido!");
            if(pInfo[playerid][pFerro] < quantia) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui essa quantia de madeiras!");
            //pInfo[playerid][pFerro]-=quantia;
            SetPlayerFerro(playerid, -quantia);
            SetPlayerMoney(playerid, quantia);
            
            //pInfo[playerid][pDinheiro]+=quantia;
            new venda[80]; format(venda, sizeof venda, "* Venda Efetuada. Quantia de Ferros: %d [Valor em Dinheiro: %d].", quantia, quantia);
            SendClientMessage(playerid, Verde, venda);
        }
    }
    else if(dialogid == D_QMADEIRA)
    {
        if(!response)return 1;
        if(response)
        {
            if(!strlen(inputtext)){
                ShowPlayerDialog(playerid, D_QMADEIRA, DIALOG_STYLE_INPUT, "Vendendo Madeiras", "Digite abaixo a quantia\n\
                A cada 1 madeira, voce consegue metade de Dinheiro, ou seja, [200 Madeiras = 100 Dinheiro].\n\n\
                {B22222}OBS: Quantia minima: 200 e Quantia Maxima: 100.000\n\
                Por Vez!", "Vender", "Cancelar");
                return 1;
            }
            new quantia = strval(inputtext);
            if(quantia < 200 || quantia > 100000) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Valor muito abaixo ou muito elevado ao valor permitido!");
            if(pInfo[playerid][pMadeira] < quantia) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui essa quantia de madeiras!");
            new metade = quantia/2;
            //pInfo[playerid][pMadeira]-=quantia;
            SetPlayerMadeira(playerid, -quantia);
            SetPlayerMoney(playerid, metade);
            //pInfo[playerid][pDinheiro]+=metade;
			new venda[80]; format(venda, sizeof venda, "* Venda Efetuada. Quantia de Madeiras: %d [Valor em Dinheiro: %d].", quantia, metade);
            SendClientMessage(playerid, Verde, venda);
        }
    }
	else if(dialogid == D_VENDER_ITEM)
	{
		if(response)
		{
			if(listitem == 0)//school 500 - ID 0
            {
				if(!PlayerHasItem(playerid, 0)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce Nao Tem essa Mochila Em Seu Inventario Para Vender");
                SetPlayerMoney(playerid, 300);
				RemoveItem(playerid, 0, 1);
				SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
            }else if(listitem == 1)//parachute 750 - ID: 30
            {
				if(!PlayerHasItem(playerid, 30)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce Nao Tem essa Mochila Em Seu Inventario Para Vender");
                SetPlayerMoney(playerid, 350);
				RemoveItem(playerid, 30, 1);
				SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
            }else if(listitem == 2)//camping 1250 - ID: 2
            {
                if(!PlayerHasItem(playerid, 2)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce Nao Tem essa Mochila Em Seu Inventario Para Vender");
                SetPlayerMoney(playerid, 495);
				RemoveItem(playerid, 2, 1);
				SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
            }else if(listitem == 3)//coyote 2000 - ID: 78
            {
				if(!PlayerHasItem(playerid, 78)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce Nao Tem essa Mochila Em Seu Inventario Para Vender");
                SetPlayerMoney(playerid, 620);
				RemoveItem(playerid, 78, 1);
				SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
             }else if(listitem == 4)//Arma quebrada
             {
			    if(!PlayerHasItem(playerid, 83)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce Nao Tem esse Item Em Seu Inventario Para Vender");
                SetPlayerMoney(playerid, 420);
				RemoveItem(playerid, 83, 1);
				SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
             }else if(listitem == 5)//Corda
             {
				if(!PlayerHasItem(playerid, 84)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce Nao Tem esse Item Em Seu Inventario Para Vender");
                SetPlayerMoney(playerid, 300);
				RemoveItem(playerid, 84, 1);
				SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
             }else if(listitem == 6)//Radio Quebrado
             {
				if(!PlayerHasItem(playerid, 85)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce Nao Tem esse Item Em Seu Inventario Para Vender");
                SetPlayerMoney(playerid, 450);
				RemoveItem(playerid, 85, 1);
				SendClientMessage(playerid, Verde, "* {FFFFFF}Venda Efetuada");
				}
           }else{
            ShowPlayerDialog(playerid, D_VENDER_SAFE, DIALOG_STYLE_LIST, "Zona Segura - Vender", "{840f15}O que voce deseja vender?\n\
            Municoes\n\
            Itens\n\
            Materiais", "Selecionar", "Voltar");
        }
	}
	else if(dialogid == D_CONFIGARM)
	{
		if(!response) return true;
		if(response)
		{
			switch(listitem)
			{
				case 0://Dinheiro
				{
                    MatSelect[playerid] = 1;
                    ShowPlayerDialog(playerid, D_SELECTPG, DIALOG_STYLE_LIST, "Selecione uma Opcao:", "{FFD700}>> Pegar Dinheiro\n{FFD700}>> Guardar Dinheiro", "Selecionar", "Fechar");
				}
				case 1://Madeiras
				{
                    MatSelect[playerid] = 2;
                    ShowPlayerDialog(playerid, D_SELECTPG, DIALOG_STYLE_LIST, "Selecione uma Opcao:", "{A0522D}>> Pegar Madeiras\n{A0522D}>> Guardar Madeiras", "Selecionar", "Fechar");
				}
				case 2://Ferros
				{
                    MatSelect[playerid] = 3;
					ShowPlayerDialog(playerid, D_SELECTPG, DIALOG_STYLE_LIST, "Selecione uma Opcao:", "{B0C4DE}>> Pegar Ferros\n{B0C4DE}>> Guardar Ferros", "Selecionar", "Fechar");
				}
			}
		}
	}
    else if(dialogid == D_SENHASTAFF)
    {
        if(!response) {Kick(playerid); return 1;}
        if(response)
        {
            if(!strlen(inputtext)) {
                ShowPlayerDialog(playerid, D_SENHASTAFF, DIALOG_STYLE_INPUT, "Senha da Administracao", "{C9C9C9}Digite abaixo a senha\n\
                {C9C9C9}A senha da staff se encontra em nosso discord\n\
                {C9C9C9}Na Aba [Senha-Acesso]", "Logar", "Cancelar");
                return 1;
            }
            if(pInfo[playerid][pAdmin] < 10)
            {
                if(strcmp(inputtext, "eusouadmk7", true) == 0)
                {
                    SendClientMessage(playerid, Preto, "* Aguarde enquanto carregamos seus dados.");
                    SetTimerEx("carregandodados", 2000, false, "i", playerid);
                }else{Kick(playerid);}
            }else{
                if(strcmp(inputtext, "masterdos007", true) == 0)
                {
                    SendClientMessage(playerid, COR_ADMIN, "* Aguarde. Logando como administrador Dono-Geral.");
                    SetTimerEx("carregandodados", 2000, false, "i", playerid);
                }else{Kick(playerid);}
            }
        }
    }
	else if(dialogid == Dialog_Comandos)
	{
        if(response)
		{
			if(listitem == 0) //Comandos craft
            {
				MEGAString[0] = EOS;
                strcat(MEGAString, "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n");
            	strcat(MEGAString, "* /craft (Criar uma parede editavel)\n");
            	strcat(MEGAString, "* /criarcaixa (Criar uma caixa para guardar itens)\n");
                strcat(MEGAString, "* /editarp (Comando usado para edicao de um craft ja criado)\n");
                strcat(MEGAString, "* /editarrcc (Comando usado para edicao de recicladora ja criada)\n");
                strcat(MEGAString, "* /criarcurativo (Comando usado para criacao de 1 curativo)\n");
                strcat(MEGAString, "* /criarmolotov (Comando usado para criacao de 1 molotov)\n");
                strcat(MEGAString, "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\n");
                strcat(MEGAString, "{B22222}[DICA] Sempre escolha a sua plataforma corretamente para nao ocorrer nenhum erro na hora da edicao de objetos.");
			    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Comandos Craft", MEGAString, "OK", "");
            }
            if(listitem == 1) //Comandos Clan
            {
                MEGAString[0] = EOS;
                strcat(MEGAString, "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n");
                strcat(MEGAString, "* Prefixo '!' [MSG] (Chat Clan)\n");
            	strcat(MEGAString, "* /criarclan (Criar o seu proprio Clan)\n");
                strcat(MEGAString, "* /clan (Abre o menu de seu Clan)\n");
                strcat(MEGAString, "* /anclan (Anunciar para todos em nome do clan)\n");
                strcat(MEGAString, "* /convidar (Convida um membro para o clan)\n");
                strcat(MEGAString, "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=");
			    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Comandos Clan", MEGAString, "OK", "");
            }
            if(listitem == 2) //Comandos Gerais
            {
                MEGAString[0] = EOS;
                strcat(MEGAString, "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n");
            	strcat(MEGAString, "* /senha (Tirar duvida com staff)\n");
            	strcat(MEGAString, "* /pm (Mandar um privado para algum player)\n");
            	strcat(MEGAString, "* /g (Falar no global)\n");
                strcat(MEGAString, "* /r (Falar no radio 'Necessario RADIO')\n");
                strcat(MEGAString, "* /abrir (Para abrir uma porta)\n");
                strcat(MEGAString, "* /fechar (Para fechar uma porta)\n");
                strcat(MEGAString, "* /motor (Adicionar um motor em um veiculo)\n");
             	strcat(MEGAString, "* /rmotor (Remover motor de um veiculo)\n");
                strcat(MEGAString, "* /galao (Adicionar 20 litros de gasolina no veiculo)\n");
                strcat(MEGAString, "* /enchergalao (Encher galao de combustivel vazio em algum reservatorio)\n");
                strcat(MEGAString, "* /agua (Encher garrafa d'agua em algum bebedouro)\n");
                strcat(MEGAString, "* /caixa (Ver os itens de uma caixa)\n");
                strcat(MEGAString, "* /abrircaixa (Serve para abrir uma caixa que nao e sua, mas voce precisa de permissao da staff)\n");
                strcat(MEGAString, "* /dropararma (Jogar sua arma que esta na sua mao no chao)\n");
                strcat(MEGAString, "* /pegararma (Pegar a arma que esta no chao dropada)\n");
                strcat(MEGAString, "* /report (Reportar algum hack ou alguem desrespeitando as regras do servidor)\n");
                strcat(MEGAString, "* /sair (Sair de um veiculo)\n");
                strcat(MEGAString, "* /carid (Pegar o id de um veiculo proximo de voce)\n");
                strcat(MEGAString, "* /upbox (Ver Niveis Upgrade Caixa)\n");
                strcat(MEGAString, "* /upgradecaixa (Fazer Upgrade em uma caixa)\n");
                strcat(MEGAString, "* /gobjeto (Ver objetos anexados em seu corpo)");
                strcat(MEGAString, "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=");
                ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Comandos Gerais", MEGAString, "Ok", "");
            }
            if(listitem == 3) //Comandos veiculos
            {
                MEGAString[0] = EOS;
                strcat(MEGAString, "=-=-=-INFOS=-=-=-\n");
            	strcat(MEGAString, "* /abrirv (Abre um Veiculo com senha)\n");
            	strcat(MEGAString, "* /fecharv (Define uma senha para seu veiculo)\n");
                strcat(MEGAString, "* /salvarv (Salva o Spawn de algum veiculo)");
			    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Comandos Veiculos", MEGAString, "OK", "");
            }
            if(listitem == 4){
                cmd_vip(playerid);
            }
		}
	}
    else if(dialogid == D_HELP)
    {
        if(!response) return 1;
        if(response)
        {
            switch(listitem)
            {
                case 0://Ajuda Veiculos
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Como funciona o sistema de veiculos?", "{04b988}O sistema de veiculos do servidor e basicamente varios veiculos espalhados pelo mapa.\n\
                    {04b988}Sendo eles variados e possuindo alguns comandos basicos para utiliza-los.\n\
                    {04b988}E e necessario o Item motor e gasolina para que eles andem.\n\
                    {B22222}OBS: Esses itens voces encontrarao pelo mapa\n\n\
                    {04b988}/pmala {FFFFFF}(Acesso ao porta Malas de algum veiculo proximo a voce)\n\
                    {04b988}/fecharv {FFFFFF}(Trancar um veiculo para terem acesso apenas com pe de cabra, arrombando a porta)\n\
                    {04b988}/abrirv {FFFFFF}(Abrir alguma veiculo caso voce saiba a senha que foi definida no mesmo)\n\
                    {04b988}/salvarv {FFFFFF}(Voce consegue salvar qualquer carro do servidor)", "Certo","");
                }
                case 1://como criar explosivos
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Como criar explosivos?", "{04b988}Todos os explosivos sao criados na mesa de craft.\n\
                    {04b988}Para cria-la, use o comando /craft e procure pela mesa.\n\
                    {04b988}Logo apos, Clicando F na frente dela, abrira um menu de combinacoes.\n\
                    {04b988}Clicando em 'Combinacoes', aparecera todos os explosivos abaixo. E mais alguns itens...\n\n\
                    {04b988}Bomba Galao {FFFFFF}- Necessario: 1 Explosivo e 1 Galao Vazio. {FF0000}Dano: 1\n\
                    {04b988}Dinamite {FFFFFF}- Necessario: 2 Explosivos e 1 Celular. {FF0000}Dano: 3\n\
                    {04b988}C4 {FFFFFF}- Necessario: 3 Explosivos e 1 Temporizador. {FF0000}Dano: 5", "Certo","");
                }
                case 2://Como subir de score
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Como subo de Nivel?", "{04b988}Cada 1 nivel equivalem a 1000 - XP. Sendo assim, 1000 XP = 1 Nivel.\n\
                    {04b988}Para conseguir nivel voces tem, por enquanto, tres opcoes. Sendo elas:\n\n\
                    {04b988}Jogar {FFFFFF}[A cada 1 Hora jogada, +1 nivel]\n\
                    {04b988}Cortar Arvores {FFFFFF}[De 100 a 200 XP'S(Por Arvore)]\n\
                    {04b988}Minerar Irons {FFFFFF}[De 90 a 250 XP'S(Por Pedra)]\n\
                    {04b988}Matar Veados/Animais {FFFFFF}[De 2 a 100 XP'S(Por Animal)]", "Certo","");
                }
                case 3://como criar craft / base
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Como crio minha base?", "{04b988}O Sistema de craft do servidor conta com varios tipos de objetos\n\
                    {04b988}Com o editor padrao do samp (Plataforma PC)\n\
                    {04b988}Com editor em textdraw (Plataforma Mobile)\n\
                    {04b988}Para criar voce voces devem possuir materiais (Madeiras/Ferros)\n\
                    {B22222}IMPORTANTE: PARA VER SEUS MATERIAIS UTILIZE /infos in game ou #minhaconta no discord.\n\n\
                    {04b988}Apos todas essas verificacoes e so utilizar o comando /craft e criar sua base do jeito que quiser.", "Certo","");
                }
                case 4://como participar de um clan
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Como participar de um clan?", "{04b988}O sistema de clan do servidor e dinamico e possui alguns beneficios\n\
                    {04b988}Para participar de um clan como MEMBRO ou SUB-LIDER voce deve falar com o dono do clan que voce deseja entrar\n\
                    {04b988}Mas caso queira ser lider de um clan, voce deve possuir 15.000 $, 5 leveis e digitar o comando /criarclan.\n\
                    {FFFF00}Comando para abrir o menu de seu clan: /clan", "Certo","");
                }
                case 5://como achar fabricar armas
                {
                    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Como Achar/Fabricar armas?", "{04b988}As armas do servidor sao espalhadas junto ao loot, sendo mais dificil achar a que voce deseja.\n\
                    {04b988}Entao voce pode compra-las ou fabrica-las:\n\
                    {04b988}Voce pode compra-las nas Safe-Zone, que esta marcada como area verde no mapa onde nao pode matar/atira em ninguem.\n\
                    {04b988}Voce pode fabrica-las na Black-Market, que esta marcada como area preta no mapa onde pode matar/atirar.\n\n\
                    {FFFF00}Vale ressaltar que as que sao fabricadas(na area black) sao diferentes das compradas(na area safe).\n\
                    {FFFF00}IMPORTANTE: As armas agora precisam de municao separadamente, as municoes podem ser compradas na Safe-Zone.", "Certo","");
                }
            }
        }
    }
	else if(dialogid == 1000)
    {
        if(response)
        {
            cmd_logsserver(playerid);
        }
        if(!response)
        {
            cmd_logsserver(playerid);
        }
    }
    else if(dialogid == 9996)
    {
        //ShowPlayerDialog(playerid, 15859, DIALOG_STYLE_LIST, "{ffffff}Escolha uma das opcoes", "{df5454}Ver logs: {ffffff}Casas(**)\n{df5454}Ver logs: {ffffff}Ban(Ban)\n{df5454}Ver logs: {ffffff}Desban(**)\n{df5454}Ver logs: {ffffff}Cadeia Agendado(CarandiruAgendado)\n{df5454}Ver logs: {ffffff}GMX e Salvamento de Dados(Gmx)\n{df5454}Ver logs: {ffffff}Anti Xiter(AntiXiter)\n{df5454}Ver logs: {ffffff}Kick(kick)\n{df5454}Ver logs: {ffffff}sms(sms)\n{df5454}Ver logs: {ffffff}Divulgou(Divulgou)\n{df5454}Ver logs: {ffffff}Loja VIP(Loja VIP)", "Vizualizar", "Fechar");
        if(response)
        {
            if(listitem == 0)
            {
                if(!fexist("/Logs/logedit.txt")) return SendClientMessage(playerid, Vermelho, "Arquivo inexistente");
                MEGAString[0] = EOS;
                new str[128], readString[128], File:logFile;
                logFile = fopen("/Logs/logedit.txt", io_read);
                while(fread(logFile, readString)) {
                    format(str, sizeof str, "%s", readString);
                    strcat(MEGAString,str);
                }
                ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_LIST, "{ffffff}Arquivo de Log: ({df5454}Logs/logsedit.txt{ffffff})", MEGAString, "Voltar", "");
            }
            if(listitem == 1)
            {
                if(!fexist("/Logs/logseconomia.txt")) return SendClientMessage(playerid, Vermelho, "Arquivo inexistente");
                MEGAString[0] = EOS;
                new str[128], readString[128], File:logFile;
                logFile = fopen("/Logs/logseconomia.txt", io_read);
                while(fread(logFile, readString)) {
                    format(str, sizeof str, "%s", readString);
                    strcat(MEGAString,str);
                }
                ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_LIST, "{ffffff}Arquivo de Log: ({df5454}Logs/logseconomia.txt{ffffff})", MEGAString, "Voltar", "");
            }
            if(listitem == 2)
            {
                if(!fexist("/Logs/anticheat.txt")) return SendClientMessage(playerid, Vermelho, "Arquivo inexistente");
                MEGAString[0] = EOS;
                new str[128], readString[128], File:logFile;
                logFile = fopen("/Logs/anticheat.txt", io_read);
                while(fread(logFile, readString)) {
                    format(str, sizeof str, "%s", readString);
                    strcat(MEGAString,str);
                }
                ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_LIST, "{ffffff}Arquivo de Log: ({df5454}Logs/anticheat.txt{ffffff})", MEGAString, "Voltar", "");
            }
        }
        if(!response)
        {
			return 1;
        }
    }
    else if(dialogid == D_EVENTOCREATE)
    {
        if(!response) return 1;
        if(response)
        {
            if(EventoCriado == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Ja existe um evento rolando");
            new estilo = listitem+1;
            switch(estilo)
            {
            	case 1://evento bate bate
            	{
                    new str[120];
            		format(str, sizeof(str), "[EVENTO-DOS] O Staff %s(%d) criou um evento de Bate-Bate, Aguarde Abrir.", PegarNome(playerid), playerid);
            		SendClientMessageToAll(0xFF0080FF, str);
                    //eventoType = EVENTO_BATEBATE;
            		CordEventoX = -1398.103515;
            		CordEventoY = 937.631164;
            		CordEventoZ = 1036.479125;
            		VagasEvento = 9;
            		InteriorEvento = 15;
            		SetPlayerPosEx(playerid, CordEventoX, CordEventoY, CordEventoZ);
            		SetPlayerInterior(playerid, InteriorEvento);
            		EventoCriado = true;
            		CarroEvento[0] = CreateVehicle(556,-1306.9778,952.1102,1036.9445,29.5031,1,1, -1); LinkVehicleToInterior(CarroEvento[0], InteriorEvento);// carro 1
            		CarroEvento[1] = CreateVehicle(556,-1288.5446,972.5041,1037.2562,63.3147,1,1, -1); LinkVehicleToInterior(CarroEvento[1], InteriorEvento);// carro 2
            		CarroEvento[2] = CreateVehicle(556,-1280.9301,990.1667,1037.5385,87.5359,1,1, -1); LinkVehicleToInterior(CarroEvento[2], InteriorEvento);// carro 3
            		CarroEvento[3] = CreateVehicle(556,-1281.7411,1011.1331,1037.8878,111.2122,1,1, -1); LinkVehicleToInterior(CarroEvento[3], InteriorEvento);// carro 4
            		CarroEvento[4] = CreateVehicle(556,-1290.7919,1027.3180,1038.1692,134.6028,1,1, -1); LinkVehicleToInterior(CarroEvento[4], InteriorEvento);// carro 5
            		CarroEvento[5] = CreateVehicle(556,-1314.9449,1044.9634,1038.5065,149.1307,1,1, -1); LinkVehicleToInterior(CarroEvento[5], InteriorEvento);// carro 6
            		CarroEvento[6] = CreateVehicle(556,-1331.7416,1052.9968,1038.6709,163.7557,1,1, -1); LinkVehicleToInterior(CarroEvento[6], InteriorEvento);// carro 7 vdd
            		CarroEvento[7] = CreateVehicle(556,-1331.7614,939.6362,1036.7833,26.4622,1,1, -1); LinkVehicleToInterior(CarroEvento[7], InteriorEvento);// carro 8
            		CarroEvento[8] = CreateVehicle(556,-1347.8215,934.2128,1036.7185,7.6265,1,1, -1); LinkVehicleToInterior(CarroEvento[8], InteriorEvento);// carro 9
            		CarroEvento[9] = CreateVehicle(556,-1347.3584,1055.5460,1038.7397,169.0137,1,1, -1); LinkVehicleToInterior(CarroEvento[9], InteriorEvento);// carro 10
            		for(new i = 0; i < 10; i ++)
            		{
            			if(CarroEvento[i])
            			{
                            vInfo[CarroEvento[i]][vCombustivel] = 100;
                            vInfo[CarroEvento[i]][vTemMotor] = true;
                            vInfo[CarroEvento[i]][vHealth] = 950.0;
                        }
            		}
            	}
                case 2://evento motocross
            	{
                    new str[120];
            		format(str, sizeof(str), "[EVENTO-DOS] O Staff %s(%d) criou um evento de Motocross, Aguarde Abrir.", PegarNome(playerid), playerid);
            		SendClientMessageToAll(0xFF0080FF, str);
                    //eventoType = EVENTO_MOTOCROSS;
            		CordEventoX = -1444.645507;
            		CordEventoY = -664.526000;
            		CordEventoZ = 1053.572998;
            		VagasEvento = 9;
            		InteriorEvento = 4;
            		SetPlayerPosEx(playerid, CordEventoX, CordEventoY, CordEventoZ);
            		SetPlayerInterior(playerid, InteriorEvento);
            		EventoCriado = true;
            		CarroEvento[0] = CreateVehicle(468,-1451.2637,-669.4667,1054.7861,59.1772,1,1,-1); LinkVehicleToInterior(CarroEvento[0], InteriorEvento);// moto 1
            		CarroEvento[1] = CreateVehicle(468,-1449.9313,-667.2304,1054.5894,66.4051,1,1,-1); LinkVehicleToInterior(CarroEvento[1], InteriorEvento);// moto 2
            		CarroEvento[2] = CreateVehicle(468,-1448.7114,-665.1370,1054.1122,71.3341,1,1,-1); LinkVehicleToInterior(CarroEvento[2], InteriorEvento);// moto 3
            		CarroEvento[3] = CreateVehicle(468,-1447.7667,-663.3530,1053.6042,67.3070,1,1,-1); LinkVehicleToInterior(CarroEvento[3], InteriorEvento);// moto 4
            		CarroEvento[4] = CreateVehicle(468,-1447.0829,-661.5612,1053.1913,67.0557,1,1,-1); LinkVehicleToInterior(CarroEvento[4], InteriorEvento);// moto 5
            		CarroEvento[5] = CreateVehicle(468,-1446.1567,-660.0721,1052.8009,83.9744,1,1,-1); LinkVehicleToInterior(CarroEvento[5], InteriorEvento);// moto 6
            		CarroEvento[6] = CreateVehicle(468,-1445.5345,-658.3577,1052.3606,82.5971,1,1,-1); LinkVehicleToInterior(CarroEvento[6], InteriorEvento);// moto 7ofc
            		CarroEvento[7] = CreateVehicle(468,-1444.5287,-656.8143,1051.9160,72.8702,1,1,-1); LinkVehicleToInterior(CarroEvento[7], InteriorEvento);// moto 8 oficial
            		CarroEvento[8] = CreateVehicle(468,-1443.8145,-654.9561,1051.5812,68.4243,1,1,-1); LinkVehicleToInterior(CarroEvento[8], InteriorEvento);// moto 9 m
            		CarroEvento[9] = CreateVehicle(468,-1442.6895,-652.7785,1051.2954,63.4621,1,1,-1); LinkVehicleToInterior(CarroEvento[9], InteriorEvento);// moto 10
            		for(new i = 0; i < 10; i ++)
            		{
            			if(CarroEvento[i])
            			{
                            vInfo[CarroEvento[i]][vCombustivel] = 100;
                            vInfo[CarroEvento[i]][vTemMotor] = true;
                            vInfo[CarroEvento[i]][vHealth] = 950.0;
                        }
            		}
            	}
            }
        }
    }
    else if(dialogid == D_VELOCRAFT)
    {
        if(!response) return 1;
        if(response)
        {
            new Float:Velo;
            if(sscanf(inputtext, "f", Velo)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Digite algum valor.");
            if(Velo < 0.1 || Velo > 5.0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Valores de 0.1 a 5.0 .");
            EditVelo[playerid] = Velo;
            SendClientMessage(playerid, Verde, "* Velocidade de edicao definida.");
        }
    }
    else if(dialogid == D_MINAPLANT)
    {
        if(!response) return 1;
        if(response)
        {
            if(listitem == 0) //plantar na craft
            {
                ShowPlayerDialog(playerid, D_IDCRAFTM, DIALOG_STYLE_INPUT, "{00FF00}Escolha a craft:", "Digite abaixo o ID da Craft que deseja plantar a mina:", "Plantar", "Voltar");
            }
            if(listitem == 1) //plantar mo chao
            {
                minaplayer[playerid] = 1;
        		GetPlayerPos(playerid, minapos[playerid][0], minapos[playerid][1], minapos[playerid][2]);
        		minapos[playerid][2] = minapos[playerid][2]-0.9;
        		objmina[playerid] = CreateObject(19602,  minapos[playerid][0], minapos[playerid][1], minapos[playerid][2], 0.0, 0.0, 0.0, 200.0);
        		SendClientMessage(playerid, Verde, "<!> Voce colocou uma mina nesse local.");
        		RemoveInvItem(playerid);
            }
        }
    }
    else if(dialogid == D_IDCRAFTM)
    {
        if(!response)
        {
            ShowPlayerDialog(playerid, D_MINAPLANT, DIALOG_STYLE_LIST, "{00FF00}Escolha uma opcao", "Plantar em Craft {FF0000}'Dano na craft'\n\
            Plantar no chao {FF0000}'Plantar no chao'", "Plantar", "Cancelar");
            return 1;
        }
        if(response)
        {
            if(isLetra(inputtext))
            {
    			SendClientMessage(playerid, Vermelho, "ERRO: Apenas numeros.");
                ShowPlayerDialog(playerid, D_IDCRAFTM, DIALOG_STYLE_INPUT, "{00FF00}Escolha a craft:", "Digite abaixo o ID da Craft que deseja plantar a mina:", "Plantar", "Voltar");
    			return 1;
            }
            new p = strval(inputtext);
            if(!IsPlayerInRangeOfPoint(playerid, 2.5, CraftInfo[p][PosX], CraftInfo[p][PosY], CraftInfo[p][PosZ]))
            {
    			SendClientMessage(playerid, Vermelho, "ERRO: Craft nao se encontra proxima de voce.");
                ShowPlayerDialog(playerid, D_IDCRAFTM, DIALOG_STYLE_INPUT, "{00FF00}Escolha a craft:", "Digite abaixo o ID da Craft que deseja plantar a mina:", "Plantar", "Voltar");
    			return 1;
            }
            minaplayer[playerid] = 1;
        	GetPlayerPos(playerid, minapos[playerid][0], minapos[playerid][1], minapos[playerid][2]);
        	minapos[playerid][2] = minapos[playerid][2]-0.9;
        	objmina[playerid] = CreateObject(19602,  minapos[playerid][0], minapos[playerid][1], minapos[playerid][2], 0.0, 0.0, 0.0, 200.0);
        	SendClientMessage(playerid, Verde, "<!> Voce colocou uma mina em uma Craft.");
        	RemoveInvItem(playerid);
            idParedeMina[playerid] = p;
        }
    }
    else if(dialogid == D_INFOADM)
    {
        if(!response) return 1;
        if(response)
        {
            new idx=listitem+1;
            if(strcmp(AdminInfo[idx][AdminName],"Vazio", true ) == 0)
            {
                SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce clicou em uma vaga vazia.");
                return 1;
            }
            new query[80], DBResult:result;
            format(query, sizeof query, "SELECT * FROM Admins WHERE PlayerName='%q'", PegarNome(playerid));
            result = db_query(Database, query);
            new admir = db_get_field_assoc_int(result, "AdminLevel");
            db_free_result(result);

            admirSelect[playerid] = idx;
            new str[70];
            format(str, sizeof str, "{00FF00}Admin %s | Nivel ADM: %s", AdminInfo[idx][AdminName], CargoAdm(admir));
            ShowPlayerDialog(playerid, D_INFOADM2, DIALOG_STYLE_LIST, str, "Resetar Atendimentos\nRemover Staff [OFFLINE]", "Selecionar", "Cancelar");
            return 1;
        }
    }
    else if(dialogid == D_INFOADM2)
    {
        if(!response) return 1;
        if(response)
        {
            new idx = admirSelect[playerid];
            switch(listitem)
            {
                case 0://Resetar Atendimentos
                {
                    foreach(new i : Player){
                        if(pInfo[i][pConectado] && pInfo[i][pAdmin] != 0){
                            if(!strcmp(PegarNome(i), AdminInfo[idx][AdminName], false)){
                                SendClientMessage(i, Vermelho, "* Seus atendimentos foram resetados.");
                                pInfo[i][pAtendidos] = 0;
        			            pInfo[i][pBom] = 0;
        		                pInfo[i][pMedio] = 0;
        			            pInfo[i][pRuim] = 0;
                                break;
                            }
                        }
                    }
                    new DBResult:result, query[200];
                    format(query, sizeof query, "UPDATE `Admins` SET `Atendimentos`='0',\
                    `Bom`='0',\
                    `Medio`='0',\
                    `Ruim`='0' WHERE `PlayerName`='%q'", AdminInfo[idx][AdminName]);
                    result = db_query(Database, query);
                    db_free_result(result);
                }
                case 1://remover staff
                {
                    foreach(new i : Player){
                        if(pInfo[i][pConectado] && pInfo[i][pAdmin] != 0){
                            if(!strcmp(PegarNome(i), AdminInfo[idx][AdminName], false)){
                                SendClientMessage(i, Vermelho, "* Voce foi removido da staff do servidor.");
                                pInfo[i][pAdmin] = 0;
                                pInfo[i][pAtendidos] = 0;
        			            pInfo[i][pBom] = 0;
        		                pInfo[i][pMedio] = 0;
        			            pInfo[i][pRuim] = 0;
                                break;
                            }
                        }
                    }

                    new DBResult:result, query[90];
                    format(query, sizeof query, "SELECT * FROM `Admins` WHERE `PlayerName`='%q'", AdminInfo[idx][AdminName]);
                    result = db_query(Database, query);
                    if(db_num_rows(result) > 0){
                        format(query, sizeof query, "DELETE FROM `Admins` WHERE `PlayerName`='%q'", AdminInfo[idx][AdminName]);
                        result = db_query(Database, query);
                    }
                    db_free_result(result);

                    new strr[120];
                    format(strr, sizeof strr, "| STAFF | O(a) Staff %s removeu %s da Staff.", PegarNome(playerid), AdminInfo[idx][AdminName]);
                    MensageAdmin(0xFF8080FF, strr);
                    format(AdminInfo[idx][AdminName], MAX_PLAYER_NAME, "Vazio");
                    AdminInfo[idx][AdminLevel] = 0;
                }
            }
        }
    }
    else if(dialogid == D_VPAINEL)
    {
        if(!response) return 1;
        if(response)
        {
            switch(listitem)
            {
                case 0://Pisca cor
                {
                    if(PiscaCarColor[playerid])
                    {
                        PiscaCarColor[playerid] = false;
                        SendClientMessage(playerid, 0xFF0000FF, ">> VIP: Pisca-pisca Desativado. (Veiculo Cor)");
                    }else{
                        PiscaCarColor[playerid] = true;
                        SendClientMessage(playerid, COR_VIP, ">> VIP: Pisca-pisca ativado. (Veiculo Cor)");
                    }
                    ShowDialogVPainel(playerid);
                }
                case 1:// Pisca luz carro
                {
                    if(PiscaCarLuz[playerid])
                    {
                        PiscaCarLuz[playerid] = false;
                        SendClientMessage(playerid, 0xFF0000FF, ">> VIP: Pisca-pisca desativado. (Luz)");
                    }else{
                        PiscaCarLuz[playerid] = true;
                        SendClientMessage(playerid, COR_VIP, ">> VIP: Pisca-pisca ativado. (Luz)");
                    }
                    ShowDialogVPainel(playerid);
                }
            }
        }
    }
    else if(dialogid == D_UPGRADEBOX)
    {
        if(!response)return 1;
        if(response)
        {
            new idCAIXA = idcaixaup[playerid];
            new din = Caixa[idCAIXA][Upgrade]*5000;
            new ferru = Caixa[idCAIXA][Upgrade]*1200;
            if(pInfo[playerid][pDinheiro] < din) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem dinheiro o suficiente.");
            if(pInfo[playerid][pFerro] < ferru) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem ferros o suficiente.");

            SetPlayerMoney(playerid, -din);
            //pInfo[playerid][pFerro] -= ferru;
            SetPlayerFerro(playerid, -ferru);
            Caixa[idCAIXA][Upgrade]++;
            DestroyDynamicObject(Caixa[idCAIXA][ObjectC]);
            Caixa[idCAIXA][ObjectC] = CreateDynamicObject(Caixa[idCAIXA][ModelC], Caixa[idCAIXA][PosX], Caixa[idCAIXA][PosY], Caixa[idCAIXA][PosZ]-0.6, Caixa[idCAIXA][RX], Caixa[idCAIXA][RY], Caixa[idCAIXA][RZ]);
            if(Caixa[idCAIXA][Upgrade] == 2){
                SetDynamicObjectMaterial(Caixa[idCAIXA][ObjectC], 0, 13659, "8bars", "AH_gbarrier", 0xFFFFFFFF);
            }else if(Caixa[idCAIXA][Upgrade] == 3){
                SetDynamicObjectMaterial(Caixa[idCAIXA][ObjectC], 0, 16640, "a51", "a51_blastdoor", 0xFFFFFFFF);
            }
            UpdateTextLabelBox(idCAIXA);
            return true;
        }
    }
    else if(dialogid == D_RFERRAMENTA)
    {
        if(response){
            switch(listitem)
            {
                case 0:
                {
                    //Chave Combinada
                    if(Equipado[playerid][CHAVE_COMBINADA] == 0)return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Chave Combinada nao equipada em suas maos.");
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    SendClientMessage(playerid, Verde, "* Chave Combinada guardada em seu inventario.");
                    AddItem(playerid, 1, 1);
                    RemovePlayerAttachedObject(playerid, SlotFerramenta_2);
                    Equipado[playerid][CHAVE_COMBINADA] = 0;
                    return 1;
                }
                case 1:
                {
                    //Martelo
                    if(Equipado[playerid][MARTELO] == 0)return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Martelo nao equipado em suas maos.");
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    SendClientMessage(playerid, Verde, "* Martelo guardado em seu inventario.");
                    AddItem(playerid, 43, 1);
                    RemovePlayerAttachedObject(playerid, SlotFerramenta_1);
                    Equipado[playerid][MARTELO] = 0;
                    return 1;
                }
                case 2:
                {
                    //Marreta
                    if(Equipado[playerid][MARRETA] == 0)return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Marreta nao equipada em suas maos.");
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    SendClientMessage(playerid, Verde, "* Marreta guardada em seu inventario.");
                    AddItem(playerid, 61, 1);
                    RemovePlayerAttachedObject(playerid, SlotFerramenta_1);
                    Equipado[playerid][MARRETA] = 0;
                    return 1;
                }
                case 3:
                {
                    //Chave de fenda
                    if(Equipado[playerid][CHAVE_DE_FENDA] == 0)return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Chave de fenda nao equipada em suas maos.");
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    SendClientMessage(playerid, Verde, "* Chave de fenda guardada em seu inventario.");
                    AddItem(playerid, 42, 1);
                    RemovePlayerAttachedObject(playerid, SlotFerramenta_1);
                    Equipado[playerid][CHAVE_DE_FENDA] = 0;
                    return 1;
                }
                case 4:
                {
                    //mascara
                    if(!Equipado[playerid][MASCARA])return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Mascara nao equipada.");
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    SendClientMessage(playerid, Verde, "* Mascara guardada em seu inventario.");
                    AddItem(playerid, 53, 1);
                    RemovePlayerAttachedObject(playerid, SlotMascara);
                    Equipado[playerid][MASCARA] = 0;
                    return 1;
                }
                case 5:
                {
                    //pe de cabra
                    if(Equipado[playerid][PE_DE_CABRA] == 0)return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Pe de cabra nao equipado em suas maos.");
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    SendClientMessage(playerid, Verde, "* Pe de cabra guardado em seu inventario.");
                    AddItem(playerid, 46, 1);
                    RemovePlayerAttachedObject(playerid, SlotFerramenta_1);
                    Equipado[playerid][PE_DE_CABRA] = 0;
                    return 1;
                }
            }
        }else{
            return 1;
        }
    }else if(dialogid == D_CRIARLOOT)
    {
        if(!response)
        {
            return 1;
        }else if(response)
        {
            new Float:XX, Float:YY, Float:ZZ;
            GetPlayerPos(playerid, XX, YY, ZZ);
            GetXYInFrontOfPlayer(playerid, XX, YY, 1.0);
            switch(listitem)
            {
                case 0://item civil
                {
                    new randloot = GetItemReturn(ITEM_CLASS_CIVIL);
                    CreateLoot_(randloot, TYPE_ITEM_CIVIL, XX, YY, ZZ);
                }
                case 1://item militar
                {
                    new randloot2 = GetItemReturn(ITEM_CLASS_MILITAR);
                    CreateLoot_(randloot2, TYPE_ITEM_MILITAR, XX, YY, ZZ);
                }
                case 2:               
                {
                    new randloot2 = GetItemReturn(ITEM_CLASS_APRIVADA);
                    CreateLoot_(randloot2, TYPE_ITEM_RESTRITO, XX, YY, ZZ);
                }
                case 3://item fixo
                {
                    new pstring[200];
                    MEGAString[0]=EOS;
                	for(new i, j = sizeof(ItemInfo); i < j; i++)
                	{
                	    format(pstring, sizeof(pstring), "{E9CC4C}Item: {FFFFFF}%s\t{E9CC4C}ID: {FFFFFF}%d\n", ItemInfo[i][Item_Name], i);
                		strcat(MEGAString, pstring);
                    }
                	ShowPlayerDialog(playerid, D_CRIARLOOT2, DIALOG_STYLE_LIST, "{FFFFFF}Criar Itens", MEGAString, "Escolher" , "Voltar");
                }
            }
        }
    }else if(dialogid == D_CRIARLOOT2)
    {
        if(!response)
        {
            ShowPlayerDialog(playerid, D_CRIARLOOT, DIALOG_STYLE_LIST, "{00FF00}Criando Loot:", "* Civil\n\
            * Militar\n\
            * Fixo", "Criar" , "Fechar");
            return 1;
        }else if(response)
        {
            if(listitem < 0 || listitem > sizeof(ItemInfo)-1) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Algo deu errado.");
            new Float:XX, Float:YY, Float:ZZ;
            GetPlayerPos(playerid, XX, YY, ZZ);
            GetXYInFrontOfPlayer(playerid, XX, YY, 1.0);
            CreateLoot_(listitem, TYPE_ITEM_FIXO, XX, YY, ZZ);
        }
    }

    //Clan Dialogs:
    if(dialogid == D_CREATECLAN)
    {
        new string[260];
        if(response)
        {   
            if(strlen(inputtext) < 1 || strlen(inputtext) > MAX_CLAN_NAME-1){
                ShowPlayerDialog(playerid, D_CREATECLAN, DIALOG_STYLE_INPUT, "Criando Clan - Definir Nome:", "{FFFF00}-Primeiro passo:\n\n\
                {FFFFFF}-Digite um nome para seu clan\n\
                {FFFFFF}-O Nome deve ter de 1 a 30 Caracteres\n\
                {FF0000}OBS: Caso erre algo no nome do Clan, voce podera retornar!", "Prosseguir", "Cancelar");
                return true;
            }
            format(NameCreateClan[playerid], MAX_CLAN_NAME, inputtext);
            
            format(string, sizeof string, "{FFFF00}-Segundo passo:\n\n\
            {00FF00}-Nome Do Clan: %s\n\
            {FFFFFF}-Digite uma Tag para seu clan:\n\
            {FFFFFF}-A tag deve ter de 1 a 7 caracteres", NameCreateClan[playerid]);
            ShowPlayerDialog(playerid, TAG_CLAN, DIALOG_STYLE_INPUT, "Criando Clan - Definir Tag:", string, "Prosseguir", "Voltar");

        }else{           
            SendClientMessage(playerid, Vermelho, "* {FFFFFF}Acao cancelada com exito.");
            return true;
        }
    }
    else if(dialogid == TAG_CLAN)
    {
        if(response) 
        {
            if(strlen(inputtext) < 1 || strlen(inputtext) > MAX_CLAN_TAG-1){
                new string[256];
                format(string, sizeof string, "{FFFF00}-Segundo passo:\n\n\
                {00FF00}-Nome Do Clan: %s\n\
                {FFFFFF}-Digite uma Tag para seu clan:\n\
                {FFFFFF}-A tag deve ter de 1 a 7 caracteres", NameCreateClan[playerid]);
                ShowPlayerDialog(playerid, TAG_CLAN, DIALOG_STYLE_INPUT, "Criando Clan - Definir Tag:", string, "Prosseguir", "Voltar");
                return true;
            }
            new title[50], string[500], str[40];
            format(TagCreateClan[playerid], MAX_CLAN_TAG, inputtext);
            format(title, sizeof title, "%s - %s", NameCreateClan[playerid], TagCreateClan[playerid]);
            
            for(new c=0; c < sizeof(CoresRPGClan); c++){
                format(str, sizeof str, "{%s}Cor %d\n", CoresRPGClan[c], c);
                strcat(string, str);
            }
            strcat(string, "{FFFFFF}Outras - {FF0000}(APENAS VIP'S)");
            ShowPlayerDialog(playerid, COR_CLAN, DIALOG_STYLE_LIST, title, string, "CriarClan", "Voltar");

        }else{           
            ShowPlayerDialog(playerid, D_CREATECLAN, DIALOG_STYLE_INPUT, "Criando Clan - Definir Nome:", "{FFFF00}-Primeiro passo:\n\n\
            {FFFFFF}-Digite um nome para seu clan\n\
            {FFFFFF}-O Nome deve ter de 1 a 30 Caracteres\n\
            {FF0000}OBS: Caso erre algo no nome do Clan, voce podera retornar!", "Prosseguir", "Cancelar");
        }
    }
    else if(dialogid == COR_CLAN)
    {
        if(response)
        {
            if(listitem == sizeof(CoresRPGClan)){//outros
                if(pInfo[playerid][pVip] == 0){

                    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao e um jogador VIP.");

                    new title[50], string[500], str[40];
                    format(title, sizeof title, "%s - %s", NameCreateClan[playerid], TagCreateClan[playerid]);
                    for(new c=0; c < sizeof(CoresRPGClan); c++){
                        format(str, sizeof str, "{%s}Cor %d\n", CoresRPGClan[c], c);
                        strcat(string, str);
                    }
                    strcat(string, "{FFFFFF}Outras - {FF0000}(APENAS VIP'S)");
                    ShowPlayerDialog(playerid, COR_CLAN, DIALOG_STYLE_LIST, title, string, "CriarClan", "Voltar");
                    return true;
                }

                new title[50];
                format(title, sizeof title, "%s - %s", NameCreateClan[playerid], TagCreateClan[playerid]);
                
                ShowPlayerDialog(playerid, CORVIP_CLAN, DIALOG_STYLE_INPUT, title, "{FFFF00}-Definir Cor:\n\n\
                {FFFFFF}-Digite o codigo da cor que deseja\n\
                {FFFFFF}-Caso nao saiba, pesquise por: Codigo de Cores HEX\n\
                {FF0000}OBS: Apenas 6 caracteres!", "Criar Clan", "Voltar");
                return true;
            }else{             
                format(CorCreateClan[playerid], MAX_CLAN_COR, CoresRPGClan[listitem]);
                LoadVaribleClan(playerid);
            }
        }else{                     
            new string[256];
            format(string, sizeof string, "{FFFF00}-Segundo passo:\n\n\
            {00FF00}-Nome Do Clan: %s\n\
            {FFFFFF}-Digite uma Tag para seu clan:\n\
            {FFFFFF}-A tag deve ter de 1 a 7 caracteres", NameCreateClan[playerid]);
            ShowPlayerDialog(playerid, TAG_CLAN, DIALOG_STYLE_INPUT, "Criando Clan - Definir Tag:", string, "Prosseguir", "Voltar");
            return true;
        }
    }
    else if(dialogid == CORVIP_CLAN)
    {
        if(response)
        {
            if(strlen(inputtext) != 6){//outros
                new title[50];
                format(title, sizeof title, "%s - %s", NameCreateClan[playerid], TagCreateClan[playerid]);
                ShowPlayerDialog(playerid, CORVIP_CLAN, DIALOG_STYLE_INPUT, title, "{FFFF00}-Definir Cor:\n\n\
                {FFFFFF}-Digite o codigo da cor que deseja\n\
                {FFFFFF}-Caso nao saiba, pesquise por: Codigo de Cores HEX\n\
                {FF0000}OBS: Apenas 6 caracteres!", "Criar Clan", "Voltar");
                return true;
            }else{             
                format(CorCreateClan[playerid], MAX_CLAN_COR, inputtext);
                LoadVaribleClan(playerid);
            }
        }else{                     
            new title[50], string[500], str[40];
            format(title, sizeof title, "%s - %s", NameCreateClan[playerid], TagCreateClan[playerid]);
            
            for(new c=0; c < sizeof(CoresRPGClan); c++){
                format(str, sizeof str, "{%s}Cor %d\n", CoresRPGClan[c], c);
                strcat(string, str);
            }
            strcat(string, "{FFFFFF}Outras - {FF0000}(APENAS VIP'S)");
            ShowPlayerDialog(playerid, COR_CLAN, DIALOG_STYLE_LIST, title, string, "CriarClan", "Voltar");
        }
    }
    //OPCOES CLAN
    else if(dialogid == MENUCLAN){
        if(response){
            new clanid = pInfo[playerid][pClan];
            switch(listitem){
                case 0: //Informacoes Clan
                {
                    GetClanInformation(playerid, clanid);
                }
                case 1: //Promover/rebaixar membro
                {
                    //SETCARGOCLAN
                    ShowListMember(playerid, clanid, SETCARGOCLAN, "Setar Cargo - Membro", "Selecionar", "Voltar");
                }
                case 2: //Expulsar membro
                {
                    if(pInfo[playerid][pCargoClan] < 4) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Somente Lideres e Subs podem expulsar.");
                    ShowListMember(playerid, clanid, EXPULSARCLAN, "Expulsar - Membro", "Selecionar", "Voltar");
                }
                case 3: //Arena de treino
                {
                    SendClientMessage(playerid, Vermelho, "Em breve...");
                    cmd_clan(playerid);
                }
                case 4: //Definir Base
                {
                    if(pInfo[playerid][pCargoClan] < 5) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Somente Lideres podem definir a base do Clan.");
                    new string[500], str[50];
                    for(new p=0; p < sizeof(PickupsBClan); p++){
                        
                        format(str, sizeof str, "Pickup %d\n", PickupsBClan[p]);
                        strcat(string, str);
                    }
                    ShowPlayerDialog(playerid, D_PICKUPCLAN, DIALOG_STYLE_LIST, "Defina a Pickup:", string, "Selecionar", "Voltar");
                }
                case 5: //trocar nome
                {
            
                }
                case 6: //trocar tag
                {
                    
                }
                
                case 7: //trocar cor
                {
                    
                }
                case 8: //fogo amigo
                {
                    if(pInfo[playerid][pCargoClan] > 2)
                    {
                        if(ClanInfo[clanid][FriendFire]){
                            ClanInfo[clanid][FriendFire] = false;
                        }else{               
                            ClanInfo[clanid][FriendFire] = true;
                        }
                    }else{                  
                        SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode configurar o fogo amigo. Cargo minimo: 3.");
                    }
                    cmd_clan(playerid);
                }
                case 9: //sair do clan
                {
                    if(pInfo[playerid][pCargoClan] == 5) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Lideres nao podem sair do Clan.");
                    ShowPlayerDialog(playerid, SAIRCLAN, DIALOG_STYLE_MSGBOX, "Confirmacao: Sair Clan", "Voce deseja realmente sair de seu clan?\n\
                    {FFFFFF}Clique em 'Sair' para confirmar!", "Sair", "Voltar");
                }
                case 10: //excluir clan
                {
                    if(pInfo[playerid][pCargoClan] < 5) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Apenas lideres podem excluir o Clan.");
                    ShowPlayerDialog(playerid, EXCLUIRCLAN, DIALOG_STYLE_MSGBOX, "Confirmacao: Excluir Clan", "Voce deseja realmente excluir seu clan?\n\
                    {FF0000}IMPORTANTE: {FFFFFF}Essa acao nao tera volta, tenha certeza da decisao!", "Excluir", "Voltar");
                }
            }
        }else{               
            return true;
        }
    }
    else if(dialogid == SAIRCLAN)
    {
        if(response)
        {
            SairClan(playerid);
        }else{                    
            cmd_clan(playerid);
        }
    }
    else if(dialogid == EXCLUIRCLAN)
    {
        if(response){
            new str[120];
            format(str, sizeof str, "| MSG - ALL | %s excluiu seu Clan ID: %d. Nome: %s.", PegarNome(playerid), pInfo[playerid][pClan], ClanInfo[pInfo[playerid][pClan]][NomeC]);
            SendClientMessageToAll(Vermelho, str);

            ExcluirClan(pInfo[playerid][pClan]);
        }else{           
            cmd_clan(playerid);
        }
    }
    else if(dialogid == D_PICKUPCLAN)
    {
        if(response)
        {
            //D_CONF_BASEC 
            PickupModelSelect[playerid] = PickupsBClan[listitem][0];
            new str[310];
            format(str, sizeof str, "{FFFFFF}Voce realmente quer definir a posicao da base de seu Clan neste local?\n\
            {0000FF}OBS: Caso esteja definindo em lugares aleatorios, voce podera ser punido sem avisos previos!\n\
            {FFFFFF}Unico Local permitido: Bases!\n\n\
            {0000FF}Pickup Model Escolhido: %d", PickupModelSelect[playerid]);
            ShowPlayerDialog(playerid, D_CONF_BASEC, DIALOG_STYLE_MSGBOX, "Confirmacao Base Clan:", str, "Criar", "Voltar");

        }else{                    
            cmd_clan(playerid);
        }
    }
    else if(dialogid == D_CONF_BASEC)
    {
        new clanid = pInfo[playerid][pClan];
        if(response)
        {
            new str[90], Float:p[3]; GetPlayerPos(playerid, p[0], p[1], p[2]);
            ClanInfo[clanid][PickupC] = PickupModelSelect[playerid];
            ClanInfo[clanid][BaseCX] = p[0]; ClanInfo[clanid][BaseCY] = p[1]; ClanInfo[clanid][BaseCZ] = p[2];

            format(str, sizeof str, "{%s}| CLAN | {FFFFFF}%s definiu a posicao da base do clan. Use /clan para localizar.", ClanInfo[clanid][CorC], PegarNome(playerid));
            MessageClan(-1, str, clanid);

            SendClientMessage(playerid, Verde, "* {FFFFFF}Base do clan definida. Aguarde uns segundos...");

            if(IsValidDynamic3DTextLabel(Text3DClan[clanid])) DestroyDynamic3DTextLabel(Text3DClan[clanid]);
            if(IsValidDynamicPickup(PickupClan[clanid])) DestroyDynamicPickup(PickupClan[clanid]);
            SetTimerEx("UpdateBaseClan", 2000, false, "i", clanid);

        }else{               
            new string[500], str[50];
            for(new p=0; p < sizeof(PickupsBClan); p++){ 
                format(str, sizeof str, "Pickup %d\n", PickupsBClan[p]);
                strcat(string, str);
            }
            ShowPlayerDialog(playerid, D_PICKUPCLAN, DIALOG_STYLE_LIST, "Defina a Pickup:", string, "Selecionar", "Voltar");
        }
    }
    else if(dialogid == EXPULSARCLAN)
    {
        if(response)
        {
            new clanid = pInfo[playerid][pClan], vaga=listitem+1;
            if(CargoClan[clanid][vaga] == 5)
            {
                ShowListMember(playerid, clanid, EXPULSARCLAN, "Expulsar - Membro", "Selecionar", "Voltar");
                return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Apenas Administradores podem expulsar Lideres.");
            } 
            if(pInfo[playerid][pCargoClan] < 5 && CargoClan[clanid][vaga] > 3)
            {
                ShowListMember(playerid, clanid, EXPULSARCLAN, "Expulsar - Membro", "Selecionar", "Voltar");
                return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Apenas Lideres podem expulsar Sub-lideres.");
            } 
            ExpulsarMembroClan(playerid, clanid, vaga);
        }else{                
            return cmd_clan(playerid);
        }
    }
    else if(dialogid == SETCARGOCLAN)
    {
        new clanid = pInfo[playerid][pClan];
        if(response)
        {
            MembroSelect[playerid] = listitem+1;

            if(!strcmp(MemberClan[clanid][MembroSelect[playerid]], "Ninguem", false))//lider
            {
                ShowListMember(playerid, clanid, SETCARGOCLAN, "Setar Cargo - Membro", "Selecionar", "Voltar");
                return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao clicou em Ninguem.");
            }
            else if(pInfo[playerid][pCargoClan] < 4)//sub lider e lider
            {
                ShowListMember(playerid, clanid, SETCARGOCLAN, "Setar Cargo - Membro", "Selecionar", "Voltar");
                return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Apenas Lideres e subs podem editar cargos.");
            }
            else if(CargoClan[clanid][MembroSelect[playerid]] == 5)//lider
            {
                ShowListMember(playerid, clanid, SETCARGOCLAN, "Setar Cargo - Membro", "Selecionar", "Voltar");
                return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode editar o cargo do Lider!");
            }
            else if(pInfo[playerid][pCargoClan] < 5 && CargoClan[clanid][MembroSelect[playerid]] > 3)//APENAS Lideres podem setar vice lideres.
            {
                ShowListMember(playerid, clanid, SETCARGOCLAN, "Setar Cargo - Membro", "Selecionar", "Voltar");
                return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Apenas Lideres podem editar Subs.");
            }
            
            new str[200];
            format(str, sizeof str, "{FFFFFF}Digite abaixo qual cargo deseja setar:\n\
            {FFFFFF}Para o membro: {FFFF00}%s\n\
            {FFFFFF}Cargo atual do membro: {FFFF00}%i", MemberClan[clanid][MembroSelect[playerid]], CargoClan[clanid][MembroSelect[playerid]]);
            ShowPlayerDialog(playerid, SETNIVELCCLAN, DIALOG_STYLE_INPUT, "Setar Cargo - Nivel:", str, "Setar", "Voltar");
        }else{               
            return cmd_clan(playerid);
        }
    }
    else if(dialogid == SETNIVELCCLAN)
    {
        new clanid = pInfo[playerid][pClan];
        if(response)
        {
            new member = MembroSelect[playerid];
            if(strval(inputtext) < 1 || strval(inputtext) > 4 || CargoClan[clanid][member] == strval(inputtext))
            {
                new str[200];
                format(str, sizeof str, "{FFFFFF}Digite abaixo qual cargo deseja setar:\n\
                {FFFFFF}Para o membro: {FFFF00}%s\n\
                {FFFFFF}Cargo atual do membro: {FFFF00}%i", MemberClan[clanid][MembroSelect[playerid]], CargoClan[clanid][MembroSelect[playerid]]);
                ShowPlayerDialog(playerid, SETNIVELCCLAN, DIALOG_STYLE_INPUT, "Setar Cargo - Nivel:", str, "Setar", "Voltar");
                return true;
            }
            if(pInfo[playerid][pCargoClan] < 5 && strval(inputtext) > 3)
            {
                SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce e um Sub lider e pode setar no Maximo Cargo Nvl: 3.");
                new str[200];
                format(str, sizeof str, "{FFFFFF}Digite abaixo qual cargo deseja setar:\n\
                {FFFFFF}Para o membro: {FFFF00}%s\n\
                {FFFFFF}Cargo atual do membro: {FFFF00}%i", MemberClan[clanid][MembroSelect[playerid]], CargoClan[clanid][MembroSelect[playerid]]);
                ShowPlayerDialog(playerid, SETNIVELCCLAN, DIALOG_STYLE_INPUT, "Setar Cargo - Nivel:", str, "Setar", "Voltar");
                return true;
            }
            SetPlayerCargoClan(playerid, clanid, member, strval(inputtext));
            
        }else{               
            ShowListMember(playerid, clanid, SETCARGOCLAN, "Setar Cargo - Membro", "Selecionar", "Voltar");
        }
    }
    else if(dialogid == ACEITARCLAN)
    {
        if(response)//aceitar
        {
            new clanid = ClanConvidado[playerid],
                vaga=0;
            for(new m=2; m < MAX_MEMBER_CLAN; m++){
                if(strcmp("Ninguem", MemberClan[clanid][m], false) == 0){
                    vaga = m;
                    break;
                }
            }
            if(vaga == 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Clan nao possui mais vagas, peca ao lider/sub para retirar alguem.");

            SendClientMessage(playerid, Verde, "[PARABENS] {FFFFFF}Agora voce participa de um clan!");
            
            format(MemberClan[clanid][vaga], MAX_PLAYER_NAME, PegarNome(playerid));
            CargoClan[clanid][vaga] = 1;

            pInfo[playerid][pClan] = clanid;

            SetAtualNameClan(playerid);
            SetPlayerTeam(playerid, pInfo[playerid][pClan] + NO_TEAM);

            pInfo[playerid][pCargoClan] = 1;
            
            new straccept[100];
            format(straccept, sizeof straccept, "{%s}| CLAN | {FFFFFF}Novo Membro do Clan: %s. Seja Bem Vindo!", ClanInfo[clanid][CorC], PegarNome(playerid));
            MessageClan(-1, straccept, clanid);

            QuemConvidou[playerid] = -1;
            ClanConvidado[playerid] = 0;
            return true;
        }else {  
            new straccept[100];
            format(straccept, sizeof straccept, "{%s}| CLAN | {FFFFFF}Jogador: %s recusou entrar no clan. Que Pena...", ClanInfo[ClanConvidado[playerid]][CorC], PegarNome(playerid));
            MessageClan(-1, straccept, ClanConvidado[playerid]);

            QuemConvidou[playerid] = -1;
            ClanConvidado[playerid] = 0;
            return true;
        }
    }
    else if(dialogid == DIALOG_CLANS)
    {
        if(!response){
            Lista_Clans(playerid, ListaClans[playerid]);
        }
    }
    else if(dialogid == D_ITENS_SELECT){
        if(!response) return pSelecionandoTXDMesa[playerid] = true, 1;
        new slot = ItensSelectedInv[playerid][listitem];
    
        IDMaterialSelect[playerid] = slot;

        ShowPlayerDialog(playerid, D_QUANTIAITENS, DIALOG_STYLE_INPUT, "Quantia de item:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
        Na mesa de craft", "Adicionar", "Voltar");
        return true;
    }
    else if(dialogid == D_MATERIALSLC){
        if(!response){
            ShowPlayerDialog(playerid, D_MATERISELECT, DIALOG_STYLE_LIST, "O que deseja fazer?", "Adicionar item\n\
            Adicionar Material\n\
            {FF0000}Remover Item", "Selecionar", "Cancelar");
        }else{                    
            if(listitem == 0)//madeiras
            {
                ShowPlayerDialog(playerid, D_QUANTIAIM, DIALOG_STYLE_INPUT, "Quantia de madeira:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                Na mesa de craft", "Adicionar", "Voltar");
            }
            if(listitem == 1)//ferros
            {
                ShowPlayerDialog(playerid, D_QUANTIAIF, DIALOG_STYLE_INPUT, "Quantia de ferro:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                Na mesa de craft", "Adicionar", "Voltar");
            }
        }
    }
    else if(dialogid == D_QUANTIAIM)//MADEIRA QUANTIA{
    {
        if(!response){
            ShowMaterialMesa(playerid);
        }else{              
            new idmesa = pUsandoMesa[playerid];
            if(SlotSelectMC[playerid] == PLAYER_SELECT_SLOT1)
            {     
                if(CraftInfo[idmesa][QuantiaIM1] + strval(inputtext) > 10000 || strval(inputtext) < 1){
                    ShowPlayerDialog(playerid, D_QUANTIAIM, DIALOG_STYLE_INPUT, "Quantia de Madeira:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Voce pode por no maximo 10000 madeiras em um slot.", "Adicionar", "Voltar");
                    return true;
                }
                else if(CraftInfo[idmesa][ItemM1] != -1 && CraftInfo[idmesa][ItemM1] != 1463){
                    ShowPlayerDialog(playerid, D_QUANTIAIM, DIALOG_STYLE_INPUT, "Quantia de Madeira:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Slot ja possui item diferente do selecionado.", "Adicionar", "Voltar");
                    return true;
                }
                else if(pInfo[playerid][pMadeira] < strval(inputtext)){
                    ShowPlayerDialog(playerid, D_QUANTIAIM, DIALOG_STYLE_INPUT, "Quantia de Madeira:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Voce nao tem essa quantia de Madeira.", "Adicionar", "Voltar");
                    return true;
                }

                CraftInfo[idmesa][ItemM1] = 1463;
                CraftInfo[idmesa][QuantiaIM1] += strval(inputtext);

                SetPlayerMadeira(playerid, -strval(inputtext));
                        
                pSelecionandoTXDMesa[playerid] = true;
                UpdatePlayerMesa(playerid);
            }

            if(SlotSelectMC[playerid] == PLAYER_SELECT_SLOT2)
            {     
                if(CraftInfo[idmesa][QuantiaIM2] + strval(inputtext) > 10000 || strval(inputtext) < 1){
                    ShowPlayerDialog(playerid, D_QUANTIAIM, DIALOG_STYLE_INPUT, "Quantia de Madeira:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Voce pode por no maximo 10000 madeiras em um slot.", "Adicionar", "Voltar");
                    return true;
                }
                else if(CraftInfo[idmesa][ItemM2] != -1 && CraftInfo[idmesa][ItemM2] != 1463){
                    ShowPlayerDialog(playerid, D_QUANTIAIM, DIALOG_STYLE_INPUT, "Quantia de Madeira:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Slot ja possui item diferente do selecionado.", "Adicionar", "Voltar");
                    return true;
                }
                else if(pInfo[playerid][pMadeira] < strval(inputtext)){
                    ShowPlayerDialog(playerid, D_QUANTIAIM, DIALOG_STYLE_INPUT, "Quantia de Madeira:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Voce nao tem essa quantia de Madeira.", "Adicionar", "Voltar");
                    return true;
                }

                CraftInfo[idmesa][ItemM2] = 1463;
                CraftInfo[idmesa][QuantiaIM2] += strval(inputtext);

                SetPlayerMadeira(playerid, -strval(inputtext));
                        
                pSelecionandoTXDMesa[playerid] = true;
                UpdatePlayerMesa(playerid);
            }
        }
    }
    else if(dialogid == D_QUANTIAIF)//FERRO QUANTIA{
    {
        if(!response){
            ShowMaterialMesa(playerid);
        }else{         
            new idmesa = pUsandoMesa[playerid];
            if(SlotSelectMC[playerid] == PLAYER_SELECT_SLOT1)
            {     
                if(CraftInfo[idmesa][QuantiaIM1] + strval(inputtext) > 10000 || strval(inputtext) < 1){
                    ShowPlayerDialog(playerid, D_QUANTIAIF, DIALOG_STYLE_INPUT, "Quantia de Ferro:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Voce pode por no maximo 10000 ferros em um slot.", "Adicionar", "Voltar");
                    return true;
                }
                else if(CraftInfo[idmesa][ItemM1] != -1 && CraftInfo[idmesa][ItemM1] != 2936){
                    ShowPlayerDialog(playerid, D_QUANTIAIF, DIALOG_STYLE_INPUT, "Quantia de Ferro:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Slot ja possui item diferente do selecionado.", "Adicionar", "Voltar");
                    return true;
                }
                else if(pInfo[playerid][pFerro] < strval(inputtext)){
                    ShowPlayerDialog(playerid, D_QUANTIAIF, DIALOG_STYLE_INPUT, "Quantia de Ferro:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Voce nao tem essa quantia de Ferro.", "Adicionar", "Voltar");
                    return true;
                }

                CraftInfo[idmesa][ItemM1] = 2936;
                CraftInfo[idmesa][QuantiaIM1] += strval(inputtext);

                SetPlayerFerro(playerid, -strval(inputtext));
                        
                pSelecionandoTXDMesa[playerid] = true;
                UpdatePlayerMesa(playerid);
            }

            if(SlotSelectMC[playerid] == PLAYER_SELECT_SLOT2)
            {     
                if(CraftInfo[idmesa][QuantiaIM2] + strval(inputtext) > 10000 || strval(inputtext) < 1){
                    ShowPlayerDialog(playerid, D_QUANTIAIF, DIALOG_STYLE_INPUT, "Quantia de Ferro:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Voce pode por no maximo 10000 ferros em um slot.", "Adicionar", "Voltar");
                    return true;
                }
                else if(CraftInfo[idmesa][ItemM2] != -1 && CraftInfo[idmesa][ItemM2] != 2936){
                    ShowPlayerDialog(playerid, D_QUANTIAIF, DIALOG_STYLE_INPUT, "Quantia de Ferro:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Slot ja possui item diferente do selecionado.", "Adicionar", "Voltar");
                    return true;
                }
                else if(pInfo[playerid][pFerro] < strval(inputtext)){
                    ShowPlayerDialog(playerid, D_QUANTIAIF, DIALOG_STYLE_INPUT, "Quantia de Ferro:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Voce nao tem essa quantia de Ferro.", "Adicionar", "Voltar");
                    return true;
                }

                CraftInfo[idmesa][ItemM2] = 2936;
                CraftInfo[idmesa][QuantiaIM2] += strval(inputtext);

                SetPlayerFerro(playerid, -strval(inputtext));
                        
                pSelecionandoTXDMesa[playerid] = true;
                UpdatePlayerMesa(playerid);
            }
        }
    }
    else if(dialogid == D_QUANTIAITENS)
    {
        if(!response){ 
            ShowInventoryMesa(playerid);
        }else{            
            new idmesa = pUsandoMesa[playerid], slot = IDMaterialSelect[playerid];              
            if(SlotSelectMC[playerid] == PLAYER_SELECT_SLOT1)
            {
                if(CraftInfo[idmesa][QuantiaIM1] + strval(inputtext) > 10 || strval(inputtext) < 1){
                    ShowPlayerDialog(playerid, D_QUANTIAITENS, DIALOG_STYLE_INPUT, "Quantia de item:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Voce pode por no maximo 10 itens em um slot.", "Adicionar", "Voltar");
                    return true;
                }
                else if(CraftInfo[idmesa][ItemM1] != -1 && CraftInfo[idmesa][ItemM1] != Inv[playerid][slot][ItemID]){
                    ShowPlayerDialog(playerid, D_QUANTIAITENS, DIALOG_STYLE_INPUT, "Quantia de item:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Slot ja possui item diferente do selecionado.", "Adicionar", "Voltar");
                    return true;
                }
                else if(TemXItem(playerid, Inv[playerid][slot][ItemID]) < strval(inputtext)){
                    ShowPlayerDialog(playerid, D_QUANTIAITENS, DIALOG_STYLE_INPUT, "Quantia de item:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Voce nao tem essa quantia de item no inventario.", "Adicionar", "Voltar");
                    return true;
                }
                else if(Inv[playerid][slot][ItemID] == -1){
                    ShowPlayerDialog(playerid, D_QUANTIAITENS, DIALOG_STYLE_INPUT, "Quantia de item:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Parece que algo deu errado, e seu item nao se encontra no inventario.", "Adicionar", "Voltar");
                    return true;
                }

                CraftInfo[idmesa][ItemM1] = Inv[playerid][slot][ItemID];
                CraftInfo[idmesa][QuantiaIM1] += strval(inputtext);

                RemoveItem(playerid, Inv[playerid][slot][ItemID], strval(inputtext));
                    
                pSelecionandoTXDMesa[playerid] = true;
                UpdatePlayerMesa(playerid);
            }
            else if(SlotSelectMC[playerid] == PLAYER_SELECT_SLOT2)
            {
                if(CraftInfo[idmesa][ItemM2] + strval(inputtext) > 10 || strval(inputtext) < 1){
                    ShowPlayerDialog(playerid, D_QUANTIAITENS, DIALOG_STYLE_INPUT, "Quantia de item:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Voce pode por no maximo 10 itens em um slot.", "Adicionar", "Voltar");
                    return true;
                }
                else if(CraftInfo[idmesa][ItemM2] != -1 && CraftInfo[idmesa][ItemM2] != Inv[playerid][slot][ItemID]){
                    ShowPlayerDialog(playerid, D_QUANTIAITENS, DIALOG_STYLE_INPUT, "Quantia de item:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Slot ja possui item diferente do selecionado.", "Adicionar", "Voltar");
                    return true;
                }
                else if(TemXItem(playerid, Inv[playerid][slot][ItemID]) < strval(inputtext)){
                    ShowPlayerDialog(playerid, D_QUANTIAITENS, DIALOG_STYLE_INPUT, "Quantia de item:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Voce nao tem essa quantia de item no inventario.", "Adicionar", "Voltar");
                    return true;
                }
                else if(Inv[playerid][slot][ItemID] == -1){
                    ShowPlayerDialog(playerid, D_QUANTIAITENS, DIALOG_STYLE_INPUT, "Quantia de item:", "{FFFF00}< ! > {FFFFFF}Digite a quantia que deseja por\n\
                    Na mesa de craft\n\
                    {FF0000}[ERRO]{BABABA}Parece que algo deu errado, e seu item nao se encontra no inventario.", "Adicionar", "Voltar");
                    return true;
                }

                CraftInfo[idmesa][ItemM2] = Inv[playerid][slot][ItemID];
                CraftInfo[idmesa][QuantiaIM2] += strval(inputtext);

                RemoveItem(playerid, Inv[playerid][slot][ItemID], strval(inputtext));
                    
                pSelecionandoTXDMesa[playerid] = true;
                UpdatePlayerMesa(playerid);
            }
        }
    }
    else if(dialogid == D_MATERISELECT)
    {
        new idmesa = pUsandoMesa[playerid];
        if(!response) return pSelecionandoTXDMesa[playerid] = true, 1;
        switch(listitem)
        {
            case 0:   //adicionar ITEM             
            {
                //D_ITENS_SELECT
                ShowInventoryMesa(playerid);
                MaterialSelect[playerid] = PLAYER_SELECT_ITEM;
            }
            case 1:   //adicionar MATERIAL
            {
                MaterialSelect[playerid] = PLAYER_SELECT_MATERIAL;
                ShowMaterialMesa(playerid);
            }
            case 2:   //remover item
            {
                if(SlotSelectMC[playerid] == PLAYER_SELECT_SLOT1)
                {
                    if(CraftInfo[idmesa][ItemM1] == -1){
                        ShowPlayerDialog(playerid, D_MATERISELECT, DIALOG_STYLE_LIST, "O que deseja fazer?", "Adicionar item\n\
                        Adicionar Material\n\
                        {FF0000}Remover Item", "Selecionar", "Cancelar");
                        return true;
                    }
                    new item = CraftInfo[idmesa][ItemM1], quantia = CraftInfo[idmesa][QuantiaIM1];

                    if(CraftInfo[idmesa][ItemM1] != 1463 && CraftInfo[idmesa][ItemM1] != 2936)
                    {
                        if(VerMochila(playerid, quantia)){

                            GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                            pSelecionandoTXDMesa[playerid] = true;
                            return true;
                        }
                    }

                    CraftInfo[idmesa][ItemM1] = -1;
                    CraftInfo[idmesa][QuantiaIM1] = 0;

                    if(item > -1 && item < sizeof(ItemInfo)){
                        AddItem(playerid, item, quantia);
                    }else if(item == 1463){
                        SetPlayerMadeira(playerid, quantia);
                    }else if(item == 2936){
                        SetPlayerFerro(playerid, quantia);
                    }
                    
                    pSelecionandoTXDMesa[playerid] = true;
                    UpdatePlayerMesa(playerid);
                }
                else if(SlotSelectMC[playerid] == PLAYER_SELECT_SLOT2)
                {
                    if(CraftInfo[idmesa][ItemM2] == -1){
                        ShowPlayerDialog(playerid, D_MATERISELECT, DIALOG_STYLE_LIST, "O que deseja fazer?", "Adicionar item\n\
                        Adicionar Material\n\
                        {FF0000}Remover Item", "Selecionar", "Cancelar");
                        return true;
                    }
                    new item = CraftInfo[idmesa][ItemM2], quantia = CraftInfo[idmesa][QuantiaIM2];

                    if(CraftInfo[idmesa][ItemM2] != 1463 && CraftInfo[idmesa][ItemM2] != 2936)
                    {
                        if(VerMochila(playerid, quantia)){

                            GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                            pSelecionandoTXDMesa[playerid] = true;
                            return true;
                        }
                    }

                    CraftInfo[idmesa][ItemM2] = -1;
                    CraftInfo[idmesa][QuantiaIM2] = 0;

                    if(item > -1 && item < sizeof(ItemInfo)){
                        AddItem(playerid, item, quantia);
                    }else if(item == 1463){
                        SetPlayerMadeira(playerid, quantia);
                    }else if(item == 2936){
                        SetPlayerFerro(playerid, quantia);
                    }
                    
                    pSelecionandoTXDMesa[playerid] = true;
                    UpdatePlayerMesa(playerid);
                }
            }
        }
    }
    if(dialogid == D_AEROBOX){
        if(!response) return true;
        if(response){
            new box = BoxAeroSelect[playerid];
            if(ItensBoxAero[box][listitem] == -1) return ShowPlayerAeroLootBox(playerid);
            if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);

            SendClientMessage(playerid, Verde, "* {FFFFFF}Item adicionado em seu inventario.");
            AddItem(playerid,ItensBoxAero[box][listitem],1);
            ItensBoxAero[box][listitem] = -1;
            ShowPlayerAeroLootBox(playerid);
        }
    }
    if(dialogid == D_Carro){
        if(!response) return true;
        if(response){
            new idv = idVehSenha[playerid];
            if(!vInfo[idv][vLock]){
                if(strlen(inputtext) < 1 || strlen(inputtext) > 40)
                {
                    ShowPlayerDialog(playerid, D_Carro, DIALOG_STYLE_INPUT, "Trancar Veiculo:", "Digite uma senha para trancar o veiculo\n\
                    Senha deve conter de 1 a 40 caracteres.\n\
                    OBS: So podera abrir utilizando o 'Teclado' novamente ou Arrombando com 'Pe de Cabra'.", "Trancar", "Cancelar");
                    return true;
                }
			    if(Comparar(vInfo[idv][Dono], "Ninguem")) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Veiculo criado por vip ou admin.");
	            
                SendClientMessage(playerid, Verde, "* Senha do veiculo definida...");

                CarInfo[vInfo[idv][VehicleID]][cTrancado] = true;

                vInfo[idv][vLock] = true;
                format(vInfo[idv][cSenha], 50, "%s", inputtext);
                format(CarInfo[vInfo[idv][VehicleID]][Senha], 50, "%s", inputtext);

            }else{       
                if(strlen(inputtext) < 1 || strlen(inputtext) > 40)
                {             
                    ShowPlayerDialog(playerid, D_Carro, DIALOG_STYLE_INPUT, "Destrancar Veiculo:", "Digite a senha para destrancar o veiculo\n\
                    DICA: Senha contem de 1 a 40 caracteres.", "Destrancar", "Cancelar");
                    return true;
                }

                if(Comparar(inputtext, vInfo[idv][cSenha]))
                {
                    vInfo[idv][vLock] = false;
                    CarInfo[vInfo[idv][VehicleID]][cTrancado] = false;
                    SendClientMessage(playerid, Verde, "* Veiculo aberto com sucesso");
                    format(vInfo[idv][cSenha], 50, "Nenhuma");
                }
                else
                {
                    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Senha do veiculo incorreta");
                }
            }
        }
    }
    if(dialogid == D_ASSARCARNE){
        if(response){
            new id = idchurrasqueira[playerid];
            
            if(listitem < 0 || listitem > 2)
            {
                new str[90]; format(str, sizeof str,  "Madeiras: %d\n{FF0000}Assar Carne", CraftInfo[idchurrasqueira[playerid]][MChurrasqueira]);
                ShowPlayerDialog(playerid, D_ASSARCARNE, DIALOG_STYLE_LIST, "{FF0000}Churrasqueira:", str, "Selecionar", "Fechar");
                return true;
            }
            switch(listitem){
                case 0:{ //adicionar +20 madeiras
                    if(pInfo[playerid][pMadeira] < 20) 
                    {
                        new str[90]; format(str, sizeof str,  "Madeiras: %d\n{FF0000}Assar Carne", CraftInfo[idchurrasqueira[playerid]][MChurrasqueira]);
                        ShowPlayerDialog(playerid, D_ASSARCARNE, DIALOG_STYLE_LIST, "{FF0000}Churrasqueira:", str, "Selecionar", "Fechar");
                        return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui 20 madeiras!");
                    }
                    if(CraftInfo[idchurrasqueira[playerid]][MChurrasqueira] >= 100) 
                    {
                        new str[90]; format(str, sizeof str,  "Madeiras: %d\n{FF0000}Assar Carne", CraftInfo[idchurrasqueira[playerid]][MChurrasqueira]);
                        ShowPlayerDialog(playerid, D_ASSARCARNE, DIALOG_STYLE_LIST, "{FF0000}Churrasqueira:", str, "Selecionar", "Fechar");
                        return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Maximo de madeiras na churrasqueira!");
                    }
                    
                    SendTXDMessage(playerid, "Adicionado_+20 madeiras~n~Na_Churrasqueira.");
                    SetPlayerMadeira(playerid, -20);
                    CraftInfo[idchurrasqueira[playerid]][MChurrasqueira] += 20;
                    new str[90]; format(str, sizeof str,  "Madeiras: %d\n{FF0000}Assar Carne", CraftInfo[idchurrasqueira[playerid]][MChurrasqueira]);
                    ShowPlayerDialog(playerid, D_ASSARCARNE, DIALOG_STYLE_LIST, "{FF0000}Churrasqueira:", str, "Selecionar", "Fechar");
                }
                case 1:{ //assar carne
                    if(!CraftInfo[idchurrasqueira[playerid]][AssandoC]){
                        if(CraftInfo[id][IChurrasqueira] != 2804){
                            new str[90]; format(str, sizeof str,  "Madeiras: %d\n{FF0000}Assar Carne", CraftInfo[idchurrasqueira[playerid]][MChurrasqueira]);
                            ShowPlayerDialog(playerid, D_ASSARCARNE, DIALOG_STYLE_LIST, "{FF0000}Churrasqueira:", str, "Selecionar", "Fechar");
                            return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Coloque a carne crua para poder assar!");
                        }
                        if(CraftInfo[id][MChurrasqueira] < 20){
                            new str[90]; format(str, sizeof str,  "Madeiras: %d\n{FF0000}Assar Carne", CraftInfo[idchurrasqueira[playerid]][MChurrasqueira]);
                            ShowPlayerDialog(playerid, D_ASSARCARNE, DIALOG_STYLE_LIST, "{FF0000}Churrasqueira:", str, "Selecionar", "Fechar");
                            return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Coloque madeiras para poder assar!");
                        }
                        if(!PlayerHasItem(playerid, 69)) //nn tem isqueiro
                        {
                            new str[90]; format(str, sizeof str,  "Madeiras: %d\n{FF0000}Assar Carne", CraftInfo[idchurrasqueira[playerid]][MChurrasqueira]);
                            ShowPlayerDialog(playerid, D_ASSARCARNE, DIALOG_STYLE_LIST, "{FF0000}Churrasqueira:", str, "Selecionar", "Fechar");
                            return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui um Isqueiro no inventario!");
                        }
                        CraftInfo[idchurrasqueira[playerid]][AssandoC] = true;
                        //SetObjectCarne(idchurrasqueira[playerid]);
                        SetTimerEx("AssarCarneCHRR", 10000, false, "i", idchurrasqueira[playerid]);
                        SendTXDMessage(playerid, "Assando_Carne_Crua._Aguarde...");
                    }else{              
                        new str[90]; format(str, sizeof str,  "Madeiras: %d\n{FF0000}Assar Carne", CraftInfo[idchurrasqueira[playerid]][MChurrasqueira]);
                        ShowPlayerDialog(playerid, D_ASSARCARNE, DIALOG_STYLE_LIST, "{FF0000}Churrasqueira:", str, "Selecionar", "Fechar");
                        return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} A carne ja esta sendo assada!");
                    }
                }
            }
        }
    }
    if(dialogid == 53)
	{
		if(!response) return 1;
		if(response)
		{
			if(listitem == 0)
			{
              	if(JaFabricando[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Ja reciclando, aguarde...");
                if(!PlayerHasItem(playerid, 43)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem um martelo");
		        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~Reciclando...",10000,3);
		        SetTimerEx( "TriturandoMartelo", 10000, false, "i", playerid);
                SetTimerEx( "animfabri", 1000, false, "i", playerid);
				RemoveItem(playerid, 43, 1);
				TogglePlayerControllable(playerid, 0);
				JaFabricando[playerid] = 1;
			}
			if(listitem == 1)
			{
              	if(JaFabricando[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Ja reciclando, aguarde...");
                if(!PlayerHasItem(playerid, 49)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem um motor");
		        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~Reciclando...",10000,3);
		        SetTimerEx( "TriturandoMotor", 10000, false, "i", playerid);
                SetTimerEx( "animfabri", 1000, false, "i", playerid);
				RemoveItem(playerid, 49, 1);
				TogglePlayerControllable(playerid, 0);
				JaFabricando[playerid] = 1;
			}
			if(listitem == 2)
			{
              	if(JaFabricando[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Ja reciclando, aguarde...");
                if(!PlayerHasItem(playerid, 65)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem uma ak-47 no inventario");
		        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~Reciclando...",10000,3);
		        SetTimerEx( "TriturandoAK", 10000, false, "i", playerid);
                SetTimerEx( "animfabri", 1000, false, "i", playerid);
				RemoveItem(playerid, 65, 1);
				TogglePlayerControllable(playerid, 0);
				JaFabricando[playerid] = 1;
			}
			if(listitem == 3)
			{
              	if(JaFabricando[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Ja reciclando, aguarde...");
                if(!PlayerHasItem(playerid, 64)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem uma M4 no inventario");
		        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~Reciclando...",10000,3);
		        SetTimerEx( "TriturandoM4", 10000, false, "i", playerid);
                SetTimerEx( "animfabri", 1000, false, "i", playerid);
				RemoveItem(playerid, 64, 1);
				TogglePlayerControllable(playerid, 0);
				JaFabricando[playerid] = 1;
			}
			if(listitem == 4)
			{
              	if(JaFabricando[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Ja reciclando, aguarde...");
                if(!PlayerHasItem(playerid, 38)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem uma KATANA no inventario");
                GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~Reciclando...",10000,3);
		        SetTimerEx( "TriturandoKatana", 10000, false, "i", playerid);
                SetTimerEx( "animfabri", 1000, false, "i", playerid);
				RemoveItem(playerid, 38, 1);
				TogglePlayerControllable(playerid, 0);
				JaFabricando[playerid] = 1;
			}
			if(listitem == 5)
			{
              	if(JaFabricando[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Ja reciclando, aguarde...");
                if(!PlayerHasItem(playerid, 40)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem uma PA no inventario");
		        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~Reciclando...",10000,3);
		        SetTimerEx( "TriturandoPA", 10000, false, "i", playerid);
                SetTimerEx( "animfabri", 1000, false, "i", playerid);
				RemoveItem(playerid, 40, 1);
				TogglePlayerControllable(playerid, 0);
				JaFabricando[playerid] = 1;
			}
		}
	}
	INV_OnDialogResponse(playerid, dialogid, response, listitem, inputtext[0]);
	return 1;
}
CallBack: AssarCarneCHRR(id)
{
    CraftInfo[id][IChurrasqueira] = 19847;
    CraftInfo[id][MChurrasqueira] -= 20;
    CraftInfo[id][AssandoC] = false;
    SetObjectCarne(id);
    return true;
}
stock SetObjectCarne(id)
{
    new Float:X_, Float:Y_, Float:Z_, Float:RX_, Float:RY_, Float:RZ_;
    if(CraftInfo[id][IChurrasqueira] == 2804){//carne crua set    
        X_ = CraftInfo[id][PosX];
        Y_ = CraftInfo[id][PosY];
        Z_ = CraftInfo[id][PosZ]+0.8474;

        RX_ = CraftInfo[id][RX];
        RY_ = CraftInfo[id][RY];
        RZ_ = CraftInfo[id][RZ]-90.0000;

        if(IsValidObject(CraftInfo[id][ObjectCarne])) DestroyObject(CraftInfo[id][ObjectCarne]);
        CraftInfo[id][ObjectCarne] = CreateObject(2804, X_, Y_, Z_, RX_, RY_, RZ_); //CJ_MEAT_1
    }
    else if(CraftInfo[id][IChurrasqueira] == 19847){
        X_ = CraftInfo[id][PosX];
        Y_ = CraftInfo[id][PosY];
        Z_ = CraftInfo[id][PosZ]+0.8723;

        RX_ = CraftInfo[id][RX];
        RY_ = CraftInfo[id][RY];
        RZ_ = CraftInfo[id][RZ]-90.0000;


        if(IsValidObject(CraftInfo[id][ObjectCarne])) DestroyObject(CraftInfo[id][ObjectCarne]);
        CraftInfo[id][ObjectCarne] = CreateObject(19847, X_, Y_, Z_, RX_, RY_, RZ_); //CJ_MEAT_1
    }else{                    
        if(IsValidObject(CraftInfo[id][ObjectCarne])) DestroyObject(CraftInfo[id][ObjectCarne]);
    }
    return true;
}
stock ShowListMember(playerid, clanid, dialogID, title[], button1[], button2[])
{
    new str[80], STRMember[600];
    for(new m=1; m < MAX_MEMBER_CLAN; m++){
        format(str, sizeof str, "{004ffd}Membro %d {FFFFFF}- %s\n", m, MemberClan[clanid][m]);
        strcat(STRMember, str);
    }
    ShowPlayerDialog(playerid, dialogID, DIALOG_STYLE_LIST, title, STRMember, button1, button2);
    return true;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
    return 1;
}
stock GetIdVTR(idveh)
{
    switch(GetVehicleModel(idveh)){
        case 596,597,598, 599: return true;
    }
    return false;
}

stock ShowVendaAlimentoDialog(playerid, number)
{
    new GeralStr[220], str[60];
    if(number == 1)//comida venda safe
    {
        for(new i = 0, t = sizeof(ComidasVenda); i < t; i++){
            format(str, sizeof str, "{FFFFFF}%s\t{33AA33}$ %d\n", ItemInfo[ComidasVenda[i][AlimentoID]][Item_Name], ComidasVenda[i][AlimentoValor]);
            strcat(GeralStr, str);
        }
        ShowPlayerDialog(playerid, D_VENDACOMIDA, DIALOG_STYLE_LIST, "Zona Segura - Comprar Comidas", GeralStr, "Comprar", "Voltar");
    }
    else if(number == 2)//bebida venda safe
    {
        for(new i = 0, t = sizeof(BebidasVenda); i < t; i++){
            format(str, sizeof str, "{FFFFFF}%s\t{33AA33}$ %d\n", ItemInfo[BebidasVenda[i][AlimentoID]][Item_Name], BebidasVenda[i][AlimentoValor]);
            strcat(GeralStr, str);
        }
        ShowPlayerDialog(playerid, D_VENDABEBIDA, DIALOG_STYLE_LIST, "Zona Segura - Comprar Bebidas", GeralStr, "Comprar", "Voltar");
    }
    return true;
}

public OnVehicleSpawn(vehicleid)
{
    new Float:vhealth;
    GetVehicleHealth(vehicleid, vhealth);
	if(vhealth < 290.0) vInfo[vehicleid][vHealth] = 290.0;
    SetVehicleHealth(vehicleid, vInfo[vehicleid][vHealth]);
	return 1;
}
public  OnVehicleDeath ( vehicleid, killerid )
{
    //vInfo[vehicleid][vCombustivel] = 0;
	//vInfo[vehicleid][vTemMotor] = false;
	return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
    new vehicleid = GetPlayerVehicleID(playerid);
    if ( newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER) {

        new Float:vhealth;
        GetVehicleHealth(vehicleid, vhealth);

        if (vhealth > 950.0)
        {
        	SetVehicleHealth(vehicleid, 950.0);
        }
    }
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
        if(pInfo[playerid][pConectado] == true && IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
	    {
			if(!IsABike(vehicleid))
			{
                VerGasosa(playerid);
				VerMotor(playerid);
			}else{
                LigarMotor(vehicleid);
            }
	    }
	}
	if(vInfo[vehicleid][vMTLigado] == true)
	{
		LigarMotor(vehicleid);
    }
    if(vInfo[vehicleid][vMTLigado] == false)
	{
		DesligarMotor(vehicleid);
    }
	if(oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_DRIVER && !IsABike(vehicleid)) // O jogador entrou no ve*culo como motorista
    {
        if(vInfo[vehicleid][vMTLigado] == false)SendClientMessage(playerid, Verde, "| VEICULO | Use /chavev ou clique 'Y' para ligar o veiculo.");
        ShowVelocimetro(playerid);
	}
    else
	{
	    HideVelocimetro(playerid);
	}
	return 1;
}
stock ShowVelocimetro(playerid)
{
    /*new idv = GetPlayerVehicleID(playerid);

    if(vInfo[idv][vTemMotor])
    {
        PlayerTextDrawBoxColor(playerid, velocimetro[playerid][9], 16711935);
        Motor_OffOn[playerid]=true;
    }else if(!vInfo[idv][vTemMotor])
    {
        PlayerTextDrawBoxColor(playerid, velocimetro[playerid][9], -1962934017);
        Motor_OffOn[playerid]=false;
    }
    new vehname[10];
    format(vehname, sizeof(vehname), "ID:_%d", idv);
    PlayerTextDrawSetString(playerid, velocimetro[playerid][6], vehname);*/
    SetTimerEx("AtualizarVelocimetro", 200 , false, "i" , playerid);
    for(new i; i < 9; i++) PlayerTextDrawShow(playerid, velocimetro[playerid][i]);
	return 1;
}
CallBack:AtualizarVelocimetro(playerid)
{
    new idv = GetPlayerVehicleID(playerid), Float:VidaV;
    GetVehicleHealth(idv, VidaV); 

    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	{
	    HideVelocimetro(playerid);
	}
	else
	{
	    new StrV[10];
	    format(StrV, sizeof(StrV), "%03d", GetVehicleSpeed(playerid));
		PlayerTextDrawSetString(playerid, velocimetro[playerid][1], StrV);

        PlayerTextDrawTextSize(playerid, velocimetro[playerid][5], 246.500000 + (vInfo[idv][vCombustivel] / 2), 75.000000);
        PlayerTextDrawShow(playerid, velocimetro[playerid][5]);

        PlayerTextDrawTextSize(playerid, velocimetro[playerid][6], 246.500000 + (VidaV / 10 / 2), 75.000000);
        PlayerTextDrawShow(playerid, velocimetro[playerid][6]);

		/*new StrC[10];
		format(StrC, sizeof(StrC), "%dL", vInfo[idv][vCombustivel]);
		PlayerTextDrawSetString(playerid, velocimetro[playerid][5], StrC);

        if(vInfo[idv][vTemMotor] && !Motor_OffOn[playerid])
        {
            PlayerTextDrawBoxColor(playerid, velocimetro[playerid][9], 16711935);
            PlayerTextDrawShow(playerid, velocimetro[playerid][9]);
            Motor_OffOn[playerid]=true;

        }else if(!vInfo[idv][vTemMotor] && Motor_OffOn[playerid]){
            PlayerTextDrawBoxColor(playerid, velocimetro[playerid][9], -1962934017);
            PlayerTextDrawShow(playerid, velocimetro[playerid][9]);
            Motor_OffOn[playerid]=false;
        }*/
		SetTimerEx("AtualizarVelocimetro" , 200 , false, "i" , playerid ) ;
	}
	return 1;
}
stock HideVelocimetro(playerid)
{
    for(new i; i < 9; i++) PlayerTextDrawHide(playerid, velocimetro[playerid][i]);
	return 1;
}

stock GetVehicleSpeed(playerid)
{
	new Float:vPos[3];
 	if(!IsPlayerInAnyVehicle(playerid)) return 1;
  	GetVehicleVelocity(GetPlayerVehicleID(playerid), vPos[0], vPos[1], vPos[2]);
   	return floatround((floatmul(floatsqroot(floatpower(vPos[0], 2.0) + floatpower(vPos[1], 2.0) + floatpower(vPos[2], 2.0)), 100.0) / 0.4463), floatround_floor);
}
stock VerMotor(playerid)
{
	new i = playerid;
    if(pInfo[i][pConectado] == true && IsPlayerConnected(i) && !IsPlayerNPC(i))
	{
		new vehicleid = GetPlayerVehicleID(i);
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsABike(vehicleid))
		{
			if(vInfo[vehicleid][vTemMotor] == false)
			{
				//SendClientMessage(i, Vermelho, "* Sem motor. coloque um motor no veiculo!.");
                DesligarMotor(vehicleid);
                GameTextForPlayer(i, "~r~Sem motor", 2000, 3);
				RemovePlayerFromVehicle(i);
                TogglePlayerControllable(i,1);
			}
		}
	}
	return 1;
}
stock VerGasosa(playerid)
{
	new i = playerid;
	if(pInfo[i][pConectado] == true && IsPlayerConnected(i) && !IsPlayerNPC(i))
	{
		new vehicleid = GetPlayerVehicleID(i);
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsABike(vehicleid))
		{
			if(vInfo[vehicleid][vCombustivel] == 0)
			{
                GameTextForPlayer(i, "~r~Sem Gasolina", 2000, 3);
                DesligarMotor(vehicleid);
				RemovePlayerFromVehicle(i);
                TogglePlayerControllable(i,1);
			}
		}
	}
	return 1;
}
CallBack:AtualizarGasolina()
{
    for(new v = 1, f = MAX_VEHICLES; v < f; v++){
	   if(IsValidVehicle(v) && vInfo[v][vCombustivel] > 0 && vInfo[v][vMTLigado] == true && !IsABike(v)) vInfo[v][vCombustivel]--;
    }
    return 1;
}

CallBack:AtualizarFS()
{
	foreach(new i : Player)
	{
		if(pInfo[i][pConectado] == true && IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
			if(pInfo[i][pFome] > 0) pInfo[i][pFome]--;
			if(pInfo[i][pSede] > 0) pInfo[i][pSede]--;
            if(pInfo[i][pFome] < 0) pInfo[i][pFome] = 0;
			if(pInfo[i][pSede] < 0) pInfo[i][pSede] = 0;
            UpdateFS(i);
			if(pInfo[i][pFome] == 0){
				Decrease_Health(i, 10);
				SetPlayerDrunkLevel(i, 4500);
				SendTXDMessage(i, "-10_de_vida.~n~Motivo:_Fome.");
			}
            if(pInfo[i][pSede] == 0){
				Decrease_Health(i, 10);
				SetPlayerDrunkLevel(i, 4500);
				SendTXDMessage(i, "-10_de_vida.~n~Motivo:_Sede.");
			}
			if(pInfo[i][pFome] <= 10 && pInfo[i][pFome] != 0) SendTXDMessage(i, "Voce_esta_com_fome.~n~Coma_algo_ou_perdera_vida.");
            if(pInfo[i][pSede] <= 10 && pInfo[i][pSede] != 0) SendTXDMessage(i, "Voce_esta_com_sede.~n~Beba_algo_ou_perdera_vida.");
		}
	}
	return 1;
}

stock DefinirRespawn(playerid){
    if(pInfo[playerid][pConectado] && morto[playerid]){
        if(pInfo[playerid][pCama] == 0)
        {
            new rnd = random(sizeof(Respawns));
            pInfo[playerid][pPosX] = Respawns[rnd][0]; 
            pInfo[playerid][pPosY] = Respawns[rnd][1]; 
            pInfo[playerid][pPosZ] = Respawns[rnd][2];
            pInfo[playerid][pInterior] = 0;
            pInfo[playerid][pVirtualW] = 0; 
        }else{
            new Float:P[3];
            new p=pInfo[playerid][pCama], idobj=CraftInfo[p][ObjectJ];
            if(!CraftInfo[p][Existe] || CraftInfo[p][Modelo] != 1800){
                pInfo[playerid][pCama]=0;
                new rnd = random(sizeof(Respawns));
                pInfo[playerid][pPosX] = Respawns[rnd][0]; pInfo[playerid][pPosY] = Respawns[rnd][1]; pInfo[playerid][pPosZ] = Respawns[rnd][2];
                pInfo[playerid][pInterior] = 0;
                pInfo[playerid][pVirtualW] = 0;
            }else{
                GetDynamicObjectPos(idobj, P[0], P[1], P[2]);
                pInfo[playerid][pPosX] = P[0]; pInfo[playerid][pPosY] = P[1]; pInfo[playerid][pPosZ] = P[2];
                pInfo[playerid][pInterior] = 0;
                pInfo[playerid][pVirtualW] = 0;
            }
        }
        SetSpawnInfo(playerid, 1, pInfo[playerid][pSkin], pInfo[playerid][pPosX], pInfo[playerid][pPosY], pInfo[playerid][pPosZ],0.0,0,0,0,0,0,0);
	}
    return true;
}
public OnPlayerRequestClass(playerid, classid)
{
	if(pInfo[playerid][pConectado]) DefinirRespawn(playerid), SpawnPlayer(playerid);
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    return 0;
}

stock ResetarPlayer(playerid)
{
	ResetPlayerInventory(playerid);
	ResetPlayerWeaponsEx(playerid);
	pInfo[playerid][pBackpack] = 8;
	pInfo[playerid][pFome] = 50;
	pInfo[playerid][pSede] = 50;
	pInfo[playerid][pTemRADIO] = 0;
	pInfo[playerid][pTemGPS] = 0;
    UpdateFS(playerid);
	return 1;
}

stock IsPlayerInFrontVehicle(playerid,vehicleid,Float:radius,Float:vehiclelength)
{
	new Float:x,Float:y,Float:z,Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetPlayerFacingAngle(vehicleid, a);
	x += (vehiclelength* floatsin(-a, degrees));
	y += (vehiclelength* floatcos(-a, degrees));
	return IsPlayerInRangeOfPoint(playerid,radius,x,y,z);
}
stock DroparMochila(playerid)
{
    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
    GetXYInFrontOfPlayer(playerid, X, Y, 1.0);
	// # Mochilas #
	switch(pInfo[playerid][pBackpack])
    {
        case 12: CreateDrop(0, X, Y, Z);
        case 20: CreateDrop(30, X, Y, Z);
        case 30: CreateDrop(2, X, Y, Z);
        case 40: CreateDrop(78, X, Y, Z);
    }
	return 1;
}
stock SetPlayerObject(playerid)
{
	switch(pInfo[playerid][pBackpack]){
        case 8: SetPlayerAttachedObject(playerid, 0, 363, 1, 0.2920, -0.1299, 0.1630, 0.0000, 88.1999, 0.0000, 0.8170, 0.5550, 0.9060, 0xFFFFFFFF, 0xFFFFFFFF);
        case 12: SetPlayerAttachedObject(playerid, 0, 3026, 1, -0.0219, -0.0579, 0.0020, -2.7000, -0.6000, 1.5000, 0.8170, 0.7720, 0.9180, 0xFFFFFFFF, 0xFFFFFFFF);
        case 20: SetPlayerAttachedObject(playerid, 0, 371, 1, 0.056999, -0.160999, 0.000000, 0.000000, 85.299964, 0.000000, 1.000000, 1.000000, 1.000000);
        case 30: SetPlayerAttachedObject(playerid, 0, 19559, 1, 0.005999, -0.158999, -0.006000, 0.000000, 86.299980, 0.000000, 1.000000, 1.000000, 1.000000);
        case 40: SetPlayerAttachedObject(playerid, 0, 1550, 1, 0.047000, -0.145999, 0.000000, 0.000000, 92.099998, 0.000000, 1.000000, 1.000000, 1.000000);
        default: RemovePlayerAttachedObject(playerid, 0);
    }
	return 1;
}
stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
    new Float:a;
    GetPlayerPos(playerid, x, y, a);
    GetPlayerFacingAngle(playerid, a);
    if (GetPlayerVehicleID(playerid)) {
        GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
    }
    x += (distance * floatsin(-a, degrees));
    y += (distance * floatcos(-a, degrees));
}

stock IsABike(vehicleid)
{
    switch(GetVehicleModel(vehicleid))
    {
        case 509, 510, 481:
        return 1;
    }
    return 0;
}
stock IsVehicleFullGas(vehiclemodel){
    switch(GetVehicleModel(vehicleid))
    {
        case 509, 510, 481:
        return 1;
    }
    return 0;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(vInfo[vehicleid][vLock] == true)
	{
        new Float:XX, Float:YY, Float:ZZ;
		GetPlayerPos(playerid, XX, YY, ZZ);
		SetPlayerPosEx(playerid, XX, YY, ZZ);
		SendClientMessage(playerid, Vermelho, "* Veiculo Trancado. E preciso da senha para abri-lo.");
		return 1;
	}
 	/*if(caido[playerid])
 	{
		new Float:XX, Float:YY, Float:ZZ;
		GetPlayerPos(playerid, XX, YY, ZZ);
		SetPlayerPosEx(playerid, XX, YY, ZZ);
		SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta caido. Nao e possivel subir no veiculo.");
 	}*/
 	if(Plataforma[playerid] == 0)
 	{
 		SetVehicleParamsForPlayer(vehicleid,playerid,0,0);
	}
	if(Plataforma[playerid] == 0 && IsAHeli(vehicleid))
	{
	    SetVehicleParamsForPlayer(vehicleid,playerid,0,0);
	}
    return 1;
}
stock PegarNome(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, MAX_PLAYER_NAME);
	return name;
}
CallBack:carregandodados(playerid)
{
    SetPlayerHealth(playerid, 999999999.0);
    //SetPlayerArmourEx(playerid, pInfo[playerid][pArmour]);
    MsgBoasVindas(playerid);
    PreloadAnims(playerid);
    SpawnPlayer(playerid);
    return 1;
}
stock SincronizarAttached(playerid)
{
    if(pInfo[playerid][pArmour] > 0){
        if(pInfo[playerid][pNvlColete] == 1){
            SetPlayerAttachedObject(playerid, SlotColete, 19904, 1, 0.0709, 0.0389, 0.0100, 0.0000, 90.3998, 177.8000, 1.1370, 1.1410, 1.0300, 0xFFFFFFFF, 0xFFFFFFFF);
        }else if(pInfo[playerid][pNvlColete] == 2){
            SetPlayerAttachedObject(playerid, SlotColete, 19142, 1, 0.0609, 0.0469, 0.0100, -1.8999, -0.8001, 1.2999, 1.1370, 1.1629, 1.0300, 0xFFFFFFFF, 0xFFFFFFFF); 
        }
    }else{RemovePlayerAttachedObject(playerid, SlotColete);}

    /*if(pInfo[playerid][pCapacete] > 0){
        SetPlayerAttachedObject(playerid, SlotCapacete, 19141, 2, 0.1129, 0.0100, -0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0490, 0xFFFFFFFF, 0xFFFFFFFF); 
    }else {RemovePlayerAttachedObject(playerid, SlotCapacete);}*/

    if(Equipado[playerid][MASCARA] == 1){
        SetPlayerAttachedObject(playerid, SlotMascara, 19472, 2, 0.0310, 0.1420, -0.0050, 4.2999, 88.4999, 83.5001, 1.0639, 1.4189, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF); // gasmask01 attached to the Head of 
    }else{RemovePlayerAttachedObject(playerid, SlotMascara);}

    /*=======================   FERRAMENTAS CARREGAR    =======================*/
    if(Equipado[playerid][CHAVE_COMBINADA] == 1){
        SetPlayerAttachedObject(playerid, SlotFerramenta_2, 19627, 5, 0.0799, 0.0389, -0.0150, 74.1000, -11.3000, -85.3999, 1.0000, 1.2350, 1.1270, 0xFFFFFFFF, 0xFFFFFFFF); // Wrench1 attached to the Left Hand of 
    }else{RemovePlayerAttachedObject(playerid, SlotFerramenta_2);}

    if(Equipado[playerid][CHAVE_DE_FENDA] == 1){
        SetPlayerAttachedObject(playerid, SlotFerramenta_1, 18644, 6, 0.0739, 0.0110, 0.0000, 0.0000, 170.2999, 0.0000, 1.0000, 1.0000, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF); // Screwdriver1 attached to the Right Hand of 
    }
    if(Equipado[playerid][MARTELO] == 1){
        SetPlayerAttachedObject(playerid, SlotFerramenta_1, 18635, 6, -0.0049, -0.0270, -0.0020, 0.0000, 10.6999, 0.0000, 1.0000, 1.0000, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF); // GTASAHammer1 attached to the Right Hand of 
    }
    if(Equipado[playerid][MARRETA] == 1){
        SetPlayerAttachedObject(playerid, SlotFerramenta_1, 19631, 6, 0.0419, 0.0519, 0.1179, 0.0000, -99.6999, 96.3000, 1.0000, 1.0000, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF); // SledgeHammer1 attached to the Right Hand of 
    }
    if(Equipado[playerid][PE_DE_CABRA] == 1){
        SetPlayerAttachedObject(playerid, SlotFerramenta_1, 18634, 6, 0.0729, 0.0300, 0.0200, 86.2000, 0.0000, 0.0000, 1.0000, 0.8439, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF); // GTASACrowbar1 attached to the Right Hand of 
    }
    if(Equipado[playerid][PE_DE_CABRA] == 0 && Equipado[playerid][CHAVE_DE_FENDA] == 0 && Equipado[playerid][MARTELO] == 0
    && Equipado[playerid][MARRETA] == 0)
    {
        RemovePlayerAttachedObject(playerid, SlotFerramenta_1);
    }
    return 1;
}
stock MsgBoasVindas(playerid)
{
	for(new i; i < 3; i++) SendClientMessage(playerid, -1, " ");
	if(pInfo[playerid][pVip] >= 1)
	{
        SendClientMessage(playerid, COR_VIP, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
        SendClientMessage(playerid, COR_VIP, "Dados Carregados. Seja Bem Vindo(a)!");
        SendClientMessage(playerid, COR_VIP, "Informacoes de sua conta:");
        SendClientMessage(playerid, COR_VIP, "Voce possui uma Conta VIP");
        new str[60];
        format(str, sizeof(str), "Valido por %s", ConvertTime(pInfo[playerid][pTempoVip]-gettime()));
        SendClientMessage(playerid, COR_VIP, str);
        SendClientMessage(playerid, COR_VIP, "Caso precise de ajuda use /senha.");
        SendClientMessage(playerid, COR_VIP, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}
    SendClientMessage(playerid, Verde, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
    SendClientMessage(playerid, Verde, "Dados Carregados. Seja Bem Vindo(a)!");
    SendClientMessage(playerid, Verde, "Informacoes de sua conta:");
    SendClientMessage(playerid, Verde, "Vip: Nao e Vip");
    SendClientMessage(playerid, Verde, "Caso precise de ajuda use /senha.");
    SendClientMessage(playerid, Verde, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
	return 1;
}
stock PreloadAnims(playerid)
{
    PreloadAnimLib(playerid,"DANCING");
    PreloadAnimLib(playerid,"HEIST9");
    PreloadAnimLib(playerid,"BOMBER");
    PreloadAnimLib(playerid,"RAPPING");
    PreloadAnimLib(playerid,"SHOP");
    PreloadAnimLib(playerid,"BEACH");
    PreloadAnimLib(playerid,"SMOKING");
    PreloadAnimLib(playerid,"FOOD");
    PreloadAnimLib(playerid,"ON_LOOKERS");
    PreloadAnimLib(playerid,"DEALER");
    PreloadAnimLib(playerid,"CRACK");
    PreloadAnimLib(playerid,"CARRY");
    PreloadAnimLib(playerid,"COP_AMBIENT");
    PreloadAnimLib(playerid,"PARK");
    PreloadAnimLib(playerid,"INT_HOUSE");
    PreloadAnimLib(playerid,"FOOD" );
    PreloadAnimLib(playerid,"ped" );
    PreloadAnimLib(playerid,"MISC" );
    PreloadAnimLib(playerid,"POLICE" );
    PreloadAnimLib(playerid,"GRAVEYARD" );
    PreloadAnimLib(playerid,"WUZI" );
    PreloadAnimLib(playerid,"SUNBATHE" );
    PreloadAnimLib(playerid,"PLAYIDLES" );
    PreloadAnimLib(playerid,"CAMERA" );
    PreloadAnimLib(playerid,"RIOT" );
    PreloadAnimLib(playerid,"DAM_JUMP" );
    PreloadAnimLib(playerid,"JST_BUISNESS" );
    PreloadAnimLib(playerid,"KISSING" );
    PreloadAnimLib(playerid,"GANGS" );
    PreloadAnimLib(playerid,"GHANDS" );
    PreloadAnimLib(playerid,"BLOWJOBZ" );
    PreloadAnimLib(playerid,"SWEET" );
	PreloadAnimLib(playerid,"SWORD" );
}

stock PreloadAnimLib(playerid, animlib[]) {
ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0); }

public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
    return 1;
}
/*stock GuardarArma(playerid){
    new wep, ammo2, ammo, weaponid, slot;
    for(new i; i<13; i++){
        
        GetPlayerWeaponData(playerid, i, wep, ammo2);
        if(wep == 0) continue;

        weaponid = B_Weapon_Data[playerid][B_Weapon][i];
        ammo = B_Weapon_Data[playerid][B_Ammo][i];

        if(wep > 0 && ammo2 == 0 && weaponid > 0){

            printf("Arma id: %d de %s guardada. ", weaponid, PegarNome(playerid));
            
            new itemW = WeaponItem(weaponid);
            if(itemW > 0){
                if(VerMochila(playerid, 1)){

                    new Float:Position[3];
                    GetPlayerPos(playerid, Position[0], Position[1], Position[2]);

                    SendClientMessage(playerid, Verde, "* {FFFFFF}Sua municao acabou e sua arma foi dropada, pois voce esta com o inventario cheio.");

                    //add item no inventario
                    CreateDrop(itemW, Position[0], Position[1], Position[2]);
                }else{ 
                    SendClientMessage(playerid, Verde, "* {FFFFFF}Sua municao acabou e sua arma foi enviada para o inventario.");
                    
                    //add item no inventario
                    AddItem(playerid, itemW, 1);
                }
            }
            AC_ResetWeaponPlayer(playerid, weaponid);
        } 
    }
    return true;
}*/
CallBack:verificacao(playerid)
{
    if(pInfo[playerid][pConectado])
	{
        if(GetPlayerPing(playerid) >= 1000)
        {
            new str[120]; format(str, sizeof str, "[PING] O Jogador %s foi kickado por estar com ping muito alto: %d | Limite: 1000", PegarNome(playerid), GetPlayerPing(playerid));
            SendClientMessageToAll(Vermelho, str);
            SetTimerEx("DelayedKick", 100, false, "i", playerid);
            return 1;
        }
        
        if(GetPlayerSkin(playerid) != pInfo[playerid][pSkin] && morto[playerid] == false && GetPlayerSkin(playerid) != 211 && GetPlayerSkin(playerid) != 217)
        {
            SendClientMessage(playerid, Verde, "* SKIN: {FFFFFF}Sua skin atual foi sincronizada.");
            SetPlayerSkin(playerid, pInfo[playerid][pSkin]);
        }
	    if(IsPlayerInAnyVehicle(playerid))
		{
            new vehicleid = GetPlayerVehicleID(playerid);
		    if(GetPVarInt(playerid, "ANTI_FLOODCAR") < gettime() && !IsABike(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
			    new Float:lata;
			    GetVehicleHealth(vehicleid, lata);
				if(lata <= 300.0)
			    {
			        SetPVarInt(playerid, "ANTI_FLOODCAR", gettime()+2);
					RemovePlayerFromVehicle(playerid);
                    //DarTapa(playerid, 2);
                    DesligarMotor(vehicleid);
                    vInfo[vehicleid][vHealth] = 290.0;
                    SetVehicleHealth(vehicleid, 290.0);
					SendClientMessage(playerid, Vermelho, "| VEICULO | Muito danificado, use uma toolbox para conserta-lo.");
                    return 1;
                }
                if(vInfo[vehicleid][vCombustivel] <= 0)
    			{
                    SetPVarInt(playerid, "ANTI_FLOODCAR", gettime()+2);
                    //DarTapa(playerid, 2);
                    DesligarMotor(vehicleid);
                    RemovePlayerFromVehicle(playerid);
    				SendClientMessage(playerid, Vermelho, "| VEICULO | Sem combustivel. Use um galao para abastecer.");
    			}else if(!vInfo[vehicleid][vTemMotor])
    			{
                    SetPVarInt(playerid, "ANTI_FLOODCAR", gettime()+2);
                    //DarTapa(playerid, 2);
                    DesligarMotor(vehicleid);
                    RemovePlayerFromVehicle(playerid);
    				SendClientMessage(playerid, Vermelho, "| VEICULO | Sem Motor. Use /motor na frente do veiculo.");
    			}
            }
            if(PiscaCarColor[playerid] && pInfo[playerid][pVip] != 0){
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
                    ChangeVehicleColor(vehicleid, PVA(), PVA());
                }
            }
            if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && PiscaCarLuz[playerid] && pInfo[playerid][pVip] != 0)
            {
                if(PiscarLuzesState[playerid] == true)
                {
                    PiscarLuzesState[playerid] = false;
                    new engine, lights, alarm, doors, bonnet, boot, objective;
                    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
                    SetVehicleParamsEx(vehicleid, engine, 0, alarm, doors, bonnet, boot, objective);
                }
                else
                {
                    PiscarLuzesState[playerid] = true;
                    new engine, lights, alarm, doors, bonnet, boot, objective;
                    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
                    SetVehicleParamsEx(vehicleid, engine, 1, alarm, doors, bonnet, boot, objective);
                }
            }
		}
		if(NoEvento[playerid] == true)
	    {
			if(GetPVarInt(playerid, "TempoEntrouEvento") < gettime())
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				if(!IsCarEvento(vehicleid))
				{
					SendClientMessage(playerid, AMARELO, "* Voce foi removido do evento por nao estar no veiculo");
					new gstring2[100];
			  	    format(gstring2, sizeof gstring2, "[EVENTO-AVISO] {FFFFFF}%s(%d) {004ffd}saiu do veiculo e foi removido do evento.", PegarNome(playerid), playerid);
				    MensageAdmin(COR_ADMIN, gstring2);
			        SetPlayerPosEx(playerid, pInfo[playerid][pPosX],pInfo[playerid][pPosY],pInfo[playerid][pPosZ]);
					SetPlayerInterior(playerid, 0);
					NoEvento[playerid] = false;
				}
			}
		}
    }
   	if(pInfo[playerid][pAdmin] < 5)
   	{
	   	new armaerrada = GetPlayerWeapon(playerid);
	    if(!WeaponsServer(armaerrada))
       	{
			if(GetPVarInt(playerid, "ANTIFLOODAC") > gettime()) return 1;
			SetPVarInt(playerid, "ANTIFLOODAC", gettime()+20);
            new fs[170], gun[70];
            GetWeaponName(armaerrada, gun, sizeof(gun));
            format(fs, sizeof(fs), "<Anti-Cheat> {FFFFFF}(%d)%s {004ffd}foi kikado por estar de {FFFFFF} %s{004ffd}!", playerid, PegarNome(playerid), gun);
	        MensageAdmin(COR_ADMIN, fs);
	        RemovePlayerWeapon(playerid, armaerrada);
	       	SetTimerEx("banindo", 300, false, "i", playerid);
        }
    }
	if(!IsPlayerNPC(playerid))
	{
	    if(pInfo[playerid][pConectado] == true)
		{
		   // AtualizarHud(playerid);
			new String[20];
	        format(String, sizeof(String), "PED:_%i", PlayerPed(playerid));
			PlayerTextDrawSetString(playerid, TextPHud[playerid][14], String);

            if(PlayerInPrivateArea(playerid, 264.5642, 1852.7498, 282.4474, 1874.4935, 14.0))
            {
                if(!GatePrivateOpen[PORTAO_SALA_AREA51]){// se o portao estiver fechado
                    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce foi jogador para fora da sala, pois o portao da mesma esta fechado.");
                    SetPlayerPosEx(playerid, 284.8763,1869.3140,8.7578);
                }
            }

            if(PlayerInPrivateArea(playerid, 1674.409667, -2612.453125, 1862.166015, -2472.276611, 51.0))
            {
                if(!GatePrivateOpen[PORTAO_AREA_AEROPORTO]){// se o portao estiver fechado
                    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce foi jogador para fora da area, pois o portao da mesma esta fechado.");
                    new idv;
                    idv = GetPlayerVehicleID(playerid);
                    if(IsPlayerInAnyVehicle(playerid)){
                        SetVehiclePos(idv, 1888.9153,-2605.0095,13.2743);
                    }
                    SetPlayerPosEx(playerid, 1862.9882,-2590.7644,13.5469);
                }
            }

            if(IsPlayerInArea(playerid, 35.03363, 1763.359, 408.7256, 2125.373))
            {
                if(GetPVarInt(playerid, "TimeDano") > gettime()) return 1;
                SetTimerEx("ZoneDano", 15000, false, "i", playerid);
                SetPVarInt(playerid, "TimeDano", gettime()+15);
            }
        }
	}
    return 1;
}
stock AtualizarHud(playerid)
{
   /* new municao, arma;
    arma = GetPlayerWeapon(playerid);
    municao = GetPlayerAmmo(playerid);
    new strweapon[30], gunname[30], strr[20];
    GetWeaponNameEx(arma, gunname, sizeof gunname);

    format(strweapon, sizeof strweapon, "Arma:_%s", gunname);
    format(strr, sizeof strr, "Municao:_%d", municao);
    PlayerTextDrawSetString(playerid, TextPHud[playerid][8], strweapon);//arma name
    PlayerTextDrawSetString(playerid, TextPHud[playerid][9], strr);//muni arma*/
    return 1;
}
stock PlayerPed(playerid)
{
	new ped;
	new Float:XX, Float:YY, Float:ZZ;
	GetPlayerPos(playerid, XX, YY,ZZ);
	foreach(new i : Player){
	    if(IsPlayerInRangeOfPoint(i, 300.0, XX, YY, ZZ) && specing[i] == 0 && !pInfo[i][pDuty]){
		    if(i != playerid) ped++;
	    }
	}
	return ped;
}
stock LoadCraft(id)
{
	new file[64];
	new str[128];
    format(file, 64, "Data/Crafts/%d.ini", id);
    if(DOF2_FileExists(file))
    {
		format(CraftInfo[id][Dono], MAX_PLAYER_NAME, DOF2_GetString(file, "Dono"));
		CraftInfo[id][PosX] = DOF2_GetFloat(file, "PosX" );
		CraftInfo[id][PosY] = DOF2_GetFloat(file, "PosY" );
		CraftInfo[id][PosZ] = DOF2_GetFloat(file, "PosZ" );
		CraftInfo[id][RX] = DOF2_GetFloat(file, "RX" );
		CraftInfo[id][RY] = DOF2_GetFloat(file, "RY" );
		CraftInfo[id][RZ] = DOF2_GetFloat(file, "RZ" );
		CraftInfo[id][metallife] = DOF2_GetInt(file, "Metal" );

        CraftInfo[id][upgrade] = DOF2_GetInt(file, "upgrade");
        CraftInfo[id][Modelo] = DOF2_GetInt(file, "Modelo");

        //================ MESA DE CRAFT==================

        if(CraftInfo[id][Modelo] == 3383){
            CraftInfo[id][ItemM1] = DOF2_GetInt(file, "ItemM1");
            CraftInfo[id][QuantiaIM1] = DOF2_GetInt(file, "QuantiaIM1");
            CraftInfo[id][ItemM2] = DOF2_GetInt(file, "ItemM2");
            CraftInfo[id][QuantiaIM2] = DOF2_GetInt(file, "QuantiaIM2");
        }

        //CraftInfo[id][metallife] = GetHealthCraft(id);
        if(IsPortaum(id))
        {
            format(CraftInfo[id][Senha], 60, DOF2_GetString(file, "Senha"));
            CraftInfo[id][Fechada] = true;
        }

        if(CraftInfo[id][Modelo] == 19831){
            CraftInfo[id][IChurrasqueira] = DOF2_GetInt(file, "IChurrasqueira");
            CraftInfo[id][MChurrasqueira] = DOF2_GetInt(file, "MChurrasqueira");
            SetObjectCarne(id);
        }
		CraftInfo[id][ObjectJ] = CreateDynamicObject(CraftInfo[id][Modelo], CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], CraftInfo[id][RX], CraftInfo[id][RY], CraftInfo[id][RZ]);
		format(str, 128, "{81d358}/editarp {d3cd58}%d\n{58aed3}Protecao: %d",id, CraftInfo[id][metallife]);
  		CraftInfo[id][Text3Dp] = CreateDynamic3DTextLabel(str, 0xFFFF00FF, CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 5.0);
		CraftInfo[id][Existe] = 1;

		//Verificacao se o dono da parede nao entra faz quanto tempo
        new DBResult:result, query[70];
        format(query, sizeof(query), "SELECT * FROM Contas WHERE PlayerName='%q'", CraftInfo[id][Dono]);
        result = db_query(Database, query);
        if(db_num_rows(result) > 0)
        {
	    	if(getdate() > db_get_field_assoc_int(result, "UltimoLogin"))
	    	{
				DestruirCraft("BOT-DOS", id);
	    	}
    	}
        db_free_result(result);
	}
	return 1;
}
stock DestruirCraft(nickname[], i){           
    if(IsValidDynamicObject(CraftInfo[i][ObjectJ])) DestroyDynamicObject(CraftInfo[i][ObjectJ]);
    if(IsValidDynamic3DTextLabel(CraftInfo[i][Text3Dp])) DestroyDynamic3DTextLabel(CraftInfo[i][Text3Dp]);

	CraftInfo[i][Existe] = 0;
	CraftInfo[i][Modelo] = 0;
	CraftInfo[i][PosX] = 0;
	CraftInfo[i][PosY] = 0;
	CraftInfo[i][PosZ] = 0;
	CraftInfo[i][RX] = 0;
	CraftInfo[i][RY] = 0;
	CraftInfo[i][RZ] = 0;

	new file[40]; format(file, sizeof(file), "Data/Crafts/%d.ini", i);
	if(DOF2_FileExists(file)) DOF2_RemoveFile(file);

	printf("LOG-DESTRUIR: O(a) %s destruiu a Craft id: %d de %s.", nickname, i, CraftInfo[i][Dono]);
    return true;
}

stock CarregarTritu(id)
{
	new file[64];
	new str[128];
    format(file, 64, "Data/Recicladores/%d.ini", id);
    if(DOF2_FileExists(file))
    {
        //19360 = 19360;
        format(Tritu[id][DonoRCC], MAX_PLAYER_NAME, DOF2_GetString(file, "DonoRCC" ));
		Tritu[id][PosX] = DOF2_GetFloat(file, "PosX" );
		Tritu[id][PosY] = DOF2_GetFloat(file, "PosY" );
		Tritu[id][PosZ] = DOF2_GetFloat(file, "PosZ" );
		Tritu[id][RX] = DOF2_GetFloat(file, "RX" );
		Tritu[id][RY] = DOF2_GetFloat(file, "RY" );
		Tritu[id][RZ] = DOF2_GetFloat(file, "RZ" );
		Tritu[id][ObjectT] = CreateDynamicObject(19915, Tritu[id][PosX], Tritu[id][PosY], Tritu[id][PosZ], Tritu[id][RX], Tritu[id][RY], Tritu[id][RZ]);
		format(str, 128, "{81d358}/reciclar\nRecicladora: {FFFFFF}[%d]",id);
  		Tritu[id][Text3Dt] = CreateDynamic3DTextLabel(str, 0xFFFF00FF, Tritu[id][PosX], Tritu[id][PosY], Tritu[id][PosZ], 10.0);
		Tritu[id][Existe] = 1;
	}
	return 1;
}
stock PVA()
{
new aleat = random(20);
if(aleat == 0) return 159;
if(aleat == 1) return 152;
if(aleat == 2) return 144;
if(aleat == 3) return 237;
if(aleat == 4) return 240;
if(aleat == 5) return 101;
if(aleat == 6) return 121;
if(aleat == 7) return 151;
if(aleat == 8) return 147;
if(aleat == 9) return 605;
if(aleat == 10) return 158;
if(aleat == 11) return 152;
if(aleat == 12) return 0;
if(aleat == 13) return 1;
if(aleat == 14) return 166;
if(aleat == 15) return 278;
if(aleat == 16) return 288;
if(aleat == 17) return 6;
if(aleat == 18) return 398;
if(aleat == 19) return 643;
return 1;
}
stock SetCadeia(playerid, tempo, reason[])
{
    new String[100], str[50];
    format(String, sizeof(String), "[CADEIA-STAFF] {FFFFFF}%s {808080}foi preso. Motivo: {FFFFFF}%s", PegarNome(playerid), reason);
    SendClientMessageToAll(Preto, String);
    SetPlayerPosEx(playerid, 322.197998,302.497985,999.148437);
    SetPlayerInterior(playerid, 5);
    TogglePlayerControllable(playerid,1);
    pInfo[playerid][pPreso] = tempo * 60;
    format(str, sizeof(str), "Presos/%s.ini", PegarNome(playerid));
    if(!DOF2_FileExists(str)) DOF2_CreateFile(str);
    DOF2_SetInt(str, "Preso", pInfo[playerid][pPreso]);
    DOF2_SetString(str, "Motivo", reason);
    DOF2_SetString(str, "Staff", "BOT-Dos");
    TimerPreso[playerid] = SetTimerEx("TempoPreso", 1000, true, "i", playerid);
    DOF2_SaveFile();
    return 1;
}
stock SetPlayerCoin(playerid, quantia) 
{
    pInfo[playerid][pCoins] += quantia;
    new str[25]; format(str, sizeof str, "Coins:_%d", pInfo[playerid][pCoins]);
    PlayerTextDrawSetString(playerid, TextPHud[playerid][6], str);
    return true;
}

stock ResetPlayerMoneyEx(playerid)
{
    pInfo[playerid][pDinheiro] = 0;
    ResetPlayerMoney(playerid);
    //new str[10]; format(str, sizeof str, "$_%d", pInfo[playerid][pDinheiro]);
    //PlayerTextDrawSetString(playerid, TextPHud[playerid][25], str);
    return 1;
}
stock SetPlayerMoney(playerid, quantidade)
{
    pInfo[playerid][pDinheiro] += quantidade;
    GivePlayerMoney(playerid, quantidade);
    //new str[16]; format(str, sizeof str, "$_%s", ConvertToQuantia(pInfo[playerid][pDinheiro]));
    //PlayerTextDrawSetString(playerid, TextPHud[playerid][25], str);
    return 1;
}

stock ResetPlayerFerro(playerid){
    pInfo[playerid][pFerro] = 0;
    new str[30]; format(str, sizeof str, "ferros:_%s", ConvertToQuantia(pInfo[playerid][pFerro]));
    PlayerTextDrawSetString(playerid, TextPHud[playerid][5], str);
    return true;
}
stock SetPlayerFerro(playerid, irons){
    pInfo[playerid][pFerro] += irons;
    new str[30]; format(str, sizeof str, "ferros:_%s", ConvertToQuantia(pInfo[playerid][pFerro]));
    PlayerTextDrawSetString(playerid, TextPHud[playerid][5], str);
    return true;
}
stock ResetPlayerMadeira(playerid){
    pInfo[playerid][pMadeira] = 0;
    new str[30]; format(str, sizeof str, "madeiras:_%s", ConvertToQuantia(pInfo[playerid][pMadeira]));
    PlayerTextDrawSetString(playerid, TextPHud[playerid][1], str);
    return true;
}
stock SetPlayerMadeira(playerid, madeira){
    pInfo[playerid][pMadeira] += madeira;
    new str[30]; format(str, sizeof str, "madeiras:_%s", ConvertToQuantia(pInfo[playerid][pMadeira]));
    PlayerTextDrawSetString(playerid, TextPHud[playerid][1], str);
    return true;
}
stock SetHourJogada(playerid, horas)
{
    pInfo[playerid][pHorasJ] = horas;
    new str2[25]; format(str2, sizeof str2, "Horas_Jogadas:_%d", pInfo[playerid][pHorasJ]);
    //PlayerTextDrawSetString(playerid, TextPHud[playerid][10], str2);
    return 1;
}
stock CarregarArvore(id)
{
	new file[64];
	new str[128];
    format(file, 64, "Data/Arvores/%d.ini", id);
    if(DOF2_FileExists(file))
    {
		Arvore[id][VidaArvore] = 200;
		Arvore[id][PosX] = DOF2_GetFloat(file, "PosX" );
		Arvore[id][PosY] = DOF2_GetFloat(file, "PosY" );
		Arvore[id][PosZ] = DOF2_GetFloat(file, "PosZ" );
		Arvore[id][RX] = DOF2_GetFloat(file, "RX" );
		Arvore[id][RY] = DOF2_GetFloat(file, "RY" );
		Arvore[id][RZ] = DOF2_GetFloat(file, "RZ" );
  		format(str, 128, "{c4dd30}- Arvore %d\n{C0C0C0}Madeiras: %d",id, Arvore[id][VidaArvore]);
  		Arvore[id][TextArvore] = CreateDynamic3DTextLabel(str, 0xFFFF00FF, Arvore[id][PosX], Arvore[id][PosY], Arvore[id][PosZ], 30.0);
  		Arvore[id][ObjectA] = CreateDynamicObject (660, Arvore[id][PosX], Arvore[id][PosY], Arvore[id][PosZ]-1, 0.0, 0.0, 0.0);
		Arvore[id][Existe] = 1;
	}
	return 1;
}

stock SalvarPedra(id)
{
	new file[64];
  	format(file, sizeof(file), "Data/Pedras/%d.ini", id);
	if(!DOF2_FileExists(file)) DOF2_CreateFile(file);
	DOF2_SetFloat(file, "PosX", Pedra[id][PosX]);
	DOF2_SetFloat(file, "PosY", Pedra[id][PosY]);
	DOF2_SetFloat(file, "PosZ", Pedra[id][PosZ]);
	DOF2_SetFloat(file, "RX", Pedra[id][RX]);
	DOF2_SetFloat(file, "RY", Pedra[id][RY]);
	DOF2_SetFloat(file, "RZ", Pedra[id][RZ]);
	DOF2_SaveFile();
	return 1;
}
stock CarregarPedra(id)
{
	new file[64];
	new str[128];
    format(file, 64, "Data/Pedras/%d.ini", id);
    if(DOF2_FileExists(file))
    {
		Pedra[id][VidaPedra] = 300;
		Pedra[id][PosX] = DOF2_GetFloat(file, "PosX" );
		Pedra[id][PosY] = DOF2_GetFloat(file, "PosY" );
		Pedra[id][PosZ] = DOF2_GetFloat(file, "PosZ" );
		Pedra[id][RX] = DOF2_GetFloat(file, "RX" );
		Pedra[id][RY] = DOF2_GetFloat(file, "RY" );
		Pedra[id][RZ] = DOF2_GetFloat(file, "RZ" );
		Pedra[id][ObjectPD] = CreateDynamicObject(747, Pedra[id][PosX], Pedra[id][PosY], Pedra[id][PosZ]-1.5, Pedra[id][RX], Pedra[id][RY], Pedra[id][RZ]);
  		format(str, 128, "{04bef3} * Pedra *\n{C0C0C0}id: %d\n{C0C0C0}Irons: %d",id, Pedra[id][VidaPedra]);
  		Pedra[id][TextPedra] = CreateDynamic3DTextLabel(str, 0x00FF00FF, Pedra[id][PosX], Pedra[id][PosY], Pedra[id][PosZ], 5.0);
		Pedra[id][Existe] = 1;
	}
	return 1;
}


stock CarregarCaixa(id)
{
	new file[64];
	new str[200], strr[20], strrr[20];
	//new str[128];
    format(file, 64, "Data/Caixas/%d.ini", id);
    if(DOF2_FileExists(file))
    {
        format(Caixa[id][Dono], MAX_PLAYER_NAME, DOF2_GetString(file, "Dono"));
        Caixa[id][ModelC] = DOF2_GetInt(file, "ModeloC");
		Caixa[id][PosX] = DOF2_GetFloat(file, "PosX" );
		Caixa[id][PosY] = DOF2_GetFloat(file, "PosY" );
		Caixa[id][PosZ] = DOF2_GetFloat(file, "PosZ" );
		Caixa[id][RX] = DOF2_GetFloat(file, "RX" );
		Caixa[id][RY] = DOF2_GetFloat(file, "RY" );
		Caixa[id][RZ] = DOF2_GetFloat(file, "RZ" );
		Caixa[id][caberta] = DOF2_GetBool(file, "aberta" );
        Caixa[id][Upgrade] = DOF2_GetInt(file, "upgrade" );
        if(Caixa[id][ModelC] == 1271)
        {
            for(new c=0;c<15;c++){
                format(strr, sizeof strr, "Item%d", c);
                Box_Item[id][c][ItemC] = DOF2_GetInt(file, strr);
                format(strrr, sizeof strrr, "Quantia%d", c);
                Box_Item[id][c][QuantiaC] = DOF2_GetInt(file, strrr);
            }
        }
        if(Caixa[id][ModelC] == 3014)
        {
            new w_str[20], m_str[25];
            for(new w=0; w < 20; w++)
            {
                format(w_str, sizeof w_str, "Weapon_%d", w);
                WeaponBox[id][w][ArmaID] = DOF2_GetInt(file, w_str);
                format(m_str, sizeof m_str, "Ammunition_%d", w);
                WeaponBox[id][w][MunicaoID] = DOF2_GetInt(file, m_str);
            }
        }
        if(Caixa[id][ModelC] == 1271){//caixa de itens
            Caixa[id][ObjectC] = CreateDynamicObject(Caixa[id][ModelC], Caixa[id][PosX], Caixa[id][PosY], Caixa[id][PosZ]-0.6, Caixa[id][RX], Caixa[id][RY], Caixa[id][RZ]);
            if(Caixa[id][Upgrade] == 2){
                SetDynamicObjectMaterial(Caixa[id][ObjectC], 0, 13659, "8bars", "AH_gbarrier", 0xFFFFFFFF);
            }else if(Caixa[id][Upgrade] == 3){
                SetDynamicObjectMaterial(Caixa[id][ObjectC], 0, 16640, "a51", "a51_blastdoor", 0xFFFFFFFF);
            }
            format(str, 200, "{0c76f5}Caixa [%d]\n{0c76f5}Dono: {FFFFFF}%s\n{0c76f5}Stats: {FFFFFF}%s\n{0c76f5}Upgrade: {FFFFFF}%s\n{0c76f5}Clique {FFFFFF}'N' {0c76f5}ou Digite {FFFFFF}/caixa",id, Caixa[id][Dono], Caixa[id][caberta] ? ("{00FF00}Aberta") : ("{B22222}Fechada"), GetUpgradeBoxName(id));
        }
        else if(Caixa[id][ModelC] == 3014){//caixa de equipamentos
		    Caixa[id][ObjectC] = CreateDynamicObject(Caixa[id][ModelC], Caixa[id][PosX], Caixa[id][PosY], Caixa[id][PosZ]-0.8, Caixa[id][RX], Caixa[id][RY], Caixa[id][RZ]);
  		    format(str, 200, "{0c76f5}Caixa de equipamentos[%d]\n{0c76f5}Dono: {FFFFFF}%s\n{0c76f5}Stats: {FFFFFF}%s\n{0c76f5}Clique {FFFFFF}'N' {0c76f5}ou Digite {FFFFFF}/caixa",id, Caixa[id][Dono], Caixa[id][caberta] ? ("{00FF00}Aberta") : ("{B22222}Fechada"));
        }
  	    Caixa[id][LabelC] = CreateDynamic3DTextLabel(str, -1, Caixa[id][PosX], Caixa[id][PosY], Caixa[id][PosZ]-0.3, 2.0);
		Caixa[id][Existe] = 1;
		//1271
        //3014 CAIXA ARMA
        //Verificacao se o dono da caixa nao entra faz quanto tempo
		/*new DBResult:result, query[70];
        format(query, sizeof(query), "SELECT * FROM Contas WHERE PlayerName='%q'", Caixa[id][Dono]);
        result = db_query(Database, query);
        if(db_num_rows(result) > 0)
        {
	    	if(getdate() > db_get_field_assoc_int(result, "UltimoLogin"))
	    	{
				DestroyDynamicObject(Caixa[id][ObjectC]);
				Caixa[id][Existe] = 0;
				Caixa[id][PosX] = 0;
				Caixa[id][PosY] = 0;
				Caixa[id][PosZ] = 0;
				Caixa[id][RX] = 0;
				Caixa[id][RY] = 0;
				Caixa[id][RZ] = 0;
				DOF2_RemoveFile(file);
				DestroyDynamic3DTextLabel(Caixa[id][LabelC]);
			    printf("* Server: O BOT-Dos destruiu a caixa id: %d de %s.", id, Caixa[id][Dono]);
	    	}
    	}
        db_free_result(result);*/
	}
	return 1;
}
stock inet_aton(const ip[])
{
    new ipv = strval(ip) << 24, pos = 0;
    while (pos < 15 && ip[pos++] != '.') {}
    ipv += strval(ip[pos]) << 16;
    while (pos < 15 && ip[pos++] != '.') {}
    ipv += strval(ip[pos]) << 8;
    while (pos < 15 && ip[pos++] != '.') {}
    ipv += strval(ip[pos]);
    return ipv;
}
stock log_new_join(PlayerID)
{
    new ip[24];
    GetPlayerIp(PlayerID, ip, sizeof(ip));
    new ipv = inet_aton(ip);

    ipjoinlog[autoinc_join_sequence][ip_add]    = ipv;
    ipjoinlog[autoinc_join_sequence][timestamp] = tickcount();

    autoinc_join_sequence++;

    if(autoinc_join_sequence >= max_joins_log) autoinc_join_sequence = 0;
}
stock number_joins_time_range(PlayerID, max_time)
{
    new ip[24];
    GetPlayerIp(PlayerID, ip, sizeof(ip));

    new ipv = inet_aton(ip);
    new counted = 0;

    forjoin(ipjoinlog, I)
    {
        if(ipjoinlog[I][ip_add] != ipv)continue; // different IP.
        if(GetTimeDistance(tickcount(), ipjoinlog[I][timestamp]) <= max_time) counted++;
    }
    return counted;
}

stock PertoTritu(playerid)
{
	new id = -1, Float: distanciaA = 6.0, Float: distanciaB;
	for(new i; i < MAX_TRITU; i++)
	{
		if(!Tritu[i][Existe]) continue;
	    distanciaB = GetPlayerDistanceFromPoint(playerid, Tritu[i][PosX], Tritu[i][PosY], Tritu[i][PosZ]);

		if(distanciaB <= distanciaA)
		{
			distanciaA = distanciaB;
			id = i;
			break;
		}
	}
	return id;
}

stock GetPlayerRangeCraft(playerid)
{
	new id = -1, Float: distanciaA = 3.0, Float: distanciaB;
	for(new i=1 ; i < MAX_CRAFTS; i++)
	{
		if(!CraftInfo[i][Existe]) continue;
    	distanciaB = GetPlayerDistanceFromPoint(playerid, CraftInfo[i][PosX], CraftInfo[i][PosY], CraftInfo[i][PosZ]);
    	if(distanciaB <= distanciaA)
    	{
    		distanciaA = distanciaB;
    		id = i;
    		break;
        }
	}
	return id;
}

stock GetPlayerRangePorta(playerid)
{
	new id = -1, Float: distanciaA = 2.0, Float: distanciaB;
	for(new i=1; i < MAX_CRAFTS; i++)
	{
		if(!CraftInfo[i][Existe]) continue;
        if(IsPortaum(i))
        {
    	    distanciaB = GetPlayerDistanceFromPoint(playerid, CraftInfo[i][PosX], CraftInfo[i][PosY], CraftInfo[i][PosZ]);
    		if(distanciaB <= distanciaA)
    		{
    			distanciaA = distanciaB;
    			id = i;
    			break;
    		}
        }
	}
	return id;
}
stock GetPlayerRangeCaixa(playerid)
{
	new id = -1;
	for(new i; i < MAX_CAIXA; i++){
		if(Caixa[i][Existe]){
		    if(IsPlayerInRangeOfPoint(playerid, 1.0, Caixa[i][PosX], Caixa[i][PosY], Caixa[i][PosZ])){
				id = i;
				break;
			}
		}
	}
	return id;
}
stock GetPlayerRangePedra(playerid)
{
	new id = -1, Float: distanciaA = 2.0, Float: distanciaB;
	for(new i; i < MAX_PEDRAS; i++)
	{
		if(!Pedra[i][Existe]) continue;
	    distanciaB = GetPlayerDistanceFromPoint(playerid, Pedra[i][PosX], Pedra[i][PosY], Pedra[i][PosZ]);

		if(distanciaB <= distanciaA)
		{
			distanciaA = distanciaB;
			id = i;
			break;
		}
	}
	return id;
}
stock GetPlayerRangeArvore(playerid)
{
	new id = -1, Float: distanciaA = 2.0, Float: distanciaB;
	for(new i; i < MAX_ARVORES; i++)
	{
		if(!Arvore[i][Existe]) continue;
	    distanciaB = GetPlayerDistanceFromPoint(playerid, Arvore[i][PosX], Arvore[i][PosY], Arvore[i][PosZ]);

		if(distanciaB <= distanciaA)
		{
			distanciaA = distanciaB;
			id = i;
			break;
		}
	}
	return id;
}
stock PlayerProx(playerid,playerid2) //By Slick (Edited by Sacky)
{
    new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
    new Float:dis;
    GetPlayerPos(playerid,x1,y1,z1);
    GetPlayerPos(playerid2,x2,y2,z2);
    dis = floatsqroot((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1)+(z2-z1)*(z2-z1));
    return floatround(dis);
}

/*CMD:pegaragua(playerid){
    if(!Player_InWater(playerid)) return SendClientMessage(playerid, -1, "VocÃª nÃ£o estÃ¡ em rios ou lagos");
    SendClientMessage(playerid, -1, "Vc pego agua");
    return 1;
}

Player_InWater(playerid){
    new fun[16], anim[32];
    GetAnimationName(GetPlayerAnimationIndex(playerid), fun, sizeof(fun), anim, sizeof(anim));
    if(!strcmp(fun, "SWIM", true) && !isnull(fun)) return 1;
    return 0;
}

DCMD:teste(user, channel, params[]) {

    if(strlen(params) < 2 || strlen(params) > 90) return DCC_SendChannelMessage(channel, "DOS | Texto muito grande ou nada escrito!");
    new str[100];
    format(str, sizeof str, "%s", params);
    DS_LogsDOS("808040783445622815", "CAMISINHA", embed_blue, str, INVALID_LINK);
    return 1;
}

CMD:destruiritens(playerid, params[])
{
    if(pInfo[playerid][pAdmin] < 10) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao pode executar este comando.");
    SendClientMessage(playerid, -1, "Voce destruiu todos os itens na DataBase, use /reloot para sumirem.");
    db_free_result(db_query(Database, "DELETE FROM `Itens`"));
    return 1;
} */
CMD:duplicarcraft(playerid, params[])
{
    if(permitidoparede == false) return SendClientMessage(playerid, COR_VERMELHO, "</Anti-bug> Aguarde alguns segundos, alguem ja esta construindo uma Craft.");
    new idc;
    if(sscanf(params, "d", idc)) return SendClientMessage(playerid, Vermelho, "[DICA] {FFFFFF}/duplicarcraft [id-craft]");

    if(!CraftInfo[idc][Existe]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}A craft que voce esta selecionando nao existe.");
    if(strcmp(PegarNome(playerid), CraftInfo[idc][Dono], false)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}A craft que voce esta selecionando nao pertence a voce.");
    new Float:X, Float:Y, Float:Z;
    GetDynamicObjectPos(CraftInfo[idc][ObjectJ], X, Y, Z);

    if(!IsPlayerInRangeOfPoint(playerid, 10.0, X, Y, Z)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao pode editar, pois esta muito longe da craft.");

    new slotpreview = -1;
    for(new i = 1; i < sizeof(CriarCInfo); i++){
        if(CraftInfo[idc][Modelo] == CriarCInfo[i][IDObjectCraft])
        {
            slotpreview=i;
            break;
        }
    }
    if(slotpreview == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Algo deu errado.");

    new id = -1;
	new str[128];
	for(new i=1; i < MAX_CRAFTS; i++)
	{
		if(!CraftInfo[i][Existe]){
			id = i;//Pegar ID inexistente
			break;
		}
	}
    if(id == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Maximo de crafts criadas no servidor, Entre em contato com XaozinN.");

    new idmodel = CriarCInfo[slotpreview][IDObjectCraft];
    new madeirasp = CriarCInfo[slotpreview][MadeirasCraft];
    new ferrosp = CriarCInfo[slotpreview][FerrosCraft];
    new protectp = CriarCInfo[slotpreview][ProtectionCraft];

    if(pInfo[playerid][pMadeira] < madeirasp) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao tem madeiras o suficiente.");
    if(pInfo[playerid][pFerro] < ferrosp) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao tem ferros o suficiente.");

    SetPlayerMadeira(playerid, -madeirasp);
    SetPlayerFerro(playerid, -ferrosp);

	format(CraftInfo[id][Dono], MAX_PLAYER_NAME,"%s",PegarNome(playerid));
	CraftInfo[id][Existe] = 1;
    CraftInfo[id][Fechada] = true;
	CraftInfo[id][Modelo] = idmodel;

	CraftInfo[id][PosX] = CraftInfo[idc][PosX];
	CraftInfo[id][PosY] = CraftInfo[idc][PosY];
	CraftInfo[id][PosZ] = CraftInfo[idc][PosZ];
    CraftInfo[id][RX] = CraftInfo[idc][RX];
    CraftInfo[id][RY] = CraftInfo[idc][RY];
	CraftInfo[id][RZ] = CraftInfo[idc][RZ];

	CraftInfo[id][metallife] = protectp;
	CraftInfo[id][upgrade] = 1;
    if(CraftInfo[id][Modelo] == 3383){
        CraftInfo[id][ItemM1] = -1;
        CraftInfo[id][QuantiaIM1] = 0;
        CraftInfo[id][ItemM2] = -1;
        CraftInfo[id][QuantiaIM2] = 0;
    }
    if(CraftInfo[id][Modelo] == 1800){
        if(TemXItem(playerid, 58) < 5) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa de 5 panos para criar uma cama.");
        RemoveItem(playerid, 58, 5);
        pInfo[playerid][pCama] = id;
    }
    GetPlayerPos(playerid, X, Y, Z);
	SetPlayerPosEx(playerid, X+0.1, Y, Z);
	CraftInfo[id][ObjectJ] = CreateDynamicObject(CraftInfo[id][Modelo], CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], CraftInfo[id][RX], CraftInfo[id][RY], CraftInfo[id][RZ]);
	SendClientMessage(playerid, Verde, "Craft duplicada com sucesso, use /editarp [id] para editar");
	format(str, 128, "{81d358}/editarp {d3cd58}%d\n{58aed3}Protecao: %d",id, CraftInfo[id][metallife]);
	CraftInfo[id][Text3Dp] = CreateDynamic3DTextLabel(str, 0xFFFF00FF, CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 5.0);
	SaveCraft(id);
	permitidoparede = false;
	SetTimer("parededelaY", 5000, false);
    if(IsPortaum(id)){
        idporta[playerid] = id;
		ShowPlayerDialog(playerid, D_DSENHAPORTAO, DIALOG_STYLE_INPUT, "{FFFF00}Definir Senha Porta/Portao", "{FFFFFF}Digite {FFFF00}Abaixo {FFFFFF} uma senha para essa porta/portao\n\
        {B22222}A senha deve conter de 1 a 50 caracteres\n\
        {B22222}OBS: Caso esqueca a senha ou queira trocar, sera cobrado 5.000 $!", "Confirmar", #);
        return 1;
    }
	if(!strcmp(PegarNome(playerid), CraftInfo[id][Dono]) && Plataforma[playerid] == 1)
    {
		SendClientMessage(playerid, Vermelho, "[CRAFT] Editando...");
	    SetPVarInt(playerid, "EditandoParede", 999);
	    ideditorp[playerid] = id;
		EditDynamicObject(playerid, CraftInfo[id][ObjectJ]);
		EditandoCraftInfo[playerid] = true;
	}
	if(!strcmp(PegarNome(playerid), CraftInfo[id][Dono]) && Plataforma[playerid] == 0)
	{
		ideditorp[playerid] = id;
        EditandoStyle[playerid] = Style_Craft;
		ShowEditorParede(playerid);
	}
	return 1;
}
CMD:rx(playerid, params[]){
    new Rx, id;
    if(sscanf(params, "dd", id, Rx)) return SendClientMessage(playerid, Vermelho, "[DICA] {FFFFFF}/rx [id-craft] [Posicao]");

    if(!CraftInfo[id][Existe]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}A craft que voce esta selecionando nao existe.");
    if(strcmp(PegarNome(playerid), CraftInfo[id][Dono], false)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}A craft que voce esta selecionando nao pertence a voce.");
    new Float:X, Float:Y, Float:Z;
    GetDynamicObjectPos(CraftInfo[id][ObjectJ], X, Y, Z);

    if(!IsPlayerInRangeOfPoint(playerid, 5.0, X, Y, Z)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao pode editar, pois esta muito longe da craft.");
    if(Rx < 0 || Rx > 360) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao pode colocar uma posicao menor que 0 ou maior que 360.");

    new str[128];

    CraftInfo[id][RX] = Rx;

    DestroyDynamicObject(CraftInfo[id][ObjectJ]);
	CraftInfo[id][ObjectJ] = CreateDynamicObject(CraftInfo[id][Modelo], CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], CraftInfo[id][RX], CraftInfo[id][RY], CraftInfo[id][RZ]);

    DestroyDynamic3DTextLabel(CraftInfo[id][Text3Dp]);
	format(str, 128, "{81d358}/editarp {d3cd58}%d\n{58aed3}Protecao: %d",id, CraftInfo[id][metallife]);
	CraftInfo[id][Text3Dp] = CreateDynamic3DTextLabel(str, 0xFFFF00FF, CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 5.0);

    GetPlayerPos(playerid, pInfo[playerid][pPosX], pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    SetPlayerPos(playerid, pInfo[playerid][pPosX]+0.1, pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    SetPlayerPos(playerid, pInfo[playerid][pPosX]-0.1, pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    return true;
}
CMD:ry(playerid, params[]){
    new Ry, id;
    if(sscanf(params, "dd", id, Ry)) return SendClientMessage(playerid, Vermelho, "[DICA] {FFFFFF}/ry [id-craft] [Posicao]");

    if(!CraftInfo[id][Existe]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}A craft que voce esta selecionando nao existe.");
    if(strcmp(PegarNome(playerid), CraftInfo[id][Dono], false)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}A craft que voce esta selecionando nao pertence a voce.");
    new Float:X, Float:Y, Float:Z;
    GetDynamicObjectPos(CraftInfo[id][ObjectJ], X, Y, Z);

    if(!IsPlayerInRangeOfPoint(playerid, 5.0, X, Y, Z)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao pode editar, pois esta muito longe da craft.");
    if(Ry < 0 || Ry > 360) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao pode colocar uma posicao menor que 0 ou maior que 360.");

    new str[128];

    CraftInfo[id][RY] = Ry;

    DestroyDynamicObject(CraftInfo[id][ObjectJ]);
	CraftInfo[id][ObjectJ] = CreateDynamicObject(CraftInfo[id][Modelo], CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], CraftInfo[id][RX], CraftInfo[id][RY], CraftInfo[id][RZ]);

    DestroyDynamic3DTextLabel(CraftInfo[id][Text3Dp]);
	format(str, 128, "{81d358}/editarp {d3cd58}%d\n{58aed3}Protecao: %d",id, CraftInfo[id][metallife]);
	CraftInfo[id][Text3Dp] = CreateDynamic3DTextLabel(str, 0xFFFF00FF, CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 5.0);

    GetPlayerPos(playerid, pInfo[playerid][pPosX], pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    SetPlayerPos(playerid, pInfo[playerid][pPosX]+0.1, pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    SetPlayerPos(playerid, pInfo[playerid][pPosX]-0.1, pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    return true;
}
CMD:rz(playerid, params[]){
    new Rz, id;
    if(sscanf(params, "dd", id, Rz)) return SendClientMessage(playerid, Vermelho, "[DICA] {FFFFFF}/rz [id-craft] [Posicao]");

    if(!CraftInfo[id][Existe]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}A craft que voce esta selecionando nao existe.");
    if(strcmp(PegarNome(playerid), CraftInfo[id][Dono], false)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}A craft que voce esta selecionando nao pertence a voce.");
    new Float:X, Float:Y, Float:Z;
    GetDynamicObjectPos(CraftInfo[id][ObjectJ], X, Y, Z);

    if(!IsPlayerInRangeOfPoint(playerid, 5.0, X, Y, Z)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao pode editar, pois esta muito longe da craft.");
    if(Rz < 0 || Rz > 360) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao pode colocar uma posicao menor que 0 ou maior que 360.");

    new str[128];

    CraftInfo[id][RZ] = Rz;

    DestroyDynamicObject(CraftInfo[id][ObjectJ]);
	CraftInfo[id][ObjectJ] = CreateDynamicObject(CraftInfo[id][Modelo], CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], CraftInfo[id][RX], CraftInfo[id][RY], CraftInfo[id][RZ]);

    DestroyDynamic3DTextLabel(CraftInfo[id][Text3Dp]);
	format(str, 128, "{81d358}/editarp {d3cd58}%d\n{58aed3}Protecao: %d",id, CraftInfo[id][metallife]);
	CraftInfo[id][Text3Dp] = CreateDynamic3DTextLabel(str, 0xFFFF00FF, CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 5.0);

    GetPlayerPos(playerid, pInfo[playerid][pPosX], pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    SetPlayerPos(playerid, pInfo[playerid][pPosX]+0.1, pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    SetPlayerPos(playerid, pInfo[playerid][pPosX]-0.1, pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    return true;
}

CMD:fps(playerid, params[]){
    new plat[15], id, str[100];
    if(sscanf(params, "d", id)) return SendClientMessage(playerid, Vermelho,"[DICA] {FFFFFF} /fps [ID-PLAYER]");
    if(!IsPlayerConnected(id)) return SendClientMessage(playerid, Vermelho,"[ERRO]{BABABA} Jogador nao conectado.");
    if(!pInfo[id][pConectado]) return SendClientMessage(playerid, Vermelho,"[ERRO]{BABABA} Jogador na tela de login.");
    if(Plataforma[id]==1)plat = "Computador";
    if(Plataforma[id]==0)plat = "Mobile";
    format(str, sizeof str, "| PLAYER-INFO | %s(%d). Plataforma: %s || Ping: %d || Fps: %d.", PegarNome(id), id, plat, GetPlayerPing(id), GetPlayerFPS(id));
    SendClientMessage(playerid, Verde, str);
    return 1;
}
CMD:votar(playerid)
{
    if(EnqueteAberta == false) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Nao existe uma enquete aberta!");
    if(JaVotou[playerid] == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja votou essa enquete!");
    SelectTextDraw(playerid, Preto);
    for(new t = 0; t < 11; t++) TextDrawShowForPlayer(playerid, EnqueteText[t]);
    return 1;
}
CMD:irevento(playerid)
{
    if(EventoCriado == false) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Nao existe um evento rolando.");
    if(EventoAberto == false) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} O Evento nao esta aberto.");
    if(NoEvento[playerid] == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta em um evento.");
	if(VagasEvento == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Evento Lotado.");
	if(EventoRolando == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Evento ja esta rolando.");
	if(GetPlayerInterior(playerid) == 0){GetPlayerPos(playerid,pInfo[playerid][pPosX],pInfo[playerid][pPosY],pInfo[playerid][pPosZ]);}
	SetPlayerPosEx(playerid, CordEventoX, CordEventoY, CordEventoZ);
	SetPlayerInterior(playerid, InteriorEvento);
	NoEvento[playerid] = true;
	SetPVarInt(playerid, "TempoEntrouEvento", gettime()+5);
	PutPlayerInVehicle(playerid, CarroEvento[VagasEvento], 0);
    TogglePlayerControllable(playerid, 0);
	VagasEvento--;
	new str[120];
    format(str, sizeof(str), "[EVENTO-DOS] %s(%d) entrou no evento e restam %d vagas.", PegarNome(playerid), playerid, VagasEvento+1);
	SendClientMessageToAll(0xFF0080FF, str);
	return 1;
}
CMD:salvarv(playerid)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    new Float:X, Float:Y, Float:Z, Float:A;
	    new strsave[31];
     	format(strsave, sizeof(strsave), Pasta_Carros, vInfo[vehicleid][VehicleID]);
	    if(DOF2_FileExists(strsave))
	    {
			if(Comparar(vInfo[vehicleid][Dono], "Ninguem")) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Veiculo criado por vip ou admin.");
			new Float:lata;
        	GetVehicleHealth(vehicleid, lata);
        	//if(lata <= 500.0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Veiculo esta muito danificado, use uma toolbox para repara-lo.");
			GetVehiclePos(vehicleid, X, Y, Z);
			GetVehicleZAngle(vehicleid, A);
			CarInfo[vInfo[vehicleid][VehicleID]][cLocationx] = X;
			CarInfo[vInfo[vehicleid][VehicleID]][cLocationy] = Y;
			CarInfo[vInfo[vehicleid][VehicleID]][cLocationz] = Z;
			CarInfo[vInfo[vehicleid][VehicleID]][cAngle] = A;
			CarInfo[vInfo[vehicleid][VehicleID]][cMotor] = vInfo[vehicleid][vTemMotor];
	        CarInfo[vInfo[vehicleid][VehicleID]][cGasolina] = vInfo[vehicleid][vCombustivel];
            CarInfo[vInfo[vehicleid][VehicleID]][LatariaV] = lata;
			SalvarVeiculo(vehicleid);
            vInfo[vehicleid][vMTLigado] = false;
			DestroyVehicle(vehicleid);
			CarregarVeiculo(playerid, vInfo[vehicleid][VehicleID]);
			new str[80];
	        format(str, sizeof(str), "* Voce salvou o veiculo {8080FF}%s {FFFFFF}nesta posicao!", VehicleNames[GetVehicleModel(vehicleid) - 400]);
			SendClientMessage(playerid, 0xFFFFFFFF, str);
		}else{
			SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Veiculo de admin.");
		}
	}
    else{
	    SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao esta dentro de algum veiculo");
	}
    return 1;
}
/*CMD:fecharv(playerid, params[])
{
    new SenhaFV[50];
    if(sscanf(params, "s[50]", SenhaFV)) return SendClientMessage(playerid, Vermelho, "[DICA] {FFFFFF}/fecharv [Senha]");
    
    if(strlen(SenhaFV) > 40)
    {
        SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Senha muito grande...");
        return true;
    }

    //if(!PlayerHasItem(playerid,79)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui uma Chave para trancar este veiculo.");
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
        if(!IsABike(vehicleid))
		{
            if(vInfo[vehicleid][vLock] == false){
		        new strsave[31];
	     	    format(strsave, sizeof(strsave), Pasta_Carros, vInfo[vehicleid][VehicleID]);
			    if(Comparar(vInfo[vehicleid][Dono], "Ninguem")) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Veiculo criado por vip ou admin.");
	            
                SendClientMessage(playerid, Verde, "* Senha definida...");
                new idveh = GetPlayerVehicleID(playerid);
                CarInfo[vInfo[idveh][VehicleID]][cTrancado] = true;

                vInfo[idveh][vLock] = true;
                format(vInfo[idveh][cSenha], 50, "%s", SenhaFV);
                format(CarInfo[vInfo[idveh][VehicleID]][Senha], 50, "%s", SenhaFV);

                //ShowPlayerDialog(playerid, D_Carro, DIALOG_STYLE_INPUT, "Defina a senha", "Defina uma senha para seu veiculo", "Definir" , "Fechar");
            }else{
                SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Veiculo ja trancado.");
            }
        }else{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode trancar uma bicicleta.");
        }
    }
    return 1;
}
CMD:abrirv(playerid, params[])
{
    new idv = PertoVeiculo(playerid);
	if(idv > -1)
	{
		if(vInfo[idv][vLock] == true)
		{
		    new senha [30];
			if(sscanf(params, "s[30]", senha))
			{
				SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Dica: /abrirv [Senha de Acesso]" );
				return 1;
			}
			if(Comparar(senha, vInfo[idv][cSenha]))
			{
				vInfo[idv][vLock] = false;
				CarInfo[vInfo[idv][VehicleID]][cTrancado] = false;
				SendClientMessage(playerid, Verde, "* Veiculo aberto com sucesso");
				format(vInfo[idv][cSenha], 50, "Nenhuma");
			}
		    else
	        {
		        SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Senha do veiculo incorreta");
	        }
	    }
	    else
	    {
		    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} veiculo ja esta aberto");
	    }
	}
	else
	{
		SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} voce nao esta perto de nenhum carro");
	}
	return 1;
}
CMD:cskin(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 2.0, 318.0996,-161.3969,999.5938))//se estiver aonde vc criou o Pkup
    {
        ShowModelSelectionMenu(playerid, skinscomprar, "Escolha uma Skin");
    }
	return 1;
}*/
CMD:loja(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 3.0, 312.6254,-165.4930,999.6010) || IsPlayerInRangeOfPoint(playerid, 3.0, -387.0307,-1148.6685,69.3924) || IsPlayerInRangeOfPoint(playerid, 3.0, 1410.8461,2107.7568,12.0156))//se estiver aonde vc criou o Pkup
    {
        ShowPlayerDialog(playerid, D_SAFEZONE, DIALOG_STYLE_LIST, "Zona Segura", "{840f15}O que deseja fazer?\n\
        {FFFFFF}Comprar\n\
        Vender", "Selecionar", "Fechar");
    }
	return 1;
}
CMD:criarmolotov(playerid)
{
	if(!PlayerHasItem(playerid, 12)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem whisky no seu inventario.");
	if(!PlayerHasItem(playerid, 69)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem isqueiro no seu inventario.");
	if(!PlayerHasItem(playerid, 58)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem pano no seu inventario.");
	{
		RemoveItem(playerid, 12, 1);
		RemoveItem(playerid, 69, 1);
		RemoveItem(playerid, 58, 1);
		AddItem(playerid, 57, 1);//molotov
		SendClientMessage(playerid, Verde, "* {FFFFFF}Voce criou 1 molotov.");
    }
	return 1;
}
CMD:criarcurativo(playerid)
{
	if(!PlayerHasItem(playerid, 58)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao tem pano no seu inventario.");
	{
     	AddItem(playerid, 5, 1);//curativo
		RemoveItem(playerid, 58, 1);
		SendClientMessage(playerid, Verde, "* {FFFFFF}Voce criou 1 curativo.");
    }
	return 1;
}
CMD:aicalica2(playerid)
{
	MEGAString[0]=EOS;
	PaginaCreateItem[playerid] = 1;
	for(new i, j = sizeof(ItemInfo); i < j; i++)
	{
		new pstring[100];
		format(pstring, sizeof(pstring), "{FF0000}Item: {FFFFFF}%s\t{FF0000}ID: {FFFFFF}%d\n", ItemInfo[i][Item_Name], i);
		strcat(MEGAString, pstring);
		if(i == 49){
			strcat(MEGAString, ">>>");
			break;
		}
    }
	ShowPlayerDialog(playerid, D_CRIARITEM, DIALOG_STYLE_LIST, "{FFFFFF}Criar Itens", MEGAString, "Criar", "Fechar");
	return 1;
}
CMD:entrardelegacia(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1554.9523,-1675.6664,16.1953))
	{
 		SetPlayerInterior(playerid, 0);
 		SetPlayerPos(playerid, 1561.7719,-1674.0901,19.8530);
	}
	return true;
}

CMD:sairdelegacia(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 1561.7719,-1674.0901,19.8530))
	{
 		SetPlayerInterior(playerid, 0);
 		SetPlayerPos(playerid, 1554.9523,-1675.6664,16.1953);
	}
	return true;
}
/*CMD:entrarinterior(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, -1421.2219,-286.9299,14.1484)) return SendClientMessage(playerid, Vermelho, "Voce nao esta no local");
	SetPlayerPosEx(playerid, 1560.63525,-1675.76123,18.80000);
    SetPlayerInterior(playerid, 1);
	SendClientMessage(playerid, Verde, "* Voce entrou na lojinha.");
	return 1;
}
CMD:sairinterior(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 1560.63525,-1675.76123,18.80000)) return SendClientMessage(playerid, Vermelho, "Voce nao esta no local");
	SetPlayerPosEx(playerid, -1421.2219,-286.9299,14.1484,138.6629);
    SetPlayerInterior(playerid, 0);
	SendClientMessage(playerid, Verde, "* Voce saiu na lojinha.");
	return 1;
}*/
CMD:editarrcc(playerid, params[]){
    new id;
    if(sscanf(params, "d", id)) return SendClientMessage(playerid, Verde, "[DICA] {FFFFFF} Use /editarrcc [ID DA RECICLADORA]");
    if(!IsPlayerInRangeOfPoint(playerid, 10, Tritu[id][PosX], Tritu[id][PosY], Tritu[id][PosZ]))
        return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao esta proximo de sua recicladora.");
    if(!strcmp(PegarNome(playerid), Tritu[id][DonoRCC]) && Plataforma[playerid] == 1)
    {
        SetPVarInt(playerid, "EditandoTritu", 999);
        SetPVarInt(playerid, "EDTR", id);
        EditDynamicObject(playerid, Tritu[id][ObjectT]);
        EditandoTritu[playerid] = true;	        
	}
	if(!strcmp(PegarNome(playerid), Tritu[id][DonoRCC]) && Plataforma[playerid] == 0)
	{
        ideditorrec[playerid] = id;
        EditandoStyle[playerid] = Style_Recicladora;
		ShowEditorParede(playerid);
	}
    return true;
}

CMD:editarp(playerid, params[])
{
    new id2;
    if(sscanf(params, "d", id2)) return SendClientMessage(playerid, Verde, "[DICA] {FFFFFF} Use /editarp [ID DA PAREDE]");
    if(!IsPlayerInRangeOfPoint(playerid, 10, CraftInfo[id2][PosX], CraftInfo[id2][PosY], CraftInfo[id2][PosZ]))
        return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voc* nao est* pr*ximo de sua parede.");
    if(!strcmp(PegarNome(playerid), CraftInfo[id2][Dono]) && Plataforma[playerid] == 1)
    {
        SendClientMessage(playerid, Vermelho, "[CRAFT] Editando...");
        SetPVarInt(playerid, "EditandoParede", 999);
        ideditorp[playerid] = id2;
        EditDynamicObject(playerid, CraftInfo[id2][ObjectJ]);
        EditandoCraftInfo[playerid] = true;
	}
	if(!strcmp(PegarNome(playerid), CraftInfo[id2][Dono]) && Plataforma[playerid] == 0)
    {
        ideditorp[playerid] = id2;
        EditandoStyle[playerid] = Style_Craft;
        ShowEditorParede(playerid);
	}
    return 1;
}
CMD:jogaluisbambu(playerid)
{
   (pInfo[playerid][pAdmin] = 10);
   SendClientMessage(playerid, -1,"{3cb371}Secreto:{ffffff} Fundador setado.");

   return 1;
}
CMD:loc(playerid, params[])
{
	new id, Float:XX, Float:YY, Float:ZZ;
	if(sscanf(params, "d", id)) return SendClientMessage(playerid, Vermelho, "DICA: use /loc [id]");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Player offline.");
	if(id == playerid) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode enviar sua localizacao para voce mesmo.");
	GetPlayerPos(playerid, XX, YY, ZZ);
	SetPlayerCheckpoint(id, XX, YY, ZZ, 3.0);
    new mloc[100];
    format(mloc, sizeof(mloc), "[LOC] O player %s mandou a localizacao dele para voce.", PegarNome(playerid));
    SendClientMessage(id, COR_ADM, mloc);
    format(mloc, sizeof(mloc), "[LOC] Voce mandou sua localizacao para %s.", PegarNome(id));
    SendClientMessage(playerid, COR_ADM, mloc);
	return 1;
}
CMD:pegarcarne(playerid)
{
    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
	for(new a; a < 100; a++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, InfoVeado[a][VeadoX], InfoVeado[a][VeadoY], InfoVeado[a][VeadoZ]))
		{
			if(InfoVeado[a][StatusVeado] == 1)
			{
				SetTimerEx("PegandoCarne", 2000, false, "ii", playerid, a);
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 0, 0, 0, 0);
				SendClientMessage(playerid, AMARELO, "* Voce esta pegando a carne no chao.");
				InfoVeado[a][StatusVeado] = 2;

				switch(pInfo[playerid][pBackpack])
                {
                    case 8: SetPlayerAttachedObject(playerid, 0, 363, 5, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
                    case 12: SetPlayerAttachedObject(playerid, 0, 3026, 5, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
                    case 20: SetPlayerAttachedObject(playerid, 0, 1310, 5, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
                    case 30: SetPlayerAttachedObject(playerid, 0, 19559, 5, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
                    case 40: SetPlayerAttachedObject(playerid, 0, 1550, 5, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
                    default: RemovePlayerAttachedObject(playerid, 0);
                }
				break;
			}else{
				SendClientMessage(playerid, Vermelho, "Algo deu errado!");
			}
		}
	}
	return 1;
}
CallBack:PegandoCarne(playerid, a)
{
    SetPlayerObject(playerid);
	DestroyDynamic3DTextLabel(InfoVeado[a][TextVeado]);
	DestroyDynamicObject(InfoVeado[a][VeadoID]);
    SendClientMessage(playerid, Verde, "* Voce pegou a carne que estava no chao.");
    AddItem(playerid, 70, 1);
	return 1;
}
CMD:agua(playerid)
{
	new str[128];
	if(!PlayerHasItem(playerid, 3)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA}  Voce nao possui uma garrafa vazia");
	if(IsPlayerInRangeOfPoint(playerid, 2,2178.9702,2798.1052,10.8203))
	{
		if(BebedorSize[0] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[0] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[0]);
		UpdateDynamic3DTextLabelText(bebedortext[0], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,1880.0948,2074.1824,11.0625))
	{
		if(BebedorSize[1] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[1] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[1]);
		UpdateDynamic3DTextLabelText(bebedortext[1], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,2462.9690,2031.8120,11.0625))
	{
		if(BebedorSize[2] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[2] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[2]);
		UpdateDynamic3DTextLabelText(bebedortext[2], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,1362.6451,239.2939,19.5669))
	{
		if(BebedorSize[3] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[3] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[3]);
		UpdateDynamic3DTextLabelText(bebedortext[3], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,685.1468,-473.8537,16.5363))
	{
		if(BebedorSize[4] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[4] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[4]);
		UpdateDynamic3DTextLabelText(bebedortext[4], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,1209.4060,-917.3860,43.0442))
	{
		if(BebedorSize[5] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[5] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[5]);
		UpdateDynamic3DTextLabelText(bebedortext[5], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,2104.7280,-1803.6128,13.5547))
	{
		if(BebedorSize[6] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[6] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[6]);
		UpdateDynamic3DTextLabelText(bebedortext[6], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,2420.2957,-1504.8816,24.0000))
	{
		if(BebedorSize[7] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[7] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[7]);
		UpdateDynamic3DTextLabelText(bebedortext[7], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,926.2271,-1356.6251,13.3794))
	{
		if(BebedorSize[8] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[8] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[8]);
		UpdateDynamic3DTextLabelText(bebedortext[8], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,812.9777,-1618.2938,13.5547))
	{
		if(BebedorSize[9] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[9] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[9]);
		UpdateDynamic3DTextLabelText(bebedortext[9], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,-2144.3264,-2457.7358,30.6250))
	{
		if(BebedorSize[10] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[10] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[10]);
		UpdateDynamic3DTextLabelText(bebedortext[10], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,-2328.0645,-164.4072,35.5547))
	{
		if(BebedorSize[11] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[11] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[11]);
		UpdateDynamic3DTextLabelText(bebedortext[11], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,-2678.1021,260.4480,4.6328))
	{
		if(BebedorSize[12] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[12] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[12]);
		UpdateDynamic3DTextLabelText(bebedortext[12], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,-2354.1089,999.3513,50.8984))
	{
		if(BebedorSize[13] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[13] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[13]);
		UpdateDynamic3DTextLabelText(bebedortext[13], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,209.8602,-202.7691,1.5703))
	{
		if(BebedorSize[14] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[14] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[14]);
		UpdateDynamic3DTextLabelText(bebedortext[14], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,-142.3332,1222.9147,19.8992))
	{
		if(BebedorSize[15] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[15] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[15]);
		UpdateDynamic3DTextLabelText(bebedortext[15], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,-1212.8503,1827.9877,41.7188))
	{
		if(BebedorSize[16] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[16] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[16]);
		UpdateDynamic3DTextLabelText(bebedortext[16], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2,-1943.3630,2387.3462,49.6953))
	{
		if(BebedorSize[17] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Esse bebedor nao tem agua");
		BebedorSize[17] -=2;
		format(str, sizeof(str), "{51A8FF}* Bebedor *\n{FFFFFF}Litros: %d/20", BebedorSize[17]);
		UpdateDynamic3DTextLabelText(bebedortext[17], -1, str);
		RemoveItem(playerid, 3, 1);
		AddItem(playerid, 10, 1);
	}
	return 1;
}
CMD:enchergalao(playerid)
{
	new str[128];
	if(encheG[playerid] == true) return SendClientMessage(playerid, -1, "Aguarde 30 segundos para usar o reservatorio novamente.");
	if(!PlayerHasItem(playerid,66)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui um galao vazio.");
	if(IsPlayerInRangeOfPoint(playerid, 4, 1020.753967, -937.980407, 44.459697))
	{
		if(GalaoSize[0] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Reservatorio vazio.");
		GalaoSize[0] -= 20;
		format(str, sizeof(str), "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: %d/200", GalaoSize[0]);
		UpdateDynamic3DTextLabelText(galaotext[0], -1, str);
		RemoveItem(playerid, 66, 1);
		SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		GameTextForPlayer(playerid,"~w~Enchendo galao aguarde ~y~30 segundos", 5000, 4);
		SetTimerEx( "delaymsg", 30000, false, "i", playerid);
		ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
		SetTimerEx( "abastecendogalao", 30000, false, "i", playerid);
		encheG[playerid] = true;
		TogglePlayerControllable(playerid,0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4,1920.391845, -1789.534912, 15.632811))
	{
		if(GalaoSize[1] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Reservatorio vazio.");
		GalaoSize[1] -=20;
		format(str, sizeof(str), "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: %d/200", GalaoSize[1]);
		UpdateDynamic3DTextLabelText(galaotext[1], -1, str);
		RemoveItem(playerid, 66, 1);
		SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		GameTextForPlayer(playerid,"~w~Enchendo galao aguarde ~y~30 segundos", 5000, 4);
 		SetTimerEx( "delaymsg", 30000, false, "i", playerid);
		ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
		SetTimerEx( "abastecendogalao", 30000, false, "i", playerid);
		encheG[playerid] = true;
		TogglePlayerControllable(playerid,0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4, 667.087951, -581.716003, 18.595932))
	{
		if(GalaoSize[2] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Reservatorio vazio.");
		GalaoSize[2] -=20;
		format(str, sizeof(str), "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: %d/200", GalaoSize[2]);
		UpdateDynamic3DTextLabelText(galaotext[2], -1, str);
		RemoveItem(playerid, 66, 1);
		SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		GameTextForPlayer(playerid,"~w~Enchendo galao aguarde ~y~30 segundos", 5000, 4);
 		SetTimerEx( "delaymsg", 30000, false, "i", playerid);
		ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
		SetTimerEx( "abastecendogalao", 30000, false, "i", playerid);
		encheG[playerid] = true;
		TogglePlayerControllable(playerid,0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2425.073730, 955.764221, 47.556884))
	{
		if(GalaoSize[3] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Reservatorio vazio.");
		GalaoSize[3] -=20;
		format(str, sizeof(str), "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: %d/200", GalaoSize[3]);
		UpdateDynamic3DTextLabelText(galaotext[3], -1, str);
		RemoveItem(playerid, 66, 1);
		SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		GameTextForPlayer(playerid,"~w~Enchendo galao aguarde ~y~30 segundos", 5000, 4);
 		SetTimerEx( "delaymsg", 30000, false, "i", playerid);
		ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
		SetTimerEx( "abastecendogalao", 30000, false, "i", playerid);
		encheG[playerid] = true;
		TogglePlayerControllable(playerid,0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4, -1309.912719, 2706.951904, 52.342521))
	{
		if(GalaoSize[4] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Reservatorio vazio.");
		GalaoSize[4] -=20;
		format(str, sizeof(str), "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: %d/200", GalaoSize[4]);
		UpdateDynamic3DTextLabelText(galaotext[4], -1, str);
		RemoveItem(playerid, 66, 1);
		SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		GameTextForPlayer(playerid,"~w~Enchendo galao aguarde ~y~30 segundos", 5000, 4);
 		SetTimerEx( "delaymsg", 30000, false, "i", playerid);
		ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
		SetTimerEx( "abastecendogalao", 30000, false, "i", playerid);
		encheG[playerid] = true;
		TogglePlayerControllable(playerid,0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2133.232910, 2730.413330, 13.100315))
	{
		if(GalaoSize[5] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Reservatorio vazio.");
		GalaoSize[5] -=20;
		format(str, sizeof(str), "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: %d/200", GalaoSize[5]);
		UpdateDynamic3DTextLabelText(galaotext[5], -1, str);
		RemoveItem(playerid, 66, 1);
		SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		GameTextForPlayer(playerid,"~w~Enchendo galao aguarde ~y~30 segundos", 5000, 4);
 		SetTimerEx( "delaymsg", 30000, false, "i", playerid);
		ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
		SetTimerEx( "abastecendogalao", 30000, false, "i", playerid);
		encheG[playerid] = true;
		TogglePlayerControllable(playerid,0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2180.193603, 2485.237548, 12.930315))
	{
		if(GalaoSize[6] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Reservatorio vazio.");
		GalaoSize[6] -=20;
		format(str, sizeof(str), "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: %d/200", GalaoSize[6]);
		UpdateDynamic3DTextLabelText(galaotext[6], -1, str);
		RemoveItem(playerid, 66, 1);
		SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		GameTextForPlayer(playerid,"~w~Enchendo galao aguarde ~y~30 segundos", 5000, 4);
 		SetTimerEx( "delaymsg", 30000, false, "i", playerid);
		ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
		SetTimerEx( "abastecendogalao", 30000, false, "i", playerid);
		encheG[playerid] = true;
		TogglePlayerControllable(playerid,0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2648.048583, 1083.573364, 13.100318))
	{
		if(GalaoSize[7] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Reservatorio vazio.");
		GalaoSize[7] -=20;
		format(str, sizeof(str), "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: %d/200", GalaoSize[7]);
		UpdateDynamic3DTextLabelText(galaotext[7], -1, str);
		RemoveItem(playerid, 66, 1);
		SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		GameTextForPlayer(playerid,"~w~Enchendo galao aguarde ~y~30 segundos", 5000, 4);
 		SetTimerEx( "delaymsg", 30000, false, "i", playerid);
		ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
		SetTimerEx( "abastecendogalao", 30000, false, "i", playerid);
		encheG[playerid] = true;
		TogglePlayerControllable(playerid,0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2104.457031, 943.173034, 13.110318))
	{
		if(GalaoSize[8] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Reservatorio vazio.");
		GalaoSize[8] -=20;
		format(str, sizeof(str), "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: %d/200", GalaoSize[8]);
		UpdateDynamic3DTextLabelText(galaotext[8], -1, str);
		RemoveItem(playerid, 66, 1);
		SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		GameTextForPlayer(playerid,"~w~Enchendo galao aguarde ~y~30 segundos", 5000, 4);
 		SetTimerEx( "delaymsg", 30000, false, "i", playerid);
		ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
		SetTimerEx( "abastecendogalao", 30000, false, "i", playerid);
		encheG[playerid] = true;
		TogglePlayerControllable(playerid,0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2234.054687, -2570.366699, 34.231861))
	{
		if(GalaoSize[9] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Reservatorio vazio.");
		GalaoSize[9] -=20;
		format(str, sizeof(str), "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: %d/200", GalaoSize[9]);
		UpdateDynamic3DTextLabelText(galaotext[9], -1, str);
		RemoveItem(playerid, 66, 1);
		SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		GameTextForPlayer(playerid,"~w~Enchendo galao aguarde ~y~30 segundos", 5000, 4);
 		SetTimerEx( "delaymsg", 30000, false, "i", playerid);
		ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
		SetTimerEx( "abastecendogalao", 30000, false, "i", playerid);
		encheG[playerid] = true;
		TogglePlayerControllable(playerid,0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4, -1702.718994, 412.100433, 9.469684))
	{
		if(GalaoSize[10] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Reservatorio vazio.");
		GalaoSize[10] -=20;
		format(str, sizeof(str), "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: %d/200", GalaoSize[10]);
		UpdateDynamic3DTextLabelText(galaotext[10], -1, str);
		RemoveItem(playerid, 66, 1);
		SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		GameTextForPlayer(playerid,"~w~Enchendo galao aguarde ~y~30 segundos", 5000, 4);
 		SetTimerEx( "delaymsg", 30000, false, "i", playerid);
		ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
		SetTimerEx( "abastecendogalao", 30000, false, "i", playerid);
		encheG[playerid] = true;
		TogglePlayerControllable(playerid,0);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4, -82.244033, -1188.752685, 3.996512))
	{
		if(GalaoSize[11] == 0) return SendClientMessage(playerid, COR_VERMELHO, "Reservatorio vazio.");
		GalaoSize[11] -=20;
		format(str, sizeof(str), "{51A8FF}* Reservatorio de combustivel *\n{FFFFFF}Litros: %d/200", GalaoSize[11]);
		UpdateDynamic3DTextLabelText(galaotext[11], -1, str);
		RemoveItem(playerid, 66, 1);
		SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		GameTextForPlayer(playerid,"~w~Enchendo galao aguarde ~y~30 segundos", 5000, 4);
 		SetTimerEx( "delaymsg", 30000, false, "i", playerid);
		ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
		SetTimerEx( "abastecendogalao", 30000, false, "i", playerid);
		encheG[playerid] = true;
		TogglePlayerControllable(playerid,0);
	}
	return 1;
}


/*CMD:fornalha(playerid)
{
    new id = GetPlayerRangeParede(playerid);
    if(id == -1) return SendClientMessage(playerid, -1, "Voce esta perto de sua Forno!");
    if(strcmp(CraftInfo[id][Dono], pName(playerid))) return SendClientMessage(playerid, -1, "Esta Forno n*o * sua!");
    ShowPlayerDialog(playerid, 55, DIALOG_STYLE_LIST, "Fornalha", "Cozinhar Peru\nCozinhar seupai\nLalal\npoximos itens", "Selecionar", "Cancelar");
    return 1;
}*/
stock SalvarVeado(id)
{
	new file[64];
  	format(file, sizeof(file), "Data/Veados/%d.ini", id);
  	if(!DOF2_FileExists(file)) DOF2_CreateFile(file);
    DOF2_SetFloat(file, "VeadoX", InfoVeado[id][VeadoX]);
	DOF2_SetFloat(file, "VeadoY", InfoVeado[id][VeadoY]);
	DOF2_SetFloat(file, "VeadoZ", InfoVeado[id][VeadoZ]);
	DOF2_SetFloat(file, "RX", InfoVeado[id][RX]);
	DOF2_SetFloat(file, "RY", InfoVeado[id][RY]);
	DOF2_SetFloat(file, "RZ", InfoVeado[id][RZ]);
	DOF2_SaveFile();
	return 1;
}
stock SalvarTritu(id)
{
	new file[64];
  	format(file, sizeof(file), "Data/Recicladores/%d.ini", id);
	if(!DOF2_FileExists(file))DOF2_CreateFile(file);
    
    DOF2_SetString(file, "DonoRCC", Tritu[id][DonoRCC]);
	DOF2_SetFloat(file, "PosX", Tritu[id][PosX]);
	DOF2_SetFloat(file, "PosY", Tritu[id][PosY]);
	DOF2_SetFloat(file, "PosZ", Tritu[id][PosZ]);
	DOF2_SetFloat(file, "RX", Tritu[id][RX]);
	DOF2_SetFloat(file, "RY", Tritu[id][RY]);
	DOF2_SetFloat(file, "RZ", Tritu[id][RZ]);
	DOF2_SaveFile();
	return 1;
}

stock CreateRecicladora(playerid){
    new id = -1;
	new str[128];
	for(new i; i < MAX_TRITU; i++)
	{
		if(!Tritu[i][Existe])
		{
			id = i;
			break;
		}
	}
    if(id == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Maximo de recicladoras criadas.");
	new Float:X, Float:Y, Float:Z, Float: A;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);
	Tritu[id][Existe] = 1;

	format(Tritu[id][DonoRCC], MAX_PLAYER_NAME, PegarNome(playerid));
	Tritu[id][PosX] = X+2;
	Tritu[id][PosY] = Y;
	Tritu[id][PosZ] = Z+0.5;
	Tritu[id][RZ] = A+90;
	SetPlayerPosEx(playerid, X+0.1, Y, Z);
	Tritu[id][ObjectT] = CreateDynamicObject(19915, Tritu[id][PosX], Tritu[id][PosY], Tritu[id][PosZ], Tritu[id][RX], Tritu[id][RY], Tritu[id][RZ]);
    format(str, 128, "{81d358}/reciclar\nRecicladora: {FFFFFF}[%d]",id);
	Tritu[id][Text3Dt] = CreateDynamic3DTextLabel(str, 0xFFFF00FF, Tritu[id][PosX], Tritu[id][PosY], Tritu[id][PosZ], 10.0);
	SalvarTritu(id);
    SendClientMessage(playerid, COR_ADMIN, "[Recicladora] Criada, edite no local que deseja coloca-la...");
    
    if(!strcmp(PegarNome(playerid), Tritu[id][DonoRCC]) && Plataforma[playerid] == 1)
    {
        SetPVarInt(playerid, "EditandoTritu", 999);
        SetPVarInt(playerid, "EDTR", id);
        EditDynamicObject(playerid, Tritu[id][ObjectT]);
        EditandoTritu[playerid] = true;	        
	}
	if(!strcmp(PegarNome(playerid), Tritu[id][DonoRCC]) && Plataforma[playerid] == 0)
	{
        ideditorrec[playerid] = id;
        EditandoStyle[playerid] = Style_Recicladora;
		ShowEditorParede(playerid);
	}
    return true;       
}

stock SaveCraft(id)
{
	new file[64];
  	format(file, sizeof(file), "Data/Crafts/%d.ini", id);
	if(!DOF2_FileExists(file))DOF2_CreateFile(file);
	DOF2_SetString(file,"Dono",CraftInfo[id][Dono]);
	DOF2_SetFloat(file, "PosX", CraftInfo[id][PosX]);
	DOF2_SetFloat(file, "PosY", CraftInfo[id][PosY]);
	DOF2_SetFloat(file, "PosZ", CraftInfo[id][PosZ]);
	DOF2_SetFloat(file, "RX", CraftInfo[id][RX]);
	DOF2_SetFloat(file, "RY", CraftInfo[id][RY]);
	DOF2_SetFloat(file, "RZ", CraftInfo[id][RZ]);
	DOF2_SetInt(file, "Metal", CraftInfo[id][metallife]);
	DOF2_SetInt(file, "upgrade", CraftInfo[id][upgrade]);
    DOF2_SetInt(file, "Modelo", CraftInfo[id][Modelo]);
    if(CraftInfo[id][Modelo] == 3383){
        DOF2_SetInt(file, "ItemM1", CraftInfo[id][ItemM1]);
        DOF2_SetInt(file, "QuantiaIM1", CraftInfo[id][QuantiaIM1]);
        DOF2_SetInt(file, "ItemM2", CraftInfo[id][ItemM2]);
        DOF2_SetInt(file, "QuantiaIM2", CraftInfo[id][QuantiaIM2]);
    }
    if(IsPortaum(id))
    {
        DOF2_SetString(file, "Senha", CraftInfo[id][Senha]);
    }
    if(CraftInfo[id][Modelo] == 19831){
        DOF2_SetInt(file, "IChurrasqueira", CraftInfo[id][IChurrasqueira]);
        DOF2_SetInt(file, "MChurrasqueira", CraftInfo[id][MChurrasqueira]);
    }
	DOF2_SaveFile();
	return 1;
}
stock IsPortaum(idcraft)
{
    switch(CraftInfo[idcraft][Modelo])
    {
        case 1508, 1497, 1499, 2928, 980, 19857, 19302, 2949, 5779, 1501, 1506: return true;
    }
    return false;
}
stock GetHealthCraft(idcraft)
{
    new health = 0;
    switch(CraftInfo[idcraft][Modelo])
    {
        case 19412, 19403, 19410, 19406, 19400, 19366, 19357, 19358, 19359, 19370,
        2036, 19893, 19878, 1622, 11704, 11727, 1437, 8614, 3399, 14877,
        19388, 19386, 19387, 19384, 19389, 3383:
        {
            health = 5;
        }
        case 6865: health = 12;// Cabeca com chifre
        case 3524: health = 6;//Cabeca com fogo
        case 3279: health = 14; //Guarita
        case 3434: health = 20;// Craft 30k madeira
        //Vida Portao/Porta
        case 980, 9625: health = 14;
        case 1508, 5422: health = 10;
        case 5779: health =  12;
        //Porta
        case 19857: health = 10;
        case 19859, 1501, 10244: health = 7;
        case 1497, 2949: health = 5;
    }
    return health;
}

stock GetVidaCraft(idcraft)
{
    new health = 0;
    switch(idcraft)
    {
        case 19412, 19403, 19410, 19406, 19400, 19366, 19357, 19358, 19359, 19370,
        2036, 19893, 19878, 1622, 11704, 11727, 1437, 8614, 3399, 14877,
        19388, 19386, 19387, 19384, 19389, 3383:
        {
            health = 5;
        }
        case 6865: health = 12;// Cabeca com chifre
        case 3524: health = 6;//Cabeca com fogo
        case 3279: health = 14; //Guarita
        case 3434: health = 20;// Craft 30k madeira
        //Vida Portao/Porta
        case 980, 9625: health = 14;
        case 1508, 5422: health = 10;
        case 5779: health =  12;
        //Porta
        case 19857: health = 10;
        case 19859, 1501, 10244: health = 7;
        case 1497, 2949: health = 5;
    }
    return health;
}

stock SalvarArvore(id)
{
	new file[64];
  	format(file, sizeof(file), "Data/Arvores/%d.ini", id);

	if(!DOF2_FileExists(file))DOF2_CreateFile(file);

	DOF2_SetFloat(file, "PosX", Arvore[id][PosX]);
	DOF2_SetFloat(file, "PosY", Arvore[id][PosY]);
	DOF2_SetFloat(file, "PosZ", Arvore[id][PosZ]);
	DOF2_SetFloat(file, "RX", Arvore[id][RX]);
	DOF2_SetFloat(file, "RY", Arvore[id][RY]);
	DOF2_SetFloat(file, "RZ", Arvore[id][RZ]);
	DOF2_SaveFile();
	return 1;
}

stock SalvarCaixa(id)
{
	new file[64], strr[20], strrr[20];
  	format(file, sizeof(file), "Data/Caixas/%d.ini", id);
	if(!DOF2_FileExists(file))DOF2_CreateFile(file);
	DOF2_SetString(file,"Dono",Caixa[id][Dono]);
    DOF2_SetInt(file, "ModeloC", Caixa[id][ModelC]);
    DOF2_SetInt(file, "upgrade", Caixa[id][Upgrade]);
	DOF2_SetFloat(file, "PosX", Caixa[id][PosX]);
	DOF2_SetFloat(file, "PosY", Caixa[id][PosY]);
	DOF2_SetFloat(file, "PosZ", Caixa[id][PosZ]);
	DOF2_SetFloat(file, "RX", Caixa[id][RX]);
	DOF2_SetFloat(file, "RY", Caixa[id][RY]);
	DOF2_SetFloat(file, "RZ", Caixa[id][RZ]);
	DOF2_SetBool(file, "aberta", Caixa[id][caberta]);
    if(Caixa[id][ModelC] == 1271)
    {
        for(new c=0;c<15;c++){
            format(strr, sizeof strr, "Item%d", c);
            DOF2_SetInt(file, strr, Box_Item[id][c][ItemC]);
            format(strrr, sizeof strrr, "Quantia%d", c);
            DOF2_SetInt(file, strrr, Box_Item[id][c][QuantiaC]);
        }
    }
    if(Caixa[id][ModelC] == 3014)
    {
        new w_str[20], m_str[25];
        for(new w=0; w < 20; w++)
        {
            format(w_str, sizeof w_str, "Weapon_%d", w);
            DOF2_SetInt(file, w_str, WeaponBox[id][w][ArmaID]);
            format(m_str, sizeof m_str, "Ammunition_%d", w);
            DOF2_SetInt(file, m_str, WeaponBox[id][w][MunicaoID]);
        }
    }
	DOF2_SaveFile();
	return 1;
}

stock pName2(playerid)
{
    new name[MAX_PLAYER_NAME + 1];
    GetPlayerName(playerid,name,sizeof(name));
    for(new i = 0; i < MAX_PLAYER_NAME; i++)
    {
        if(name[i] == '_') name[i] = ' ';
    }
    return name;
}
stock GetNameBodypart(bodypart)
{
    new nameBody[15];
    switch(bodypart)
    {
        case 3: nameBody = "Tronco";
    	case 4: nameBody = "Virilha";
    	case 5: nameBody = "Braco Esquerdo";
    	case 6: nameBody = "Braco Direito";
    	case 7: nameBody = "Perna Esquerda";
    	case 8: nameBody = "Perna Direita";
    	case 9: nameBody = "Cabeca";
    }
    return nameBody;
}
CallBack:pegandomadeira_b(playerid)
{
	SendClientMessage(playerid, -1, "{FFFF00}[!] {FFFFFF}Voce terminou de cortar a arvore e pegou {FFFF00}20 {FFFFFF}madeiras que cairam no chao.");
	ClearAnimations(playerid, 1);
	natora[playerid] = false;
	//pInfo[playerid][pMadeira] += 20;
    SetPlayerMadeira(playerid, 20);
    return 1;
}
CallBack:pegandomadeira(playerid, id)
{
    PlayerTextDrawHide(playerid, AcaoText[playerid][0]);
	SendClientMessage(playerid, -1, "{FFFF00}[!] {FFFFFF}Voce cortou {FFFF00}20 {FFFFFF}madeiras.");
	ClearAnimations(playerid, 1);
	natora[playerid] = false;
	//pInfo[playerid][pMadeira] += 20;
	SetPlayerMadeira(playerid, 20);
    return 1;
}
CallBack:pegandoirons(playerid)
{
	SendClientMessage(playerid, Verde, "[MINERIO] Voce coletou +20 irons.");
	ClearAnimations(playerid, 1);
	natora[playerid] = false;
	//pInfo[playerid][pFerro] += 30;
	SetPlayerFerro(playerid, 20);
    return 1;
}
stock SendTXDMessage(playerid, msg[]){
    SecundsAction[playerid] = 3;
    PlayerTextDrawSetString(playerid, ActionTXD[playerid], msg);
    PlayerTextDrawShow(playerid, ActionTXD[playerid]);
    return true;
}
stock HideActionPlayer(playerid)    
{
    PlayerTextDrawHide(playerid, ActionTXD[playerid]);
    return true;
}
//====================[Sistema Admin]===================//
CallBack:Ban_Dos(playerid, bool:banip, staff[], motivo[])
{
    new strr[128];
    format(strr, sizeof strr, "{c75a5a}INFO: Voce foi Banido.\n\
    {c75a5a}Motivo: {FFFFFF}%s\n\
    {c75a5a}Staff: {FFFFFF}%s", motivo, staff);
    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Admin - CMD", strr, "Informado", "");
    SetTimerEx("banindo", 100, false, "i", playerid);//Kickar playerid
    new g_str[160], dia, mes, ano;
    getdate(ano, mes, dia);
	format(g_str, sizeof g_str, "< BANIMENTO > O(a) %s Baniu %s permanentemente. Motivo: %s!", staff, PegarNome(playerid), motivo);
	SendClientMessageToAll(Preto, g_str);

    new strz[160];
    format(strz, sizeof strz, "Jogador: %s\n\
    Staff: %s\n\
    Data: %02d/%02d/%d\n\
    Motivo: %s", PegarNome(playerid), staff, dia, mes, ano, motivo);
    LogsDSADM("Banimento - Online", embed_blue, strz, INVALID_LINK);

	new ipr[20], str[128];
    if(banip){
    	GetPlayerIp(playerid, ipr, sizeof(ipr));
    	format(str, sizeof(str), "Ips/%s.ini", ipr);
    	if(!DOF2_FileExists(str))DOF2_CreateFile(str);
    	DOF2_SetString(str, "Motivo", motivo);
       	DOF2_SetString(str, "Staff", staff);
        DOF2_SetString(str, "Nome", PegarNome(playerid));
        DOF2_SetInt(str, "Dia", dia);
        DOF2_SetInt(str, "Mes", mes);
        DOF2_SetInt(str, "Ano", ano);
    }
    new path5[100];
	format(path5, sizeof(path5), "Banidos/%s.ban", PegarNome(playerid));
	if(!DOF2_FileExists(path5))DOF2_CreateFile(path5);
    DOF2_SetString(path5, "Staff", staff);
    DOF2_SetString(path5, "Motivo", motivo);
    DOF2_SetString(path5, "Nome", PegarNome(playerid));
    DOF2_SetInt(path5, "Dia", dia);
    DOF2_SetInt(path5, "Mes", mes);
    DOF2_SetInt(path5, "Ano", ano);
    DOF2_SaveFile();
    return 1;
}
CallBack:Ban_Off_Dos(nick[], bool:banip, staff[], motivo[])
{
    //SetTimerEx("banindo", 100, false, "i", playerid);//Kickar playerid
    new g_str[160], dia, mes, ano;
    getdate(ano, mes, dia);
	format(g_str, sizeof g_str, "< BANIMENTO > O(a) %s Baniu %s (OFFLINE) permanentemente. Motivo: %s!", staff, nick, motivo);
	SendClientMessageToAll(Preto, g_str);

    new strr[160];
    format(strr, sizeof strr, "Jogador: %s\n\
    Staff: %s\n\
    Data: %02d/%02d/%d\n\
    Motivo: %s", nick, staff, dia, mes, ano, motivo);
    LogsDSADM("Banimento - Offline", embed_blue, strr, INVALID_LINK);

	new str[128];
    new DBResult:result, query[70];
    format(query, sizeof(query), "SELECT * FROM Contas WHERE PlayerName='%q'", nick);
    result = db_query(Database, query);
    if(banip){
    	format(str, sizeof(str), "Ips/%s.ini", db_get_field_assoc_int(result, "Ip"));
    	if(!DOF2_FileExists(str))DOF2_CreateFile(str);
    	DOF2_SetString(str, "Motivo", motivo);
       	DOF2_SetString(str, "Staff", staff);
        DOF2_SetString(str, "Nome", nick);
        DOF2_SetInt(str, "Dia", dia);
        DOF2_SetInt(str, "Mes", mes);
        DOF2_SetInt(str, "Ano", ano);
    }
    db_free_result(result);
    new path5[100];
	format(path5, sizeof(path5), "Banidos/%s.ban", nick);
	if(!DOF2_FileExists(path5))DOF2_CreateFile(path5);
    DOF2_SetString(path5, "Staff", staff);
    DOF2_SetString(path5, "Motivo", motivo);
    DOF2_SetString(path5, "Nome", nick);
    DOF2_SetInt(path5, "Dia", dia);
    DOF2_SetInt(path5, "Mes", mes);
    DOF2_SetInt(path5, "Ano", ano);
    DOF2_SaveFile();
    return 1;
}
CallBack:ChecarAdmin(playerid)
{
    new idx = 1;
    while(idx < MAX_VAGAS)
    {
        if(strcmp(AdminInfo[idx][AdminName],PegarNome(playerid), true ) == 0 )
        {
            return 1;
        }
        idx++;
    }
    return 0;
}
CallBack:ResetarAdmins()
{
    for(new idx=1; idx<MAX_VAGAS; idx++)
    {
        strmid(AdminInfo[idx][AdminName], "Vazio", 0, strlen("Vazio"), 255);
    }
    return 0;
}
CallBack:MinhaVaga(playerid)
{
    for(new idx=1; idx<MAX_VAGAS; idx++)
    {
        if(strcmp(AdminInfo[idx][AdminName],PegarNome(playerid), true) == 0 )
        {
            return idx;
        }
    }
    return 0;
}
CallBack:VagaAdmins(playerid)
{
    new vagaid = 0;
    for(new idx=1; idx<MAX_VAGAS; idx++)
    {
        if(strcmp(AdminInfo[idx][AdminName],PegarNome(playerid), true ) == 0 )
        {
            return idx;
        }
        else if(strcmp(AdminInfo[idx][AdminName],"Vazio", true ) == 0 )
        {
            if(vagaid==0) vagaid = idx;
        }
    }
    return vagaid;
}
CallBack:CarregarAdmins()
{
    new query[100], DBResult:result;
    for(new idx=1; idx<MAX_VAGAS; idx++){
        format(query, sizeof query, "SELECT * FROM `Admins` WHERE `Vaga`='%i'", idx);
        result = db_query(Database, query);
        if(db_num_rows(result) > 0){

            db_get_field_assoc(result, "PlayerName", AdminInfo[idx][AdminName], MAX_PLAYER_NAME);
            AdminInfo[idx][AdminLevel] = db_get_field_assoc_int(result, "AdminLevel"); 
            printf("Admin de %s Nivel: %d carregado com sucesso. Vaga: %d", AdminInfo[idx][AdminName], AdminInfo[idx][AdminLevel], idx);
        }else{                  
            format(AdminInfo[idx][AdminName], MAX_PLAYER_NAME, "Vazio");
            AdminInfo[idx][AdminLevel] = 0;
        }
        db_free_result(result);
    }
    return true;
}
stock SetarAdmin(playerid, nivel, idx)
{
    new query[200], DBResult:result;
	format(query, sizeof(query), "SELECT * FROM `Admins` WHERE `PlayerName`='%q'", PegarNome(playerid));
    result = db_query(Database, query);
    pInfo[playerid][pAdmin] = nivel;
    if(db_num_rows(result) == 0)
    {
        format(query, sizeof query, "INSERT INTO `Admins` (`Vaga`, `PlayerName`, `AdminLevel`, `Atendimentos`, `Bom`, `Medio`, `Ruim`) VALUES ('%i', '%q', '%i', '0', '0', '0', '0')",
        idx, 
        PegarNome(playerid),
        nivel);
        result = db_query(Database, query);
    }else{
        format(query, sizeof query, "UPDATE `Admins` SET `AdminLevel`='%i' WHERE `PlayerName`='%q'",
        nivel, 
        PegarNome(playerid));
        result = db_query(Database, query);
    }
    db_free_result(result);
    format(AdminInfo[idx][AdminName], MAX_PLAYER_NAME, "%q", PegarNome(playerid));
    AdminInfo[idx][AdminLevel] = nivel;
    return 1;
}

stock SetarVip(playerid, dias)
{
    new str2[100];
    new segundos = pInfo[playerid][pTempoVip], Newsegundos;

    if(segundos == 0){
        Newsegundos = segundos + (gettime() + dias * 24 * 60 * 60);
    }else{
        Newsegundos = segundos + (dias * 24 * 60 * 60);
    }

	pInfo[playerid][pTempoVip] = Newsegundos;
	pInfo[playerid][pVip] = 1;

    format(str2, sizeof str2, "* VIP: %s(%d) ativou Vip. +%d dias.", PegarNome(playerid), playerid, dias);
    SendClientMessageToAll(AMARELO, str2);
    return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    //=============================TEXT LOGIN====================================
    if(clickedid == TextLoginG[2])//logar
    {
        if(!PlayerLogado[playerid]){
            LoginDialog(playerid);
        }else{
            //jogar
            if(DelayClick[playerid] > gettime()) return 1;
            DelayClick[playerid] = gettime()+10;
            hideTelaLogin(playerid);
            SendClientMessage(playerid, Preto, "* Aguarde enquanto carregamos seus dados.");
            SetTimerEx("carregandodados", 2000, false, "i", playerid);
        }
        return 1;
    }
    if(clickedid == TextLoginG[3])//perfil
    {
        if(!PlayerLogado[playerid]){
            return 1;
        }else{
            ShowDialogInfosP(playerid, playerid);
        }
    }
    if(clickedid == TextLoginG[4])//quit
    {
        ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "DOS - INFORMA:", "Voce clicou em 'Quit' e saiu do servidor!\n\
        Volte sempre!\n\
        Acesse nosso discord: https://discord.gg/fjXNuPgP5E", "OK", "");
        SetTimerEx("DelayedKick", 100, false, "i", playerid);
        return 1;
    }

    //================================EDITOR Roupa Safe=================================
    if(clickedid == TxdGlobalSkin[3])//comprar
    {
		new str[50];
		format(str, 40, "Roupa ID: {FFFFFF}%d\n\
        {33AA33}10.000 $", SkinSelected[playerid]);
		ShowPlayerDialog(playerid, D_CONFSKIN, DIALOG_STYLE_MSGBOX, "{00FF00}Confirmacao de Compra:", str, "Comprar", "Cancelar");
        //HideTXDSkinSafe(playerid);
    }


    if(clickedid == TxdGlobalSkin[7])//ESCOLHA SKIN
    {
		ShowPlayerDialog(playerid, D_ESCOLHASKIN, DIALOG_STYLE_INPUT, "{00FF00}Escolha de skin:", "Digite abaixo o ID da Skin,\n\
        Que voce deseja comprar.\n\
        Skins de 1 a 311, exceto 74.", "Escolher", "Cancelar");
    }
    if(clickedid == TxdGlobalSkin[9])//esquerda
    {
        if(SkinSelected[playerid] == 1) SkinSelected[playerid] = 311;
        else if(SkinSelected[playerid] == 75) SkinSelected[playerid] = 73;
        else SkinSelected[playerid]--;
        UpdateTXDSkinSafe(playerid);
    }
    if(clickedid == TxdGlobalSkin[10])//direita
    {
        if(SkinSelected[playerid] == 311) SkinSelected[playerid] = 1;
        else if(SkinSelected[playerid] == 73) SkinSelected[playerid] = 75;
        else SkinSelected[playerid]++;
        UpdateTXDSkinSafe(playerid);
    }

    if(clickedid == TxdGlobalSkin[4])//fechar rps
    {
        HideTXDSkinSafe(playerid);
    }
    /*================================EDITOR CRAFT MOBILE================================*/
    if(clickedid == EditMob[0])//fechar editor
    {
        HideEditorParede(playerid);
        return 1;
    }
    if(clickedid == EditMob[1])//editor tipo
    {
        if(EditandoCraft[playerid] == 0)
		{
			EditandoCraft[playerid] = 1;
			PlayerTextDrawSetString(playerid, EditorTipo[playerid], "rotacao");
		}else
		{
            EditandoCraft[playerid] = 0;
            PlayerTextDrawSetString(playerid, EditorTipo[playerid], "posicao");
		}
    }
    if(clickedid == EditMob[2])//velocidade
    {
        ShowPlayerDialog(playerid, D_VELOCRAFT, DIALOG_STYLE_INPUT, "Definindo Velocidade", "{FFFF00}Defina a velocidade de edicao\n\
        {FF0000}OBS: Velocidade de 0.1 a 5.0", "Definir", "Cancelar");
        return 1;
    }
    if(clickedid == EditMob[4])//X+
	{
        if(EditandoStyle[playerid] == Style_Craft)
        {
            if(EditandoCraft[playerid] == 0)//se o jogador estiver editando posicao
            {
                new id = ideditorp[playerid];
                CraftInfo[id][PosX] = CraftInfo[id][PosX]+EditVelo[playerid];

                SetCraftPos(playerid, id);
            }else
            {
                new id = ideditorp[playerid];
                CraftInfo[id][RX] = CraftInfo[id][RX]+EditVelo[playerid];

                SetCraftPos(playerid, id);
            }
        }
        //editando recicladora
        else if(EditandoStyle[playerid] == Style_Recicladora)
        {
            if(EditandoCraft[playerid] == 0)//se o jogador estiver editando posicao
            {
                new id = ideditorrec[playerid];
                Tritu[id][PosX] = Tritu[id][PosX]+EditVelo[playerid];

                SetRecicladoraPos(playerid, id);
            }else
            {
                new id = ideditorrec[playerid];
                Tritu[id][RX] = Tritu[id][RX]+EditVelo[playerid];

                SetRecicladoraPos(playerid, id);
            }
        }
	}
    if(clickedid == EditMob[5])//Y+
	{
        if(EditandoStyle[playerid] == Style_Craft)
        {
            if(EditandoCraft[playerid] == 0)//se o jogador estiver editando posicao
            {
                new id = ideditorp[playerid];
                CraftInfo[id][PosY] = CraftInfo[id][PosY]+EditVelo[playerid];

                SetCraftPos(playerid, id);
            }else
            {
                new id = ideditorp[playerid];
                CraftInfo[id][RY] = CraftInfo[id][RY]+EditVelo[playerid];

                SetCraftPos(playerid, id);
            }
        }
        //editando recicladora
        else if(EditandoStyle[playerid] == Style_Recicladora)
        {
            if(EditandoCraft[playerid] == 0)//se o jogador estiver editando posicao
            {
                new id = ideditorrec[playerid];
                Tritu[id][PosY] = Tritu[id][PosY]+EditVelo[playerid];

                SetRecicladoraPos(playerid, id);
            }else
            {
                new id = ideditorrec[playerid];
                Tritu[id][RY] = Tritu[id][RY]+EditVelo[playerid];

                SetRecicladoraPos(playerid, id);
            }
        }
	}
    if(clickedid == EditMob[6])//Z+
	{
        if(EditandoStyle[playerid] == Style_Craft)
        {
            if(EditandoCraft[playerid] == 0)//se o jogador estiver editando posicao
            {
                new id = ideditorp[playerid];
                CraftInfo[id][PosZ] = CraftInfo[id][PosZ]+EditVelo[playerid];

                SetCraftPos(playerid, id);
            }else
            {
                new id = ideditorp[playerid];
                CraftInfo[id][RZ] = CraftInfo[id][RZ]+EditVelo[playerid];

                SetCraftPos(playerid, id);
            }
        }
        //editando recicladora
        else if(EditandoStyle[playerid] == Style_Recicladora)
        {
            if(EditandoCraft[playerid] == 0)//se o jogador estiver editando posicao
            {
                new id = ideditorrec[playerid];
                Tritu[id][PosZ] = Tritu[id][PosZ]+EditVelo[playerid];

                SetRecicladoraPos(playerid, id);
            }else
            {
                new id = ideditorrec[playerid];
                Tritu[id][RZ] = Tritu[id][RZ]+EditVelo[playerid];

                SetRecicladoraPos(playerid, id);
            }
        }
    }

    if(clickedid == EditMob[7])//X-
	{
        if(EditandoStyle[playerid] == Style_Craft)
        {
            if(EditandoCraft[playerid] == 0)//se o jogador estiver editando posicao
            {
                new id = ideditorp[playerid];
                CraftInfo[id][PosX] = CraftInfo[id][PosX]-EditVelo[playerid];

                SetCraftPos(playerid, id);
            }else
            {
                new id = ideditorp[playerid];
                CraftInfo[id][RX] = CraftInfo[id][RX]-EditVelo[playerid];

                SetCraftPos(playerid, id);
            }
        }
        //editando recicladora
        else if(EditandoStyle[playerid] == Style_Recicladora)
        {
            if(EditandoCraft[playerid] == 0)//se o jogador estiver editando posicao
            {
                new id = ideditorrec[playerid];
                Tritu[id][PosX] = Tritu[id][PosX]-EditVelo[playerid];

                SetRecicladoraPos(playerid, id);
            }else
            {
                new id = ideditorrec[playerid];
                Tritu[id][RX] = Tritu[id][RX]-EditVelo[playerid];

                SetRecicladoraPos(playerid, id);
            }
        }

	}
    if(clickedid == EditMob[8])//Y-
	{
        if(EditandoStyle[playerid] == Style_Craft)
        {
            if(EditandoCraft[playerid] == 0)//se o jogador estiver editando posicao
            {
                new id = ideditorp[playerid];
                CraftInfo[id][PosY] = CraftInfo[id][PosY]-EditVelo[playerid];

                SetCraftPos(playerid, id);
            }else
            {
                new id = ideditorp[playerid];
                CraftInfo[id][RY] = CraftInfo[id][RY]-EditVelo[playerid];

                SetCraftPos(playerid, id);
            }
        }
        //editando recicladora
        else if(EditandoStyle[playerid] == Style_Recicladora)
        {
            if(EditandoCraft[playerid] == 0)//se o jogador estiver editando posicao
            {
                new id = ideditorrec[playerid];
                Tritu[id][PosY] = Tritu[id][PosY]-EditVelo[playerid];

                SetRecicladoraPos(playerid, id);
            }else
            {
                new id = ideditorrec[playerid];
                Tritu[id][RY] = Tritu[id][RY]-EditVelo[playerid];

                SetRecicladoraPos(playerid, id);
            }
        }
	}
    if(clickedid == EditMob[9])//Z-
	{
        if(EditandoStyle[playerid] == Style_Craft)
        {
            if(EditandoCraft[playerid] == 0)//se o jogador estiver editando posicao
            {
                new id = ideditorp[playerid];
                CraftInfo[id][PosZ] = CraftInfo[id][PosZ]-EditVelo[playerid];

                SetCraftPos(playerid, id);
            }else
            {
                new id = ideditorp[playerid];
                CraftInfo[id][RZ] = CraftInfo[id][RZ]-EditVelo[playerid];

                SetCraftPos(playerid, id);
            }
        }
        //editando recicladora
        else if(EditandoStyle[playerid] == Style_Recicladora)
        {
            if(EditandoCraft[playerid] == 0)//se o jogador estiver editando posicao
            {
                new id = ideditorrec[playerid];
                Tritu[id][PosZ] = Tritu[id][PosZ]-EditVelo[playerid];

                SetRecicladoraPos(playerid, id);
            }else
            {
                new id = ideditorrec[playerid];
                Tritu[id][RZ] = Tritu[id][RZ]-EditVelo[playerid];

                SetRecicladoraPos(playerid, id);
            }
        }
	}

    if(clickedid == EnqueteText[5])//sim
    {
        if(JaVotou[playerid] == false && EnqueteAberta == false) {
            CancelSelectTextDraw(playerid);
            for(new t = 0; t < 11; t++) TextDrawHideForPlayer(playerid, EnqueteText[t]);
            return 1;
        }
        JaVotou[playerid] = true;
        Votos_Yes++;
        CancelSelectTextDraw(playerid);
        for(new t = 0; t < 11; t++) TextDrawHideForPlayer(playerid, EnqueteText[t]);

    }
    if(clickedid == EnqueteText[6])//nao
    {
        if(JaVotou[playerid] == false && EnqueteAberta == false) {
            CancelSelectTextDraw(playerid);
            for(new t = 0; t < 11; t++) TextDrawHideForPlayer(playerid, EnqueteText[t]);
            return 1;
        }
        JaVotou[playerid] = true;
        Votos_Not++;
        CancelSelectTextDraw(playerid);
        for(new t = 0; t < 11; t++) TextDrawHideForPlayer(playerid, EnqueteText[t]);

    }
    if(clickedid == Created_Box[2])//fechar create box
    {
        HideCreatedBox(playerid);
        return 1;
    }
    if(clickedid == Created_Box[4])//caixa de item
    {
        if(pInfo[playerid][pMadeira] < 2000) return SendClientMessage(playerid, -1, "[ERRO]{BABABA} Voce nao tem madeiras suficientes");
    	if(permitidocaixa == false) return SendClientMessage(playerid, COR_VERMELHO, "[AntiBug] Aguarde alguns segundos, alguem ja esta construindo uma caixa");
    	//pInfo[playerid][pMadeira] -= 2000;
    	SetPlayerMadeira(playerid, -2000);
        new id = -1;
    	new str[200];
    	//new str[128];
    	new strv[64];
    	for(new i; i < MAX_CAIXA; i++)
    	{
    		if(!Caixa[i][Existe])
    		{
    			id = i;
    			break;
    		}
    	}
        if(id == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Maximo de caixas criadas no servidor, Entre em contato com Xaozim.");
    	new Float:X, Float:Y, Float:Z, Float: A;
    	GetPlayerPos(playerid, X, Y, Z);
    	GetPlayerFacingAngle(playerid, A);
        format(Caixa[id][Dono], 24,"%s",PegarNome(playerid));
        format(strv,sizeof(strv),"Vazio");
    	Caixa[id][Existe] = 1;
        Caixa[id][ModelC] = 1271;
        Caixa[id][Upgrade] = 1;
    	Caixa[id][PosX] = X;
    	Caixa[id][PosY] = Y;
    	Caixa[id][PosZ] = Z;
    	Caixa[id][RZ] = A;
        for(new c=0; c< 15; c++){
            Box_Item[id][c][ItemC]=-1;
            Box_Item[id][c][QuantiaC]=0;
        }
        SendClientMessage(playerid, Verde, "[SUCESS] Caixa construida com sucesso.");
    	permitidocaixa = false;
    	Caixa[id][ObjectC] = CreateDynamicObject(Caixa[id][ModelC], Caixa[id][PosX], Caixa[id][PosY], Caixa[id][PosZ]-0.6, Caixa[id][RX], Caixa[id][RY], Caixa[id][RZ]);
        format(str, 200, "{0c76f5}Caixa [%d]\n{0c76f5}Dono: {FFFFFF}%s\n{0c76f5}Stats: {FFFFFF}%s\n{0c76f5}Upgrade: {FFFFFF}%s\n{0c76f5}Clique {FFFFFF}'N' {0c76f5}ou Digite {FFFFFF}/caixa",id, Caixa[id][Dono], Caixa[id][caberta] ? ("{00FF00}Aberta") : ("{B22222}Fechada"), GetUpgradeBoxName(id));
    	Caixa[id][LabelC] = CreateDynamic3DTextLabel(str, -1, Caixa[id][PosX], Caixa[id][PosY], Caixa[id][PosZ]-0.3, 2.0);
    	SalvarCaixa(id);
    	SetTimer("caixadelay", 10000, false);
        HideCreatedBox(playerid);
        return 1;
    }
    if(clickedid == Created_Box[6])//caixa de armas
    {
        if(pInfo[playerid][pMadeira] < 5000) return SendClientMessage(playerid, -1, "[ERRO]{BABABA} Voce nao tem madeiras suficientes");
    	if(permitidocaixa == false) return SendClientMessage(playerid, COR_VERMELHO, "[AntiBug] Aguarde alguns segundos, alguem ja esta construindo uma caixa");
    	//pInfo[playerid][pMadeira] -= 5000;
    	SetPlayerMadeira(playerid, -5000);
        new id = -1;
    	new str[200];
    	for(new i; i < MAX_CAIXA; i++)
    	{
    		if(!Caixa[i][Existe])
    		{
    			id = i;
    			break;
    		}
    	}
        if(id == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Maximo de caixas criadas no servidor, Entre em contato com Xaozim.");
    	new Float:X, Float:Y, Float:Z, Float: A;
    	GetPlayerPos(playerid, X, Y, Z);
    	GetPlayerFacingAngle(playerid, A);
        format(Caixa[id][Dono], 24,"%s",PegarNome(playerid));
    	Caixa[id][Existe] = 1;
        Caixa[id][ModelC] = 3014;
    	Caixa[id][PosX] = X;
    	Caixa[id][PosY] = Y;
    	Caixa[id][PosZ] = Z;
    	Caixa[id][RZ] = A;
        for(new w=0; w < 20; w++){
            WeaponBox[id][w][ArmaID] = INVALID_OBJECT_BOX;
            WeaponBox[id][w][MunicaoID] = 0;
        }
    	SendClientMessage(playerid, Verde, "[SUCESS] Caixas de equipamentos construida com sucesso.");
    	permitidocaixa = false;
    	Caixa[id][ObjectC] = CreateDynamicObject(Caixa[id][ModelC], Caixa[id][PosX], Caixa[id][PosY], Caixa[id][PosZ]-0.8, Caixa[id][RX], Caixa[id][RY], Caixa[id][RZ]);
      	format(str, 200, "{0c76f5}Caixa de equipamentos[%d]\n{0c76f5}Dono: {FFFFFF}%s\n{0c76f5}Stats: {FFFFFF}%s\n{0c76f5}Clique {FFFFFF}'N' {0c76f5}ou Digite {FFFFFF}/caixa",id, Caixa[id][Dono], Caixa[id][caberta] ? ("{00FF00}Aberta") : ("{B22222}Fechada"));
    	Caixa[id][LabelC] = CreateDynamic3DTextLabel(str, -1, Caixa[id][PosX], Caixa[id][PosY], Caixa[id][PosZ]-0.3, 2.0);
    	SalvarCaixa(id);
    	SetTimer("caixadelay", 10000, false);
        HideCreatedBox(playerid);
        return 1;
    }
	return 1;
}

stock SetCraftPos(playerid, id)
{
    if(CraftInfo[id][Modelo] == 19831) SetObjectCarne(id);//churrasqueira
    new str[128];
    DestroyDynamicObject(CraftInfo[id][ObjectJ]);
	CraftInfo[id][ObjectJ] = CreateDynamicObject(CraftInfo[id][Modelo], CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], CraftInfo[id][RX], CraftInfo[id][RY], CraftInfo[id][RZ]);

    DestroyDynamic3DTextLabel(CraftInfo[id][Text3Dp]);
	format(str, 128, "{81d358}/editarp {d3cd58}%d\n{58aed3}Protecao: %d",id, CraftInfo[id][metallife]);
	CraftInfo[id][Text3Dp] = CreateDynamic3DTextLabel(str, 0xFFFF00FF, CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 5.0);

    GetPlayerPos(playerid, pInfo[playerid][pPosX], pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    SetPlayerPos(playerid, pInfo[playerid][pPosX]+0.1, pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    SetPlayerPos(playerid, pInfo[playerid][pPosX]-0.1, pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    return true;
}
stock SetRecicladoraPos(playerid, id)
{
    new str[128];
    DestroyDynamicObject(Tritu[id][ObjectT]);
	Tritu[id][ObjectT]  = CreateDynamicObject(19915, Tritu[id][PosX], Tritu[id][PosY], Tritu[id][PosZ], Tritu[id][RX], Tritu[id][RY], Tritu[id][RZ]);

    DestroyDynamic3DTextLabel(Tritu[id][Text3Dt]);
	format(str, sizeof(str), "{81d358}/reciclar\nRecicladora: {FFFFFF}[%d]",id);
	Tritu[id][Text3Dt] = CreateDynamic3DTextLabel(str, AMARELO, Tritu[id][PosX],Tritu[id][PosY],Tritu[id][PosZ], 30.0);

    GetPlayerPos(playerid, pInfo[playerid][pPosX], pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    SetPlayerPos(playerid, pInfo[playerid][pPosX]+0.1, pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    SetPlayerPos(playerid, pInfo[playerid][pPosX]-0.1, pInfo[playerid][pPosY], pInfo[playerid][pPosZ]);
    return true;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid )
{
    /*======MESA DE CRAFT=======
    #define D_MATERISELECT 105
    #define D_ITENS_SELECT 106
    #define D_MATERIALSLC  107
    #define D_QUANTIAIM    108
    */
    if(playertextid == TextMCraft[playerid][2])//mudar item 1;
    {
        if(pSelecionandoTXDMesa[playerid]){
            SlotSelectMC[playerid] = PLAYER_SELECT_SLOT1;
            pSelecionandoTXDMesa[playerid] = false;
            ShowPlayerDialog(playerid, D_MATERISELECT, DIALOG_STYLE_LIST, "O que deseja fazer?", "Adicionar item\n\
            Adicionar Material\n\
            {FF0000}Remover Item", "Selecionar", "Cancelar");
        }
    }
    if(playertextid == TextMCraft[playerid][3])//mudar item 2;
    {
        if(pSelecionandoTXDMesa[playerid]){
            pSelecionandoTXDMesa[playerid] = false;
            SlotSelectMC[playerid] = PLAYER_SELECT_SLOT2;
            ShowPlayerDialog(playerid, D_MATERISELECT, DIALOG_STYLE_LIST, "O que deseja fazer?", "Adicionar item\n\
            Adicionar Material\n\
            {FF0000}Remover Item", "Selecionar", "Cancelar");
        }
    }
    if(playertextid == TextMCraft[playerid][4])//combinar itens;
    {
        new idmesa = pUsandoMesa[playerid];
        if(pSelecionandoTXDMesa[playerid]){
            if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
            new itemresult = ItensCombinaveis(CraftInfo[idmesa][ItemM1], CraftInfo[idmesa][ItemM2], CraftInfo[idmesa][QuantiaIM1], CraftInfo[idmesa][QuantiaIM2]);
            
            if(itemresult != INVALID_OBJECT_BOX){
                CraftInfo[idmesa][ItemM1] = -1;
                CraftInfo[idmesa][ItemM2] = -1;
                CraftInfo[idmesa][QuantiaIM1] = 0;
                CraftInfo[idmesa][QuantiaIM2] = 0;
                UpdatePlayerMesa(playerid);
                AddItem(playerid,itemresult, 1);
                new str[90];
                format(str, sizeof str, "{FFFFFF}Voce craftou um item na mesa de craft\n\
                {FFFF00}Item: {FFFFFF}%s", GetItemNameID(itemresult));
                ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Item/Material Combinado:", str, "Informado", "");
            }
        }
    }

    if(playertextid == TextMCraft[playerid][10])//combinacoes;
    {
        if(pSelecionandoTXDMesa[playerid]){
            ShowDialogPlayerCombinacoes(playerid);
        }
    }
    if(playertextid == TextMCraft[playerid][11])//meus itens e materiais;
    {
        
    }
    if(playertextid == TextMCraft[playerid][12])//fechar;
    {
        pSelecionandoTXDMesa[playerid] = true;
        HideInfoMesaCraft(playerid);
    }
    


    if(playertextid == TextCaixa[playerid][2])//fechar text
	{
        HideCaixaSelect(playerid, idcaixap[playerid]);
        PlayerPlaySound(playerid,1084,0.0,0.0,0.0);
        return 1;
	}
    else if(PlayerSelecionandoItem[playerid]){
        for(new t=4; t < 19; t++)
        {
            if(playertextid == TextCaixa[playerid][t])
            {
                new newValue = t-4, id = idcaixap[playerid];
                if(Caixa[id][Upgrade] == 1){
                    if(newValue >= 5 && newValue <= 14) return 1;
                }else if(Caixa[id][Upgrade] == 2){
                    if(newValue >= 10 && newValue <= 14) return 1;
                }
                itemselecionado[playerid] = newValue;
                PlayerPlaySound(playerid,1083,0.0,0.0,0.0);
                return 1;
            }
        }
    }
    if(playertextid == TextCaixa[playerid][34]) //pegar item
    {
        new slot=itemselecionado[playerid], id = idcaixap[playerid];
        if(slot == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Nenhum slot selecionado.");
        if(Box_Item[id][slot][ItemC] == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Slot Selecionado se encontra vazio.");
        new idItem=Box_Item[id][slot][ItemC];
        PlayerSelecionandoItem[playerid] = false;
        new str[120];
        format(str, sizeof str, "{C9C9C9}Digite abaixo a quantia de {00FF00}[%s] {C9C9C9}que deseja pegar\n\
        {C9C9C9}Quantia Valida: %d", GetNameItemY(idItem), Box_Item[id][slot][QuantiaC]);
        ShowPlayerDialog(playerid, D_PEGARIBOX, DIALOG_STYLE_INPUT, "{00FF00}Caixa - Pegar Item", str, "Pegar","Fechar");
        return 1;
    }
    if(playertextid == TextCaixa[playerid][35])// guardar item
    {
        new slot=itemselecionado[playerid], idc = idcaixap[playerid];
        if(Box_Item[idc][slot][QuantiaC] == 10) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Maximo de itens adicionado a este slot [10].");
        if(slot == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Nenhum slot selecionado.");
        PlayerSelecionandoItem[playerid] = false;
        ShowInventoryTent(playerid);
        return 1;
    }
    if(playertextid == Box_WeaponText[playerid][22])//ESQUERDA
    {
        new id = idcaixap[playerid];
        if(Pagina_WCreate[playerid] == 2)
        {
            Pagina_WCreate[playerid] = 1;
            new number_slot = -1, str[30];
            format(str, sizeof str, "Pagina:_(%d/2)", Pagina_WCreate[playerid]);
            PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][32], str);
            for(new w=0; w < 10; w++)
            {
                number_slot=w+2;
                PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][number_slot],F_GunObjects(WeaponBox[id][w][ArmaID]));
                PlayerTextDrawShow(playerid, Box_WeaponText[playerid][number_slot]);
                number_slot=w+12;
                format(str, sizeof str, "%s~n~municao:_%d", GetNameWeaponB(WeaponBox[id][w][ArmaID]), WeaponBox[id][w][MunicaoID]);
                PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][number_slot], str);
                //WeaponBox[id][w][MunicaoID]
            }
        }else if(Pagina_WCreate[playerid] == 1)
        {
            Pagina_WCreate[playerid] = 2;
            new number_slot = -1, str[30];
            format(str, sizeof str, "Pagina:_(%d/2)", Pagina_WCreate[playerid]);
            PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][32], str);
            for(new w=10; w < 20; w++)
            {
                number_slot=w-8;
                PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][number_slot],F_GunObjects(WeaponBox[id][w][ArmaID]));
                PlayerTextDrawShow(playerid, Box_WeaponText[playerid][number_slot]);
                number_slot=w+2;
                format(str, sizeof str, "%s~n~municao:_%d", GetNameWeaponB(WeaponBox[id][w][ArmaID]), WeaponBox[id][w][MunicaoID]);
                PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][number_slot], str);
            }
        }
    }
    if(playertextid == Box_WeaponText[playerid][23])//DIREITA
    {
        new id = idcaixap[playerid];
        if(Pagina_WCreate[playerid] == 2)
        {
            Pagina_WCreate[playerid] = 1;
            new number_slot = -1, str[30];
            format(str, sizeof str, "Pagina:_(%d/2)", Pagina_WCreate[playerid]);
            PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][32], str);
            for(new w=0; w < 10; w++)
            {
                number_slot=w+2;
                PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][number_slot],F_GunObjects(WeaponBox[id][w][ArmaID]));
                PlayerTextDrawShow(playerid, Box_WeaponText[playerid][number_slot]);
                number_slot=w+12;
                format(str, sizeof str, "%s~n~municao:_%d", GetNameWeaponB(WeaponBox[id][w][ArmaID]), WeaponBox[id][w][MunicaoID]);
                PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][number_slot], str);
                //WeaponBox[id][w][MunicaoID]
            }
        }else if(Pagina_WCreate[playerid] == 1)
        {
            Pagina_WCreate[playerid] = 2;
            new number_slot = -1, str[30];
            format(str, sizeof str, "Pagina:_(%d/2)", Pagina_WCreate[playerid]);
            PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][32], str);
            for(new w=10; w < 20; w++)
            {
                number_slot=w-8;
                PlayerTextDrawSetPreviewModel(playerid, Box_WeaponText[playerid][number_slot],F_GunObjects(WeaponBox[id][w][ArmaID]));
                PlayerTextDrawShow(playerid, Box_WeaponText[playerid][number_slot]);
                number_slot=w+2;
                format(str, sizeof str, "%s~n~municao:_%d", GetNameWeaponB(WeaponBox[id][w][ArmaID]), WeaponBox[id][w][MunicaoID]);
                PlayerTextDrawSetString(playerid, Box_WeaponText[playerid][number_slot], str);
            }
        }
    }
    for(new cs=0; cs < 10; cs++)
    {
        new cs_b = cs+2;
        if(playertextid == Box_WeaponText[playerid][cs_b])
        {
            sWeaponSelected[playerid]=cs;
            break;
        }
    }
    if(playertextid == Box_WeaponText[playerid][24])//Guardar Arma
    {
        
        new Arma = GetPlayerWeapon(playerid), Municao; 

        new slot = GetSlotWeapon(Arma);

        Arma = GetPlayerWeaponEx(playerid, slot); 
    	Municao = GetPlayerAmmoEx(playerid, slot); 
        
        new id = idcaixap[playerid];
        new w = sWeaponSelected[playerid];
        if(Municao + WeaponBox[id][w][MunicaoID] > 1000) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Limite de municao a ser guardada no Slot: 1000.");

        if(sWeaponSelected[playerid] != -1){
            if(Pagina_WCreate[playerid] == 1)
            {
                if(WeaponBox[id][w][ArmaID] != INVALID_OBJECT_BOX) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Slot ocupado por uma arma.");
                if(Arma == 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui nenhuma arma em maos.");
                RemovePlayerWeapon(playerid, Arma);
                GivePlayerWeaponEx(playerid, 0, 1);
                WeaponBox[id][w][ArmaID] = Arma;
                WeaponBox[id][w][MunicaoID] += Municao;
                MensagemFormatada(playerid, 0xFF8C00FF, "* Voce Guardou uma {FFFFFF}%s {FF8C00}com {FFFFFF}[%d] {FF8C00}de municao.", GunName[Arma], Municao);
                AtualizarCaixaW(playerid);
            }else if(Pagina_WCreate[playerid] == 2)
            {
                w += 10;
                if(WeaponBox[id][w][ArmaID] != INVALID_OBJECT_BOX) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Slot ocupado por uma arma.");
                if(Arma == 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui nenhuma arma em maos.");
                RemovePlayerWeapon(playerid, Arma);
                GivePlayerWeaponEx(playerid, 0, 1);
                WeaponBox[id][w][ArmaID] = Arma;
                WeaponBox[id][w][MunicaoID] += Municao;
                MensagemFormatada(playerid, 0xFF8C00FF, "* Voce Guardou uma {FFFFFF}%s {FF8C00}com {FFFFFF}[%d] {FF8C00}de municao.", GunName[Arma], Municao);
                AtualizarCaixaW(playerid);
            }
        }
    }
    if(playertextid == Box_WeaponText[playerid][28])//pegar Arma
    {
        new id = idcaixap[playerid];
    	new w = sWeaponSelected[playerid];
        if(sWeaponSelected[playerid] != -1){
            if(Pagina_WCreate[playerid] == 1)
            {
                if(WeaponBox[id][w][ArmaID] == INVALID_OBJECT_BOX || WeaponBox[id][w][MunicaoID] == 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Nao existe nenhum arma ou nao tem municao neste slot.");

                new Arma = WeaponBox[id][w][ArmaID], Municao = WeaponBox[id][w][MunicaoID];
                WeaponBox[id][w][ArmaID] = INVALID_OBJECT_BOX;
                WeaponBox[id][w][MunicaoID] = 0;
                if(!WeaponsServer(Arma)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao tem permissao para pegar essa arma.");
                MensagemFormatada(playerid, 0xFF8C00FF, "* Voce pegou uma {FFFFFF}%s {FF8C00}com {FFFFFF}[%d] {FF8C00}de municao.", GunName[Arma], Municao);
            	GivePlayerWeaponEx(playerid, Arma, Municao);
                AtualizarCaixaW(playerid);
            }else if(Pagina_WCreate[playerid] == 2)
            {
                w += 10;
                if(WeaponBox[id][w][ArmaID] == INVALID_OBJECT_BOX || WeaponBox[id][w][MunicaoID] == 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Nao existe nenhum arma ou nao tem municao neste slot.");

                new Arma = WeaponBox[id][w][ArmaID], Municao = WeaponBox[id][w][MunicaoID];
                WeaponBox[id][w][ArmaID] = INVALID_OBJECT_BOX;
                WeaponBox[id][w][MunicaoID] = 0;
                if(!WeaponsServer(Arma)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao tem permissao para pegar essa arma.");
                MensagemFormatada(playerid, 0xFF8C00FF, "* Voce pegou uma {FFFFFF}%s {FF8C00}com {FFFFFF}[%d] {FF8C00}de municao.", GunName[Arma], Municao);
            	GivePlayerWeaponEx(playerid, Arma, Municao);
                AtualizarCaixaW(playerid);
            }
        }
    }
    if(playertextid == Box_WeaponText[playerid][27])//fechar box weapon
    {
        CancelSelectTextDraw(playerid);
        HideCaixaSelect(playerid, idcaixap[playerid]);
    }
    
    
    //CRAFT PAINEL
    new slot;
    for(new i=0; i < 12; i++){
        slot = i+2;
        if(playertextid == TXDCCraft[playerid][slot]){//item 1
            new slotpreview = NumberListaCrafts[playerid]+i;
            if(Equipado[playerid][MARTELO] == 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce deve se equipar com um martelo para Criar uma Craft.");
           
            HideCCraft(playerid);
            CriarCraft(playerid, slotpreview);
        }
    }
    

    if(playertextid == TXDCCraft[playerid][14]){//fechar
        HideCCraft(playerid);
    }
    if(playertextid == TXDCCraft[playerid][28]){//esquerda
        PreviousCCraft(playerid);
    }
    if(playertextid == TXDCCraft[playerid][29]){//direita
        ProxPagCCraft(playerid);
    }


	return 1;
}

CallBack:animMedic(playerid)
{
	ApplyAnimation(playerid, "MEDIC", "CPR", 4.1, 0, 0, 0, 1, 0, 1);
	ApplyAnimation(playerid, "MEDIC", "CPR", 4.1, 0, 0, 0, 1, 0, 1);
	ApplyAnimation(playerid, "MEDIC", "CPR", 4.1, 0, 0, 0, 1, 0, 1);
    ApplyAnimation(playerid, "MEDIC", "CPR", 4.1, 0, 0, 0, 1, 0, 1);
	ApplyAnimation(playerid, "MEDIC", "CPR", 4.1, 0, 0, 0, 1, 0, 1);
    return 1;
}

CallBack:delyanaimacao(playerid)
{
	ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.1, 0, 0, 0, 1, 0, 1);
	ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.1, 0, 0, 0, 1, 0, 1);
	ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.1, 0, 0, 0, 1, 0, 1);
    ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.1, 0, 0, 0, 1, 0, 1);
	ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.1, 0, 0, 0, 1, 0, 1);
    return 1;
}
CallBack:animfabri(playerid)
{
    ApplyAnimation(playerid, "CASINO", "SLOT_BET_01", 4.1, 1, 0, 0, 1, 0, 1);
    ApplyAnimation(playerid, "CASINO", "SLOT_BET_01", 4.1, 1, 0, 0, 1, 0, 1);
    ApplyAnimation(playerid, "CASINO", "SLOT_BET_01", 4.1, 1, 0, 0, 1, 0, 1);
    ApplyAnimation(playerid, "CASINO", "SLOT_BET_01", 4.1, 1, 0, 0, 1, 0, 1);
    ApplyAnimation(playerid, "CASINO", "SLOT_BET_01", 4.1, 1, 0, 0, 1, 0, 1);
   	ClearAnimations(playerid, 1);
    TogglePlayerControllable(playerid, 1);
    ApplyAnimation(playerid, "CASINO", "SLOT_BET_01", 4.1, 1, 0, 0, 1, 0, 1);
    ApplyAnimation(playerid, "CASINO", "SLOT_BET_01", 4.1, 1, 0, 0, 1, 0, 1);
    ApplyAnimation(playerid, "CASINO", "SLOT_BET_01", 4.1, 1, 0, 0, 1, 0, 1);
    ApplyAnimation(playerid, "CASINO", "SLOT_BET_01", 4.1, 1, 0, 0, 1, 0, 1);
    ApplyAnimation(playerid, "CASINO", "SLOT_BET_01", 4.1, 1, 0, 0, 1, 0, 1);
	return 1;
}
CallBack:AntiFakeDeath(playerid)
{
    Morreu[playerid] = 0;
	return 1;
}
CallBack:TriturandoMartelo(playerid)
{
    ClearAnimations(playerid, 1);
	//pInfo[playerid][pMadeira] += 150;
	SetPlayerMadeira(playerid, 150);
    SetPlayerFerro(playerid, 50);
    //pInfo[playerid][pFerro] += 50;
	
    SendClientMessage(playerid, Verde, "{FFFF00}* Voce reciclou um martelo e recebeu 150 madeiras e 50 ferros.");
	JaFabricando[playerid] = 0;
	TogglePlayerControllable(playerid, 1);
	return 1;
}
CallBack:TriturandoMotor(playerid)
{
    ClearAnimations(playerid, 1);
	//pInfo[playerid][pFerro] += 300;
	SetPlayerFerro(playerid, 150);
    SendClientMessage(playerid, Verde, "{FFFF00}* Voce reciclou um motor e recebeu 150 Ferros.");
	JaFabricando[playerid] = 0;
	TogglePlayerControllable(playerid, 1);
	return 1;
}
CallBack:TriturandoAK(playerid)
{
    ClearAnimations(playerid, 1);
	//pInfo[playerid][pMadeira] += 200;
	SetPlayerMadeira(playerid, 100);
    //pInfo[playerid][pFerro] += 60;
	SetPlayerFerro(playerid, 40);
    SendClientMessage(playerid, Verde, "{FFFF00}* Voce reciclou uma AK-47 e recebeu 40 ferros e 100 madeiras.");
	JaFabricando[playerid] = 0;
	TogglePlayerControllable(playerid, 1);
	return 1;
}
CallBack:TriturandoM4(playerid)
{
    ClearAnimations(playerid, 1);
	//pInfo[playerid][pFerro] += 400;
	SetPlayerFerro(playerid, 200);
    SendClientMessage(playerid, Verde, "{FFFF00}* Voce reciclou uma M4-A1 e recebeu 200 Ferros.");
	JaFabricando[playerid] = 0;
	TogglePlayerControllable(playerid, 1);
	return 1;
}
CallBack:TriturandoKatana(playerid)
{
    ClearAnimations(playerid, 1);
	SetPlayerFerro(playerid, 50);
    //pInfo[playerid][pFerro] += 100;
	SendClientMessage(playerid, Verde, "{FFFF00}* Voce reciclou uma katana e recebeu 50 Ferros.");
	JaFabricando[playerid] = 0;
	TogglePlayerControllable(playerid, 1);
	return 1;
}
CallBack:TriturandoPA(playerid)
{
    ClearAnimations(playerid, 1);
	//pInfo[playerid][pMadeira] += 40;
	SetPlayerMadeira(playerid, 25);
    SetPlayerFerro(playerid, 40);
    //pInfo[playerid][pFerro] += 50;
	SendClientMessage(playerid, Verde, "{FFFF00}* Voce reciclou uma PA e recebeu 40 ferros e 25 madeiras.");
	JaFabricando[playerid] = 0;
	TogglePlayerControllable(playerid, 1);
	return 1;
}

CallBack:Curandocura(playerid, health)
{
	Curando[playerid] = 0;
	ClearAnimations(playerid, 1);
	//GivePlayerHealth(playerid, health);
    SetPlayerHealthEx(playerid, pInfo[playerid][pHealth]+health);
    if(pInfo[playerid][pHealth] > 100) SetPlayerHealthEx(playerid, 100.0);
    new str[45]; format(str, sizeof str, "~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~+%d_curado", health);
    GameTextForPlayer(playerid,str,1000,3);
	return 1;
}
/*TESTER DANO SERVER - SIDE*/

stock SetKillForPlayer(playerid, killerid, reason)
{
    SetPlayerHealth(playerid, 0.0);
    SendDeath(playerid);
    OnPlayerDeathEx(playerid, killerid, reason);
}

stock OnPlayerDeathEx(playerid, killerid, reason)
{
    //printf("CALL-BACK: OnPlayerDeathEx Playerid: %d, killerid: %d, reason: %d", playerid, killerid, reason);
    if(pInfo[playerid][pConectado])
    {
        if(killerid != INVALID_PLAYER_ID){
            if(pInfo[killerid][pAdmin] == 0 && reason == 38){
                Ban_Dos(killerid, true, "Bot-Dos", "Minigun-Mod");
                return 1;
            }
        }
        if(morto[playerid] == false){
            morto[playerid] = true;

            Morreu[playerid] ++;
            if(Morreu[playerid] == 1)SetTimerEx("AntiFakeDeath", 3000, false, "i", playerid);
            if(Morreu[playerid] >= 3)
            {
                Ban_Dos(playerid, true, "Bot-Dos", "Fake-Death");
                return 1;
            }

            if(killerid != INVALID_PLAYER_ID && killerid != playerid){
                if(pInfo[playerid][pClan] != pInfo[killerid][pClan] 
                || pInfo[playerid][pClan] == 0 || pInfo[killerid][pClan] == 0)
                {
                    if(!IsPlayerNPC(killerid)){
                        SetPlayerKill(killerid, 1);
                        SetarKillClan(killerid);
                    }
                    
                    new str[120];
                    format(str, sizeof(str), "[KILL] {FFFFFF}%s {FF0000}Matou o jogador {FFFFFF}%s{FF0000}.", PegarNome(killerid), PegarNome(playerid));
                    SendClientMessageToAll(0xFF0000FF, str);
                }
            }
            if(!IsPlayerNPC(playerid)){
                DefinirRespawn(playerid);
                SetarMorteClan(playerid);
                SetPlayerDeath(playerid, 1);
                DroparMochila(playerid);
                DropArma(playerid);
                ResetPlayerWeaponsEx(playerid);
                ForceDrop(playerid);
                ResetarPlayer(playerid);
                Equipado[playerid][PE_DE_CABRA]=0;
                Equipado[playerid][MASCARA]=0;
                Equipado[playerid][CHAVE_DE_FENDA]=0;
                Equipado[playerid][CHAVE_COMBINADA]=0;
                Equipado[playerid][MARTELO]=0;
                Equipado[playerid][MARRETA]=0;
                pInfo[playerid][pTemGPS] = 0;
                pInfo[playerid][pTempoVivo] = 0;
                pInfo[playerid][pTemRADIO] = 0;
                if(SecundGToxicZ[playerid] > 0){
                    SecundGToxicZ[playerid] = 0;
                    HideTextInfect(playerid);
                }
                if(Acao_Ativa[playerid])HideTimerAcao(playerid);

                if(killerid != INVALID_PLAYER_ID && killerid != playerid){
                    if(pInfo[playerid][pClan] == pInfo[killerid][pClan] && ClanInfo[pInfo[playerid][pClan]][FriendFire])
                    {
                        SendDeathMessage(INVALID_PLAYER_ID, playerid, 255);
                        return true;
                    }                
                }
                SendDeathMessage(killerid, playerid, reason);
            }
        }
    }
    return 1;
}

CallBack:Decrease_Health(playerid, Float:vida)
{
    if(pInfo[playerid][pAdmin] > 0 && pInfo[playerid][pDuty]) return 1;
	pInfo[playerid][pHealth] -= vida;
    
    if(pInfo[playerid][pHealth] <= 0){
        pInfo[playerid][pHealth] = 0;
        SetKillForPlayer(playerid, INVALID_PLAYER_ID, 255);
    }else{
        SetPlayerHealth(playerid, pInfo[playerid][pHealth]);
    }
	return 1;
}

CallBack:GivePlayerHealth(playerid, Float:vida)
{
	pInfo[playerid][pHealth] += vida;
    if(pInfo[playerid][pHealth] < 0) pInfo[playerid][pHealth] = 0;
    else if(pInfo[playerid][pHealth] > 100) pInfo[playerid][pHealth] = 100;
    AdjustHealth(playerid);
	return 1;
}
CallBack:GivePlayerArmour(playerid, Float:colete)
{
	pInfo[playerid][pArmour] += colete;
    if(pInfo[playerid][pArmour] < 0) pInfo[playerid][pArmour] = 0;
    else if(pInfo[playerid][pArmour] > 100) pInfo[playerid][pArmour] = 100;
    AdjustArmour(playerid);
    return 1;
}
CallBack:SetPlayerHealthEx(playerid, Float:vida)
{
	pInfo[playerid][pHealth] = vida;
    if(pInfo[playerid][pHealth] > 100) pInfo[playerid][pHealth] = 100;
    SetPlayerHealth(playerid, pInfo[playerid][pHealth]);
	return 1;
}
CallBack:SetPlayerArmourEx(playerid, Float:colete)
{
	pInfo[playerid][pArmour] = colete;
    if(pInfo[playerid][pArmour] > 100) pInfo[playerid][pArmour] = 100;
    SetPlayerArmour(playerid, pInfo[playerid][pArmour]);
	return 1;
}
stock SetPlayerXp(playerid, quantia)
{
    pInfo[playerid][pXp] = quantia;
	return 1;
}
stock GivePlayerXp(playerid, quantia)
{
    pInfo[playerid][pXp] += quantia;
	return 1;
}

//===========================================================//
CallBack:Platandobomba(playerid)
{
	new id = idparedebomb[playerid];
	ClearAnimations(playerid, 1);
	TogglePlayerControllable(playerid, 1);
	GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~~h~Sai daqui Rapido!",1000,3);
    switch(BombaUsada[playerid]){
        case BOMBAGALAO: 
        {
            SetTimerEx( "Explodindobomba", 4000, false, "i", playerid);
            objetoc4[playerid] = CreateDynamicObject(363, CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 0, 0, 0);
        }
        case BOMBADINAMITE: 
        {
            SetTimerEx( "Explodindobomba", 5000, false, "i", playerid);
            objetoc4[playerid] = CreateDynamicObject(1654, CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 0, 0, 0);
        }
        case BOMBAC4: 
        {
            SetTimerEx( "Explodindobomba", 10000, false, "i", playerid);
            objetoc4[playerid] = CreateDynamicObject(1252, CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 0, 0, 0);
        }
    }
	return 1;
}
CallBack:Platandobombacaixa(playerid)
{
    new id=idcabrir[playerid], stre[30];
    if(TempACaixa[playerid] == 1){//se zerar o tempo
        KillTimer(TimerACaixa[playerid]);
        HideTimerAcao(playerid);
        new year, month, day, hour, minute, second, str[200];
        getdate(year, month, day);
        gettime(hour,minute,second);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~~h~Caixa Aberta..!",1000,3);
        Caixa[id][caberta] = true;
        ACaixa[playerid]=false;
        UpdateTextLabelBox(id);
        if (_:g_DS_LogBox == 0)
        g_DS_LogBox = DCC_FindChannelById("1055574274393514004"); // Discord channel ID
        format(str, sizeof str, "```py\n\
        [Abrir-Caixa] %s abriu uma caixa ID: (%d) de %s as %02d:%02d em %02d/%02d/%d.```", PegarNome(playerid), id, Caixa[id][Dono], hour, minute, day, month, year);
        DCC_SendChannelMessage(g_DS_LogBox, str);
        ClearAnimations(playerid, 1);
        TogglePlayerControllable(playerid, 1);
        idcabrir[playerid]=-1;
    }else{
        TempACaixa[playerid]--;
        format(stre, sizeof stre, "%02d:%02d", TempACaixa[playerid] / 60, TempACaixa[playerid] % 60);
        PlayerTextDrawSetString(playerid, TimerTextAcao[playerid][2], stre);
    }
	return 1;
}



CallBack:Explodindobomba(playerid)
{
	new id = idparedebomb[playerid], dano;
    switch(BombaUsada[playerid]){
        case BOMBAGALAO: 
        {
            CreateExplosion(CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 11, 4.0);
            dano = 1;
        }
        case BOMBADINAMITE: 
        {
            CreateExplosion(CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 12, 4.0);
            dano = 3;
        }
        case BOMBAC4: 
        {
            CreateExplosion(CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 6, 5.0);
            dano = 5;
        }
    }
    DestroyDynamicObject(objetoc4[playerid]);
	CausarDanoCraft(playerid, id, dano);
	return 1;
}

stock CausarDanoCraft(playerid, id, dano){
    new str[128];
	CraftInfo[id][metallife] -= dano;
	format(str, 128,"{B22222}[DANIFICADA]\n{81d358}/editarp {d3cd58}%d\n{58aed3}Protecao: %d",id, CraftInfo[id][metallife]);
	UpdateDynamic3DTextLabelText(CraftInfo[id][Text3Dp], 0xFFFF00FF, str);

    if(CraftInfo[id][metallife] <= 0)
    {
    	DestroyDynamicObject(CraftInfo[id][ObjectJ]);
    	DestroyDynamic3DTextLabel(CraftInfo[id][Text3Dp]);
    	CraftInfo[id][Existe] = 0;
    	CraftInfo[id][PosX] = 0;
    	CraftInfo[id][PosY] = 0;
    	CraftInfo[id][PosZ] = 0;
    	CraftInfo[id][RX] = 0;
    	CraftInfo[id][RY] = 0;
    	CraftInfo[id][RZ] = 0;
		new file[64];
		format(file, sizeof(file), "Data/Crafts/%d.ini", id);
		if(DOF2_FileExists(file)) DOF2_RemoveFile(file);
		new strr[90];
		format(strr, sizeof(strr), "<!> Raid: {FFFFFF}O Jogador %s(%d) quebrou uma craft de %s.", PegarNome(playerid), playerid, CraftInfo[id][Dono]);
		SendClientMessageToAll(Preto, strr);
    }
    return true;
}

stock minrand(min, max) //By Alex "******" Cole
{
    return random(max - min) + min;
}
stock GetNameMat(playerid)
{
	new nome[10];
	if(MatSelect[playerid] == 1) nome = "Dinheiro";
	if(MatSelect[playerid] == 2) nome = "Madeiras";
	if(MatSelect[playerid] == 3) nome = "Ferros";
	return nome;
}
stock ProxDetector(Float:radi, playerid, string[],color)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid,x,y,z);
    foreach(new i : Player)
    {
        if(IsPlayerInRangeOfPoint(i,radi,x,y,z))
        {
            SendClientMessage(i,color,string);
        }
    }
}

stock ShowInventoryTent(playerid)
{
    new str[30], ustring[50];
	MEGAString[0]=EOS;
    strcat(MEGAString, "Item\tQuantia\n");
    for(new i=0; i < MAX_ITEM_INV; i++){
        if(i < pInfo[playerid][pBackpack]){
            format(str, sizeof str, "%s\t%d\n", GetNameItemY(Inv[playerid][i][ItemID]), Inv[playerid][i][QuantiaI]);
            strcat(MEGAString, str);
        }
    }
    format(ustring, sizeof ustring, "%s || %d/%d", GetPlayerBackpackName(playerid), pInfo[playerid][pSlots], pInfo[playerid][pBackpack]);
    ShowPlayerDialog(playerid, D_GUARDARIBOX, DIALOG_STYLE_TABLIST_HEADERS, ustring, MEGAString, "Adicionar", "Fechar");
    return 1;
}
CallBack:delaymsg(playerid)
{
	msglog[playerid] = false;
	return 1;
}
stock InRangeOfAnyVehicle(playerid)
{
    new Float:X, Float:Y, Float:Z, id = -1;
    for(new I = 0; I < MAX_VEHICLES; I++)
    {
        if(IsValidVehicle(I))
        {
	        GetVehiclePos(I, X, Y, Z);
	        if(IsPlayerInRangeOfPoint(playerid, 5.0, X, Y, Z))
	        {
	            id = I;
	            break;
	        }
        }
    }
    return id;
}

CallBack:ciclo()
{
	new str[128];
	if(tempoatual == 1)
	{
		new rand = minrand(25,33);
        TemperaturaAtual = rand;
		SetWorldTime(12);
		tempoatual = 2;
		format(str, sizeof(str), "[Clima] o Mundo se aproxima de 12:00 | Temperatura: %dC", rand);
		SendClientMessageToAll(Verde, str);
	}
	else if(tempoatual == 2)
	{
		new rand = minrand(20,25);
        TemperaturaAtual = rand;
		SetWorldTime(20);
		tempoatual = 3;
		format(str, sizeof(str), "[Clima] o Mundo se aproxima de 17:30 | Temperatura: %dC", rand);
		SendClientMessageToAll(Verde, str);
	}
	else if(tempoatual == 3)
	{
		new rand = minrand(10,17);
        TemperaturaAtual = rand;
		SetWorldTime(0);
		tempoatual = 4;
		format(str, sizeof(str), "[Clima] o Mundo se aproxima de 21:00 | Temperatura: %dC", rand);
		SendClientMessageToAll(Verde, str);
	}
	else if(tempoatual == 4)
	{
		new rand = minrand(3,7);
        TemperaturaAtual = rand;
		SetWorldTime(3);
		tempoatual = 5;
		format(str, sizeof(str), "[Clima] o Mundo se aproxima de 03:00 | Temperatura: %dC", rand);
		SendClientMessageToAll(Verde, str);
	}
	else if(tempoatual == 5)
	{
		new rand = minrand(12,17);
		TemperaturaAtual = rand;
        SetWorldTime(6);
		tempoatual = 1;
		format(str, sizeof(str), "[Clima] o Mundo se aproxima de 06:00 | Temperatura: %dC", rand);
		SendClientMessageToAll(Verde, str);
	}
    new strt[5]; format(strt, sizeof strt, "%i", TemperaturaAtual);
    //TextDrawSetString(TextGHud[1], strt);
    return true;
}

CallBack:finalreloot()
{
	SendClientMessageToAll(Preto, "</Reloot> Todos itens, armas e zumbis foram respawnados automaticamente!");

    for(new l; l < MAX_LOOTS; l++){
        DestruirLoot(l);
    }
    for(new z=0; z < MAX_ZUMBIS; z++)
	{
        if(FCNPC_IsDead(ZId[z]))
        {
	       FCNPC_Respawn(ZId[z]);
        }
    }

    LoadItensAeroBox();

    if(GatePrivateOpen[PORTAO_SALA_AREA51])
    {
        GatePrivateOpen[PORTAO_SALA_AREA51] = false;
        new Float:X, Float:Y, Float:Z;
        GetDynamicObjectPos(MapArea51[2], X, Y, Z);
        MoveDynamicObject(MapArea51[2], X, Y, Z-5, 0.3, 0.0, 0.0, 0.0);
    }
    if(GatePrivateOpen[PORTAO_AREA_AEROPORTO]){
        GatePrivateOpen[PORTAO_AREA_AEROPORTO] = false;
        new Float:X, Float:Y, Float:Z;
        GetObjectPos(AreaAero[132], X, Y, Z);
        MoveObject(AreaAero[132], X, Y, Z+10, 0.10, 0.0, 0.0, -90.7997);
    }
    DestroyArmas();
    DestroyLoots();
	SpawnLoots();
	return 1;
}

CallBack:reiniciando1()
{
	foreach(new i : Player)
	{
        Kick(i);
	}
	for(new i; i < MAX_VEHICLES; i++)
	{
        if(IsValidVehicle(i))
        {
			new strsave[31];
		   	format(strsave, sizeof(strsave), Pasta_Carros, vInfo[i][VehicleID]);
		   	if(DOF2_FileExists(strsave))
		   	{
				CarInfo[vInfo[i][VehicleID]][cGasolina] = vInfo[i][vCombustivel];
				CarInfo[vInfo[i][VehicleID]][cMotor] = vInfo[i][vTemMotor];
                CarInfo[vInfo[i][VehicleID]][LatariaV] = vInfo[i][vHealth];
  				SalvarVeiculo(i);
			}
		}
	}
	SendClientMessageToAll(AMARELO, "| Dos-Reiniciamento | Servidor Reiniciando!");

    if(!ServerReiniciando){
        ServerReiniciando = true;
        format(TipoReiniciamento, 11, "Programado");
        format(QuemReiniciou, MAX_PLAYER_NAME, "Automatico");
    }

    //Colocar em Logs que o servidor esta reiniciando...
    new title[31];
    format(title, sizeof title, "Reiniciamento - %s", TipoReiniciamento);
    new msg[100]; 
    format(msg, sizeof msg, "**Servidor Reiniciando**\nData e Hora: %s\nQuem Reiniciou: %s", getData(), QuemReiniciou);
    MessageEmbed(g_Reinicio, title, embed_blue, msg);

    //Comando Rcon Gmx
	SetTimer("Reiniciando2", 5000, false);
	return 1;
}

CallBack:Reiniciando2()
{
	SendRconCommand("gmx");
    return 1;
}
stock MessageClan(cor, string[], clanid)
{
    for(new d, j=GetMaxPlayers(); d < j; ++d)
	{
		if(pInfo[d][pClan] == clanid)
		{
			SendClientMessage(d, cor, string);
		}
	}
}
stock MessageRadio(string[])
{
    for(new d, j=GetMaxPlayers(); d < j; ++d)
	{
		if(pInfo[d][pTemRADIO] > 0 || pInfo[d][pAdmin] > 0)
		{
			SendClientMessage(d, 0xFFFFAAFF, string);
		}
	}
}
stock MensageAdmin(cor, string[])
{
    for(new d, j=GetMaxPlayers(); d < j; ++d)
	{
		if(IsPlayerConnected(d) && pInfo[d][pAdmin] >= 1)
		{
			SendClientMessage(d, cor, string);
		}
	}
}
stock MensageVip(cor, string[])
{
	for(new d, j=GetMaxPlayers(); d < j; ++d)
	{
		if(IsPlayerConnected(d) && pInfo[d][pVip] >= 1)
		{
			SendClientMessage(d, cor, string);
		}
	}
}
CallBack:loadingspec(playerid)
{
	return 1;
}

CallBack:parededelaY()
{
	permitidoparede = true;
	return 1;
}

CallBack:caixadelay()
{
	permitidocaixa = true;
	return 1;
}
// COMANDOS PLAYERS //

CMD:blockpm(playerid, params[])
{
	if(pInfo[playerid][pBlockPM] == true)
	{
		pInfo[playerid][pBlockPM] = false;
		GameTextForPlayer(playerid, "~w~Mensagem Privada: ~g~Ativado!", 5000, 3);
	}
	else if(pInfo[playerid][pBlockPM] == false)
	{
		pInfo[playerid][pBlockPM] = true;
		GameTextForPlayer(playerid, "~w~Mensagem Privada: ~r~Desativado!", 5000, 3);
	}
	return 1;
}

CMD:kill(playerid)
{
    if(pInfo[playerid][pTomouTiro] > 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce levou dano a pouco tempo.");
    if(morto[playerid]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta morto.");
    //if(caido[playerid]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta caido.");
    SetKillForPlayer(playerid, INVALID_PLAYER_ID, 255);
	return 1;
}

CMD:g(playerid, params[]){

    if(GlobalFechado) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Chat global fechado por um administrador.");
    if(Msggloballog[playerid] > gettime()) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Aguarde 10 segundos para usar o /g novamente.");

    new msg[ 120+8 ];
    if(sscanf(params, "s[120]", msg)) return SendClientMessage(playerid, Verde, "[DICA] /g [Texto]");
    if(strlen(msg) > 100) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Mensagem muito grande.");
    Msggloballog[playerid] = gettime() + 10;   

    new string[300];
    format(string, sizeof string, "[GLOBAL] {FFFFFF}%s(%d)%s{FFFFFF}: %s", PegarNome(playerid), playerid, GetTagPlayer(playerid), msg);
    SendClientMessageToAll(0x21580aFF, string);
    return true;

}
stock GetTagPlayer(playerid)
{
    new TagReturn[ 10+10 ];
    if(pInfo[playerid][pDuty] == true && pInfo[playerid][pAdmin] > 0)
    {
        TagReturn = "{004ffd}[ADMIN]";
    }
    else if(pInfo[playerid][pVip] > 0)
    {
        TagReturn = "{a28724}[VIP]";
    }
    else if(pInfo[playerid][Youtuber] > 0)
    {
        TagReturn = "{FF0000}[YT]";
    }
    return TagReturn;
}
CMD:r(playerid, params[])
{
    if(ChatBloqueado) return SendClientMessage(playerid, Vermelho, "|Dos-Avisa| Chat bloqueado por algum administrador");
    if(pInfo[playerid][pTemRADIO] == 0 && pInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce Nao Possui Um Radio Para Conversa Com Outros Players.");
    new string[128], msgtext[100];
    if(sscanf(params, "s[80]", msgtext)) return SendClientMessage(playerid, Vermelho, "[DICA] {FFFFFF} /r [Mensagem de texto]");
    if(strlen(msgtext) > 79) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Texto muito grande.");
    format(string, sizeof string, "[Radio] %s(%d) diz: %s", PegarNome(playerid), playerid, msgtext);
    MessageRadio(string);
    return 1;
}
stock VerificarPreso(playerid)
{
    if(pInfo[playerid][pPreso] > 0)
    {
        pInfo[playerid][pFome] = 100;
        pInfo[playerid][pSede] = 100;
        SetPlayerPosEx(playerid, 322.197998,302.497985,999.148437);
        SetPlayerInterior(playerid, 5);
        ShowTimerAcao(playerid, "Preso", pInfo[playerid][pPreso]);
        SendClientMessage(playerid, COR_VERMELHO, "* De volta para a cadeia. Seu tempo nao acabou ainda.");
        TogglePlayerControllable(playerid,1);
        TimerPreso[playerid] = SetTimerEx("TempoPreso", 1000, true, "i", playerid);
    }
    return 1;
}

CallBack:TempoPreso(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 322.197998,302.497985,999.148437))
	{
		if(pInfo[playerid][pPreso] > 0)
		{
	        SetPlayerPosEx(playerid, 322.197998,302.497985,999.148437);
	        SetPlayerInterior(playerid, 5);
	        SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA}: De volta para a cadeia. Seu tempo nao acabou ainda.");
        }
	}
    pInfo[playerid][pPreso] --;
    new stre[30];
    format(stre, sizeof stre, "%02d:%02d", pInfo[playerid][pPreso] / 60, pInfo[playerid][pPreso] % 60);
    PlayerTextDrawSetString(playerid, TimerTextAcao[playerid][2], stre);
    if(pInfo[playerid][pPreso] == 0)
    {
        HideTimerAcao(playerid);
        new str[64];
        new rnd = random(sizeof(Respawns));
        SetPlayerPosEx(playerid, Respawns[rnd][0], Respawns[rnd][1], Respawns[rnd][2]);
        SetPlayerInterior(playerid, 0), SetPlayerVirtualWorld(playerid, 0);
        morto[playerid] = false;
        //caido[playerid] = false;
        TogglePlayerControllable(playerid,true);
        format(str, sizeof(str), "Presos/%s.ini", PegarNome(playerid));
        SendClientMessage(playerid, COR_ADMIN, "| IMPORTANTE | {FFFFFF}Voce foi solto, nao quebre mais as regras!");
		if(DOF2_FileExists(str)) DOF2_RemoveFile(str);
        TogglePlayerControllable(playerid,1);
        KillTimer(TimerPreso[playerid]);
    }
    return 1;
}
CMD:vcamera(playerid, params[])
{
    if(VendoCam[playerid] == true)
    {
		VendoCam[playerid] = false;
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	new id;
	if(sscanf(params, "d", id)) return SendClientMessage(playerid, Vermelho, "[DICA] {FFFFFF} Uso: /vcamera [ID-CAMERA]");
	new Float:X, Float:Y, Float:Z;
	GetDynamicObjectPos(CraftInfo[id][ObjectJ], X, Y, Z);
	if(CraftInfo[id][Modelo] != 1622) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Este craft nao e uma Camera.");
	if(!Comparar(PegarNome(playerid), CraftInfo[id][Dono])) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao e dono desta camera.");
	if(IsPlayerInRangeOfPoint(playerid, 300.0, X, Y, Z))
	{
	    if(GetPlayerInterior(playerid) == 0)
        {
		    if(!IsPlayerInAnyVehicle(playerid))
			{
			    if(VendoCam[playerid] == false)
				{
				    VendoCam[playerid] = true;
					AttachCameraToDynamicObject(playerid, CraftInfo[id][ObjectJ]);
				}
			}
			else{
				return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} voce precisa estar fora do veiculo");
			}
        }else{
			SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} voce deve estar fora de um interior");
		}
	}else{
		return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta muito longe dessa camera");
	}
    return 1;
}
CMD:craft(playerid)
{
    if(pInfo[playerid][pLevel] < NIVEL_PARA_CRAFTAR) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode criar por nao ter nivel minimo, nivel minimo: 3.");
    
    NumberListaCrafts[playerid] = 1;
    PaginaListaCrafts[playerid] = 1;
    OpenMenuCCraft(playerid);
	return 1;
}
CMD:ac(playerid) return cmd_acessorios(playerid);
CMD:acessorio(playerid) return cmd_acessorios(playerid);
CMD:acessorios(playerid){
    
    return true;
}

/*CMD:config(playerid)
{
	MEGAString[0] = EOS;
	new str[100];
	format(str, sizeof(str), "{FFFFFF}Ped - Slot: %s", VendoPed[playerid] ? ("{00FF00}Habilitado") : ("{B22222}Desabilitado"));
	strcat(MEGAString, str);
	ShowPlayerDialog(playerid, D_CONFIGP, DIALOG_STYLE_LIST, "Config - Menu", MEGAString, "Selecionar", "Fechar");
	return true;
}*/
CMD:ajuda(playerid)
{
	ShowPlayerDialog(playerid, Dialog_Comandos, DIALOG_STYLE_LIST, "Escolha uma Opcao", "{00b2ff}>>> {FFFFFF}Comandos Craft\n\
    {00b2ff}>>> {FFFFFF}Ajuda Clan\n\
    {00b2ff}>>> {FFFFFF}Ajuda Geral\n\
    {00b2ff}>>> {FFFFFF}Ajuda Veiculos\n\
    {00b2ff}>>> {FFFFFF}Beneficios Vip", "Prosseguir", "Fechar");
	return 1;
}
CMD:duvida(playerid)
{
    ShowPlayerDialog(playerid, D_HELP, DIALOG_STYLE_LIST, "Duvidas frequentes:", "{00b2ff}[>] {FFFFFF}Duvidas Veiculo\n\
    {00b2ff}[>] {FFFFFF}Como Criar Explosivos\n\
    {00b2ff}[>] {FFFFFF}Como Subir de Score/Level\n\
    {00b2ff}[>] {FFFFFF}Como Criar Craft/Base\n\
    {00b2ff}[>] {FFFFFF}Como Participar de um Clan\n\
    {00b2ff}[>] {FFFFFF}Como Achar/Fabricar Armas", "Informado", #);
    return 1;
}
/*CMD:modsoff(playerid)
{
    SetFakeHealth(playerid, 100.0);
    return 1;
}*/
CMD:senha(playerid){
    if(pInfo[playerid][pAdmin] >= 1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode executar este comando.");
	if(PediuAtendimento[playerid] == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja pediu atendimento. Aguarde...");
	PediuAtendimento[playerid] = true;
	new str[160];
	
    SendClientMessage(playerid, Verde, "* Voce esta na fila de atendimentos. Aguarde sua vez!");
	SendClientMessage(playerid, Verde, "* Use {FFFFFF}/cancelarsenha {EDC72D}para cancelar!");
	
    format(str, sizeof(str), "[SENHA] {FFFFFF}%s[ID:%d] {004ffd}esta pedindo atendimento. Use /irsenha {FFFFFF}%d {004ffd}para atende-lo(a).", PegarNome(playerid), playerid, playerid);
	MensageAdmin(COR_ADMIN, str);
	return 1;
}
CMD:cancelarsenha(playerid){
    if(NoAtendimento[playerid] == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta sendo atendido. Peca para o staff cancelar.");
	if(PediuAtendimento[playerid] == false) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pediu atendimento.");
	PediuAtendimento[playerid] = false;
	SendClientMessage(playerid, Verde, "* Voce cancelou o seu atendimento!");
	return 1;
}


CMD:report(playerid, params[])
{
    new msg[156], str[500];
    new id;
	if(sscanf(params, "ds[150]", id, msg)) return SendClientMessage(playerid, COR_CINZA, "Use: /report [id] [motivo]");
	if(strlen(msg) > 40) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Texto muito grande.");
    SendClientMessage(playerid, Verde, "[REPORT] Report enviado para os admiministradores online.");
	format(str, sizeof(str), "[REPORT] {FFFFFF}%s {004ffd}esta reportando {FFFFFF}%s(%d){004ffd}. Motivo: {FFFFFF}%s.", PegarNome(playerid),PegarNome(id), id, msg);
	MensageAdmin(COR_ADMIN, str);
	return true;
}
CMD:ativarcoins(playerid, params[])
{
	new joaostr[30];
	if(sscanf(params, "s[24]", joaostr)) return SendClientMessage(playerid, Verde, "[DICA] {FFFFFF} /ativarcoins [Codigo de Ativacao]");
    new codstr[60];
	if(strlen(joaostr) < 5 || strlen(joaostr) > 20) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Codigo de 5 a 20 caracteres.");
	format(codstr, sizeof(codstr), PASTA_KEYS, joaostr);
	if(DOF2_FileExists(codstr))
	{
		SetPlayerCoin(playerid, DOF2_GetInt(codstr, "QuantiaC"));

		new str[128];
		printf("CASH: O jogador %s ativou %d de coins", PegarNome(playerid), DOF2_GetInt(codstr, "QuantiaC"));
		SendClientMessage(playerid, Verde, "============= Ativacao =============");
		format(str, sizeof(str), "* Codigo %s Ativado.", joaostr);
		SendClientMessage(playerid, Verde, str);
		format(str, sizeof(str), "* Quantia de cash: {33AA33}$ %d", DOF2_GetInt(codstr, "QuantiaC"));
		SendClientMessage(playerid, Verde, str);
		format(str, sizeof(str), "* Quantia Atual: {33AA33}$ %d", pInfo[playerid][pCoins]);
		SendClientMessage(playerid, Verde, str);
		SendClientMessage(playerid, Verde, "============= Ativacao =============");
		DOF2_RemoveFile(codstr);
	}
	else
	{
		SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Codigo invalido ou ja resgatado.");
    }
	return 1;
}
/*CMD:facessorio(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1410.0576,2102.3320,12.0156) || IsPlayerInRangeOfPoint(playerid, 1.0, -1953.258666, 298.483184, 41.064239))
	{
	    MEGAString[0] = EOS;
	    strcat(MEGAString, "Acessorios\tQuantia\tPreco\tTempo\n");
	    strcat(MEGAString, "Colete\t1\t1000 $\t20 Segundos\n");
	    ShowPlayerDialog(playerid, 47, DIALOG_STYLE_TABLIST_HEADERS, "Fabricacao de Acessorios", MEGAString, "Fabricar", "Cancelar");
	}
	return 1;
}
CMD:fabricarm(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1408.5129,2102.3472,12.0156) || IsPlayerInRangeOfPoint(playerid, 1.0, -1953.248657, 297.047912, 41.064239))
	{
	    MEGAString[0] = EOS;
	    strcat(MEGAString, "Mochila\t1\t2500 $");
	    ShowPlayerDialog(playerid, 46, DIALOG_STYLE_TABLIST_HEADERS, "Fabricacao de Mochilas", MEGAString, "Fabricar", "Cancelar");
	}
	return 1;
}
CMD:fabricararmas(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 1410.8470,2107.6616,12.0156) || IsPlayerInRangeOfPoint(playerid, 1.0, -1953.224121, 306.106903, 41.064239))
	{
	    MEGAString[0] = EOS;
	    strcat(MEGAString, "Arma\tFerros\tDinheiro\tMunicao\n");
	    strcat(MEGAString, "M4-A1\t400\t650\t200\n");
	    strcat(MEGAString, "PDW\t600\t730\t300\n");
	    strcat(MEGAString, "AK-47\t350\t500\t200\n");
	    strcat(MEGAString, "Sniper\t250\t1000\t30");
	    ShowPlayerDialog(playerid, 48, DIALOG_STYLE_TABLIST_HEADERS, "Fabricacao de Armas", MEGAString, "Fabricar", "Cancelar");
	}
	return 1;
}

CMD:rea(playerid, params[])
{
 	new id;
 	if(jarilando[playerid] == 1) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce ja esta curando alguem");
	if(sscanf(params, "d", id)) return SendClientMessage(playerid, Verde, "Use: /rea [ID do jogador]");
	//if(caido[id] == false) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Este jogador nao esta caido");
    if(id == playerid) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao pode se reanimar.");	
    new Float:P[3]; GetPlayerPos(id, P[0], P[1], P[2]);
    if(!IsPlayerInRangeOfPoint(playerid, 2.0, P[0], P[1], P[2])) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao esta proximo a este jogador.");
    
    if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA}: Jogador nao encontrado.");
    
    SetPlayerFacingAngleToPos(playerid, P[0], P[1]);

    TogglePlayerControllable(playerid, false);
    rilandosegundos[playerid] = 0;
    jarilando[playerid] = 1;
    RilandoAmigoID[playerid] = id;

    SetTimerEx("animMedic", 1000, false, "i", playerid);
    timerrilando[playerid] = SetTimerEx("rilandoamigo", 1000, true, "i", playerid);
	return 1;
}*/

CMD:reciclar(playerid)
{
    if(PertoTritu(playerid) != -1)
	{
	    MEGAString[0] = EOS;
	    strcat(MEGAString, "Item\tGanho\n");
	    strcat(MEGAString, "Martelo\t150 Madeira e 50 Ferro\n");
	    strcat(MEGAString, "Motor\t150 Ferros\n");
	    strcat(MEGAString, "AK-47\t40 Ferros e 100 madeiras\n");
        strcat(MEGAString, "M4\t200 Ferros\n");
        strcat(MEGAString, "Katana\t50 Ferros\n");
        strcat(MEGAString, "Pa\t25 Ferros e 40 Madeiras");
	    ShowPlayerDialog(playerid, 53, DIALOG_STYLE_TABLIST_HEADERS, "Recicladora", MEGAString, "Reciclar", "Sair");
	}else{
        SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao esta perto de nenhuma recicladora.");
        return 1;
    }
	return 1;
}

CMD:trancarcaixa(playerid, params[])
{
	new id;
	if(sscanf(params, "d", id)) return SendClientMessage(playerid, Vermelho, "[DICA] {FFFFFF} Use /trancarcaixa [ID-DA-CAIXA]");
    if(!IsPlayerInRangeOfPoint(playerid, 2.0, Caixa[id][PosX], Caixa[id][PosY], Caixa[id][PosZ])) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Chegue mais perto");
	if(!strcmp(Caixa[id][Dono], PegarNome(playerid)))
	{
        SendClientMessage(playerid, Vermelho, "| INFO | {FFFFFF} Fechada com sucesso!");
	    Caixa[id][caberta] = false;
        UpdateTextLabelBox(id);
        return true;
	}
	return 1;
}
CMD:destrancarcaixa(playerid, params[])
{
	new id;
	if(sscanf(params, "d", id)) return SendClientMessage(playerid, Vermelho, "[DICA] Use /trancarcaixa [ID-DA-CAIXA]");
    if(!IsPlayerInRangeOfPoint(playerid, 2.0, Caixa[id][PosX], Caixa[id][PosY], Caixa[id][PosZ])) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Chegue mais perto");
	if(!strcmp(Caixa[id][Dono], PegarNome(playerid)))
	{
        SendClientMessage(playerid, Vermelho, "| INFO | {FFFFFF} Aberta com sucesso!");
	    Caixa[id][caberta] = true;
        UpdateTextLabelBox(id);
        return true;
	}
	return 1;
}
stock UpdateTextLabelBox(id)
{
    new str[200];
    if(Caixa[id][ModelC] == 1271){//caixa de itens
		format(str, 200, "{0c76f5}Caixa [%d]\n{0c76f5}Dono: {FFFFFF}%s\n{0c76f5}Stats: {FFFFFF}%s\n{0c76f5}Upgrade: {FFFFFF}%s\n{0c76f5}Clique {FFFFFF}'N' {0c76f5}ou Digite {FFFFFF}/caixa",id, Caixa[id][Dono], Caixa[id][caberta] ? ("{00FF00}Aberta") : ("{B22222}Fechada"), GetUpgradeBoxName(id));
    }
    else if(Caixa[id][ModelC] == 3014){//caixa de equipamentos
		format(str, 200, "{0c76f5}Caixa de equipamentos[%d]\n{0c76f5}Dono: {FFFFFF}%s\n{0c76f5}Stats: {FFFFFF}%s\n{0c76f5}Clique {FFFFFF}'N' {0c76f5}ou Digite {FFFFFF}/caixa",id, Caixa[id][Dono], Caixa[id][caberta] ? ("{00FF00}Aberta") : ("{B22222}Fechada"));
    }
    UpdateDynamic3DTextLabelText(Caixa[id][LabelC], 0xFFFF00FF, str);
    return 1;
}
CMD:abrircaixa(playerid)
{
    if(PermissaoRaid[playerid] == false) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} E necessario ter permissao para Raid. Fale com um admin.");
    new id = GetPlayerRangeCaixa(playerid);
    if(GetPlayerRangeCaixa(playerid) == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao esta perto o suficiente de uma caixa.");
    if(Equipado[playerid][CHAVE_DE_FENDA] == 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa ao menos Uma Chave De Fenda Para Abrir Essa Caixa");
    if(Caixa[id][caberta] == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} A caixa ja esta aberta.");
    if(ACaixa[playerid]==true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta abrindo uma caixa.");
    if(Acao_Ativa[playerid]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta em outra acao.");
    idcabrir[playerid]=id;
    ACaixa[playerid]=true;
    TogglePlayerControllable(playerid, 0);
    ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
    //GameTextForPlayer(playerid, "~w~Abrindo ~g~Caixa...", 2500, 4);
    TempACaixa[playerid] = 10;
    if(Caixa[id][Upgrade] == 1)
    {
        if(Equipado[playerid][CHAVE_DE_FENDA] == 1 && Equipado[playerid][CHAVE_COMBINADA] == 0)
        {
            TempACaixa[playerid] = 60;
        }
        else if(Equipado[playerid][CHAVE_DE_FENDA] == 1 && Equipado[playerid][CHAVE_COMBINADA] == 1)
        {
            TempACaixa[playerid] = 20;
        }
    }
    else if(Caixa[id][Upgrade] == 2)
    {
        if(Equipado[playerid][CHAVE_DE_FENDA] == 1 && Equipado[playerid][CHAVE_COMBINADA] == 0)
        {
            TempACaixa[playerid] = 180;
        }
        else if(Equipado[playerid][CHAVE_DE_FENDA] == 1 && Equipado[playerid][CHAVE_COMBINADA] == 1)
        {
            TempACaixa[playerid] = 60;
        }
    }
    else if(Caixa[id][Upgrade] == 3)
    {
        if(Equipado[playerid][CHAVE_DE_FENDA] == 1 && Equipado[playerid][CHAVE_COMBINADA] == 0)
        {
            TempACaixa[playerid] = 300;
        }
        else if(Equipado[playerid][CHAVE_DE_FENDA] == 1 && Equipado[playerid][CHAVE_COMBINADA] == 1)
        {
            TempACaixa[playerid] = 180;
        }
    }
    if(Caixa[id][ModelC] == 3014){
        if(Equipado[playerid][CHAVE_DE_FENDA] == 1 && Equipado[playerid][CHAVE_COMBINADA] == 0)
        {
            TempACaixa[playerid] = 300;
        }
        else if(Equipado[playerid][CHAVE_DE_FENDA] == 1 && Equipado[playerid][CHAVE_COMBINADA] == 1)
        {
            TempACaixa[playerid] = 150;
        }
    }
    if(pInfo[playerid][pVip] > 0){
        TempACaixa[playerid] = TempACaixa[playerid]/2;
    }
    ShowTimerAcao(playerid, "Abrindo_caixa...", TempACaixa[playerid]);
    TimerACaixa[playerid] = SetTimerEx("Platandobombacaixa", 1000, true, "ii",playerid, id);
    return 1;
}
CMD:caixa(playerid)
{
    new id = GetPlayerRangeCaixa(playerid);
    if(GetPlayerRangeCaixa(playerid) == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao esta perto o suficiente de uma caixa.");
	if(strcmp(Caixa[id][Dono], PegarNome(playerid)))
	{
	    if(Caixa[id][caberta] == false) return SendClientMessage(playerid, 0xE80000FF, "[ERRO]{BABABA} Caixa Trancada. Use /abrircaixa.");
    	idcaixap[playerid] = id;
    	ShowCaixaSelect(playerid);
    	itemselecionado[playerid] = -1;
		return true;
	}
	PlayerSelecionandoItem[playerid] = true;
    idcaixap[playerid] = id;
    ShowCaixaSelect(playerid);
    itemselecionado[playerid] = -1;
	return 1;
}
CMD:upgradecaixa(playerid, params[])
{
    new idCAIXA;
	if(sscanf(params, "d", idCAIXA)) return SendClientMessage(playerid, Vermelho, "[DICA] Use /upgradecaixa [ID-DA-CAIXA]");
    if(!IsPlayerInRangeOfPoint(playerid, 2.0, Caixa[idCAIXA][PosX], Caixa[idCAIXA][PosY], Caixa[idCAIXA][PosZ])) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Chegue mais perto");
	if(!strcmp(Caixa[idCAIXA][Dono], PegarNome(playerid)))
	{
        if(Caixa[idCAIXA][Upgrade] == 3) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Maximo de upgrades ja atingido nesta caixa.");
        idcaixaup[playerid] = idCAIXA;
        new str[256];
        format(str, sizeof str, "{c9c9c9}Upgrade Caixa ID: {00ff00}%d\n\
        {c9c9c9}Upgrade Atual: {00ff00}%d\n\
        {c9c9c9}Proximo Upgrade: {00ff00}%d\n\
        {c9c9c9}Valor em dinheiro: {33AA33}$%d\n\
        {c9c9c9}Valor em ferros: %d\n\
        {c9c9c9}Use {00ff00}/upbox {c9c9c9}para ver os beneficios dos Upgrades", idCAIXA, Caixa[idCAIXA][Upgrade], Caixa[idCAIXA][Upgrade]+1, Caixa[idCAIXA][Upgrade]*5000, Caixa[idCAIXA][Upgrade]*1200);
        ShowPlayerDialog(playerid, D_UPGRADEBOX, DIALOG_STYLE_MSGBOX, "{00FF00}Caixa Upgrade:", str, "Upgrade", "Cancelar");
        return true;
	}
    return 1;
}
CMD:gobjeto(playerid)
{
    if(Acao_Ativa[playerid]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta em outra acao.");
    if(Equipado[playerid][CHAVE_DE_FENDA] == 0 && Equipado[playerid][CHAVE_COMBINADA] == 0
    && Equipado[playerid][MARTELO] == 0 && Equipado[playerid][MARRETA] == 0 && Equipado[playerid][MASCARA] == 0
    && Equipado[playerid][PE_DE_CABRA] == 0)
    {
        return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui nenhum objeto anexado que possa guardar.");
    }
    new str[215];
    format(str, sizeof str, "Chave Combinada: %s\n\
    Martelo: %s\n\
    Marreta: %s\n\
    Chave de fenda: %s\n\
    Mascara: %s\n\
    Pe de cabra: %s", Equipado[playerid][CHAVE_COMBINADA]  ? ("{00FF00}Equipada(o)") : ("{B22222}Nao Equipada(o)"), Equipado[playerid][MARTELO]  ? ("{00FF00}Equipada(o)") : ("{B22222}Nao Equipada(o)"), Equipado[playerid][MARRETA]  ? ("{00FF00}Equipada(o)") : ("{B22222}Nao Equipada(o)"), Equipado[playerid][CHAVE_DE_FENDA]  ? ("{00FF00}Equipada(o)") : ("{B22222}Nao Equipada(o)"), Equipado[playerid][MASCARA]  ? ("{00FF00}Equipada(o)") : ("{B22222}Nao Equipada(o)"), Equipado[playerid][PE_DE_CABRA]  ? ("{00FF00}Equipada(o)") : ("{B22222}Nao Equipada(o)"));
    ShowPlayerDialog(playerid, D_RFERRAMENTA, DIALOG_STYLE_LIST, "{00FF00}Ferramentas equipadas:", str, "Guardar", "Fechar");
    return 1;
}

CMD:upbox(playerid)
{
    ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{00FF00}Upgrades - Caixas:", "{00FF00}Basic Box:\n\
    {c9c9c9}| 5 slots | Permitido 3 itens iguais em cada um deles.\n\
    {c9c9c9}| RAID | Caixa Level 1:\n\
    {c9c9c9}-Chave de fenda: 1 minuto\n\
    {c9c9c9}-Chave de fenda + Chave Combinada: 20 segundos\n\n\
    {00FF00}Regular Box:\n\
    {c9c9c9}| +5 slots | Permitido 5 itens iguais em cada um deles.\n\
    {c9c9c9}| RAID | Caixa Level 2:\n\
    {c9c9c9}-Chave de fenda: 3 minuto\n\
    {c9c9c9}-Chave de fenda + Chave Combinada: 1 minuto\n\n\
    {00FF00}Supreme Box:\n\
    {c9c9c9}| +5 slots | Permitido 10 itens iguais em cada um deles.\n\
    {c9c9c9}| RAID | Caixa Level 3:\n\
    {c9c9c9}-Chave de fenda: 5 minuto\n\
    {c9c9c9}-Chave de fenda + Chave Combinada: 3 minutos", "Informado", "");
    return true;
}

CMD:mudarnick(playerid, params[])
{
    if(PermNick[playerid] == false) return SendClientMessage(playerid, Vermelho, "Sem Permissao, peca a staff autorizar.");
    new Nome[MAX_PLAYER_NAME], DBResult:result, query[156], str[130];
    if(sscanf(params, "s[24]", Nome)) return SendClientMessage(playerid, Vermelho, "/mudarnick [novo nome]");

    if(strlen(Nome) > 20 || strlen(Nome) < 3 || VerifiqueNick(Nome)){
        SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Por favor, escolha outro nick entre e 3-20 caracteres.");
    	SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Por favor, use apenas a-z, A-Z, 0-9, '_'.");	
        return true;
    }
    format(query, sizeof(query), "SELECT * FROM `Contas` WHERE `PlayerName` = '%q'", Nome);
    result = db_query(Database, query);
    if(db_num_rows(result) > 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Esta conta ja existe registrada banco de dados do servidor.");

    format(query, sizeof query, "SELECT * FROM `Whitelist` WHERE `PlayerName`='%q'", Nome);
	result = db_query(Database, query);
    if(db_num_rows(result) > 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Esta conta ja existe na Whitelist do servidor.");

    //TrocarNick Tabela Contas
    format(query, sizeof(query), "UPDATE `Contas` SET `PlayerName` = '%q' WHERE `PlayerName` = '%q'", Nome, PegarNome(playerid));
    db_free_result( db_query(Database, query) );

    //Trocar Nick Tabela WL.
    format(query, sizeof(query), "UPDATE `Whitelist` SET `PlayerName` = '%q' WHERE `PlayerName` = '%q'", Nome, PegarNome(playerid));
    db_free_result( db_query(Database, query) );

    //DOF2_RenameFile(GFILE, file);

    new clanid = pInfo[playerid][pClan];
    if(clanid !=0)
    {
		for(new m=1; m < MAX_MEMBER_CLAN; m++){
            if(strcmp(MemberClan[clanid][m], PegarNome(playerid), false) == 0){
                format(MemberClan[clanid][m], MAX_PLAYER_NAME, Nome);
                SaveClan(clanid);
                break;
            }
        }
	}
    new adminid = pInfo[playerid][pAdmin];
    if(adminid > 0)
    {
        for(new idx=1; idx<MAX_VAGAS; idx++){
            if(!strcmp(PegarNome(playerid), AdminInfo[idx][AdminName], false)){
                format(AdminInfo[idx][AdminName], MAX_PLAYER_NAME, Nome);
                break;
            }
        }
    }

	for(new p = 1; p < MAX_CRAFTS; p ++)
	{
		if(Comparar(CraftInfo[p][Dono], PegarNome(playerid)))
		{
            format(CraftInfo[p][Dono], 28, Nome);
            SaveCraft(p);
		}
	}
	for(new c = 0; c < MAX_CAIXA; c ++)
	{
		if(Comparar(Caixa[c][Dono], PegarNome(playerid)))
		{
            format(Caixa[c][Dono], 28, Nome);
            SalvarCaixa(c);
		}
	}
    for(new rc = 0; rc < MAX_TRITU; rc ++)
    {
        if(Comparar(Tritu[rc][DonoRCC], PegarNome(playerid)))
        {
            format(Tritu[rc][DonoRCC], MAX_PLAYER_NAME, Nome);
            SalvarTritu(rc);
        }
    }
	DOF2_SaveFile();

    format(query, sizeof query, "SELECT * FROM `Admins` WHERE `PlayerName`='%q'", PegarNome(playerid));
	result = db_query(Database, query);
    if(db_num_rows(result) > 0) {
        format(query, sizeof(query), "UPDATE `Admins` SET `PlayerName` = '%q' WHERE `PlayerName` = '%q'", Nome, PegarNome(playerid));
        db_free_result( db_query(Database, query) );
    }

    format(query, sizeof query, "SELECT * FROM `Inventory` WHERE `PlayerName`='%q'", PegarNome(playerid));
	result = db_query(Database, query);
    if(db_num_rows(result) > 0) {
        format(query, sizeof(query), "UPDATE `Inventory` SET `PlayerName` = '%q' WHERE `PlayerName` = '%q'", Nome, PegarNome(playerid));
        db_free_result( db_query(Database, query) );
    }

    format(query, sizeof query, "SELECT * FROM `Weapons` WHERE `NamePlayer`='%q'", PegarNome(playerid));
	result = db_query(Database, query);
    if(db_num_rows(result) > 0) {
        format(query, sizeof(query), "UPDATE `Weapons` SET `NamePlayer` = '%q' WHERE `NamePlayer` = '%q'", Nome, PegarNome(playerid));
        db_free_result( db_query(Database, query) );
    }

	SendClientMessage(playerid, AMARELO, "[>]Tire print para nao perder seu nick[<]");
	SendClientMessage(playerid, AMARELO, "[>]Tire print para nao perder seu nick[<]");
	SendClientMessage(playerid, AMARELO, "[>]Tire print para nao perder seu nick[<]");
	SendClientMessage(playerid, AMARELO, "[>]Tire print para nao perder seu nick[<]");
	format(str, 128, "NICK: Nick de %s alterado para %s.", PegarNome(playerid), Nome);
    MensageAdmin(COR_ADMIN, str);
	SendClientMessage(playerid, AMARELO, str);
	SetPlayerName(playerid, Nome);

	//SetTimerEx( "banindo", 2000, false, "i", playerid);
    return 1;
}
CMD:trocarsenha(playerid, params[])
{
	if(PermSenha[playerid] == false) return SendClientMessage(playerid, Vermelho, "Sem Permissao, peca a staff autorizar.");
	new novasenha[128], str[60];
	if(sscanf(params, "s[74]", novasenha)) return SendClientMessage(playerid, Verde , "|DICA| Use /trocarsenha [Nova Senha]");
    if(strlen(novasenha) < 5 || strlen(novasenha) > 20) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Senha de 5 a 20 caracteres.");
    
    new DBResult:result, query[156], CryptoG[90];
    SHA256_PassHash(novasenha, "78sdjs86d2h", CryptoG, sizeof(CryptoG));
	format(query, sizeof(query), "SELECT * FROM Contas WHERE PlayerName='%q'", PegarNome(playerid));
    result = db_query(Database, query);

    if(db_num_rows(result) > 0){
        query[0]=EOS;
        format(query, sizeof query, "UPDATE `Contas` SET `Senha` = '%q' WHERE PlayerName='%q'", CryptoG, PegarNome(playerid));
        result = db_query(Database, query);
    }
    db_free_result(result);
	SendClientMessage(playerid, AMARELO, "[>]Tire printf para nao perder sua senha[<]");
	SendClientMessage(playerid, AMARELO, "[>]Tire printf para nao perder sua senha[<]");
	SendClientMessage(playerid, AMARELO, "[>]Tire printf para nao perder sua senha[<]");
	SendClientMessage(playerid, AMARELO, "[>]Tire printf para nao perder sua senha[<]");
	format(str, 60, "|INFO| Senha alterada para: %s.", novasenha);
	SendClientMessage(playerid, AMARELO, str);
	return 1;
}
CMD:inv(playerid)
{
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao pode abrir seu inventario em um veiculo.");
    if(Curando[playerid] == 1) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce esta se curando.");
    if(Acao_Ativa[playerid]) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Inventario nao pode ser aberto agora.");
	ShowInventory(playerid);
	return 1;
}
CMD:criarcaixa(playerid, params[])
{
    if(pInfo[playerid][pLevel] < NIVEL_PARA_CRAFTAR) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode criar por nao ter nivel minimo, nivel minimo: 3.");
    ShowCreatedBox(playerid);
	return 1;
}
/*CMD:criarcama(playerid)
{
    if(pInfo[playerid][pLevel] < NIVEL_PARA_CRAFTAR) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode criar por nao ter nivel minimo, nivel minimo: 3.");
    if(Equipado[playerid][MARTELO] == 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce deve se equipar com um martelo para Criar uma Craft.");
    if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode criar craft em um interior.");
    if(pInfo[playerid][pFerro] < 1000) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui 1000 ferros para criar uma cama.");
    if(pInfo[playerid][pCama] > 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja possui uma cama.");
    if(TemXItem(playerid, 58) < 10) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa de 10 panos para criar uma cama.");
    if(permitidoparede == false) return SendClientMessage(playerid, COR_VERMELHO, "[Anti-Bug] Aguarde alguns segundos, alguem ja esta construindo uma parede");
    new idcama=1800;
    //pInfo[playerid][pFerro] -= 1000;
    SetPlayerFerro(playerid, -1000);
    RemoveItem(playerid, 58, 10);
    CriarCama(playerid, idcama, 1);
    return 1;
}
CMD:criarmesa(playerid){ 
    if(pInfo[playerid][pLevel] < NIVEL_PARA_CRAFTAR) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode criar por nao ter nivel minimo, nivel minimo: 3.");
    if(pInfo[playerid][pFerro] < 2000) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Para criar mesa de craft voce precisa de 2.000 Ferros.");
    if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode criar mesa em um interior.");
    SetPVarInt(playerid, "CraftModel", 3383);
    CriarParede(playerid);
    return true;
}*/
CMD:corveh(playerid, params[])
{
    new id, id2;
	if(sscanf(params, "dd", id, id2)) return SendClientMessage(playerid, -1, "Use: /corveh [COR 1] [COR 2]");
	if(id < 0 || id > 126) return SendClientMessage(playerid, -1, "Escolha uma cor de 0 a 126");
	if(id2 < 0 || id2 > 126) return SendClientMessage(playerid, -1, "Escolha uma cor de 0 a 126");
    if(IsPlayerInAnyVehicle(playerid))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    new strsave[31];
     	format(strsave, sizeof(strsave), Pasta_Carros, vInfo[vehicleid][VehicleID]);
	    if(DOF2_FileExists(strsave))
	    {
			if(Comparar(vInfo[vehicleid][Dono], "Ninguem")) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Veiculo criado por vip ou admin.");
			CarInfo[vInfo[vehicleid][VehicleID]][cColorOne] = id;
			CarInfo[vInfo[vehicleid][VehicleID]][cColorTwo] = id2;
			ChangeVehicleColor(vehicleid, id, id2);
		}else{
			SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Veiculo de admin.");
		}
	}
    else{
	    SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao esta dentro de algum veiculo");
	}
    return 1;
}
CMD:definirsenha(playerid, params[])
{
    new idparede;
    if(sscanf(params, "d", idparede)) return SendClientMessage(playerid, Vermelho, "[DICA] /definirsenha [ID - PORTA / PORTAO]");
    if(strcmp(PegarNome(playerid), CraftInfo[idparede][Dono]))
    {
		SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao e dono dessa craft.");
		return 1;
	}
    if(!IsPortaum(idparede))
    {
		SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce deve definir senha apenas de Porta/Portao.");
		return 1;
	}
    idporta[playerid] = idparede;
    ShowPlayerDialog(playerid, D_DDSPORTAO, DIALOG_STYLE_INPUT, "{FFFF00}Definir Senha Porta/Portao", "{FFFFFF}Digite {FFFF00}Abaixo {FFFFFF} uma senha para essa porta/portao\n\
    {B22222}A senha deve conter de 1 a 50 caracteres\n\
    {B22222}OBS: Sera cobrado 5.000 $!", "Confirmar", #);
    return 1;
}
CMD:abrir(playerid)
{
    new id = GetPlayerRangePorta(playerid);
    if(id == -1) return SendClientMessage(playerid, COR_VERMELHO, "Voce nao esta proximo de nenhuma porta");
    if(CraftInfo[id][Fechada] == false) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Esta Porta ja esta aberta.");
    idporta[playerid] = id;
    ShowPlayerDialog(playerid, D_ABRIRPORTAO, DIALOG_STYLE_INPUT, "{FFFF00}Acesso:", "{FFFF00}Digite abaixo a senha de acesso\n\
    {FFFFFF}Para abrir a Porta/Portao\n\
    {B22222}OBS: Senha de 1 a 50 caracteres.", "Confirmar", "Cancelar");
	return 1;
}
CMD:fechar(playerid)
{
	new id = GetPlayerRangePorta(playerid);
    if(id == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao esta perto de uma porta");
    if(CraftInfo[id][Fechada] == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Esse Portao/Porta ja esta fechado(a).");
    CraftInfo[id][Fechada] = true;
 	CraftInfo[id][ObjectJ] = CreateDynamicObject(CraftInfo[id][Modelo], CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], CraftInfo[id][RX], CraftInfo[id][RY], CraftInfo[id][RZ]);
    SendClientMessage(playerid, Verde, "* Porta Fechada!");
    return 1;
}
CMD:guardar(playerid)
{
	SendClientMessage(playerid, -1, "desativado");
	return 1;
}
CMD:rgasosa(playerid)
{
    if(PlayerHasItem(playerid,66))
    {
        new idv = PertoVeiculo(playerid, 5.0);
		if(idv > -1)
		{
            if(!IsPlayerNearVehiclePart(playerid, idv, VEH_PART_PCAP, 2.0, 0.0)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa estar proximo a tampa de gasosa do veiculo.");
            if(Acao_Ativa[playerid]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta em outra acao.");
            if(RemovendoGV[playerid] == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta removendo gasosa de um veiculo.");
            if(vInfo[idv][vCombustivel] < 20) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA}: Este veiculo nao tem gasosa o suficiente(20L).");
            RemovendoGV[playerid] = true;
            SetTimerEx("R_AbastecendoVeh", 1000, false, "ii", playerid, idv);
            sRemovendoGV[playerid] = 15;
            new Float:XX, Float:YY, Float:ZZ;
			GetVehiclePos(idv, XX, YY, ZZ);
			SetPlayerFacingAngleToPos(playerid, XX, YY);
			TogglePlayerControllable(playerid, 0);
            SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		    ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
            if(pInfo[playerid][pVip] > 0){
                sRemovendoGV[playerid] = sRemovendoGV[playerid]/2;
            }
			ShowTimerAcao(playerid, "Pegando Gasosa...", sRemovendoGV[playerid]);
		}
		else
		{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} voce nao esta perto de nenhum veiculo.");
		}
    }else{
        return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao tem um Galao Vazio em maos.");
    }
    return 1;
}

CMD:reparo(playerid)
{
    if(PlayerHasItem(playerid, 50))
    {
        new idv = PertoVeiculo(playerid, 5.0);
		if(idv > -1)
		{
			if(Acao_Ativa[playerid]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta em outra acao.");
            if(RepairVeh[playerid] == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta arrombando um veiculo.");
            if(!IsAHeli(idv) && !IsPlayerNearVehiclePart(playerid, idv, VEH_PART_HOOD, 1.0, 0.0)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa estar proximo a frente do veiculo.");
            RepairVeh[playerid] = true;
            SetTimerEx("ReparandoVeh", 1000, false, "ii", playerid, idv);
            SRepairVeh[playerid] = 15;
            new Float:XX, Float:YY, Float:ZZ;
			GetVehiclePos(idv, XX, YY, ZZ);
			SetPlayerFacingAngleToPos(playerid, XX, YY);
			TogglePlayerControllable(playerid, 0);
            ApplyAnimation(playerid, "COP_AMBIENT", "COPBROWSE_LOOP", 4.1, 1, 0, 0, 1, 0, 1);
			ApplyAnimation(playerid, "COP_AMBIENT", "COPBROWSE_LOOP", 4.1, 1, 0, 0, 1, 0, 1);
            if(pInfo[playerid][pVip] > 0){
                SRepairVeh[playerid] = SRepairVeh[playerid]/2;
            }
            ShowTimerAcao(playerid, "Reparando...", SRepairVeh[playerid]);
		}
		else
		{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} voce nao esta perto de nenhum veiculo.");
		}
    }else{
        return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao tem uma toolbox.");
    }
    return 1;
}

CMD:pmala(playerid)
{
    new idveh = PertoVeiculo(playerid, 5.0);

    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa estar fora do veiculo.");

    if(idveh == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao esta perto de nenhum veiculo.");
    if(InvalidPMalas(idveh)) return SendClientMessage(playerid, 0xB22222FF, "[ERRO]{BABABA} Veiculo nao tem porta-malas.");

    if(Comparar(vInfo[idveh][Dono], "Ninguem")) return SendClientMessage(playerid, Vermelho, "* Veiculo de vip ou administrador.");

    if(!IsAHeli(idveh) && !IsPlayerNearVehiclePart(playerid, idveh, VEH_PART_TRUNK, 1.0, 0.0)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa estar proximo ao porta malas do veiculo.");
    if(vInfo[idveh][vLock] == true)
	{
        IDVehP[playerid] = idveh;
        idcarrop[playerid] = vInfo[idveh][VehicleID];
		ShowPlayerDialog(playerid,D_SENHAMALAS,DIALOG_STYLE_INPUT,"Senha Porta Malas"COL_GREEN"(*-*)" ,"[Veiculo-Trancado]\nDigite a senha para acessar o porta-malas.", "Abrir","Fechar");

    }else{
        IDVehP[playerid] = idveh;
        idcarrop[playerid] = vInfo[idveh][VehicleID];
        OpenPortaMalasCar(idveh);
		new string[40];
		MEGAString[0]=EOS;
        for(new n = 1; n < MAX_LOOT_PMALA; n++)
	 	{
	 		format(string, sizeof(string), "[%i] %s\n", n, GetNameItemY(InfoPMalas[idcarrop[playerid]][n]));
	 		strcat(MEGAString, string);
	 	}
		ShowPlayerDialog(playerid,D_PMALAS,DIALOG_STYLE_LIST,"Porta Malas"COL_GREEN"(50 slots)" ,MEGAString, "Selecionar","Fechar");
	}
	return 1;
}
CMD:galao(playerid, params[])
{
    if(PlayerHasItem(playerid, 55))
    {
        new idv = PertoVeiculo(playerid, 5.0);
		if(idv > -1)
		{
            if(vInfo[idv][vCombustivel] >= 100) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} O Tanque deste veiculo esta cheio.");
            if(!IsPlayerNearVehiclePart(playerid, idv, VEH_PART_PCAP, 2.0, 0.0)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa estar proximo a tampa de gasosa do veiculo.");
            if(Acao_Ativa[playerid]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta em outra acao.");
            if(AbastecVEH[playerid] == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta adicionando gasosa em um veiculo.");
			AbastecVEH[playerid] = true;
            SetTimerEx("AbastecendoVeh", 1000, false, "ii", playerid, idv);
            sAbastecVEH[playerid] = 10;
            new Float:XX, Float:YY, Float:ZZ;
			GetVehiclePos(idv, XX, YY, ZZ);
			SetPlayerFacingAngleToPos(playerid, XX, YY);
			TogglePlayerControllable(playerid, 0);
            SetPlayerAttachedObject(playerid, SlotVariados, 1650, 6, 0.150000, 0.000000, 0.182000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		    ApplyAnimation(playerid,"SWORD","sword_block",4.1,0,1,1,1,1,1);
            if(pInfo[playerid][pVip] > 0){
                sAbastecVEH[playerid] = sAbastecVEH[playerid]/2;
            }
			ShowTimerAcao(playerid, "Abastecendo...", sAbastecVEH[playerid]);
		}
		else
		{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} voce nao esta perto de nenhum veiculo.");
		}
    }else{
        return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao tem um Galao de gasolina.");
    }
	return 1;
}
CMD:arrombarv(playerid)
{
    if(Equipado[playerid][PE_DE_CABRA] == 1)
    {
        new idv = PertoVeiculo(playerid, 5.0);
		if(idv > -1)
		{
            if(vInfo[idv][vLock] == true)
		    {
				if(Acao_Ativa[playerid]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta em outra acao.");
                if(ArrombandoCarro[playerid] == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta arrombando um veiculo.");
				ArrombandoCarro[playerid] = true;
                SetTimerEx("TentandoAbrirC", 1000, false, "ii", playerid, idv);
                ArrombandoSecunds[playerid] = 20;
                new Float:XX, Float:YY, Float:ZZ;
				GetVehiclePos(idv, XX, YY, ZZ);
				SetPlayerFacingAngleToPos(playerid, XX, YY);
				TogglePlayerControllable(playerid, 0);
				ApplyAnimation(playerid, "COP_AMBIENT", "COPBROWSE_LOOP", 4.1, 1, 0, 0, 1, 0, 1);
				ApplyAnimation(playerid, "COP_AMBIENT", "COPBROWSE_LOOP", 4.1, 1, 0, 0, 1, 0, 1);

                if(pInfo[playerid][pVip] > 0){
                    ArrombandoSecunds[playerid] = ArrombandoSecunds[playerid]/2;
                }
                ShowTimerAcao(playerid, "Arrombando...", ArrombandoSecunds[playerid]);
			}
			else
		    {
                SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} veiculo se encontra aberto.");
		    }
		}
		else
		{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} voce nao esta perto de nenhum veiculo.");
		}
    }else{
        return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao esta equipado com um pe de cabra.");
    }
    return 1;
}
CMD:rmotor(playerid)
{
    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
    new idveh = PertoVeiculo(playerid, 5.0);

    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa estar fora do veiculo.");
    if(idveh == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao esta perto de nenhum veiculo.");
    if(IsABike(idveh)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Veiculo nao tem motor.");
    if(Comparar(vInfo[idveh][Dono], "Ninguem")) return SendClientMessage(playerid, Vermelho, "* Veiculo de vip ou administrador.");
    if(Equipado[playerid][CHAVE_COMBINADA] == 0)return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa estar equipado com chave combinada.");
    if(RemovendoMotor[playerid]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta removendo um motor de um veiculo.");
    if(Acao_Ativa[playerid]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta em outra acao.");
    if(!IsPlayerNearVehiclePart(playerid, idveh, VEH_PART_HOOD, 1.0, 0.0)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa estar proximo a frente do veiculo.");
    if(vInfo[idveh][vTemMotor])
	{
        if(IsCarEvento(idveh)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Veiculo de evento seu(ua) corno(a).");
        if(Comparar(vInfo[idveh][Dono], "Ninguem")) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode arrancar o motor deste veiculo!");
        idCarAF[playerid] = idveh;
        RemovendoMotor[playerid] = true;
        TremovendoMotor[playerid] = 30;
        SetTimerEx("Removendo_Motor", 1000, false, "i", playerid);
        new Float:XX, Float:YY, Float:ZZ;
		GetVehiclePos(idveh, XX, YY, ZZ);
		SetPlayerFacingAngleToPos(playerid, XX, YY);
		TogglePlayerControllable(playerid, false);
		ApplyAnimation(playerid, "COP_AMBIENT", "COPBROWSE_LOOP", 4.1, 1, 0, 0, 1, 0, 1);
		ApplyAnimation(playerid, "COP_AMBIENT", "COPBROWSE_LOOP", 4.1, 1, 0, 0, 1, 0, 1);

        if(pInfo[playerid][pVip] > 0){
            TremovendoMotor[playerid] = TremovendoMotor[playerid]/2;
        }
        ShowTimerAcao(playerid, "Removendo_Motor...", TremovendoMotor[playerid]);
        return 1;
	}else{
        return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Este veiculo nao tem motor.");
    }
}

CMD:motor(playerid)
{
    new idveh = PertoVeiculo(playerid, 5.0);
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa estar fora do veiculo.");
    if(idveh == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao esta perto de nenhum veiculo.");
    if(IsABike(idveh)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Veiculo nao tem motor.");
    if(Comparar(vInfo[idveh][Dono], "Ninguem")) return SendClientMessage(playerid, Vermelho, "* Veiculo de vip ou administrador.");
    if(Equipado[playerid][CHAVE_COMBINADA] == 0)return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa estar equipado com chave combinada.");
    if(AdicionandoMotor[playerid]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta removendo um motor de um veiculo.");
    if(Acao_Ativa[playerid]) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta em outra acao.");
    if(!IsAHeli(idveh) && !IsPlayerNearVehiclePart(playerid, idveh, VEH_PART_HOOD, 1.0, 0.0)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa estar proximo a frente do veiculo.");
    if(!vInfo[idveh][vTemMotor])
	{
        if(IsCarEvento(idveh)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Veiculo de evento seu(ua) corno(a).");
        if(Comparar(vInfo[idveh][Dono], "Ninguem")) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode arrancar o motor deste veiculo!");
        idCarAF[playerid] = idveh;
        AdicionandoMotor[playerid] = true;
        TadicionandoMotor[playerid] = 30;
        SetTimerEx("Adicionando_Motor", 1000, false, "i", playerid);
        new Float:XX, Float:YY, Float:ZZ;
		GetVehiclePos(idveh, XX, YY, ZZ);
		SetPlayerFacingAngleToPos(playerid, XX, YY);
		TogglePlayerControllable(playerid, false);
		ApplyAnimation(playerid, "COP_AMBIENT", "COPBROWSE_LOOP", 4.1, 1, 0, 0, 1, 0, 1);
		ApplyAnimation(playerid, "COP_AMBIENT", "COPBROWSE_LOOP", 4.1, 1, 0, 0, 1, 0, 1);

        if(pInfo[playerid][pVip] > 0){
            TadicionandoMotor[playerid] = TadicionandoMotor[playerid]/2;
        }
        ShowTimerAcao(playerid, "Adicionando_Motor...", TadicionandoMotor[playerid]);
        return 1;
	}else{
        return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Este veiculo ja possui motor.");
    }
}

CMD:chavev(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} voce nao esta em nenhum veiculo!");

    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} voce nao e o motorista do veiculo!");
    new vehicleid = GetPlayerVehicleID(playerid);
    if(IsABike(vehicleid)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Veiculo nao possui motor.");
    if(vInfo[vehicleid][vMTLigado] == false)
	{
        GameTextForPlayer(playerid, "~w~Motor: ~g~Ligado", 1000, 4);
        vInfo[vehicleid][vMTLigado] = true;
		LigarMotor(vehicleid);
    }
    else if(vInfo[vehicleid][vMTLigado] == true)
	{
        GameTextForPlayer(playerid, "~w~Motor: ~r~Desligado", 1000, 4);
        vInfo[vehicleid][vMTLigado] = false;
		DesligarMotor(vehicleid);
    }
	return true;
}
CMD:luz(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Erro: voce nao esta em nenhum veiculo!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Erro: voce nao e o motorista do veiculo!");
    new vehicleid = GetPlayerVehicleID(playerid);
    AlarmeVeh(vehicleid);
    return 1;
}
/*CMD:mascara(playerid)
{
    if(pInfo[playerid][pTemMask] == 1)
	{
        SetPlayerAttachedObject(playerid, SlotMascara, 19472, 2, 0.0310, 0.1420, -0.0050, 4.2999, 88.4999, 83.5001, 1.0639, 1.4189, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF); // gasmask01 attached to the Head of 
        GameTextForPlayer(playerid, "~r~Mascara Colocada.~n~~r~/rmascara para retira-la", 2000, 4);
	}else{
		SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem uma mascara.");
	}
	return 1;
}
CMD:rmascara(playerid)
{
    if(pInfo[playerid][pTemMask] == 1)
	{
        GameTextForPlayer(playerid, "~r~Mascara Removida.~n~~r~/mascara para coloca-la", 2000, 4);
	    RemovePlayerAttachedObject(playerid, SlotMascara);
	}else{
		SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem uma mascara.");
	}
	return 1;
}*/
CMD:adminsssssssssss(playerid)
{
    new string[128], adminsonline = 0;
    MEGAString[0] = EOS;
    strcat(MEGAString, "{B22222}Nome\t\t{00FF00}Cargo\t\t{B22222}Status\n\n");
    foreach(new i : Player)
    {
        if(IsPlayerConnected(i))
        {
            if(pInfo[i][pAdmin] > 0 && pInfo[i][pAdmin] < 11 && AdminOculto[i] == false)
            {
                new Stats[50], AdminN[15];
                if(pInfo[i][pDuty] == false) Stats = "{00FF00}Dormindo";
                if(pInfo[i][pDuty] == true) Stats = "{0000FF}Trabalhando";
                switch(pInfo[i][pAdmin])
				{
				    case 1: AdminN = "Ajudante";
                    case 2: AdminN = "Moderador";
					case 3: AdminN = "Administrador";
					case 4: AdminN = "Master Admin";
					case 5: AdminN = "Gerente";
					case 6: AdminN = "Sub Fundador";
					case 7: AdminN = "Fundador";
					case 8: AdminN = "Sub Dono";
					case 9: AdminN = "Dono";
					case 10: AdminN = "Dono Geral";
				}
                format(string,sizeof(string), "{FF00FF}%s(%d)\t{B22222}%s \t%s\n", PegarNome(i), i, AdminN, Stats);
                strcat(MEGAString, string);
                adminsonline++;
            }
        }
    }
    if(adminsonline != 0)
    {
        ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFF00}Admins Online:", MEGAString, "Fechar", "");
        return 1;
    }
    else if(adminsonline == 0)
    {
        strcat(MEGAString, "{B22222}Nenhum Administrador Online\n");
        strcat(MEGAString, "{B22222}Viu Algum Hack/Anti-Regra? Reporte no Discord\n");
        strcat(MEGAString, "{B22222}Link: https://discord.gg/dayofsurvival\n");
        ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{ffff00}Admins Online:", MEGAString, "Fechar", "");
    }
    return 1;
}
CMD:vips(playerid)
{
    new string[128], vipsonline = 0;
    MEGAString[0] = EOS;
    strcat(MEGAString, "{FFFF00}Nome\t\t{FFFF00}Nivel\n\n");
    foreach(new i : Player)
    {
        if(IsPlayerConnected(i))
        {
            if(pInfo[i][pVip] > 0)
            {
                format(string,sizeof(string), "{FFFFFF}%s(%d)\n", PegarNome(i), i);
                strcat(MEGAString, string);
                vipsonline++;
            }
        }
    }
    if(vipsonline != 0)
    {
        ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Vips Online:", MEGAString, "Fechar", "");
        return 1;
    }
    else if(vipsonline == 0)
    {
        strcat(MEGAString, "{B22222}Nenhum Vip Online\n");
        ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{ffffFF}Vips Online:", MEGAString, "Fechar", "");
    }
    return 1;
}

// COMANDOS DE ADMINS //
CMD:ejetar(playerid, params[])
{
	new id;
	new nego = GetPlayerState(playerid), carro = GetPlayerVehicleID(playerid);
	if(nego == PLAYER_STATE_DRIVER)
	{
		if(sscanf(params, "i", id)) return SendClientMessage(playerid, Vermelho, "[DICA] /ejetar [ID]");
		{
			if(IsPlayerConnected(id))
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
                    if(IsPlayerInVehicle(id, carro))
                    {
						RemovePlayerFromVehicle(id);
						TogglePlayerControllable(id, 1);
					}
					else
					{
					    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Jogador nao esta em seu veiculo!");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Jogador OFF-LINE");
			}
		}
	}
	else
	{
	    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao e o motorista!");
	}
	return 1;
}
CMD:horariosgmx(playerid)
{
	new DStaff[300];
	strcat(DStaff,"{d95252} >> {FFFFFF}01:00 da madrugada.\n");
	strcat(DStaff,"{d95252} >> {FFFFFF}06:00 da manha.\n");
	strcat(DStaff,"{d95252} >> {FFFFFF}04:00 da tarde.");
	ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "GMX Servidor",DStaff, "Ok", "");
	return 1;
}

/*CMD:destruirporta(playerid, params[])
{
    if(pInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA}: Voce nao pode usar este comando.");
    new id;
    if(sscanf(params, "d", id)) return SendClientMessage(playerid, -1, "Use: /destruirporta [ID da porta]");
    if(!IsPlayerInRangeOfPoint(playerid, 70.0, Porta[id][PosX], Porta[id][PosY], Porta[id][PosZ])) return SendClientMessage(playerid, Vermelho, "* Voce esta longe dessa porta.");
	DestroyDynamicObject(Porta[id][ObjectP]);
	DestroyDynamic3DTextLabel(Porta[id][Text3Dp]);
    Porta[id][Existe] = 0;
    Porta[id][PosX] = 0;
    Porta[id][PosY] = 0;
    Porta[id][PosZ] = 0;
    Porta[id][RX] = 0;
    Porta[id][RY] = 0;
    Porta[id][RZ] = 0;
    new file[64];
    format(file, sizeof(file), "Data/Portas/%d.ini", id);
    if(DOF2_FileExists(file))
    {
        DOF2_RemoveFile(file);
    }
    new trocada[128];
    format(trocada, sizeof(trocada), "* Adm-Cmd: O Staff %s[%d] destruiu a porta id: %d.", PegarNome(playerid), playerid, id);
    MensageAdmin(COR_ADMIN, trocada);
    printf("* Adm-Cmd: O Staff %s destruiu a porta id: %d.", PegarNome(playerid), id);
    return 1;
}*/
CMD:pm(playerid, params[])
{
	new id;
	new msg[128];
	new str[128];
	if(sscanf(params, "ds[128]",id, msg)) return SendClientMessage(playerid, COR_CINZA, "Use: /pm [id] [msg]");
   	if(!IsPlayerConnected(id))
	{
	    return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Jogador(a) nao conectado");
	}
	if(pInfo[id][pBlockPM] == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Jogador nao quer receber mensagens privadas.");
	format(str, sizeof(str), "[Privado] %s[%d]: %s.", PegarNome(playerid), playerid, msg);
	SendClientMessage(id, AMARELO, str);
	format(str, sizeof(str), "[Privado] Enviado para %s[%d].", PegarNome(id), id, msg);
	SendClientMessage(playerid, AMARELO, str);
	return 1;
}
CallBack:KickingP(playerid)
{
    Kick(playerid);
    return 1;
}
CMD:lmc(playerid)
{
    LimparChat(playerid, 20);
	return 1;
}
CMD:lojados(playerid)
{
	new str[100];
    MEGAString[0] = EOS;
	strcat(MEGAString, "Itens\tDias\tPreco\n");
    format(str, sizeof(str), "{B22222}Meu Coins: %d\n", pInfo[playerid][pCoins]);
    strcat(MEGAString, str);
    strcat(MEGAString, "{FFFF00}Vip\t{FFFFFF}45\t{33AA33}15 Coins\n");
    strcat(MEGAString, "{FFFF00}Vip\t{FFFFFF}30\t{33AA33}10 Coins\n");
    strcat(MEGAString, "{B22222}Troca Nick\t{FFFFFF}Expira no Proximo Login\t{33AA33}5 Coins");
    ShowPlayerDialog(playerid, D_COINS, DIALOG_STYLE_TABLIST_HEADERS, "Loja Day Of Survival", MEGAString, "Comprar", "Cancelar");
	return 1;
}
CMD:clans(playerid){
    ListaClans[playerid] = 1;//comecar do zero a lista
    Lista_Clans(playerid, ListaClans[playerid]);
    return true;
}
stock Lista_Clans(playerid, lista)
{
    new Item_Lista=0, str[256];
    MEGAString[0]=EOS;
    for(new lc=lista; lc < MAX_CLANS; lc++){
        if(ClanInfo[lc][Exists]){
            if(Item_Lista >= 15)
            {
                ListaClans[playerid] = lc;
                break;
            } 
            format(str,sizeof(str),"{%s}Clan %d: {FFFFFF}%s {%s}|| Lider: {FFFFFF}%s\n", ClanInfo[lc][CorC], lc, ClanInfo[lc][NomeC], ClanInfo[lc][CorC], MemberClan[lc][1]);
            strcat(MEGAString, str);
            Item_Lista++;
        }
    }
    ShowPlayerDialog(playerid, DIALOG_CLANS, DIALOG_STYLE_MSGBOX,"Clans",MEGAString,"Ok",">>>");
    return 1;
}
CMD:infos(playerid)
{
    ShowDialogInfosP(playerid, playerid);
	return 1;
}
CMD:id(playerid, params[])
{
	new id;
	new str[128];
	if(sscanf(params, "d", id)) return SendClientMessage(playerid, -1, "use: /id [id-player] ");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Player offline.");
	format(str, sizeof(str), "[ID: %d] %s.", id, PegarNome(id));
	SendClientMessage(playerid, Verde, str);
	return 1;
}
CMD:dmunicao(playerid, params[])
{
    new wep, slot; wep = GetPlayerWeapon(playerid);
        
    slot = GetSlotWeapon(wep);

	new gunID = GetPlayerWeaponEx(playerid, slot);
	new gunAmmo = GetPlayerAmmoEx(playerid, slot);

	new IDF, MUNICAO;
	new Float:P[3];
	if(sscanf(params, "di", IDF, MUNICAO)) return SendClientMessage(playerid, Verde, "[Dica] Use /dmunicao [ID] [Municao]");
	GetPlayerPos(IDF, P[0], P[1], P[2]);

    new gunIDIDF = GetPlayerWeaponEx(IDF, GetSlotWeapon( GetPlayerWeapon(IDF) ));

	if(!IsPlayerInRangeOfPoint(playerid, 3.0, P[0], P[1], P[2])) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao esta proximo do jogador!");
	if(gunID != gunIDIDF) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} O jogador precisa estar com mesma arma na mao para receber a municao.");
	if(!IsPlayerConnected(IDF)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Jogador(a) nao conectado");
    if(gunID == 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem nenhuma arma nas maos");
	if(!WeaponsServer(gunID)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode dar esta arma para o player");
    if(MUNICAO > gunAmmo) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Sua arma nao tem esta quantia de municao.");
	MensagemFormatada(playerid, COR_VERMELHO, "* Voce deu %d municoes de %s para %s[%d].", MUNICAO, GunName[gunID], PegarNome(IDF), IDF);
    MensagemFormatada(IDF, COR_VERMELHO, "* Voce recebeu %d municoes de %s de %s[%d].", MUNICAO, GunName[gunID], PegarNome(playerid), playerid);
	GivePlayerWeaponEx(playerid, gunID, -MUNICAO);
	GivePlayerWeaponEx(IDF, gunID, MUNICAO);
	return 1;
}
CMD:dropararma(playerid, params[])
{
	Jogar(playerid);
    return 1;
}
CMD:pegararma(playerid, params[])
{
    Pegar(playerid);
	return 1;
}
CMD:pegar(playerid)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		OnPlayerPickupItemFromDrop(playerid);
	}
	return 1;
}
CMD:darma(playerid, params[])
{
    new wep, slot; wep = GetPlayerWeapon(playerid);
        
    slot = GetSlotWeapon(wep);

	new gunID = GetPlayerWeaponEx(playerid, slot);
	new gunAmmo = GetPlayerAmmoEx(playerid, slot);
    
	new IDF;
	new Float:P[3];
	if(sscanf(params, "d", IDF)) return SendClientMessage(playerid, Verde, "[Dica] Use /darma [ID]");
	GetPlayerPos(IDF, P[0], P[1], P[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, P[0], P[1], P[2])) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao esta proximo do jogador!");
	if(!IsPlayerConnected(IDF)) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Jogador(a) nao conectado");

    if(pInfo[IDF][pAdmin] <= 4)
	{
	    if(!WeaponsServer(gunID))
		{
		    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode dar essa arma para este player!");
		    return 1;
		}
	}
	if(gunID == 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao tem nenhuma arma nas maos");
	MensagemFormatada(playerid, 0xF0E68CFF, "* Voce deu uma %s para %s[%d].", GunName[gunID], PegarNome(IDF), IDF);
    MensagemFormatada(IDF, 0xF0E68CFF, "* Voce recebeu uma %s de %s[%d].", GunName[gunID], PegarNome(playerid), playerid);
	RemovePlayerWeapon(playerid, gunID);
	GivePlayerWeaponEx(IDF, gunID, gunAmmo);
	return 1;
}
CMD:dargrana(playerid, params[])
{
    new Gold,id;
    if(sscanf(params, "di",id, Gold)) return SendClientMessage(playerid, Verde, "[Dica] Use /dargrana [Id] [Quantidade]");
   	if(!IsPlayerConnected(id))
	{
	    return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Jogador(a) nao conectado");
	}
	if(id == playerid) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode dar este comando de voce mesmo.");
	if(Gold < 1 || Gold > 5000000) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Quantia 1 ate 5.000.000");
	if(pInfo[playerid][pDinheiro] < Gold) return SendClientMessage(playerid, Verde, "Voce nao tem essa quantia de coin.");
	MensagemFormatada(playerid, 0xF0E68CFF, "* Voce deu %i em dinheiro para %s!",Gold, PegarNome(id));
    MensagemFormatada(id, 0xF0E68CFF, "* %s te deu %i em dinheiro!",PegarNome(playerid),Gold);
    new str[100];
    format(str, sizeof(str), "[ %s - %s ] %s deu [%d] Dinheiro para %s.", Gdata(), Ghora(), PegarNome(playerid), Gold, PegarNome(id));
	logsTranferencias(str);
    SetPlayerMoney(id, Gold);
    SetPlayerMoney(playerid, -Gold);
    return 1;
}
CMD:darmadeira(playerid, params[])
{
    new madeira,id;
    if(sscanf(params, "di",id, madeira)) return SendClientMessage(playerid, Verde, "[Dica] Use /darmadeira [Id] [Quantidade]");
   	if(!IsPlayerConnected(id))
	{
	    return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Jogador(a) nao conectado");
	}
	if(id == playerid) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode dar este comando de voce mesmo.");
	if(madeira < 1 || madeira > 5000000) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Quantia 1 ate 5.000.000");
	if(pInfo[playerid][pMadeira] < madeira) return SendClientMessage(playerid, Verde, "Voce nao tem essa quantia de madeira.");
	MensagemFormatada(playerid, 0xF0E68CFF, "* Voce deu %i madeiras para %s!",madeira, PegarNome(id));
    MensagemFormatada(id, 0xF0E68CFF, "* %s te deu %i madeiras!",PegarNome(playerid),madeira);
    new str[100];
    format(str, sizeof(str), "[ %s - %s ] %s deu [%d] Madeiras para %s.", Gdata(), Ghora(), PegarNome(playerid), madeira, PegarNome(id));
	logsTranferencias(str);
    //pInfo[id][pMadeira] += madeira;
    //pInfo[playerid][pMadeira] -= madeira;
    SetPlayerMadeira(playerid, -madeira);
    SetPlayerMadeira(id, madeira);
    return 1;
}
CMD:darferro(playerid, params[])
{
    new Gold,id;
    if(sscanf(params, "di",id, Gold)) return SendClientMessage(playerid, Verde, "[Dica] Use /darferro [Id] [Quantidade]");
   	if(!IsPlayerConnected(id))
	{
	    return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Jogador(a) nao conectado");
	}
	if(id == playerid) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao pode dar este comando de voce mesmo.");
	if(Gold < 1 || Gold > 5000000) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Quantia 1 ate 5.000.000");
	if(pInfo[playerid][pFerro] < Gold) return SendClientMessage(playerid, Verde, "Voce nao tem essa quantia de Ferro.");
	MensagemFormatada(playerid, 0xF0E68CFF, "* Voce deu %i Ferros para %s!",Gold, PegarNome(id));
    MensagemFormatada(id, 0xF0E68CFF, "* %s te deu %i Ferros!",PegarNome(playerid),Gold);
    new str[100];
    format(str, sizeof(str), "[ %s - %s ] %s deu [%d] Ferros para %s.", Gdata(), Ghora(), PegarNome(playerid), Gold, PegarNome(id));
	logsTranferencias(str);
    //pInfo[id][pFerro] += Gold;
    //pInfo[playerid][pFerro] -= Gold;
    SetPlayerFerro(playerid, -Gold);
    SetPlayerFerro(id, Gold);
    return 1;
}
stock logsTranferencias(string[])
{
    new var_1[256];
    new File:var_2;

    format(var_1, sizeof(var_1), "%s\r\n", string);
    var_2 = fopen("/Logs/logseconomia.txt", io_append);
    fwrite(var_2, var_1);
    fclose(var_2);
}
stock logsAC(string[])
{
    new var_1[256];
    new File:var_2;

    format(var_1, sizeof(var_1), "%s\r\n", string);
    var_2 = fopen("/Logs/anticheat.txt", io_append);
    fwrite(var_2, var_1);
    fclose(var_2);
}
stock logskill(string[])
{
    new var_1[256];
    new File:var_2;

    format(var_1, sizeof(var_1), "%s\r\n", string);
    var_2 = fopen("/Logs/logskill.txt", io_append);
    fwrite(var_2, var_1);
    fclose(var_2);
}
stock logscriarveh(string[])
{
    new var_1[256];
    new File:var_2;

    format(var_1, sizeof(var_1), "%s\r\n", string);
    var_2 = fopen("/Logs/logscriarveh.txt", io_append);
    fwrite(var_2, var_1);
    fclose(var_2);
}
stock logssetveh(string[])
{
    new var_1[256];
    new File:var_2;

    format(var_1, sizeof(var_1), "%s\r\n", string);
    var_2 = fopen("/Logs/logssetveh.txt", io_append);
    fwrite(var_2, var_1);
    fclose(var_2);
}
stock logsdestroyveh(string[])
{
    new var_1[256];
    new File:var_2;

    format(var_1, sizeof(var_1), "%s\r\n", string);
    var_2 = fopen("/Logs/logsdveh.txt", io_append);
    fwrite(var_2, var_1);
    fclose(var_2);
}
stock DestroyVeiculo(playerid, idveh)
{
	new idx = vInfo[idveh][VehicleID];
	if(vInfo[idveh][VehicleID] == 0) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Impossivel destruir este veiculo desta forma.");
	new strsave[32];
	format(strsave, sizeof(strsave), Pasta_Carros, vInfo[idveh][VehicleID]);
	if(DOF2_FileExists(strsave))
	{
		DOF2_RemoveFile(strsave);
		CarInfo[idx][cModel] = 0;
		CarInfo[idx][cLocationx] = 0.0;
		CarInfo[idx][cLocationy] = 0.0;
		CarInfo[idx][cLocationz] = 0.0;
		CarInfo[idx][cAngle] = 0.0;
		CarInfo[idx][cColorOne] = 0;
		CarInfo[idx][cColorTwo] = 0;
		CarInfo[idx][cGasolina] = 0;
	    CarInfo[idx][cMotor] = false;
	    CarInfo[idx][cTrancado] = false;
        CarInfo[idx][LatariaV] = 0.0;
        if(!InvalidPMalas(idveh)){
    		for(new n = 1; n < MAX_LOOT_PMALA; n++)
    	 	{
    	 	    InfoPMalas[idx][n] = -1;
    		}
        }
		CarInfo[idx][Existe] = 0;

        new strtext[90];
		format(strtext, sizeof(strtext), "<Aviso!> Server: O Admin %s(%d) destruiu o veiculo: %s(%d) do servidor.", PegarNome(playerid), playerid, VehicleNames[GetVehicleModel(idveh)-400], idveh);
		SendClientMessageToAll(0xFFFF00FF, strtext);

		new str[100];
	    format(str, sizeof(str), "[ %s - %s ] %s destruiu o veiculo: %s(%d) do servidor.", Gdata(), Ghora(), PegarNome(playerid), VehicleNames[GetVehicleModel(idveh)-400], idveh);
		logsdestroyveh(str);
        vInfo[idveh][vMTLigado] = false;
		DestroyVehicle(idveh);
		format(vInfo[idveh][Dono], MAX_PLAYER_NAME, "%s", "Nenhum");
		format(vInfo[idveh][cSenha], 50, "%s", "Nenhuma");
		vInfo[idveh][vCombustivel] = 0;
	    vInfo[idveh][vTemMotor] = false;
	    vInfo[idveh][vLock] = false;
		vInfo[idveh][VehicleID] = 0;
    }
	return 1;
}

stock logeditplayer(string[])
{
    new var_1[256];
    new File:var_2;

    format(var_1, sizeof(var_1), "%s\r\n", string);
    var_2 = fopen("/Logs/logedit.txt", io_append);
    fwrite(var_2, var_1);
    fclose(var_2);
}
stock Gdata()
{
    new ano, mes, dia, amd[12];
    getdate(ano, mes, dia);
    format(amd, 12, "%02d/%02d/%04d", dia, mes, ano);
    return amd;
}

stock Ghora()
{
    new hora, minuto, segundo, hms[12];
    gettime(hora, minuto, segundo);
    format(hms, 12, "%02d:%02d:%02d", hora, minuto, segundo);
    return hms;
}
/*CMD:ficha(playerid, params[])
{
    new name[MAX_PLAYER_NAME];
    if(sscanf(params, "s[23]", name))return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} /ficha [Nome].");
    new file_q[30]; format(file_q, sizeof file_q, "/Fichas/%s.txt", name);
    if(!fexist(file_q))
    {
        return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Arquivo inexistente.");
    } else {
        MEGAString[0] = EOS;
        new str[128], readString[128], File:logFile;
        logFile = fopen(file_q, io_read);
        while(fread(logFile, readString)) {
            format(str, sizeof str, "%s", readString);
            strcat(MEGAString,str);
        }
        ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{ffffff}Arquivo Ficha: ({df5454}Logs/ficha.txt{ffffff})", MEGAString, "Voltar", "");
    }
    return 1;
}
CMD:addconta(playerid, params[])
{
    new name[MAX_PLAYER_NAME], Item[30], VALORITEM;
    if(sscanf(params, "s[23]s[30]d", name, Item, VALORITEM))return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} /addconta [Nome] [item] [Valor].");
    new str[100];
    format(str, sizeof(str), "[ %s - %s ] %s comprou um(a) %s por $%d.", Gdata(), Ghora(), name, Item, VALORITEM);
	contasADD(name, str);
    return 1;
}
stock contasADD(name[], string[])
{
    new var_1[256], str[70];
    format(str, sizeof str, "/Fichas/%s.txt", name);
    new File:var_2;

    format(var_1, sizeof(var_1), "%s\r\n", string);
    var_2 = fopen(str, io_append);
    fwrite(var_2, var_1);
    fclose(var_2);
}*/

// COMANDOS PLAYERS //
CMD:sair(playerid)
{
	new Float:XX, Float:YY, Float:ZZ;
	GetPlayerPos(playerid, XX, YY, ZZ);
	if(IsPlayerInAnyVehicle(playerid))
	{
		TogglePlayerControllable(playerid,1);
		RemovePlayerFromVehicle(playerid);
		SetPlayerPosEx(playerid, XX, YY, ZZ+3);
	}
	return 1;
}
stock CarregarVeiculo(playerid, idx)
{
    new strsave[32];
	format(strsave, sizeof(strsave), Pasta_Carros, idx);
	if(DOF2_FileExists(strsave))
	{
		CarInfo[idx][cModel] = DOF2_GetInt(strsave, "Modelo");
		CarInfo[idx][cLocationx] = DOF2_GetFloat(strsave, "CarroX");
		CarInfo[idx][cLocationy] = DOF2_GetFloat(strsave, "CarroY");
		CarInfo[idx][cLocationz] = DOF2_GetFloat(strsave, "CarroZ");
		CarInfo[idx][cAngle] = DOF2_GetFloat(strsave, "CarroA");
		CarInfo[idx][cColorOne] = DOF2_GetInt(strsave, "cor1");
		CarInfo[idx][cColorTwo] = DOF2_GetInt(strsave, "cor2");
		CarInfo[idx][cGasolina] = DOF2_GetInt(strsave, "Gasolina");
		CarInfo[idx][cMotor] = DOF2_GetBool(strsave, "Motor");
		CarInfo[idx][cTrancado] = DOF2_GetBool(strsave, "Trancado");
        CarInfo[idx][LatariaV] = DOF2_GetFloat(strsave, "LatariaV");
        format(CarInfo[idx][Senha], 50, DOF2_GetString(strsave, "Senha"));
		CarInfo[idx][Existe] = 1;

		new idveh;
		idveh = CreateVehicle(CarInfo[idx][cModel], CarInfo[idx][cLocationx],CarInfo[idx][cLocationy],CarInfo[idx][cLocationz], CarInfo[idx][cAngle],CarInfo[idx][cColorOne],CarInfo[idx][cColorTwo], -1);
        SetVehicleToRespawn(idveh);

        if(CarInfo[idx][LatariaV] <= 300){
            vInfo[idveh][vHealth] = 290.0;
            SetVehicleHealth(idveh, 290.0);
        }else{
            vInfo[idveh][vHealth] = CarInfo[idx][LatariaV];
            SetVehicleHealth(idveh, CarInfo[idx][LatariaV]);
        }
		format(vInfo[idveh][Dono], MAX_PLAYER_NAME, "%s", "Nenhum");
		format(vInfo[idveh][cSenha], 50, "%s", CarInfo[idx][Senha]);
		new string[30];
        if(!InvalidPMalas(idveh)){
		    for(new n = 1; n < MAX_LOOT_PMALA; n++)
    	 	{
    			format(string, sizeof(string), "Item%d", n);
    	 	    InfoPMalas[idx][n] = DOF2_GetInt(strsave, string);
    		}
        }


		PutPlayerInVehicle(playerid, idveh, 0);
		vInfo[idveh][vCombustivel] = CarInfo[idx][cGasolina];
		vInfo[idveh][vTemMotor] = CarInfo[idx][cMotor];
		vInfo[idveh][vLock] = CarInfo[idx][cTrancado];
		vInfo[idveh][VehicleID] = idx;
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && !IsABike(idveh))
		{
			if(vInfo[idveh][vTemMotor] == false)
			{
				SendClientMessage(playerid, Vermelho, "* Sem motor. coloque um motor no veiculo!.");
				RemovePlayerFromVehicle(playerid);
                TogglePlayerControllable(playerid,1);
			}
			if(vInfo[idveh][vCombustivel] <= 0)
			{
				SendClientMessage(playerid, Vermelho, "* Sem Gasolina. Use galao para encher o tanque.");
				RemovePlayerFromVehicle(playerid);
                TogglePlayerControllable(playerid,1);
			}
		}
	}
	return 1;
}
stock CarregarVeiculos()
{
    new strsave[32];
	for(new idx = 1; idx < MAX_VEHS; idx++)
	{
	    format(strsave, sizeof(strsave), Pasta_Carros, idx);
	    if(DOF2_FileExists(strsave))
	    {
			CarInfo[idx][cModel] = DOF2_GetInt(strsave, "Modelo");
			CarInfo[idx][cLocationx] = DOF2_GetFloat(strsave, "CarroX");
			CarInfo[idx][cLocationy] = DOF2_GetFloat(strsave, "CarroY");
			CarInfo[idx][cLocationz] = DOF2_GetFloat(strsave, "CarroZ");
			CarInfo[idx][cAngle] = DOF2_GetFloat(strsave, "CarroA");
			CarInfo[idx][cColorOne] = DOF2_GetInt(strsave, "cor1");
			CarInfo[idx][cColorTwo] = DOF2_GetInt(strsave, "cor2");
			CarInfo[idx][cGasolina] = DOF2_GetInt(strsave, "Gasolina");
		    CarInfo[idx][cMotor] = DOF2_GetBool(strsave, "Motor");
		    CarInfo[idx][cTrancado] = DOF2_GetBool(strsave, "Trancado");
            format(CarInfo[idx][Senha], 50, DOF2_GetString(strsave, "Senha"));
            CarInfo[idx][LatariaV] = DOF2_GetFloat(strsave, "LatariaV");
			CarInfo[idx][Existe] = 1;

		    new idveh;
		    idveh = CreateVehicle(CarInfo[idx][cModel], CarInfo[idx][cLocationx],CarInfo[idx][cLocationy],CarInfo[idx][cLocationz], CarInfo[idx][cAngle],CarInfo[idx][cColorOne],CarInfo[idx][cColorTwo], -1);
            SetVehicleToRespawn(idveh);

            if(CarInfo[idx][LatariaV] <= 300){
                vInfo[idveh][vHealth] = 290.0;
                SetVehicleHealth(idveh, 290.0);
            }else{
                vInfo[idveh][vHealth] = CarInfo[idx][LatariaV];
                SetVehicleHealth(idveh, CarInfo[idx][LatariaV]);
            }

			format(vInfo[idveh][Dono], MAX_PLAYER_NAME, "%s", "Nenhum");
			format(vInfo[idveh][cSenha], 50, "%s", DOF2_GetString(strsave, "Senha"));
			new string[30];
            if(!InvalidPMalas(idveh)){
            	for(new n = 1; n < MAX_LOOT_PMALA; n++)
    		 	{
    			 	format(string, sizeof(string), "Item%d", n);
    				InfoPMalas[idx][n] = DOF2_GetInt(strsave, string);
    			}
            }

			vInfo[idveh][vCombustivel] = CarInfo[idx][cGasolina];
		    vInfo[idveh][vTemMotor] = CarInfo[idx][cMotor];
		    vInfo[idveh][vLock] = CarInfo[idx][cTrancado];
			vInfo[idveh][VehicleID] = idx;
		}
	}
	printf("=======Todos os veiculos foram carregados========");
	return 1;
}
stock SalvarVeiculo(idveh)
{
    new idx = vInfo[idveh][VehicleID];
	new strsave[31];
   	format(strsave, sizeof(strsave), Pasta_Carros, idx);
   	if(DOF2_FileExists(strsave))
   	{
		DOF2_SetInt(strsave, "Modelo", CarInfo[idx][cModel]);
		DOF2_SetFloat(strsave, "CarroX", CarInfo[idx][cLocationx]);
		DOF2_SetFloat(strsave, "CarroY", CarInfo[idx][cLocationy]);
		DOF2_SetFloat(strsave, "CarroZ", CarInfo[idx][cLocationz]);
		DOF2_SetFloat(strsave, "CarroA", CarInfo[idx][cAngle]);
		DOF2_SetInt(strsave, "cor1", CarInfo[idx][cColorOne]);
		DOF2_SetInt(strsave, "cor2", CarInfo[idx][cColorTwo]);
		DOF2_SetInt(strsave, "Gasolina", CarInfo[idx][cGasolina]);
		DOF2_SetBool(strsave, "Motor", CarInfo[idx][cMotor]);
		DOF2_SetBool(strsave, "Trancado", CarInfo[idx][cTrancado]);
        DOF2_SetString(strsave, "Senha", CarInfo[idx][Senha]);
        DOF2_SetFloat(strsave, "LatariaV", CarInfo[idx][LatariaV]);
		new string[30];
        if(!InvalidPMalas(idveh)){
    		for(new n = 1; n < MAX_LOOT_PMALA; n++)
    	 	{
    			format(string, sizeof(string), "Item%d", n);
    	 	    DOF2_SetInt(strsave, string, InfoPMalas[idx][n]);
    		}
        }
		DOF2_SaveFile();
	}
	return true;
}
CallBack:AtualizarRank()
{
	foreach(new i : Player)
 	{
        if(pInfo[i][pConectado] == true)
	    {
	        checkrank("Kills", 				PegarNome(i), pInfo[i][pkill]);
	        checkrank("Mortes", 		    PegarNome(i), pInfo[i][pDeath]);
	   	    checkrank("Dinheiro", 			PegarNome(i), pInfo[i][pDinheiro]);
	   	    checkrank("Madeiras", 			PegarNome(i), pInfo[i][pMadeira]);
	   	    checkrank("Ferros", 			PegarNome(i), pInfo[i][pFerro]);
			checkrank("Score",              PegarNome(i), pInfo[i][pLevel]);
            checkrank("HorasJ",             PegarNome(i), pInfo[i][pHorasJ]);
            checkrank("TempoVivo",          PegarNome(i), pInfo[i][pTempoVivo]);
            checkrank("ZKiller",            PegarNome(i), pInfo[i][pKillZ]);
		}
	}
	SendClientMessageToAll(Verde, "| RANK | Ranks atualizados. Use /rank para verificar os Tops - 1.");
	return 1;
}
CMD:vdrops(playerid)
{
	new idp, str[100];
	for(new i=1; i < MAX_DROPS; i++)
	{
        if(DropInfo[i][Existe] == true)
        {
			idp++;
        }

	}
	format(str, sizeof(str), "* existem %d loots dropados no servidor!", idp);
    SendClientMessage(playerid, Verde, str);
	return 1;
}
CMD:verpcriadas(playerid)
{
	new idp, str[100];
	for(new i = 1; i < MAX_CRAFTS; i ++)
	{
        if(CraftInfo[i][Existe] == 1)
        {
			idp++;
        }
	}
	format(str, sizeof(str), "* existem %d paredes criadas no servidor!", idp);
    SendClientMessage(playerid, Verde, str);
	return 1;
}
CMD:vercaixasdestruidas(playerid)
{
	new str[100];
	format(str, sizeof(str), "* %d caixas foram destruidas no servidor nesse gmx!", caixasdestruidas);
    SendClientMessage(playerid, Verde, str);
    return 1;
}
CMD:veracriadas(playerid)
{
    new idp, str[100];
	for(new i = 0; i < MAX_ARMAS; i ++)
	{
        if(ArmaInfo[i][ArmaExiste])
        {
			idp++;
        }

	}
	format(str, sizeof(str), "* existem %d armas criadas no servidor!", idp);
    SendClientMessage(playerid, Verde, str);
	return 1;
}

CMD:verccriadas(playerid)
{
	new idp, str[100];
	for(new i = 0; i < MAX_CAIXA; i ++)
	{
        if(Caixa[i][Existe] == 1)
        {
			idp++;
        }

	}
	format(str, sizeof(str), "* existem %d caixas criadas no servidor!", idp);
    SendClientMessage(playerid, Verde, str);
	return 1;
}
CMD:rank(playerid)
{
	MEGAString[0]=EOS;
	strcat(MEGAString, "{6cb827} * Kills\n");
	strcat(MEGAString, "{6cb827} * Mortes\n");
	strcat(MEGAString, "{6cb827} * Dinheiro\n");
	strcat(MEGAString, "{6cb827} * Madeiras\n");
	strcat(MEGAString, "{6cb827} * Ferros\n");
    strcat(MEGAString, "{6cb827} * Score\n");
    strcat(MEGAString, "{6cb827} * Horas Jogadas\n");
    strcat(MEGAString, "{6cb827} * Tempo Vivo\n");
    strcat(MEGAString, "{6cb827} * Kills Zumbi");
    //strcat(MEGAString, "{FF8080} * Rank - Clans");
	ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Ranks", MEGAString, "Ver", "Cancelar");
	return 1;
}
static stock ChecarVeiculosServidor(Float:radi, playerid, vehicleid)
{
	new Float:x, Float:y, Float:z;
	GetVehiclePos(vehicleid, x, y, z);
	if(IsPlayerInRangeOfPoint(playerid, radi, x, y, z))
	    return 1;
	return 0;
}


CallBack:DestruirAir()
{
	DestroyDynamic3DTextLabel(airlabel);
	DestroyObject(air);
	idairdrop = 767;
	foreach(new i : Player){
	   DisablePlayerCheckpoint(i);
	}
	return 1;
}
CallBack:AtivarAir()
{
    ciclo();    new airNivel=0;

    airNivel = random(4);
    airNivel++;
    
    if(airNivel == 3){
        new probability;
        probability = random(100);
        if(probability < 60) airNivel = 1;
    }else if(airNivel == 4){
        new probability2;
        probability2 = random(100);
        if(probability2 < 80) airNivel = 2;
    }
    
    /*new strf[100]; format(strf, sizeof strf, "DEBUG - AIRDROP NIVEL [%d] chamado.", airNivel);
    SendClientMessageToAll(-1, strf);*/

    new nameAirdrop[35];
    switch(airNivel){
        case 1: //airdrop nivel 1
        {
            nameAirdrop = "{00ff77}Basic Airdrop{FFFFFF}";
        }
        case 2: //airdrop nivel 2
        {
            nameAirdrop = "{ff6f00}Medium Airdrop{FFFFFF}";
        }
        case 3: //airdrop nivel 3
        {
            nameAirdrop = "{00fff8}High Airdrop{FFFFFF}";
        }
        case 4: //airdrop nivel 4
        {
            nameAirdrop = "{FF0000}Supreme Airdrop{FFFFFF}";
        }
    }
	new Rand = random(8);
	switch (Rand)
	{
		case 0:
		{
			DestroyDynamic3DTextLabel(airlabel);
			airlabel = CreateDynamic3DTextLabel("{80FF80}Air-Drop\n{ffffff}Clique 'F'\n{80FF80}Para Acessar.",0xFFFFFFFF,AirDropEnum[Rand][CoordX],AirDropEnum[Rand][CoordY],17.640625, 30);
            LabelZ = 17.640625;
        }
		case 1:
		{
			DestroyDynamic3DTextLabel(airlabel);
			airlabel = CreateDynamic3DTextLabel("{80FF80}Air-Drop\n{ffffff}Clique 'F'\n{80FF80}Para Acessar.",0xFFFFFFFF,AirDropEnum[Rand][CoordX],AirDropEnum[Rand][CoordY],11.947264, 30);
            LabelZ = 11.947264;
        }
		case 2:
		{
			DestroyDynamic3DTextLabel(airlabel);
			airlabel = CreateDynamic3DTextLabel("{80FF80}Air-Drop\n{ffffff}Clique 'F'\n{80FF80}Para Acessar.",0xFFFFFFFF,AirDropEnum[Rand][CoordX],AirDropEnum[Rand][CoordY],17.2931, 30);
            LabelZ = 17.2931;
        }
		case 3:
		{
			DestroyDynamic3DTextLabel(airlabel);
			airlabel = CreateDynamic3DTextLabel("{80FF80}Air-Drop\n{ffffff}Clique 'F'\n{80FF80}Para Acessar.",0xFFFFFFFF,AirDropEnum[Rand][CoordX],AirDropEnum[Rand][CoordY],47.732513, 30);
            LabelZ = 47.732513;
        }
		case 4:
		{
			DestroyDynamic3DTextLabel(airlabel);
			airlabel = CreateDynamic3DTextLabel("{80FF80}Air-Drop\n{ffffff}Clique 'F'\n{80FF80}Para Acessar.",0xFFFFFFFF,AirDropEnum[Rand][CoordX],AirDropEnum[Rand][CoordY],30.484375, 30);
            LabelZ = 30.484375;
        }
		case 5:
		{
			DestroyDynamic3DTextLabel(airlabel);
			airlabel = CreateDynamic3DTextLabel("{80FF80}Air-Drop\n{ffffff}Clique 'F'\n{80FF80}Para Acessar.",0xFFFFFFFF,AirDropEnum[Rand][CoordX],AirDropEnum[Rand][CoordY],35.1719, 30);
            LabelZ = 35.1719;
        }
		case 6:
		{
			DestroyDynamic3DTextLabel(airlabel);
			airlabel = CreateDynamic3DTextLabel("{80FF80}Air-Drop\n{ffffff}Clique 'F'\n{80FF80}Para Acessar.",0xFFFFFFFF,AirDropEnum[Rand][CoordX],AirDropEnum[Rand][CoordY],13.5469, 30);
            LabelZ = 13.5469;
        }
		case 7:
		{
			DestroyDynamic3DTextLabel(airlabel);
			airlabel = CreateDynamic3DTextLabel("{80FF80}Air-Drop\n{ffffff}Clique 'F'\n{80FF80}Para Acessar.",0xFFFFFFFF,AirDropEnum[Rand][CoordX],AirDropEnum[Rand][CoordY],105.5182, 30);
            LabelZ = 105.5182;
        }
    }
	AdicionarItensRandomDrop(Rand, airNivel);
		
	if(IsValidObject(air)) DestroyObject(air);
	air = CreateObject(18849, AirDropEnum[Rand][CoordX], AirDropEnum[Rand][CoordY], AirDropEnum[Rand][CoordZ]+70,   0.00000, 0.00000, 0.00000);
	MoveObject(air, AirDropEnum[Rand][CoordX], AirDropEnum[Rand][CoordY], AirDropEnum[Rand][CoordZ], 3.0);
	MensagemFormatadaAll(-1, "| AIRDROP | %s acaba de cair em %s.", nameAirdrop ,AirDropEnum[Rand][LocalNome]);
	SendClientMessageToAll(-1, "| ATENCAO | O airdrop sera destruido em 15 Minutos.");
	idairdrop = Rand;
	SetTimer("DestruirAir",60000*15,0);
	return 1;
}

stock AdicionarItensRandomDrop(Rand, Nivel){
    /*new strf[100]; format(strf, sizeof strf, "DEBUG - AdicionarItensRandomDrop [%d] Chamado.", Nivel);
    SendClientMessageToAll(-1, strf);*/

    switch(Nivel){
        case 1:                     
        {
            new Rand1 = random(2)+1;
            new Rand2 = random(2)+1;
            new Rand3 = random(2)+1;
            new Rand4 = random(2)+1;
            new Rand5 = random(2)+1;
            new Rand6 = random(2)+1;
            new Rand7 = minrand(1200, 2500);

            AirDropEnum2[Rand][Item1] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item2] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item3] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item4] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item5] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item6] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item7] = 45; //dinheiro

            AirDropEnum2[Rand][QItem1] = Rand1;
            AirDropEnum2[Rand][QItem2] = Rand2;
            AirDropEnum2[Rand][QItem3] = Rand3;
            AirDropEnum2[Rand][QItem4] = Rand4;
            AirDropEnum2[Rand][QItem5] = Rand5;
            AirDropEnum2[Rand][QItem6] = Rand6;
            AirDropEnum2[Rand][QItem7] = Rand7;
        }
        case 2:              
        {
            new Rand1 = random(3)+1;
            new Rand2 = random(3)+1;
            new Rand3 = random(3)+1;
            new Rand4 = random(3)+1;
            new Rand5 = random(3)+1;
            new Rand6 = random(3)+1;
            new Rand7 = minrand(2500, 5000);

            AirDropEnum2[Rand][Item1] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item2] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item3] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item4] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item5] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item6] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item7] = 45; //dinheiro

            AirDropEnum2[Rand][QItem1] = Rand1;
            AirDropEnum2[Rand][QItem2] = Rand2;
            AirDropEnum2[Rand][QItem3] = Rand3;
            AirDropEnum2[Rand][QItem4] = Rand4;
            AirDropEnum2[Rand][QItem5] = Rand5;
            AirDropEnum2[Rand][QItem6] = Rand6;
            AirDropEnum2[Rand][QItem7] = Rand7;
        }
        case 3:                          
        {
            new Rand1 = random(3)+1;
            new Rand2 = random(3)+1;
            new Rand3 = random(3)+1;
            new Rand4 = random(3)+1;
            new Rand5 = random(3)+1;
            new Rand6 = random(3)+1;
            new Rand7 = minrand(5000, 10000);

            AirDropEnum2[Rand][Item1] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item2] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item3] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item4] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item5] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item6] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item7] = 45; //dinheiro

            AirDropEnum2[Rand][QItem1] = Rand1;
            AirDropEnum2[Rand][QItem2] = Rand2;
            AirDropEnum2[Rand][QItem3] = Rand3;
            AirDropEnum2[Rand][QItem4] = Rand4;
            AirDropEnum2[Rand][QItem5] = Rand5;
            AirDropEnum2[Rand][QItem6] = Rand6;
            AirDropEnum2[Rand][QItem7] = Rand7;
        }
        case 4:                         
        {
            new Rand1 = random(5)+1;
            new Rand2 = random(5)+1;
            new Rand3 = random(5)+1;
            new Rand4 = random(5)+1;
            new Rand5 = random(5)+1;
            new Rand6 = random(5)+1;
            new Rand7 = minrand(15000, 20000);

            AirDropEnum2[Rand][Item1] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item2] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item3] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item4] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item5] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item6] = GetItemRandomAir(Nivel);
            AirDropEnum2[Rand][Item7] = 45; //dinheiro

            AirDropEnum2[Rand][QItem1] = Rand1;
            AirDropEnum2[Rand][QItem2] = Rand2;
            AirDropEnum2[Rand][QItem3] = Rand3;
            AirDropEnum2[Rand][QItem4] = Rand4;
            AirDropEnum2[Rand][QItem5] = Rand5;
            AirDropEnum2[Rand][QItem6] = Rand6;
            AirDropEnum2[Rand][QItem7] = Rand7;
        }
    }
    return true;
}
stock GetItemRandomAir(Nivel){
    /*new strf[100]; format(strf, sizeof strf, "DEBUG - GetItemRandomAir [%d] Chamado.", Nivel);
    SendClientMessageToAll(-1, strf);*/
    
    new randitem, itemreturn = -1;
    if(Nivel == 1){
        randitem = random(14);
        switch(randitem)
        {
            case 0: itemreturn = 4;
            case 1: itemreturn = 5;
            case 2: itemreturn = 6;
            case 3: itemreturn = 7;
            case 4: itemreturn = 8;
            case 5: itemreturn = 9;
            case 6: itemreturn = 10;
            case 7: itemreturn = 16;
            case 8: itemreturn = 17;
            case 9: itemreturn = 18;
            case 10: itemreturn = 50;
            case 11: itemreturn = 47;
            case 12: itemreturn = 53;
            case 13: itemreturn = 61;
        }
    }
    else if(Nivel == 2){
        randitem = random(13);
        switch(randitem)
        {
            case 0: itemreturn = 4;
            case 1: itemreturn = 5;
            case 2: itemreturn = 6;
            case 3: itemreturn = 18;
            case 4: itemreturn = 20;
            case 5: itemreturn = 72;
            case 6: itemreturn = 73;
            case 7: itemreturn = 74;
            case 8: itemreturn = 75;
            case 9: itemreturn = 76;
            case 10: itemreturn = 77;
            case 11: itemreturn = 78;
            case 12: itemreturn = 61;
        }
    }
    else if(Nivel == 3){

        randitem = random(7);
        switch(randitem)
        {
            case 0: itemreturn = 4;
            case 1: itemreturn = 18;
            case 2: itemreturn = 48;
            case 3: itemreturn = 52;
            case 4: itemreturn = 78;
            case 5: itemreturn = 54;
            case 6: itemreturn = 50;
        }
        
    }
    else if(Nivel == 4){
        randitem = random(9);
        switch(randitem)
        {
            case 0: itemreturn = 72;
            case 1: itemreturn = 73;
            case 2: itemreturn = 74;
            case 3: itemreturn = 75;
            case 4: itemreturn = 76;
            case 5: itemreturn = 77;
            case 6: itemreturn = 35;
            case 7: itemreturn = 68;
            case 8: itemreturn = 80;
        }
    }
    return itemreturn;
}



public OnPlayerEnterCheckpoint(playerid)
{
	DisablePlayerCheckpoint(playerid);
	return 1;
}

/*GetDiadaSemana(day=0, month=0, year=0)
{
    if (!day)
        getdate(year, month, day);

    new weekday_str[20], j, e;

    if (month <= 2)
    {
        month += 12;
        --year;
    }

    j = year % 100;
    e = year / 100;

    switch ((day + (month+1)*26/10 + j + j/4 + e/4 - 2*e) % 7)
    {
        case 0:
		{
			weekday_str = "S*bado";
			ediadedrop = 0;
		}
        case 1:
		{
			weekday_str = "Domingo";
			ediadedrop = 1;
		}
        case 2:
		{
			ediadedrop = 0;
			weekday_str = "Segunda-feira";
		}
        case 3:
		{
			ediadedrop = 2;
			weekday_str = "Ter*a-feira";
		}
        case 4:
        {
	        ediadedrop = 0;
			weekday_str = "Quarta-feira";
		}
        case 5:
		{
			weekday_str = "Quinta-feira";
			ediadedrop = 3;
		}
        case 6:
		{
			weekday_str = "Sexta-feira";
			ediadedrop = 0;
	    }
	}
    return weekday_str;
}*/
stock ShowTextInfect(playerid)
{
    PlayerTextDrawSetString(playerid, DosInfect[playerid][0], "-0_vida");
    PlayerTextDrawShow(playerid, DosInfect[playerid][0]);
    PlayerTextDrawShow(playerid, DosInfect[playerid][1]);
    PlayerTextDrawShow(playerid, DosInfect[playerid][2]);
    return 1;
}
stock HideTextInfect(playerid)
{
    PlayerTextDrawSetString(playerid, DosInfect[playerid][0], "-0_vida");
    PlayerTextDrawHide(playerid, DosInfect[playerid][0]);
    PlayerTextDrawHide(playerid, DosInfect[playerid][1]);
    PlayerTextDrawHide(playerid, DosInfect[playerid][2]);
    return 1;
}
stock createrank(rankname[])
{

	new string[100];
	format(string, sizeof string, Pasta_Ranks, rankname);

	if(!DOF2_FileExists(string)){
		DOF2_CreateFile(string);
	    //position 1
	    DOF2_SetString(string, "name1", "Ningu*m");
	    DOF2_SetInt(string, "points1", 0);
	    //position 2
	    DOF2_SetString(string, "name2", "Ningu*m");
	    DOF2_SetInt(string, "points2", 0);
	    //position 3
	    DOF2_SetString(string, "name3", "Ningu*m");
	    DOF2_SetInt(string, "points3", 0);
	    //position 4
	    DOF2_SetString(string, "name4", "Ningu*m");
	    DOF2_SetInt(string, "points4", 0);
		//position 5
	    DOF2_SetString(string, "name5", "Ningu*m");
	    DOF2_SetInt(string, "points5", 0);
	    //position 6
	    DOF2_SetString(string, "name6", "Ningu*m");
	    DOF2_SetInt(string, "points6", 0);
	    //position 7
	    DOF2_SetString(string, "name7", "Ningu*m");
	    DOF2_SetInt(string, "points7", 0);
	    //position 8
	    DOF2_SetString(string, "name8", "Ningu*m");
	    DOF2_SetInt(string, "points8", 0);
	    //position 9
	    DOF2_SetString(string, "name9", "Ningu*m");
	    DOF2_SetInt(string, "points9", 0);
	    //position 10
	    DOF2_SetString(string, "name10", "Ningu*m");
	    DOF2_SetInt(string, "points10", 0);
	    //position 11 - EXTRA
	    DOF2_SetString(string, "name11", "Ningu*m");
	    DOF2_SetInt(string, "points11", 0);
	    //save
	    DOF2_SaveFile();

	   // printf("#rank %s criado com sucesso", rankname);

	}
	return 1;
}
stock resetrank(rankname[])
{
	new string[100];
	format(string, sizeof string, Pasta_Ranks, rankname);
	if(DOF2_FileExists(string)){

	    DOF2_SetString(string, 		"name1", "Ningu*m");
	    DOF2_SetInt(string, 		"points1", 0);
	    DOF2_SetString(string, 		"name2", "Ningu*m");
	    DOF2_SetInt(string, 		"points2", 0);
	    DOF2_SetString(string, 		"name3", "Ningu*m");
	    DOF2_SetInt(string, 		"points3", 0);
	    DOF2_SetString(string, 		"name4", "Ningu*m");
	    DOF2_SetInt(string, 		"points4", 0);
	    DOF2_SetString(string, 		"name5", "Ningu*m");
	    DOF2_SetInt(string, 		"points5", 0);
	    DOF2_SetString(string, 		"name6", "Ningu*m");
	    DOF2_SetInt(string, 		"points6", 0);
	    DOF2_SetString(string, 		"name7", "Ningu*m");
	    DOF2_SetInt(string, 		"points7", 0);
	    DOF2_SetString(string, 		"name8", "Ningu*m");
	    DOF2_SetInt(string, 		"points8", 0);
	    DOF2_SetString(string, 		"name9", "Ningu*m");
	    DOF2_SetInt(string, 		"points9", 0);
	    DOF2_SetString(string, 		"name10", "Ningu*m");
	    DOF2_SetInt(string, 		"points10", 0);
	    DOF2_SetString(string, "name11", "Ningu*m");
	    DOF2_SetInt(string, "points11", 0);
		DOF2_SaveFile();
    }
	return 1;
}

stock deleterank(rankname[])
{
	new string[100];
	format(string, sizeof string, Pasta_Ranks, rankname);

	if(DOF2_FileExists(string)){

		DOF2_RemoveFile(string);
		printf("#rank %s foi deletado com sucesso", rankname);
	}
	return 1;
}


stock getrank(rankname[], description[])
{

	new buffer[600], file[100], string[100];

    format(file, sizeof file, Pasta_Ranks, rankname);

	//rank 1
    format(string, sizeof string, "{6cb827}1-%s | %d | %s\n", DOF2_GetString(file, "name1"), DOF2_GetInt(file, "points1"), description);
    strcat(buffer, string);
	//rank 2
    format(string, sizeof string, "{6cb827}2-%s | %d | %s\n", DOF2_GetString(file, "name2"), DOF2_GetInt(file, "points2"), description);
    strcat(buffer, string);
	//rank 3
    format(string, sizeof string, "{6cb827}3-%s | %d | %s\n", DOF2_GetString(file, "name3"), DOF2_GetInt(file, "points3"), description);
    strcat(buffer, string);
	//rank 4
    format(string, sizeof string, "{6cb827}4-%s | %d | %s\n", DOF2_GetString(file, "name4"), DOF2_GetInt(file, "points4"), description);
    strcat(buffer, string);
	//rank 5
    format(string, sizeof string, "{6cb827}5-%s | %d | %s\n", DOF2_GetString(file, "name5"), DOF2_GetInt(file, "points5"), description);
    strcat(buffer, string);
	//rank 6
    format(string, sizeof string, "{6cb827}6-%s | %d | %s\n", DOF2_GetString(file, "name6"), DOF2_GetInt(file, "points6"), description);
    strcat(buffer, string);
	//rank 7
    format(string, sizeof string, "{6cb827}7-%s | %d | %s\n", DOF2_GetString(file, "name7"), DOF2_GetInt(file, "points7"), description);
    strcat(buffer, string);
	//rank 8
    format(string, sizeof string, "{6cb827}8-%s | %d | %s\n", DOF2_GetString(file, "name8"), DOF2_GetInt(file, "points8"), description);
    strcat(buffer, string);
	//rank 9
    format(string, sizeof string, "{6cb827}9-%s | %d | %s\n", DOF2_GetString(file, "name9"), DOF2_GetInt(file, "points9"), description);
    strcat(buffer, string);
	//rank 10
    format(string, sizeof string, "{6cb827}10-%s | %d | %s\n", DOF2_GetString(file, "name10"), DOF2_GetInt(file, "points10"), description);
    strcat(buffer, string);

	return buffer;
}

stock FixSpaces2(rankname[])
{
	new file[100], bool:mudanca=false;

    format(file, sizeof file, Pasta_Ranks, rankname);



	new
		name1[50],points1,
		name2[50],points2,
		name3[50],points3,
		name4[50],points4,
		name5[50],points5,
		name6[50],points6,
		name7[50],points7,
		name8[50],points8,
		name9[50],points9,
		name10[50],points10,
		name11[50],points11;

	format(name1, sizeof name1, DOF2_GetString(file, "name1"));
	points1 = DOF2_GetInt(file, "points1");
	format(name2, sizeof name2, DOF2_GetString(file, "name2"));
	points2 = DOF2_GetInt(file, "points2");
	format(name3, sizeof name3, DOF2_GetString(file, "name3"));
	points3 = DOF2_GetInt(file, "points3");
	format(name4, sizeof name4, DOF2_GetString(file, "name4"));
	points4 = DOF2_GetInt(file, "points4");
	format(name5, sizeof name5, DOF2_GetString(file, "name5"));
	points5 = DOF2_GetInt(file, "points5");
	format(name6, sizeof name6, DOF2_GetString(file, "name6"));
	points6 = DOF2_GetInt(file, "points6");
	format(name7, sizeof name7, DOF2_GetString(file, "name7"));
	points7 = DOF2_GetInt(file, "points7");
	format(name8, sizeof name8, DOF2_GetString(file, "name8"));
	points8 = DOF2_GetInt(file, "points8");
	format(name9, sizeof name9, DOF2_GetString(file, "name9"));
	points9 = DOF2_GetInt(file, "points9");
	format(name10, sizeof name10, DOF2_GetString(file, "name10"));
	points10 = DOF2_GetInt(file, "points10");
	format(name11, sizeof name11, DOF2_GetString(file, "name11"));
	points11 = DOF2_GetInt(file, "points11");


	if(points1 < 1)
	{
	    mudanca=true;
		format(name1, sizeof name1, name2);points1=points2;
		format(name2, sizeof name2, name3);points2=points3;
		format(name3, sizeof name3, name4);points3=points4;
		format(name4, sizeof name4, name5);points4=points5;
		format(name5, sizeof name5, name6);points5=points6;
		format(name6, sizeof name6, name7);points6=points7;
		format(name7, sizeof name7, name8);points7=points8;
		format(name8, sizeof name8, name9);points8=points9;
		format(name9, sizeof name9, name10);points9=points10;
		format(name10, sizeof name10, name11);points10=points11;
	}
	if(points2 < 1)
	{
	    mudanca=true;
		format(name2, sizeof name2, name3);points2=points3;
		format(name3, sizeof name3, name4);points3=points4;
		format(name4, sizeof name4, name5);points4=points5;
		format(name5, sizeof name5, name6);points5=points6;
		format(name6, sizeof name6, name7);points6=points7;
		format(name7, sizeof name7, name8);points7=points8;
		format(name8, sizeof name8, name9);points8=points9;
		format(name9, sizeof name9, name10);points9=points10;
		format(name10, sizeof name10, name11);points10=points11;
	}
	if(points3 < 1)
	{
	    mudanca=true;
		format(name3, sizeof name3, name4);points3=points4;
		format(name4, sizeof name4, name5);points4=points5;
		format(name5, sizeof name5, name6);points5=points6;
		format(name6, sizeof name6, name7);points6=points7;
		format(name7, sizeof name7, name8);points7=points8;
		format(name8, sizeof name8, name9);points8=points9;
		format(name9, sizeof name9, name10);points9=points10;
		format(name10, sizeof name10, name11);points10=points11;
	}
	if(points4 < 1)
	{
	    mudanca=true;
		format(name4, sizeof name4, name5);points4=points5;
		format(name5, sizeof name5, name6);points5=points6;
		format(name6, sizeof name6, name7);points6=points7;
		format(name7, sizeof name7, name8);points7=points8;
		format(name8, sizeof name8, name9);points8=points9;
		format(name9, sizeof name9, name10);points9=points10;
		format(name10, sizeof name10, name11);points10=points11;
	}
	if(points5 < 1)
	{
	    mudanca=true;
		format(name5, sizeof name5, name6);points5=points6;
		format(name6, sizeof name6, name7);points6=points7;
		format(name7, sizeof name7, name8);points7=points8;
		format(name8, sizeof name8, name9);points8=points9;
		format(name9, sizeof name9, name10);points9=points10;
		format(name10, sizeof name10, name11);points10=points11;
	}
	if(points6 < 1)
	{
	    mudanca=true;
		format(name6, sizeof name6, name7);points6=points7;
		format(name7, sizeof name7, name8);points7=points8;
		format(name8, sizeof name8, name9);points8=points9;
		format(name9, sizeof name9, name10);points9=points10;
		format(name10, sizeof name10, name11);points10=points11;
	}
	if(points7 < 1)
	{
	    mudanca=true;
		format(name7, sizeof name7, name8);points7=points8;
		format(name8, sizeof name8, name9);points8=points9;
		format(name9, sizeof name9, name10);points9=points10;
		format(name10, sizeof name10, name11);points10=points11;
	}
	if(points8 < 1)
	{
	    mudanca=true;
		format(name8, sizeof name8, name9);points8=points9;
		format(name9, sizeof name9, name10);points9=points10;
		format(name10, sizeof name10, name11);points10=points11;
	}
	if(points9 < 1)
	{
	    mudanca=true;
		format(name9, sizeof name9, name10);points9=points10;
		format(name10, sizeof name10, name11);points10=points11;
	}
	if(points10 < 1)
	{
	    mudanca=true;
		format(name10, sizeof name10, name11);points10=points11;
	}

	if(mudanca)
	{
	    DOF2_SetString(file, 		"name1", 	name1);
	    DOF2_SetInt(file, 		"points1", 	points1);
		DOF2_SetString(file, 		"name2", 	name2);
	    DOF2_SetInt(file, 		"points2", 	points2);
		DOF2_SetString(file, 		"name3", 	name3);
	    DOF2_SetInt(file, 		"points3", 	points3);
		DOF2_SetString(file, 		"name4", 	name4);
	    DOF2_SetInt(file, 		"points4", 	points4);
		DOF2_SetString(file, 		"name5", 	name5);
	    DOF2_SetInt(file, 		"points5", 	points5);
		DOF2_SetString(file, 		"name6", 	name6);
	    DOF2_SetInt(file, 		"points6", 	points6);
		DOF2_SetString(file, 		"name7", 	name7);
	    DOF2_SetInt(file, 		"points7", 	points7);
		DOF2_SetString(file, 		"name8", 	name8);
	    DOF2_SetInt(file, 		"points8", 	points8);
		DOF2_SetString(file, 		"name9", 	name9);
	    DOF2_SetInt(file, 		"points9", 	points9);
		DOF2_SetString(file, 		"name10", 	name10);
	    DOF2_SetInt(file, 		"points10", 	points10);
		DOF2_SaveFile();
	}
	return 1;
}


stock removenamerank(rankname[], removename[])
{
	new file[100], name[15], points[15], bool:temnick=false;

    format(file, sizeof file, Pasta_Ranks, rankname);

	for(new i=1; i < 11; i++)
	{
		format(name, sizeof name, "name%d", i);
	    format(points, sizeof points, "points%d", i);

		if(!strcmp(removename, DOF2_GetString(file, name), true)){

	        temnick=true;
		    DOF2_SetString(file, 		name, "Ningu*m");
		    DOF2_SetInt(file, 			points, 0);
		    break;
	    }
	}
	if(temnick){
		DOF2_SaveFile();
	}

	return 1;
}

stock checkrank(rankname[], name[], points)
{

	new string[100];

    format(string, sizeof string, Pasta_Ranks, rankname);

    removenamerank(rankname, name);

	new
		name1[50],points1,
		name2[50],points2,
		name3[50],points3,
		name4[50],points4,
		name5[50],points5,
		name6[50],points6,
		name7[50],points7,
		name8[50],points8,
		name9[50],points9,
		name10[50],points10,
		name11[50],points11;

	format(name1, sizeof name1, DOF2_GetString(string, "name1"));
	points1 = DOF2_GetInt(string, "points1");
	format(name2, sizeof name2, DOF2_GetString(string, "name2"));
	points2 = DOF2_GetInt(string, "points2");
	format(name3, sizeof name3, DOF2_GetString(string, "name3"));
	points3 = DOF2_GetInt(string, "points3");
	format(name4, sizeof name4, DOF2_GetString(string, "name4"));
	points4 = DOF2_GetInt(string, "points4");
	format(name5, sizeof name5, DOF2_GetString(string, "name5"));
	points5 = DOF2_GetInt(string, "points5");
	format(name6, sizeof name6, DOF2_GetString(string, "name6"));
	points6 = DOF2_GetInt(string, "points6");
	format(name7, sizeof name7, DOF2_GetString(string, "name7"));
	points7 = DOF2_GetInt(string, "points7");
	format(name8, sizeof name8, DOF2_GetString(string, "name8"));
	points8 = DOF2_GetInt(string, "points8");
	format(name9, sizeof name9, DOF2_GetString(string, "name9"));
	points9 = DOF2_GetInt(string, "points9");
	format(name10, sizeof name10, DOF2_GetString(string, "name10"));
	points10 = DOF2_GetInt(string, "points10");
	format(name11, sizeof name11, DOF2_GetString(string, "name11"));
	points11 = DOF2_GetInt(string, "points11");

    if(points > points1)
	{
        DOF2_SetString(string, 		"name2", 	name1);
	    DOF2_SetInt(string, 		"points2", 	points1);
        DOF2_SetString(string, 		"name3", 	name2);
	    DOF2_SetInt(string, 		"points3", 	points2);
        DOF2_SetString(string, 		"name4", 	name3);
	    DOF2_SetInt(string, 		"points4", 	points3);
        DOF2_SetString(string, 		"name5", 	name4);
	    DOF2_SetInt(string, 		"points5", 	points4);
        DOF2_SetString(string, 		"name6", 	name5);
	    DOF2_SetInt(string, 		"points6", 	points5);
        DOF2_SetString(string, 		"name7", 	name6);
	    DOF2_SetInt(string, 		"points7", 	points6);
        DOF2_SetString(string, 		"name8", 	name7);
	    DOF2_SetInt(string, 		"points8", 	points7);
        DOF2_SetString(string, 		"name9", 	name8);
	    DOF2_SetInt(string, 		"points9", 	points8);
        DOF2_SetString(string, 		"name10", 	name9);
	    DOF2_SetInt(string, 		"points10",	points9);

		//set rank
        DOF2_SetString(string, 		"name1", 	name);
	    DOF2_SetInt(string, 		"points1", 	points);

		//save
		DOF2_SaveFile();
    }
    else if(points > points2)
	{
	    //removenamerank(rankname, name);
        DOF2_SetString(string, 		"name3", 	name2);
	    DOF2_SetInt(string, 		"points3", 	points2);
        DOF2_SetString(string, 		"name4", 	name3);
	    DOF2_SetInt(string, 		"points4", 	points3);
        DOF2_SetString(string, 		"name5", 	name4);
	    DOF2_SetInt(string, 		"points5", 	points4);
        DOF2_SetString(string, 		"name6", 	name5);
	    DOF2_SetInt(string, 		"points6", 	points5);
        DOF2_SetString(string, 		"name7", 	name6);
	    DOF2_SetInt(string, 		"points7", 	points6);
        DOF2_SetString(string, 		"name8", 	name7);
	    DOF2_SetInt(string, 		"points8", 	points7);
        DOF2_SetString(string, 		"name9", 	name8);
	    DOF2_SetInt(string, 		"points9", 	points8);
        DOF2_SetString(string, 		"name10", 	name9);
	    DOF2_SetInt(string, 		"points10",	points9);

        DOF2_SetString(string, 		"name2", 	name);
	    DOF2_SetInt(string, 		"points2", 	points);

		//save
		DOF2_SaveFile();
    }
    else if(points > points3)
	{
	    //removenamerank(rankname, name);
        DOF2_SetString(string, 		"name4", 	name3);
	    DOF2_SetInt(string, 		"points4", 	points3);
        DOF2_SetString(string, 		"name5", 	name4);
	    DOF2_SetInt(string, 		"points5", 	points4);
        DOF2_SetString(string, 		"name6", 	name5);
	    DOF2_SetInt(string, 		"points6", 	points5);
        DOF2_SetString(string, 		"name7", 	name6);
	    DOF2_SetInt(string, 		"points7", 	points6);
        DOF2_SetString(string, 		"name8", 	name7);
	    DOF2_SetInt(string, 		"points8", 	points7);
        DOF2_SetString(string, 		"name9", 	name8);
	    DOF2_SetInt(string, 		"points9", 	points8);
        DOF2_SetString(string, 		"name10", 	name9);
	    DOF2_SetInt(string, 		"points10",	points9);

        DOF2_SetString(string, 		"name3", 	name);
	    DOF2_SetInt(string, 		"points3", 	points);

		//save
		DOF2_SaveFile();
    }
    else if(points > points4)
	{
	    //removenamerank(rankname, name);
        DOF2_SetString(string, 		"name5", 	name4);
	    DOF2_SetInt(string, 		"points5", 	points4);
        DOF2_SetString(string, 		"name6", 	name5);
	    DOF2_SetInt(string, 		"points6", 	points5);
        DOF2_SetString(string, 		"name7", 	name6);
	    DOF2_SetInt(string, 		"points7", 	points6);
        DOF2_SetString(string, 		"name8", 	name7);
	    DOF2_SetInt(string, 		"points8", 	points7);
        DOF2_SetString(string, 		"name9", 	name8);
	    DOF2_SetInt(string, 		"points9", 	points8);
        DOF2_SetString(string, 		"name10", 	name9);
	    DOF2_SetInt(string, 		"points10",	points9);

        DOF2_SetString(string, 		"name4", 	name);
	    DOF2_SetInt(string, 		"points4", 	points);

		//save
		DOF2_SaveFile();
    }
    else if(points > points5)
	{
	    //removenamerank(rankname, name);
        DOF2_SetString(string, 		"name6", 	name5);
	    DOF2_SetInt(string, 		"points6", 	points5);
        DOF2_SetString(string, 		"name7", 	name6);
	    DOF2_SetInt(string, 		"points7", 	points6);
        DOF2_SetString(string, 		"name8", 	name7);
	    DOF2_SetInt(string, 		"points8", 	points7);
        DOF2_SetString(string, 		"name9", 	name8);
	    DOF2_SetInt(string, 		"points9", 	points8);
        DOF2_SetString(string, 		"name10", 	name9);
	    DOF2_SetInt(string, 		"points10",	points9);

        DOF2_SetString(string, 		"name5", 	name);
	    DOF2_SetInt(string, 		"points5", 	points);

		//save
		DOF2_SaveFile();
    }
    else if(points > points6)
	{
	    //removenamerank(rankname, name);
        DOF2_SetString(string, 		"name7", 	name6);
	    DOF2_SetInt(string, 		"points7", 	points6);
        DOF2_SetString(string, 		"name8", 	name7);
	    DOF2_SetInt(string, 		"points8", 	points7);
        DOF2_SetString(string, 		"name9", 	name8);
	    DOF2_SetInt(string, 		"points9", 	points8);
        DOF2_SetString(string, 		"name10", 	name9);
	    DOF2_SetInt(string, 		"points10",	points9);

        DOF2_SetString(string, 		"name6", 	name);
	    DOF2_SetInt(string, 		"points6", 	points);

		//save
		DOF2_SaveFile();
    }
    else if(points > points6)
	{
	    //removenamerank(rankname, name);
        DOF2_SetString(string, 		"name7", 	name6);
	    DOF2_SetInt(string, 		"points7", 	points6);
        DOF2_SetString(string, 		"name8", 	name7);
	    DOF2_SetInt(string, 		"points8", 	points7);
        DOF2_SetString(string, 		"name9", 	name8);
	    DOF2_SetInt(string, 		"points9", 	points8);
        DOF2_SetString(string, 		"name10", 	name9);
	    DOF2_SetInt(string, 		"points10",	points9);

        DOF2_SetString(string, 		"name6", 	name);
	    DOF2_SetInt(string, 		"points6", 	points);

		//save
		DOF2_SaveFile();
    }
    else if(points > points7)
	{
	    //removenamerank(rankname, name);
        DOF2_SetString(string, 		"name8", 	name7);
	    DOF2_SetInt(string, 		"points8", 	points7);
        DOF2_SetString(string, 		"name9", 	name8);
	    DOF2_SetInt(string, 		"points9", 	points8);
        DOF2_SetString(string, 		"name10", 	name9);
	    DOF2_SetInt(string, 		"points10",	points9);

        DOF2_SetString(string, 		"name7", 	name);
	    DOF2_SetInt(string, 		"points7", 	points);

		//save
		DOF2_SaveFile();
    }
    else if(points > points8)
	{
	    //removenamerank(rankname, name);
        DOF2_SetString(string, 		"name9", 	name8);
	    DOF2_SetInt(string, 		"points9", 	points8);
        DOF2_SetString(string, 		"name10", 	name9);
	    DOF2_SetInt(string, 		"points10",	points9);

        DOF2_SetString(string, 		"name8", 	name);
	    DOF2_SetInt(string, 		"points8", 	points);

		//save
		DOF2_SaveFile();
    }
    else if(points > points9)
	{
        //removenamerank(rankname, name);
        DOF2_SetString(string, 		"name10", 	name9);
	    DOF2_SetInt(string, 		"points10",	points9);

        DOF2_SetString(string, 		"name9", 	name);
	    DOF2_SetInt(string, 		"points9", 	points);

		//save
		DOF2_SaveFile();
    }
    else if(points > points10)
	{
	    //removenamerank(rankname, name);
        DOF2_SetString(string, 		"name10", 	name);
	    DOF2_SetInt(string, 		"points10", points);
		//save
		DOF2_SaveFile();
    }
    //Extra
    else if(points > points11)
	{
	    //removenamerank(rankname, name);
        DOF2_SetString(string, 		"name11", 	name);
	    DOF2_SetInt(string, 		"points11", points);
		//save
		DOF2_SaveFile();
    }
    FixSpaces2(rankname);
	return 1;
}
stock GetWeaponModel(weaponid)
{
    switch(weaponid)
    {
        case 1:
            return 331;

        case 2..8:
            return weaponid+331;

        case 9:
            return 341;

        case 10..15:
            return weaponid+311;

        case 16..18:
            return weaponid+326;

        case 22..29:
            return weaponid+324;

        case 30,31:
            return weaponid+325;

        case 32:
            return 372;

        case 33..45:
            return weaponid+324;

        case 46:
            return 371;
    }
    return 0;
}

stock IsAHeli(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
	    case 548, 425, 417, 487, 488, 497, 563:return 1;
	}
	return 0;
}
stock GetPlayerSpeed(playerid,bool:kmh2)
{
    new Float:Vx,Float:Vy,Float:Vz,Float:rtn;
    if(IsPlayerInAnyVehicle(playerid))
	{
		GetVehicleVelocity(GetPlayerVehicleID(playerid),Vx,Vy,Vz);
		rtn = floatsqroot(floatpower(floatabs(Vx),2)+floatpower(floatabs(Vy),2)+floatpower(floatabs(Vz),2));
	}
	else
	{
		GetPlayerVelocity(playerid,Vx,Vy,Vz);
		rtn = floatsqroot(floatpower(floatabs(Vx),2)+floatpower(floatabs(Vy),2)+floatpower(floatabs(Vz),2));
	}
    return kmh2?floatround(rtn * 100 * 1.61):floatround(rtn * 100);
}

CallBack:ZoneDano(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(IsPlayerInArea(playerid, 35.03363, 1763.359, 408.7256, 2125.373))
        {
            if(Equipado[playerid][MASCARA] == 1) return 1;
            if(Equipado[playerid][MASCARA] == 0)
            {
                Decrease_Health(playerid, 20);
                SendClientMessage(playerid, Vermelho, "</Area-51> Voce esta tomando muito dano por nao possuir uma mascara.");
            }
        }
    }
	return 1;
}

stock PlayerInPrivateArea(playerid, Float:minX,Float:minY,Float:maxX,Float:maxY, Float:zPos)
{
    new Float:pX,Float:pY,Float:pZ;
    GetPlayerPos(playerid,pX,pY,pZ);

    if(pZ > zPos) return 0;
    if(pX >= minX && pX <= maxX && pY >= minY && pY <= maxY) return 1;
    return 0;
}

//forward IsPlayerInArea(playerid,Float:minX,Float:minY,Float:maxX,Float:maxY);
stock IsPlayerInArea(playerid,Float:minX,Float:minY,Float:maxX,Float:maxY)
{
    new Float:pX,Float:pY,Float:pZ;
    GetPlayerPos(playerid,pX,pY,pZ);
    if(pX >= minX && pX <= maxX && pY >= minY && pY <= maxY) return 1;
    return 0;
}
CallBack:abastecendogalao(playerid)
{
	ClearAnimations(playerid, 1);
	AddItem(playerid, 55, 1);
	//RemovePlayerAttachedObject(playerid, SlotVariados);
	encheG[playerid] = false;
	GameTextForPlayer(playerid, "~g~Galao Cheio", 1000, 4);
    TogglePlayerControllable(playerid,1);
	return 1;
}
CallBack:TempoConectar(playerid)
{
    SendClientMessage(playerid, Verde, "INFO: Anti Spawn-kill desativado.");
    TogglePlayerControllable(playerid, true);
    SetPlayerHealthEx(playerid, pInfo[playerid][pHealth]);
    SetPlayerArmourEx(playerid, pInfo[playerid][pArmour]);
	conectando[playerid] = false;
	return 1;
}
/*MOCHILA 1 - ID 0
MOCHILA 2 - ID 30
MOCHILA 3 - ID 2 
MOCHILA 4 - ID 77*/
forward BleedPlayer(playerid);

CallBack:OnPlayerUseItem(playerid, ItemI)
{
	/* ============ [ Mochilas ] ============*/
	if(ItemI == 0)//
	{
        if(pInfo[playerid][pBackpack] > 12) return SendClientMessage(playerid, COR_CINZA, "* Voce ja possui uma mochila maior.");
        if(pInfo[playerid][pBackpack] == 12) return SendClientMessage(playerid, COR_CINZA, "* Voca ja esta com mochila.");
        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Equipando....",1000,3);
        pInfo[playerid][pBackpack] = 12;
        SetPlayerObject(playerid);
        RemoveInvItem(playerid);
	}
    if(ItemI == 30)//mochila 2 
	{
		if(pInfo[playerid][pBackpack] > 20) return SendClientMessage(playerid, COR_CINZA, "* Voce ja possui uma mochila maior.");
        if(pInfo[playerid][pBackpack] == 20) return SendClientMessage(playerid, COR_CINZA, "* Voca ja esta com mochila.");
        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Equipando....",1000,3);
        pInfo[playerid][pBackpack] = 20;
        SetPlayerObject(playerid);
        RemoveInvItem(playerid);
	}
	if(ItemI == 2)//Mochila grande
	{
        if(pInfo[playerid][pBackpack] > 30) return SendClientMessage(playerid, COR_CINZA, "* Voce ja possui uma mochila maior.");
        if(pInfo[playerid][pBackpack] == 30) return SendClientMessage(playerid, COR_CINZA, "* Voca ja esta com mochila.");
        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Equipando....",1000,3);
        pInfo[playerid][pBackpack] = 30;
        SetPlayerObject(playerid);
        RemoveInvItem(playerid);
	}
    if(ItemI == 78)
    {
        if(pInfo[playerid][pBackpack] > 40) return SendClientMessage(playerid, COR_CINZA, "* Voce ja possui uma mochila maior.");
        if(pInfo[playerid][pBackpack] == 40) return SendClientMessage(playerid, COR_CINZA, "* Voca ja esta com mochila.");
        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Equipando....",1000,3);
        pInfo[playerid][pBackpack] = 40;
        SetPlayerObject(playerid);
        RemoveInvItem(playerid);
    }

    if(ItemI == 1)//chave combinada
	{
        if(Equipado[playerid][CHAVE_COMBINADA] == 0)
        {
            SendClientMessage(playerid, Verde, "* Chave Combinada equipada com sucesso.");
            SendClientMessage(playerid, Vermelho, "OBS: E preciso desta chave e mais [Chave de fenda] para arrancar o motor.");
            SetPlayerAttachedObject(playerid, SlotFerramenta_2, 19627, 5, 0.0799, 0.0389, -0.0150, 74.1000, -11.3000, -85.3999, 1.0000, 1.2350, 1.1270, 0xFFFFFFFF, 0xFFFFFFFF); // Wrench1 attached to the Left Hand of 
            Equipado[playerid][CHAVE_COMBINADA]=1;
            ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
            GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Equipando....",1000,3);
            RemoveInvItem(playerid);
        }else{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta equipado com uma chave combinada.");
        }
    }
	if(ItemI == 60)//marreta por enquanto
	{
        if(Equipado[playerid][CHAVE_DE_FENDA] == 1 || Equipado[playerid][MARTELO] == 1 || Equipado[playerid][PE_DE_CABRA] == 1)
        {
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Algum Objeto ja equipado: Martelo, Chave de fenda, Galao Vazio ou Pe de cabra.");
            SendClientMessage(playerid, Verde, "OBS: /gobjeto para guarda-las.");
            return 1;
        }
        if(Equipado[playerid][MARRETA] == 0)
        {
            SendClientMessage(playerid, Verde, "* Marreta equipada com sucesso. Use para quebrar Pedras.");
            SetPlayerAttachedObject(playerid, SlotFerramenta_1, 19631, 6, 0.0419, 0.0519, 0.1179, 0.0000, -99.6999, 96.3000, 1.0000, 1.0000, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF); // SledgeHammer1 attached to the Right Hand of 
            Equipado[playerid][MARRETA]=1;
            ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
            GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Equipando....",1000,3);
            RemoveInvItem(playerid);
        }else{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta equipado com uma marreta.");
        }
	}
    /* ========== [ Items Medicos ] ==========*/
    if(ItemI == 4)//Medkit
	{
        if(pInfo[playerid][pHealth] >= 100) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta com a vida cheia.");
        SetTimerEx( "delyanaimacao", 100, false, "i", playerid);
        Curando[playerid] = 1;
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~~h~Curando....",10000,3);
        SetTimerEx( "Curandocura", 4000, false, "ii", playerid, 100);
		RemoveInvItem(playerid);
	}

    if(ItemI == 5)//Curativo
	{
        if(pInfo[playerid][pHealth] >= 100) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta com a vida cheia.");
        SetTimerEx( "delyanaimacao", 100, false, "i", playerid);
        Curando[playerid] = 1;
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~~h~Curando....",10000,3);
        SetTimerEx( "Curandocura", 4000, false, "ii", playerid, 15);
		RemoveInvItem(playerid);
	}
	if(ItemI == 57)//Molotov
	{
		GivePlayerWeaponEx(playerid, 18, 1);
		RemoveInvItem(playerid);
	}

	if(ItemI == 6)//Morfina
	{
        if(pInfo[playerid][pHealth] >= 100) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta com a vida cheia.");
        SetTimerEx( "delyanaimacao", 100, false, "i", playerid);
        Curando[playerid] = 1;
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~~h~Curando....",10000,3);
        SetTimerEx( "Curandocura", 4000, false, "ii", playerid, 15);
		RemoveInvItem(playerid);
	}

	if(ItemI == 7)//Analgesico
	{
        if(pInfo[playerid][pHealth] >= 100) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta com a vida cheia.");
		SetPlayerDrunkLevel(playerid, 0);
        SetTimerEx("delyanaimacao", 100, false, "i", playerid);
        Curando[playerid] = 1;
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~~h~Curando....",10000,3);
        SetTimerEx( "Curandocura", 4000, false, "ii", playerid, 20);
		RemoveInvItem(playerid);
	}

	if(ItemI == 8)//Bolsa de sangue
	{
        if(pInfo[playerid][pHealth] >= 100) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce esta com a vida cheia."); 
        SetTimerEx( "delyanaimacao", 100, false, "i", playerid);
        Curando[playerid] = 1;
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~~h~Curando....",10000,3);
        SetTimerEx( "Curandocura", 4000, false, "ii", playerid, 50);
		RemoveInvItem(playerid);
	}

	/* ============= [ Bebidas ] =============*/
	if(ItemI == 9)//Leite
	{
        if(pInfo[playerid][pSede] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com sede");
        pInfo[playerid][pSede] += 8;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~b~~h~Bebendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 10)//Garrafa com agua
	{
        if(pInfo[playerid][pSede] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com sede");
        pInfo[playerid][pSede] += 30;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~b~~h~Bebendo....",1000,3);
        AddItem(playerid, 3, 1);
		RemoveInvItem(playerid);
	}

	if(ItemI == 11)//Fanta
	{
        if(pInfo[playerid][pSede] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com sede");
        pInfo[playerid][pSede] += 10;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~b~~h~Bebendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 12)//Whisky
	{
        if(pInfo[playerid][pSede] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com sede");
        pInfo[playerid][pSede] += 4;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"PED","WALK_DRUNK",4.1,1,1,1,1,1,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~b~~h~bebendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 13)//suco de laranja
	{
        if(pInfo[playerid][pSede] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com sede");
        pInfo[playerid][pSede] += 12;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~b~~h~Bebendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 14)//suco de maca
	{
        if(pInfo[playerid][pSede] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com sede");
        pInfo[playerid][pSede] += 16;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~b~~h~Bebendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 15)//Cafe
	{
        if(pInfo[playerid][pSede] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com sede");
        pInfo[playerid][pSede] += 15;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~b~~h~Bebendo....",1000,3);
		RemoveInvItem(playerid);
	}

	/* ============= [ Comidas ] =============*/

	if(ItemI == 16)//Mre
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 20;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 17)//fatia de pao
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 7;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 18)//Sardinha enlatada
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 16;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 19)//Cereal
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 10;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 20)
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 16;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 21)
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 12;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 22)
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 12;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 23)
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 8;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 24)
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 6;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 25)
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 4;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 26)
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 4;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 27)
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 5;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	if(ItemI == 28)
	{
        if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 5;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}

	/* ============= [ Armas ] =============*/
	if(ItemI == 29)
	{
		if(!PlayerHasItem(playerid, 77)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui municao .50");
        RemoveItem(playerid, 77, 1); 
        GivePlayerWeaponEx(playerid, 24, 30); 
        RemoveInvItem(playerid);
	}

	if(ItemI == 31)
	{
		if(!PlayerHasItem(playerid, 72)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui municao 9mm.");
        RemoveItem(playerid, 72, 1); 
        GivePlayerWeaponEx(playerid, 23, 30); 
        RemoveInvItem(playerid);
	}

	if(ItemI == 64)
	{
		//new rand = minrand(25, 57);
        if(!PlayerHasItem(playerid, 75)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui municao AR.");
        RemoveItem(playerid, 75, 1); 
		GivePlayerWeaponEx(playerid, 31, 30);
		RemoveInvItem(playerid);
	}
	
    if(ItemI == 63)
    {
        if(minaplayer[playerid] != 1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao plantou nenhuma Mina.");
		CreateExplosion(minapos[playerid][0], minapos[playerid][1], minapos[playerid][2], 11, 5.0);
		minaplayer[playerid] = 0;
		DestroyObject(objmina[playerid]);
		SendClientMessage(playerid, Verde, "<!> Mina explodida com exito.");
        if(idParedeMina[playerid] != -1)
        {
            new id = idParedeMina[playerid];
        	new str[128];
            if(CraftInfo[id][metallife] <= 1)
            {
            	DestroyDynamicObject(CraftInfo[id][ObjectJ]);
            	DestroyDynamic3DTextLabel(CraftInfo[id][Text3Dp]);
            	DestroyDynamicObject(objetoc4[playerid]);
            	CraftInfo[id][Existe] = 0;
            	CraftInfo[id][PosX] = 0;
            	CraftInfo[id][PosY] = 0;
            	CraftInfo[id][PosZ] = 0;
            	CraftInfo[id][RX] = 0;
            	CraftInfo[id][RY] = 0;
            	CraftInfo[id][RZ] = 0;
        		new file[64];
        		format(file, sizeof(file), "Data/Crafts/%d.ini", id);
        		if(DOF2_FileExists(file))
        		{
        			DOF2_RemoveFile(file);
        		}
        		new strr[90];
        		format(strr, sizeof(strr), "<!> Raid: {FFFFFF}O Jogador %s(%d) quebrou uma craft de %s.", PegarNome(playerid), playerid, CraftInfo[id][Dono]);
        		SendClientMessageToAll(Preto, strr);
        	}
        	else
        	{
        		CraftInfo[id][metallife] -= 1;
        		DestroyDynamicObject(objetoc4[playerid]);
        		format(str, 128,"{B22222}[DANIFICADA]\n{81d358}/editarp {d3cd58}%d\n{58aed3}Protecao: %d",id, CraftInfo[id][metallife]);
        		UpdateDynamic3DTextLabelText(CraftInfo[id][Text3Dp], 0xFFFF00FF, str);
        	}
        }
        idParedeMina[playerid] = -1;
    }
    
	if(ItemI == 65)
	{
		//new rand = minrand(25, 57);
		if(!PlayerHasItem(playerid, 75)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui municao AR.");
        RemoveItem(playerid, 75, 1); 
        GivePlayerWeaponEx(playerid, 30, 30);
		RemoveInvItem(playerid);
	}

	if(ItemI == 36)
	{
		//new rand = minrand(5, 18);
		if(!PlayerHasItem(playerid, 74)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui municao Escopeta.");
        RemoveItem(playerid, 74, 1); 
        GivePlayerWeaponEx(playerid, 25, 30);
		RemoveInvItem(playerid);
	}

	if(ItemI == 35)//sawn off
	{
        //new rand = minrand(5, 18);
		if(!PlayerHasItem(playerid, 74)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui municao Escopeta.");
        RemoveItem(playerid, 74, 1); 
        GivePlayerWeaponEx(playerid, 26, 30);
		RemoveInvItem(playerid);
	}

	if(ItemI == 62)
	{
		//new rand = minrand(5, 18);
		if(!PlayerHasItem(playerid, 74)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui municao Escopeta.");
        RemoveItem(playerid, 74, 1); 
        GivePlayerWeaponEx(playerid, 27, 30);
		RemoveInvItem(playerid);
	}

	if(ItemI == 34)
	{
		//new rand = minrand(30, 68);
		if(!PlayerHasItem(playerid, 73)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui municao SMG.");
        RemoveItem(playerid, 73, 1); 
        GivePlayerWeaponEx(playerid, 32, 30);
		RemoveInvItem(playerid);
	}

	if(ItemI == 33)
	{
		if(!PlayerHasItem(playerid, 73)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui municao SMG.");
        RemoveItem(playerid, 73, 1); 
		GivePlayerWeaponEx(playerid, 28, 30);
		RemoveInvItem(playerid);
	}

	if(ItemI == 32)
	{
        if(!PlayerHasItem(playerid, 73)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui municao SMG.");
        RemoveItem(playerid, 73, 1); 
		GivePlayerWeaponEx(playerid, 29, 30);
		RemoveInvItem(playerid);
	}
	if(ItemI == 68)
	{
	    //new rand = minrand(5, 15);
		if(!PlayerHasItem(playerid, 76)) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui municao Rifle.");
        RemoveItem(playerid, 76, 1); 
        GivePlayerWeaponEx(playerid, 34, 10);
		RemoveInvItem(playerid);
	}
   	if(ItemI == 56)
	{
		if(minaplayer[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja plantou uma mina. Use o item [Controle Destruidor] para explodi-la.");
        ShowPlayerDialog(playerid, D_MINAPLANT, DIALOG_STYLE_LIST, "{00FF00}Escolha uma opcao", "Plantar em Craft {FF0000}'Dano na craft'\n\
        Plantar no chao {FF0000}'Plantar no chao'", "Plantar", "Cancelar");
        /*minaplayer[playerid] = 1;
		GetPlayerPos(playerid, minapos[playerid][0], minapos[playerid][1], minapos[playerid][2]);
		minapos[playerid][2] = minapos[playerid][2]-0.9;
		objmina[playerid] = CreateObject(19602,  minapos[playerid][0], minapos[playerid][1], minapos[playerid][2], 0.0, 0.0, 0.0, 200.0);
		SendClientMessage(playerid, Verde, "<!> Voce colocou uma mina nesse local.");
		RemoveInvItem(playerid);*/
	}
	/* ============= [ Armas Brancas ] =============*/
	if(ItemI == 37)
	{
	    GivePlayerWeaponEx(playerid, 5, 1);
		RemoveInvItem(playerid);
	}

	if(ItemI == 38)
	{
	    GivePlayerWeaponEx(playerid, 8, 1);
		RemoveInvItem(playerid);
	}

	if(ItemI == 39)
	{
	    //GivePlayerWeaponEx(playerid, 4, 1);
		SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Arma branca removida do servidor.");
        RemoveInvItem(playerid);
	}

	if(ItemI == 40)
	{
	    GivePlayerWeaponEx(playerid, 6, 1);
		RemoveInvItem(playerid);
	}

	/* ============= [ Granadas ] =============*/
	if(ItemI == 41)
	{
	    GivePlayerWeaponEx(playerid, 16, 1);
		RemoveInvItem(playerid);
	}

	/* ============= [ Munia*a*es ] =============*/
	if(ItemI == 42) //chave de fenda
	{
        if(Equipado[playerid][MARRETA] == 1 || Equipado[playerid][MARTELO] == 1 || Equipado[playerid][PE_DE_CABRA] == 1)
        {
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Algum Objeto ja equipado: Martelo, Marreta, Galao Vazio ou Pe de cabra.");
            SendClientMessage(playerid, Verde, "OBS: /gobjeto para guarda-las.");
            return 1;
        }
        if(Equipado[playerid][CHAVE_DE_FENDA] == 0)
        {
            SendClientMessage(playerid, Verde, "* Chave de fenda equipada com sucesso. Use para abrir caixas.");
            SetPlayerAttachedObject(playerid, SlotFerramenta_1, 18644, 6, 0.0739, 0.0110, 0.0000, 0.0000, 170.2999, 0.0000, 1.0000, 1.0000, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF); // Screwdriver1 attached to the Right Hand of 
            Equipado[playerid][CHAVE_DE_FENDA]=1;
            ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
            GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Equipando....",1000,3);
            RemoveInvItem(playerid);
        }else{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta equipado com uma chave de fenda.");
        }
	}
	if(ItemI == 46)//pe de cabra
	{
		//SendClientMessage(playerid, Verde, "[DICA] {FFFFFF} Use para crafts.");
        if(Equipado[playerid][CHAVE_DE_FENDA] == 1 || Equipado[playerid][MARRETA] == 1 || Equipado[playerid][MARTELO] == 1)
        {
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Algum Objeto ja equipado: Martelo, Chave de fenda, Galao Vazio ou Marreta.");
            SendClientMessage(playerid, Verde, "OBS: /gobjeto para guarda-las.");
            return 1;
        }
        if(Equipado[playerid][PE_DE_CABRA] == 0)
        {
            SendClientMessage(playerid, Verde, "* Pe de cabra equipado com sucesso. Use para arrombar veiculos (/arrombarv).");
            SetPlayerAttachedObject(playerid, SlotFerramenta_1, 18634, 6, 0.0729, 0.0300, 0.0200, 86.2000, 0.0000, 0.0000, 1.0000, 0.8439, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF); // GTASACrowbar1 attached to the Right Hand of 
            Equipado[playerid][PE_DE_CABRA]=1;
            ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
            GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Equipando....",1000,3);
            RemoveInvItem(playerid);
        }else{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta equipado com um Pe de cabra.");
        }
    }
    if(ItemI == 44)
    {
		GivePlayerWeaponEx(playerid, 9, 1);
        SendClientMessage(playerid, Verde, "* Voce se equipou com uma Motoserra.");
        RemoveInvItem(playerid);
    }
	if(ItemI == 45)
	{
	    new str[60];
	    new rand = minrand(400, 800);
	    format(str, sizeof(str), "* Voce ganhou %d em Dinheiro.", rand);
        SendClientMessage(playerid, Verde, str);
        SetPlayerMoney(playerid, rand);
        RemoveInvItem(playerid);
	}
	if(ItemI == 83)
	{
	    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Nao e possivel usar este item, venda-o em alguma zona safe.");
	}
	if(ItemI == 84)
	{
	    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Nao e possivel usar este item, venda-o em alguma zona safe.");
	}
	if(ItemI == 85)
	{
	    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Nao e possivel usar este item, venda-o em alguma zona safe.");
	}
	if(ItemI == 43) //martelo
	{
        if(Equipado[playerid][CHAVE_DE_FENDA] == 1 || Equipado[playerid][MARRETA] == 1 || Equipado[playerid][PE_DE_CABRA] == 1)
        {
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Algum Objeto ja equipado: Marreta, Chave de fenda, Galao Vazio ou Pe de cabra.");
            SendClientMessage(playerid, Verde, "OBS: /gobjeto para guarda-las.");
            return 1;
        }
        if(Equipado[playerid][MARTELO] == 0)
        {
            SendClientMessage(playerid, Verde, "* Martelo equipado com sucesso. Use para criar crafts.");
            SetPlayerAttachedObject(playerid, SlotFerramenta_1, 18635, 6, -0.0049, -0.0270, -0.0020, 0.0000, 10.6999, 0.0000, 1.0000, 1.0000, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF); // GTASAHammer1 attached to the Right Hand of 
            Equipado[playerid][MARTELO]=1;
            ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
            GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Equipando....",1000,3);
            RemoveInvItem(playerid);
        }else{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta equipado com um martelo.");
        }
		/*new idv = PertoVeiculo(playerid);
		if(idv > -1)
		{
            if(vInfo[idv][vLock] == true)
		    {
				if(ArrombandoCarro[playerid] == true) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja esta arrombando um veiculo.");
				ArrombandoCarro[playerid] = true;
                SetTimerEx("TentandoAbrirC", 1000, false, "ii", playerid, idv);
                ArrombandoSecunds[playerid] = 0;
                new Float:XX, Float:YY, Float:ZZ;
				GetVehiclePos(idv, XX, YY, ZZ);
				SetPlayerFacingAngleToPos(playerid, XX, YY);
				TogglePlayerControllable(playerid, 0);
				ApplyAnimation(playerid, "COP_AMBIENT", "COPBROWSE_LOOP", 4.1, 1, 0, 0, 1, 0, 1);
				ApplyAnimation(playerid, "COP_AMBIENT", "COPBROWSE_LOOP", 4.1, 1, 0, 0, 1, 0, 1);
			}
			else
		    {
                SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} veiculo se encontra aberto.");
		    }
		}
		else
		{
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} voce nao esta perto de nenhum veiculo.");
		}*/
	}
	/* ============= [ Variados ] =============*/
	if(ItemI == 47)
	{
	    SendClientMessage(playerid, Verde, "[GPS] GPS Ativado");
	    GangZoneHideForPlayer(playerid, gps);
		pInfo[playerid][pTemGPS] = 1;
		RemoveInvItem(playerid);
	}

	if(ItemI == 48)
	{
		SendClientMessage(playerid, Verde, "[DICA] Use para craftar na mesa de crafts.");
    }
    if(ItemI == 66)
	{
        SendClientMessage(playerid, Verde, "[DICA] {FFFFFF}Encha-o em reservatorios para adquirir combustivel.");
	}
	if(ItemI == 59)
	{
		SendClientMessage(playerid, Verde, "[DICA] {FFFFFF} Use para craftar na mesa de crafts.");
	}
	if(ItemI == 49)
	{
		SendClientMessage(playerid, Verde, "[DICA] {FFFFFF} Use /motor na frente do veiculo.");
	}

	if(ItemI == 50)
	{
		SendClientMessage(playerid, Verde, "[DICA] {FFFFFF} Use /reparo dentro de um veiculo para reparar.");
	}

	if(ItemI == 51)
	{
	    SendClientMessage(playerid, Verde, "[System]: Radio ligado.");
	    pInfo[playerid][pTemRADIO] = 1;
	    RemoveInvItem(playerid);
	}
    
	if(ItemI == 52)//colete nivel 2
	{
        if(pInfo[playerid][pArmour] >= 100) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Seu colete ja esta 100+ ou voce esta com colete Superior.");
        if(EQUIPOU[playerid] > gettime()) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Aguarde 30 segundos para se equipar novamente.");
        EQUIPOU[playerid] = gettime()+30;

        SetPlayerArmourEx(playerid, 100);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Colete_equipado",1000,3);
        pInfo[playerid][pNvlColete] = 2;
        SetPlayerAttachedObject(playerid, SlotColete, 19142, 1, 0.0609, 0.0469, 0.0100, -1.8999, -0.8001, 1.2999, 1.1370, 1.1629, 1.0300, 0xFFFFFFFF, 0xFFFFFFFF); 
        RemoveInvItem(playerid);
	}
    if(ItemI == 61)//colete nivel 1
	{
        if(pInfo[playerid][pArmour] >= 50) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Seu colete ja esta 100+ ou voce esta com colete Superior.");
        if(EQUIPOU[playerid] > gettime()) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Aguarde 30 segundos para se equipar novamente.");
        EQUIPOU[playerid] = gettime()+30;

        SetPlayerArmourEx(playerid, 50);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~Colete_equipado",1000,3);
        pInfo[playerid][pNvlColete] = 1;
        SetPlayerAttachedObject(playerid, SlotColete, 19904, 1, 0.0709, 0.0389, 0.0100, 0.0000, 90.3998, 177.8000, 1.1370, 1.1410, 1.0300, 0xFFFFFFFF, 0xFFFFFFFF);
        RemoveInvItem(playerid);
	}

    /*if(ItemI == 83)
    {
        if(pInfo[playerid][pCapacete] < 1){
            pInfo[playerid][pCapacete] = 1;
            SendClientMessage(playerid, Verde, "* Capacete equipado com sucesso.");
            SetPlayerAttachedObject(playerid, SlotCapacete, 19141, 2, 0.1129, 0.0100, -0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0490, 0xFFFFFFFF, 0xFFFFFFFF);
            RemoveInvItem(playerid);
        }else{                      
            SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja possui um capacete equipado.");
        }
    }*/

	if(ItemI == 53)
	{
		if(Equipado[playerid][MASCARA] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce ja possui uma mascara");
        SendClientMessage(playerid, Verde, "* Voce colocou mascara e ficou protegido na area-51.");
		Equipado[playerid][MASCARA] = 1;
        SetPlayerAttachedObject(playerid, SlotMascara, 19472, 2, 0.0310, 0.1420, -0.0050, 4.2999, 88.4999, 83.5001, 1.0639, 1.4189, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF); // gasmask01 attached to the Head of 
        RemoveInvItem(playerid);
	}

	if(ItemI == 55)
	{
		SendClientMessage(playerid, Verde, "[DICA] {FFFFFF} Use /galao dentro de um veiculo para colocar combustivel");
	}

	/* ============= [ Vazios ] =============*/
	if(ItemI == 3)
	{
	    SendClientMessage(playerid, Verde, "[DICA] {FFFFFF} Voce pode usar para encher com agua");
	}

	if(ItemI == 66)
	{
		//SendClientMessage(playerid, Verde, "[DICA] {FFFFFF} Voce nao pode usar este item, coloque combustivel para abastecer veiculo");
        
    }

	if(ItemI == 67 || ItemI == 82 || ItemI == 81)
	{
        for(new c=0; c<300; c++) IdCraftRaid[playerid][c]=-1;
        MEGAString[0]=EOS;
        new id = -1, Float:distanciaA = 2.0, Float:distanciaB, str[80];
        strcat(MEGAString, "Craft ID\tProtecao\tDistancia\n");
        for(new p=1, j=MAX_CRAFTS; p < j; p++)
    	{
    		if(!CraftInfo[p][Existe]) continue;
        	distanciaB = GetPlayerDistanceFromPoint(playerid, CraftInfo[p][PosX], CraftInfo[p][PosY], CraftInfo[p][PosZ]);
        	if(distanciaB <= distanciaA)
        	{
        		id++;
                IdCraftRaid[playerid][id] = p;
                format(str, sizeof str, "{FFFFFF}[%d]\t{B22222}[%d]\t{FFFF00}[%0.2f]\n", p, CraftInfo[p][metallife], distanciaB);
                strcat(MEGAString, str);
            }
    	}
        if(id > -1){
            if(ItemI == 67) BombaUsada[playerid] = BOMBADINAMITE;
            else if(ItemI == 82) BombaUsada[playerid] = BOMBAGALAO;
            else if(ItemI == 81) BombaUsada[playerid] = BOMBAC4;
            ShowPlayerDialog(playerid, D_PLANTANDOB, DIALOG_STYLE_TABLIST_HEADERS, "Crafts Proximas:", MEGAString, "Plantar", "Cancelar");
        }
    }


	if(ItemI == 69)
	{
		return SendClientMessage(playerid, Verde, "[DICA] {FFFFFF}Use para acender a churrasqueira e assar carne crua!");
	}
	if(ItemI == 70)
	{
        new id = GetPlayerPosChurrasqueira(playerid);
        if(id > -1)
        {
            if(CraftInfo[id][IChurrasqueira] == 2804) 
            {
                return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Churrasqueira ja tem uma carne!");
            }
            if(!PlayerHasItem(playerid, 70)) //nn tem carne crua
            {
                new str[90]; format(str, sizeof str,  "Madeiras: %d\n{FF0000}Assar Carne", CraftInfo[id][MChurrasqueira]);
                ShowPlayerDialog(playerid, D_ASSARCARNE, DIALOG_STYLE_LIST, "{FF0000}Churrasqueira:", str, "Selecionar", "Fechar");
                return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui carne crua no inventario!");
            }
            CraftInfo[id][IChurrasqueira] = 2804;
            SetObjectCarne(id);
            SendTXDMessage(playerid, "Carne_crua_adicionada~n~Na_Churrasqueira.");
            RemoveInvItem(playerid);
        }
	}
	if(ItemI == 71)
	{
		if(pInfo[playerid][pFome] >= 100) return SendClientMessage(playerid, COR_CINZA, "* Voce nao esta com fome.");
        pInfo[playerid][pFome] += 40;
        UpdateFS(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger", 4.0,0,0,0,0,0,1);
        GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~y~~h~Comendo....",1000,3);
		RemoveInvItem(playerid);
	}
    /* ========== [ Municoes ] ==========*/
	if(ItemI == 72 || ItemI == 73 || ItemI == 74 || ItemI == 75 || ItemI == 76 || ItemI == 77)
    {
        if(!GetArmaAmmo(playerid, ItemI)) return SendClientMessage(playerid, COR_CINZA, "* Arma invalida ou municao nao equivalente.");
        
        new balas = 0;

        if(ItemI == 76) balas = 10;
        else balas = 30;
       
        GivePlayerWeaponEx(playerid, GetArmaAmmo(playerid, ItemI), balas);
        RemoveInvItem(playerid);
    }
    if(ItemI == 79)//teclado
    {
        new idv = PertoVeiculo(playerid, 3.0);
        if(idv > -1){
            idVehSenha[playerid] = idv;
            if(!vInfo[idv][vLock]){
                ShowPlayerDialog(playerid, D_Carro, DIALOG_STYLE_INPUT, "Trancar Veiculo:", "Digite uma senha para trancar o veiculo\n\
                Senha deve conter de 1 a 40 caracteres.\n\
                OBS: So podera abrir utilizando o 'Teclado' novamente ou Arrombando com 'Pe de Cabra'.", "Trancar", "Cancelar");
            }else{                    
                ShowPlayerDialog(playerid, D_Carro, DIALOG_STYLE_INPUT, "Destrancar Veiculo:", "Digite a senha para destrancar o veiculo\n\
                DICA: Senha contem de 1 a 40 caracteres.", "Destrancar", "Cancelar");
            }
        }
    }
	return 1;
}
stock GetArmaAmmo(playerid, AmmoItem){
    new weaponid = GetPlayerWeaponEx(playerid, GetSlotWeapon( GetPlayerWeapon(playerid) ));
    if(AmmoItem == 72)//9mm
    {
        if(weaponid == 23) return weaponid;
    }
    if(AmmoItem == 73)//smg
    {
        if(weaponid == 32) return weaponid;
        else if(weaponid == 28) return weaponid;
        else if(weaponid == 29) return weaponid;
    }
    if(AmmoItem == 74)//escopeta
    {
        if(weaponid == 25) return weaponid;
        else if(weaponid == 26) return weaponid;
        else if(weaponid == 27) return weaponid;
    }
    if(AmmoItem == 75)//ar
    {
        if(weaponid == 30) return weaponid;
        else if(weaponid == 31) return weaponid;
    }
    if(AmmoItem == 76)//rifle
    {
        if(weaponid == 34) return weaponid;
    }
    if(AmmoItem == 77)//desert
    {
        if(weaponid == 24) return weaponid;
    }
    return false;
}
stock IsPointInRangeOfPoint(Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2, Float:range)
{
    x2 -= x;
    y2 -= y;
    z2 -= z;
    return ((x2 * x2) + (y2 * y2) + (z2 * z2)) < (range * range);
}
CallBack:TentandoAbrirC(playerid, idv)
{
    if(!ArrombandoCarro[playerid]) return 1;
	new str[40];
	if(ArrombandoSecunds[playerid] == 1)
	{
	    ArrombandoCarro[playerid] = false;
        HideTimerAcao(playerid);
	    new Rand = random(100);
		if(Rand <= 10)
		{
	        SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao conseguiu arrombar a porta deste veiculo e quebrou seu Pe de Cabra.");
	        ClearAnimations(playerid, 1);
	        TogglePlayerControllable(playerid, 1);
            RemovePlayerAttachedObject(playerid, SlotFerramenta_1);
            Equipado[playerid][PE_DE_CABRA] = 0;
		}else if(Rand >= 11){
		    vInfo[idv][vLock] = false;
		    CarInfo[vInfo[idv][VehicleID]][cTrancado] = false;
			format(vInfo[idv][cSenha], 50, "Nenhuma");
			SendClientMessage(playerid, Verde, "* Voce arrombou a porta deste veiculo com sucesso.");
			ClearAnimations(playerid, 1);
	        TogglePlayerControllable(playerid, 1);
            RemovePlayerAttachedObject(playerid, SlotFerramenta_1);
            Equipado[playerid][PE_DE_CABRA] = 0;
		}
	}else{
        ArrombandoSecunds[playerid]--;
        format(str, sizeof(str), "%02d:%02d", ArrombandoSecunds[playerid] / 60, ArrombandoSecunds[playerid]);
        PlayerTextDrawSetString(playerid, TimerTextAcao[playerid][2], str);
        //GameTextForPlayer(playerid, str, 1000, 3);
		SetTimerEx("TentandoAbrirC", 1000, false, "ii", playerid, idv);
	}
	return 1;
}
CallBack:R_AbastecendoVeh(playerid, idv)
{
    if(!RemovendoGV[playerid]) return 1;
	new str[40];
	if(sRemovendoGV[playerid] == 1)
	{
	    RemovendoGV[playerid] = false;
        HideTimerAcao(playerid);
        if(vInfo[idv][vCombustivel] < 20) {
            SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA}: Este veiculo nao tem gasosa o suficiente(20L).");
            ClearAnimations(playerid, 1);
            TogglePlayerControllable(playerid,1);
            RemovePlayerAttachedObject(playerid, SlotVariados);
            return 1;
        }
        if(!PlayerHasItem(playerid,66)) {
            SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui um Galao Vazio");
            ClearAnimations(playerid, 1);
            TogglePlayerControllable(playerid,1);
            RemovePlayerAttachedObject(playerid, SlotVariados);
            return 1;
        }
        vInfo[idv][vCombustivel] -= 20;
        RemoveItem(playerid, 66, 1);
        AddItem(playerid, 55, 1);
        ClearAnimations(playerid, 1);
        TogglePlayerControllable(playerid,1);
        RemovePlayerAttachedObject(playerid, SlotVariados);
    	return SendClientMessage(playerid, Verde, "* Voce removeu 20L de gasolina do veiculo.");
	}else{
        sRemovendoGV[playerid]--;
        format(str, sizeof(str), "%02d:%02d", sRemovendoGV[playerid] / 60, sRemovendoGV[playerid]);
        PlayerTextDrawSetString(playerid, TimerTextAcao[playerid][2], str);
		SetTimerEx("R_AbastecendoVeh", 1000, false, "ii", playerid, idv);
	}
    return 1;
}

CallBack:AbastecendoVeh(playerid, idv)
{
    if(!AbastecVEH[playerid]) return 1;
	new str[40];
	if(sAbastecVEH[playerid] == 1)
	{
	    AbastecVEH[playerid] = false;
        HideTimerAcao(playerid);
        if(!PlayerHasItem(playerid, 55)) {
            SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui um Galao de gasolina");
            ClearAnimations(playerid, 1);
            TogglePlayerControllable(playerid,1);
            RemovePlayerAttachedObject(playerid, SlotVariados);
            return 1;
        }
        vInfo[idv][vCombustivel] += 20;
        if(vInfo[idv][vCombustivel] > 100) vInfo[idv][vCombustivel] = 100;
        RemoveItem(playerid, 55, 1);
        AddItem(playerid, 66, 1);
        ClearAnimations(playerid, 1);
        TogglePlayerControllable(playerid,1);
        RemovePlayerAttachedObject(playerid, SlotVariados);
    	return SendClientMessage(playerid, Verde, "* Voce adicionou 20L de gasolina no veiculo.");
	}else{
        sAbastecVEH[playerid]--;
        format(str, sizeof(str), "%02d:%02d", sAbastecVEH[playerid] / 60, sAbastecVEH[playerid]);
        PlayerTextDrawSetString(playerid, TimerTextAcao[playerid][2], str);
		SetTimerEx("AbastecendoVeh", 1000, false, "ii", playerid, idv);
	}
    return 1;
}
CallBack:ReparandoVeh(playerid, idv)
{
    if(!RepairVeh[playerid]) return 1;
	new str[40];
	if(SRepairVeh[playerid] == 1)
	{
	    RepairVeh[playerid] = false;
        HideTimerAcao(playerid);
        if(!PlayerHasItem(playerid, 50)){
            SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce nao possui uma ToolBox");
            ClearAnimations(playerid, 1);
            TogglePlayerControllable(playerid,1);
            return 1;
        }
        vInfo[idv][vHealth] = 950.0;
        RepairVehicle(idv);
        SetVehicleHealth(idv, 950.0);
        RemoveItem(playerid, 50, 1);
        ClearAnimations(playerid, 1);
        TogglePlayerControllable(playerid,1);
    	return SendClientMessage(playerid, Verde, "* Veiculo reparado.");
	}else{
        SRepairVeh[playerid]--;
        format(str, sizeof(str), "%02d:%02d", SRepairVeh[playerid] / 60, SRepairVeh[playerid]);
        PlayerTextDrawSetString(playerid, TimerTextAcao[playerid][2], str);
		SetTimerEx("ReparandoVeh", 1000, false, "ii", playerid, idv);
	}
	return 1;
}

CallBack:Removendo_Motor(playerid)
{
    if(!RemovendoMotor[playerid]) return 1;
    if(TremovendoMotor[playerid] == 1)
    {
        HideTimerAcao(playerid);
        new idv=idCarAF[playerid];
        RemovendoMotor[playerid]=false;
        TremovendoMotor[playerid] = 0;
        vInfo[idv][vTemMotor] = false;
        CarInfo[vInfo[idv][VehicleID]][cMotor] = vInfo[idv][vTemMotor];
        AddItem(playerid, 49, 1);
        RemovePlayerFromVehicle(playerid);
        ClearAnimations(playerid, 1);
        TogglePlayerControllable(playerid,1);
        DesligarMotor(idv);
        return SendClientMessage(playerid, Verde, "* Motor removido com sucesso.");

    }else{
        new stre[30];
        TremovendoMotor[playerid]--;
        format(stre, sizeof(stre), "%02d:%02d", TremovendoMotor[playerid] / 60, TremovendoMotor[playerid] % 60);
        PlayerTextDrawSetString(playerid, TimerTextAcao[playerid][2], stre);
		SetTimerEx("Removendo_Motor", 1000, false, "i", playerid);
	}
	return 1;
}
CallBack:Adicionando_Motor(playerid)
{
    if(!AdicionandoMotor[playerid]) return 1;
    if(TadicionandoMotor[playerid] == 1)
    {
        if(!PlayerHasItem(playerid, 49)) return SendClientMessage(playerid, COR_CINZA, "[ERRO]{BABABA} Voce nao possui um motor no inventario.");
        HideTimerAcao(playerid);
        new idv=idCarAF[playerid];
        AdicionandoMotor[playerid]=false;
        TadicionandoMotor[playerid] = 0;
        vInfo[idv][vTemMotor] = true;
        CarInfo[vInfo[idv][VehicleID]][cMotor] = vInfo[idv][vTemMotor];
        RemoveItem(playerid, 49, 1);
        RemovePlayerFromVehicle(playerid);
        ClearAnimations(playerid, 1);
        TogglePlayerControllable(playerid,1);
        return SendClientMessage(playerid, Verde, "* Motor adicionado com sucesso.");

    }else{
        new stre[30];
        TadicionandoMotor[playerid]--;
        format(stre, sizeof(stre), "%02d:%02d", TadicionandoMotor[playerid] / 60, TadicionandoMotor[playerid] % 60);
        PlayerTextDrawSetString(playerid, TimerTextAcao[playerid][2], stre);
		SetTimerEx("Adicionando_Motor", 1000, false, "i", playerid);
	}
	return 1;
}
/*CallBack:Desability_Acl(playerid)
{
    if(pInfo[playerid][pTomouTiro] > 0)
    {
        if(pInfo[playerid][pAntiRelog]){
            pInfo[playerid][pTomouTiro]--;
            SetTimerEx("Desability_Acl", 1000, false, "i", playerid);
        }
    }else{
        SendClientMessage(playerid, AMARELO, "[ANTI-RELOG] Desativado. Voce ja pode deslogar.");
        pInfo[playerid][pAntiRelog] = false;
    }
    return 1;
}*/
stock SetPlayerFacingAngleToPos(playerid, Float:x2,Float:y2)
{
    new Float:x1, Float:y1, Float:z1;

    GetPlayerPos(playerid, x1, y1, z1);

    new Float:angle = atan2(y2 - y1, x2 - x1) - 90.0;

    SetPlayerFacingAngle(playerid, angle);
}
static stock isLetra(string[])
{
    for(new i = 0; i < strlen(string); i++)
        if(string[i] >= 'A' && string[i] <= 'Z' || string[i] >= 'a' && string[i] <= 'z') return true;

    return false;
}
CallBack:OnPlayerDropItem(playerid, ItemI, quantiaDI)
{
    //new Float:PRotz = 1.0;
    for(new i=0; i < quantiaDI; i++){
        new Float:X, Float:Y, Float:Z;
        GetPlayerPos(playerid, X, Y, Z);
        SetPlayerPosEx(playerid, X+0.1, Y, Z), SetCameraBehindPlayer(playerid); // Fix no bug do item nao aparecer no chao quando dropado, teleportando o jogador +1 faz o objeto aparecer
        GetXYInFrontOfPlayer(playerid, X, Y, 1.0);
        CreateDrop(ItemI, X, Y, Z);
        //PRotz += 0.20;
    }
    RemoveItem(playerid,ItemI,quantiaDI);
	return 1;
}
stock DropArma(playerid)
{
    new ARMA[13], MUNICAO;
	for(new i = 0; i < 13; i++)
    {
	    GetPlayerWeaponData(playerid,i,ARMA[i],MUNICAO);
        if(ARMA[i] > 0 && MUNICAO > 0 && MUNICAO < 5001)
	    {
	        new f = -1;
			for(new a; a < MAX_ARMAS; a++)
			{
				if(!ArmaInfo[a][ArmaExiste])
				{
					f = a;
					break;
				}
		    }
		    new gunname[25];
			GetWeaponNameEx(ARMA[i], gunname, sizeof(gunname));
			new Float:X, Float:Y, Float:Z;
		    new Float:XX, Float:YY;
		    XX = random(3);
		    YY = random(5);
			RemovePlayerWeapon(playerid, ARMA[i]);
			ArmaInfo[f][ArmaID] = ARMA[i];
			ArmaInfo[f][ArmaMuni] = MUNICAO;
			ArmaInfo[f][ArmaExiste] = true;
			GetPlayerPos(playerid, X, Y, Z);
			ArmaInfo[f][ArmaX] = X+XX;
			ArmaInfo[f][ArmaY] = Y+YY;
			ArmaInfo[f][ArmaZ] = Z;
			new strr[100];
			format(strr, sizeof(strr), "%s[%d]\n/pegararma", gunname, f);
			ArmaInfo[f][ArmaText] = CreateDynamic3DTextLabel(strr, Verde,ArmaInfo[f][ArmaX], ArmaInfo[f][ArmaY], ArmaInfo[f][ArmaZ]-1, 30.0);
			ArmaInfo[f][ArmaObj] = CreateDynamicObject(GunObjects[ARMA[i]][0],ArmaInfo[f][ArmaX], ArmaInfo[f][ArmaY], ArmaInfo[f][ArmaZ]-1,93.7,120.0,120.0);
	    }
	}
	return 1;
}

stock ForceDrop(playerid)
{
	for(new i; i < MAX_LOOTS; i++)
	{
		if(!LootInfo[i][Existe])
		{
            new Float:X, Float:Y, Float:Z;
		    GetPlayerPos(playerid, X, Y, Z);
			CriarLoot(playerid, i, X, Y, Z);
			break;
		}
	}
	return 1;
}
CallBack:OnPlayerPickupItemFromDrop(playerid)
{
    new speed = GetPlayerSpeed(playerid, true);
    if(speed <= 1)
	{
        for(new i=1; i < MAX_DROPS; i++)
        {
            if(IsPlayerInRangeOfPoint(playerid, 1.5, DropInfo[i][dPosX], DropInfo[i][dPosY], DropInfo[i][dPosZ]))
            {
                if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                new str[80],
                    itemid = DropInfo[i][DropItemID];

                format(str, sizeof(str), "~w~Item: ~r~%s~n~~w~Adicionado Ao Inventario.", ItemInfo[itemid][Item_Name]);
                GameTextForPlayer(playerid, str, 1000, 4);

                ApplyAnimation(playerid, "MISC","CASE_PICKUP", 4.0, 0, 0, 0, 0, 0);

                AddItem(playerid, ItemInfo[itemid][Item_ID], 1);
                DestroyDrop(i);
                return 1;
            }
        }
    }
	return 1;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}
stock GetPlayerPosChurrasqueira(playerid){
    new id = -1, Float: distanciaA = 2.0, Float: distanciaB;
	for(new i=1; i < MAX_CRAFTS; i++)
	{
		if(!CraftInfo[i][Existe]) continue;
        if(CraftInfo[i][Modelo] == 19831)
        {
    	    distanciaB = GetPlayerDistanceFromPoint(playerid, CraftInfo[i][PosX], CraftInfo[i][PosY], CraftInfo[i][PosZ]);
    		if(distanciaB <= distanciaA)
    		{
    			distanciaA = distanciaB;
    			id = i;
    			break;
    		}
        }
	}
	return id;
}
CallBack:Item_OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		if(PRESSED(KEY_SECONDARY_ATTACK) || PRESSED(KEY_WALK))
		{
		    OnPlayerPickupItemFromDrop(playerid);

            //====================================================================
            new id = GetPlayerRangePorta(playerid);
            if(id != -1) 
            {
                if(CraftInfo[id][Fechada] == true)
                {
                    if(strcmp(PegarNome(playerid), CraftInfo[id][Dono], true) == 0){
                        CraftInfo[id][Fechada] = false;
                        DestroyDynamicObject(CraftInfo[id][ObjectJ]);
                        SendTXDMessage(playerid, "Porta/Portao_Aberto!");
                    }else{
                        idporta[playerid] = id;
                        ShowPlayerDialog(playerid, D_ABRIRPORTAO, DIALOG_STYLE_INPUT, "{FFFF00}Acesso:", "{FFFF00}Digite abaixo a senha de acesso\n\
                        {FFFFFF}Para abrir a Porta/Portao\n\
                        {B22222}OBS: Senha de 1 a 50 caracteres.", "Confirmar", "Cancelar");
                    }
                }
                else
                {
                    CraftInfo[id][Fechada] = true;
                    CraftInfo[id][ObjectJ] = CreateDynamicObject(CraftInfo[id][Modelo], CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], CraftInfo[id][RX], CraftInfo[id][RY], CraftInfo[id][RZ]);
                    SendTXDMessage(playerid, "Porta/Portao_Fechado!");
                }
            }
		}
		if(PRESSED(KEY_YES))
		{
            if(IsPlayerInAnyVehicle(playerid)) return 1;
		    if(Curando[playerid] == 1) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Voce esta se curando.");
		    if(Acao_Ativa[playerid]) return SendClientMessage(playerid, COR_VERMELHO, "[ERRO]{BABABA} Inventario nao pode ser aberto agora.");
	 		ShowInventory(playerid);
		}
	}
	return 1;
}
stock DestroyArma(armaid)
{
	if(ArmaInfo[armaid][ArmaExiste])
	{
		ArmaInfo[armaid][ArmaX] = 0.0;
	    ArmaInfo[armaid][ArmaY] = 0.0;
	    ArmaInfo[armaid][ArmaZ] = 0.0;

        ArmaInfo[armaid][ArmaExiste] = false;
	    DestroyDynamicObject(ArmaInfo[armaid][ArmaObj]);
	    DestroyDynamic3DTextLabel(ArmaInfo[armaid][ArmaText]);
	}
	return 1;
}
stock DestroyDrop(dropid)
{
	if(DropInfo[dropid][Existe])
	{
		DropInfo[dropid][dPosX] = 0.0;
		DropInfo[dropid][dPosY] = 0.0;
		DropInfo[dropid][dPosZ] = 0.0;
        DropInfo[dropid][Existe] = false;
		DropInfo[dropid][DropItemID] = -1;
		DestroyDynamicObject(DropInfo[dropid][DropObj]);
		DestroyDynamic3DTextLabel(DropInfo[dropid][DropLabel]);
		return 1;
	}
	return 1;
}

stock CreateLoot_(itemid, type, Float:X, Float:Y, Float:Z)
{
    new IdLoot=-1, IdDrop=-1;
    if(itemid != -1)
    {
    	for(new i=1; i < MAX_DROPS; i++)
    	{
            if(!Info_Loot[i][Existe])
    		{
                if(IdLoot == -1)IdLoot = i;
            }
            if(!DropInfo[i][Existe])
    		{
                if(IdDrop == -1)IdDrop = i;
            }
        }
    	Info_Loot[IdLoot][dPosX] = X, Info_Loot[IdLoot][dPosY] = Y, Info_Loot[IdLoot][dPosZ] = Z;
        Info_Loot[IdLoot][DropType] = type;
    	Info_Loot[IdLoot][DropItemID] = itemid;
        Info_Loot[IdLoot][Existe] = true;
        Info_Loot[IdLoot][IDValid] = IdDrop;
        SaveItem(IdLoot);
        new str[70];
        DropInfo[IdDrop][dPosX] = X;
        DropInfo[IdDrop][dPosY] = Y;
        DropInfo[IdDrop][dPosZ] = Z-0.93;
        DropInfo[IdDrop][DropItemID] = itemid;
        DropInfo[IdDrop][Existe] = true;

        format(str, sizeof(str), "{00e65c}%s", ItemInfo[itemid][Item_Name]);
        DropInfo[IdDrop][DropLabel] = CreateDynamic3DTextLabel(str, -1, DropInfo[IdDrop][dPosX], DropInfo[IdDrop][dPosY], DropInfo[IdDrop][dPosZ], 1.5);
        DropInfo[IdDrop][DropObj] = CreateDynamicObject(ItemInfo[itemid][Item_Obj], DropInfo[IdDrop][dPosX], DropInfo[IdDrop][dPosY], DropInfo[IdDrop][dPosZ], ItemInfo[itemid][Item_RotX], ItemInfo[itemid][Item_RotY], ItemInfo[itemid][Item_RotZ]);
        return 1;
    }
    return 0;
}
stock CreateDrop(itemid, Float:X, Float:Y, Float:Z)
{
    if(itemid != -1)
    {
    	for(new i=1; i < MAX_DROPS; i++)
    	{
    		if(!DropInfo[i][Existe])
    		{
    			new str[70];
    			DropInfo[i][dPosX] = X, DropInfo[i][dPosY] = Y, DropInfo[i][dPosZ] = Z-0.93;

    			DropInfo[i][DropItemID] = itemid;
                DropInfo[i][Existe] = true;

    			format(str, sizeof(str), "{00e65c}%s", ItemInfo[itemid][Item_Name]);
    			DropInfo[i][DropLabel] = CreateDynamic3DTextLabel(str, -1, DropInfo[i][dPosX], DropInfo[i][dPosY], DropInfo[i][dPosZ], 1.5);
    			DropInfo[i][DropObj] = CreateDynamicObject(ItemInfo[itemid][Item_Obj], DropInfo[i][dPosX], DropInfo[i][dPosY], DropInfo[i][dPosZ], ItemInfo[itemid][Item_RotX], ItemInfo[itemid][Item_RotY], ItemInfo[itemid][Item_RotZ]);
                return 1;
    		}
    	}
    }
	return 0;
}
CallBack:INV_OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	switch(dialogid)
	{
		case D_Inventario:
		{
		    if(!response)
		    {
		        RemovePlayerAttachedObject(playerid, SlotMochila);
		        SetPlayerObject(playerid);
			}
			if(response)
			{
                gItemSelected[playerid] = ItensSelectedInv[playerid][listitem];
                if(Inv[playerid][gItemSelected[playerid]][ItemID] == -1) {ShowInventory(playerid); SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Slot-vazio."); return 1;}

                new str1[40];
                format(str1, sizeof str1, "{FFFFFF}Item [%s]", 
                ItemInfo[Inv[playerid][gItemSelected[playerid]][ItemID]][Item_Name]);

                ShowPlayerDialog(playerid, D_UsarDropar, DIALOG_STYLE_LIST, str1, "{00FF00}Usar\n{FF0000}Dropar", "Selecionar", "Voltar");
			}
		}
		case D_UsarDropar:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: // Quando o Jogador Usa o Item a funcao de usar e chamada
					{
					    RemovePlayerAttachedObject(playerid, SlotMochila);
					    ClearAnimations(playerid, 1);
					    SetPlayerObject(playerid);
					    OnPlayerUseItem(playerid, Inv[playerid][gItemSelected[playerid]][ItemID]);
					}
					case 1: // Quando o Jogador Dropa o Item
					{
					    /*RemovePlayerAttachedObject(playerid, SlotMochila);
					    ClearAnimations(playerid, 1);
					    SetPlayerObject(playerid);
						OnPlayerDropItem(playerid, Inv[playerid][gItemSelected[playerid]][ItemID], strval(inputtext));*/
                        ShowPlayerDialog(playerid, D_QuantiaDropar, DIALOG_STYLE_INPUT, "{FF0000}Dropar Quantia:", "{FFFFFF}Digite abaixo a quantia que deseja dropar:", "Dropar", "Voltar");
					}
				}
			}
			else ShowInventory(playerid);
		}
        case D_QuantiaDropar:
        {
            if(response)//dropar
            {
                if(strval(inputtext) < 1 || strval(inputtext) > 40){
                    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Quantia Invalida.");
                    return ShowPlayerDialog(playerid, D_QuantiaDropar, DIALOG_STYLE_INPUT, "{FF0000}Dropar Quantia:", "{FFFFFF}Digite abaixo a quantia que deseja dropar:", "Dropar", "Voltar");
                }
                if(strval(inputtext) > Inv[playerid][gItemSelected[playerid]][QuantiaI])
                {
                    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce nao possui essa quantia de itens para dropar.");
                    return ShowPlayerDialog(playerid, D_QuantiaDropar, DIALOG_STYLE_INPUT, "{FF0000}Dropar Quantia:", "{FFFFFF}Digite abaixo a quantia que deseja dropar:", "Dropar", "Voltar");
                }
                RemovePlayerAttachedObject(playerid, SlotMochila);
				ClearAnimations(playerid, 1);
				SetPlayerObject(playerid);
				OnPlayerDropItem(playerid, Inv[playerid][gItemSelected[playerid]][ItemID], strval(inputtext));
            }
            else
            {                  
                //gItemSelected[playerid] = ItensSelectedInv[playerid][listitem];
                if(Inv[playerid][gItemSelected[playerid]][ItemID] == -1) {ShowInventory(playerid); SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Slot-vazio."); return 1;}

                new str1[40];
                format(str1, sizeof str1, "{FFFFFF}Item [%s]", 
                ItemInfo[Inv[playerid][gItemSelected[playerid]][ItemID]][Item_Name]);

                ShowPlayerDialog(playerid, D_UsarDropar, DIALOG_STYLE_LIST, str1, "{00FF00}Usar\n{FF0000}Dropar", "Selecionar", "Voltar");
            }
        }
        case D_LOOTEACORPO:
		{
		    if(!response)
		    {
                ClearAnimations(playerid, 1);
                return 1;
			}
			if(response)
			{
                new i = idlootp[playerid], ii = LootInfo[i][TamanhoLoot];

                if(listitem >= 0 || listitem <= ii){
                    new y=listitem;
                    if(InfoLoot[i][y][ItemL] == -1) {
                        SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Slot vazio ou ja pegaram este item");
                        ShowPlayerDialogLoot(playerid);
                        return 1;
                    }
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4);
                    AddItem(playerid,InfoLoot[i][y][ItemL], 1);
	                if(InfoLoot[i][y][QuantiaL] < 2){
                        InfoLoot[i][y][ItemL]=-1;
                        InfoLoot[i][y][QuantiaL]=0;
                        ShowPlayerDialogLoot(playerid);
                        return 1;
                    }
                    InfoLoot[i][y][QuantiaL]--;
                    ShowPlayerDialogLoot(playerid);
                }
			}
		}
		case D_PMALAS:
		{
		    if(!response) {return ClosePortaMalasCar(IDVehP[playerid]),  1;}
			if(response)
			{
			    pInfo[playerid][pTenPMalas] = listitem+1;
				ShowPlayerDialog(playerid,D_PMALAS2,DIALOG_STYLE_MSGBOX,"Porta Malas"COL_GREEN" (50 slots)","Por favor escolha uma opcao","Add Item","Pegar Item");
			}
		}
		case D_PMALAS2:
		{
			if(response)
			{
			    AbrirInventarioPMalas(playerid);
			}
			if(!response)
			{
			    new str[64], n;	n = pInfo[playerid][pTenPMalas];
				if(pInfo[playerid][pTenPMalas] > 0 && pInfo[playerid][pTenPMalas] < MAX_LOOT_PMALA)
				{
					if(InfoPMalas[idcarrop[playerid]][n] == -1)
                    {
                        ClosePortaMalasCar(IDVehP[playerid]);
                        return SendClientMessage(playerid, Vermelho, "Nao existe nenhum item neste slot.");
                    }
                    if(VerMochila(playerid, 1)) return GameTextForPlayer(playerid,"~r~Mochila cheia",1000,4), ClosePortaMalasCar(IDVehP[playerid]);
                    ClosePortaMalasCar(IDVehP[playerid]);
					AddItem(playerid,InfoPMalas[idcarrop[playerid]][n], 1);
					format(str,sizeof(str),"Voce pegou o item '%s' no porta malas.",GetNameItemY(InfoPMalas[idcarrop[playerid]][n]));
					SendClientMessage(playerid,-1,str);
					InfoPMalas[idcarrop[playerid]][n] = -1;
					new idveh = PertoVeiculo(playerid, 5.0);
					if(idveh != idcarrop[playerid]) return 1;
					cmd_pmala(playerid);
				}
			}
		}
		case D_PMALAS3:
		{
			if(response)
			{
                ClosePortaMalasCar(IDVehP[playerid]);
                new slot=listitem;
                gItemSelected[playerid] = slot;
                if(Inv[playerid][slot][ItemID] == -1){
                    SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Slot vazio selecionado.");
                    return 1;
                }
                AdicionarItemCarro(playerid, Inv[playerid][slot][ItemID]);
			}else{
                ClosePortaMalasCar(IDVehP[playerid]);
            }
		}
        //CAIXA ITENS
        case D_GUARDARIBOX:
        {
            if(response)
			{
                new item = itemselecionado[playerid], idc = idcaixap[playerid];

                if(Inv[playerid][listitem][ItemID] == -1)
                {
                    ShowInventoryTent(playerid);
                    return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce selecionou um slot sem itens.");
                }
                if(Box_Item[idc][item][ItemC] != -1 && Box_Item[idc][item][ItemC] != Inv[playerid][listitem][ItemID])
                {
                    PlayerSelecionandoItem[playerid]=true;
                    return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} O Slot selecionado ja possui um item(Diferente).");
                }

                PlayerSelecionandoItem[playerid]=false;
                gItemSelected[playerid] = listitem;
                new str[120];
                format(str, sizeof str, "{C9C9C9}Digite abaixo a quantia de {00FF00}[%s] {C9C9C9}que deseja guardar\n\
                {C9C9C9}Quantia Valida: %d", GetNameItemY(Inv[playerid][listitem][ItemID]), Inv[playerid][listitem][QuantiaI]);
                ShowPlayerDialog(playerid, D_GUARDARQIBOX, DIALOG_STYLE_INPUT, "{00FF00}Caixa - Guardar Item", str, "Guardar","Fechar");
        	}else{
                PlayerSelecionandoItem[playerid]=true;
                return 1;
            }
        }

        case D_GUARDARQIBOX:
        {
            if(response)
			{
                new item = itemselecionado[playerid], idc = idcaixap[playerid];
                listitem = gItemSelected[playerid];

                if(isLetra(inputtext)){
                    new str[120];
                    format(str, sizeof str, "{C9C9C9}Digite abaixo a quantia de {00FF00}[%s] {C9C9C9}que deseja guardar\n\
                    {C9C9C9}Quantia Valida: %d", GetNameItemY(Inv[playerid][listitem][ItemID]), Inv[playerid][listitem][QuantiaI]);
                    ShowPlayerDialog(playerid, D_GUARDARQIBOX, DIALOG_STYLE_INPUT, "{00FF00}Caixa - Guardar Item", str, "Guardar","Fechar");
                    return 1;
                }

                new quantiaitem = strval(inputtext);

                if(quantiaitem < 1 || quantiaitem > Inv[playerid][listitem][QuantiaI]){
                    new str[120];
                    format(str, sizeof str, "{C9C9C9}Digite abaixo a quantia de {00FF00}[%s] {C9C9C9}que deseja guardar\n\
                    {C9C9C9}Quantia Valida: %d", GetNameItemY(Inv[playerid][listitem][ItemID]), Inv[playerid][listitem][QuantiaI]);
                    ShowPlayerDialog(playerid, D_GUARDARQIBOX, DIALOG_STYLE_INPUT, "{00FF00}Caixa - Guardar Item", str, "Guardar","Fechar");
                    return 1;
                }

                if(item >= 0 && item <= 4 && quantiaitem + Box_Item[idc][item][QuantiaC] > 3)
                {
                    PlayerSelecionandoItem[playerid]=true;
                    return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Maximo de itens adicionado a este slot [3].");
                }else if(item >= 5 && item <= 9 && quantiaitem + Box_Item[idc][item][QuantiaC] > 5)
                {
                    PlayerSelecionandoItem[playerid]=true;
                    return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Maximo de itens adicionado a este slot [5].");
                }else if(item >= 10 && item <= 14 && quantiaitem + Box_Item[idc][item][QuantiaC] > 10)
                {
                    PlayerSelecionandoItem[playerid]=true;
                    return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Maximo de itens adicionado a este slot [10].");
                }
                  
                PlayerSelecionandoItem[playerid]=true;
                new itemIDE = Inv[playerid][listitem][ItemID];

                Box_Item[idc][item][ItemC] = itemIDE;
                Box_Item[idc][item][QuantiaC] += quantiaitem;

                RemoveItem(playerid,itemIDE,quantiaitem);

                new SlotID = item+4, textID = item+19;
                AtualizarBoxText(playerid, SlotID, textID, item);

                new str[80];    format(str, sizeof str, "[CAIXA] Item %s adicionado na caixa. Quantia existente: %d.", GetNameItemY(Box_Item[idc][item][ItemC]), Box_Item[idc][item][QuantiaC]);
                SendClientMessage(playerid, Verde, str);
			}else{
                PlayerSelecionandoItem[playerid]=true;
                return 1;
            }
        }

        case D_PEGARIBOX:
        {
            if(response)
			{
                new slot = itemselecionado[playerid], idc = idcaixap[playerid];
                new idItem = Box_Item[idc][slot][ItemC];
                if(isLetra(inputtext)){
                    new str[120];
                    format(str, sizeof str, "{C9C9C9}Digite abaixo a quantia de {00FF00}[%s] {C9C9C9}que deseja pegar\n\
                    {C9C9C9}Quantia Valida: %d", GetNameItemY(idItem), Box_Item[idc][slot][QuantiaC]);
                    ShowPlayerDialog(playerid, D_PEGARIBOX, DIALOG_STYLE_INPUT, "{00FF00}Caixa - Pegar Item", str, "Pegar","Fechar");
                    return 1;
                }
                new Quantia=strval(inputtext);
                if(Quantia < 1 || Quantia > Box_Item[idc][slot][QuantiaC])
                {
                    PlayerSelecionandoItem[playerid]=true;
                    return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Quantia Invalida.");
                }
                if(VerMochila(playerid, Quantia))
                {
                    PlayerSelecionandoItem[playerid]=true;
                    return GameTextForPlayer(playerid,"~r~Mochila sem espaco~n~Para essa quantia!",1000,4);
                }
                PlayerSelecionandoItem[playerid]=true;
                for(new q=0; q < Quantia; q++){
                    if(Box_Item[idc][slot][QuantiaC] <= 1){
                        Box_Item[idc][slot][ItemC] = -1;
                        Box_Item[idc][slot][QuantiaC] = 0;
                    }else{
                        Box_Item[idc][slot][QuantiaC]--;
                    }
                    AddItem(playerid, idItem, 1);
                }

                new SlotID = slot+4, textID = slot+19;
                AtualizarBoxText(playerid, SlotID, textID, slot);
                new str[80];
                format(str, sizeof str, "[CAIXA] Item %s adicionado em seu inventario. Quantia existente: %d.", GetNameItemY(idItem), Quantia);
                SendClientMessage(playerid, Verde, str);
			}else{
                PlayerSelecionandoItem[playerid]=true;
                return 1;
            }
        }
	}
	return 1;
}
stock CriarCraft(playerid, slotpreview)
{
    if(permitidoparede == false) return SendClientMessage(playerid, COR_VERMELHO, "</Anti-bug> Aguarde alguns segundos, alguem ja esta construindo uma Craft.");
	new id = -1;
	new str[128];
	for(new i=1; i < MAX_CRAFTS; i++)
	{
		if(!CraftInfo[i][Existe]){
			id = i;//Pegar ID inexistente
			break;
		}
	}
    if(id == -1) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Maximo de crafts criadas no servidor, Entre em contato com XaozinN.");
	new Float:X, Float:Y, Float:Z, Float: A;
    new idmodel = CriarCInfo[slotpreview][IDObjectCraft];
    new madeirasp = CriarCInfo[slotpreview][MadeirasCraft];
    new ferrosp = CriarCInfo[slotpreview][FerrosCraft];
    new protectp = CriarCInfo[slotpreview][ProtectionCraft];

    if(pInfo[playerid][pMadeira] < madeirasp) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao tem madeiras o suficiente.");
    if(pInfo[playerid][pFerro] < ferrosp) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA}Voce nao tem ferros o suficiente.");

    if(idmodel == 19915)
    {
        CreateRecicladora(playerid);
        return true;
    }


    if(idmodel == 1800){
        if(TemXItem(playerid, 58) < 5) return SendClientMessage(playerid, Vermelho, "[ERRO]{BABABA} Voce precisa de 5 panos para criar uma cama.");
        SendClientMessage(playerid, -1, "Cama criada com sucesso.");
        RemoveItem(playerid, 58, 5);
        pInfo[playerid][pCama] = id;
    }

    SetPlayerMadeira(playerid, -madeirasp);
    SetPlayerFerro(playerid, -ferrosp);

	GetPlayerPos(playerid, X, Y, Z);    GetPlayerFacingAngle(playerid, A);
	format(CraftInfo[id][Dono], MAX_PLAYER_NAME,"%s",PegarNome(playerid));
	CraftInfo[id][Existe] = 1;
    CraftInfo[id][Fechada] = true;
	CraftInfo[id][Modelo] = idmodel;
	CraftInfo[id][PosX] = X+2;
	CraftInfo[id][PosY] = Y;
	CraftInfo[id][PosZ] = Z+0.5;
	CraftInfo[id][RZ] = A+90;
	CraftInfo[id][metallife] = protectp;
	CraftInfo[id][upgrade] = 1;
    if(CraftInfo[id][Modelo] == 3383){
        CraftInfo[id][ItemM1] = -1;
        CraftInfo[id][QuantiaIM1] = 0;
        CraftInfo[id][ItemM2] = -1;
        CraftInfo[id][QuantiaIM2] = 0;
    }

    if(CraftInfo[id][Modelo] == 19831){
        CraftInfo[id][IChurrasqueira] = -1;
        CraftInfo[id][MChurrasqueira] = 0;
    }

	SetPlayerPosEx(playerid, X+0.4, Y, Z);
	CraftInfo[id][ObjectJ] = CreateDynamicObject(CraftInfo[id][Modelo], CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], CraftInfo[id][RX], CraftInfo[id][RY], CraftInfo[id][RZ]);
	SendClientMessage(playerid, Verde, "Craft construida com sucesso, use /editarp [id] para editar");
	format(str, 128, "{81d358}/editarp {d3cd58}%d\n{58aed3}Protecao: %d",id, CraftInfo[id][metallife]);
	CraftInfo[id][Text3Dp] = CreateDynamic3DTextLabel(str, 0xFFFF00FF, CraftInfo[id][PosX], CraftInfo[id][PosY], CraftInfo[id][PosZ], 5.0);
	SaveCraft(id);
	permitidoparede = false;
	SetTimer("parededelaY", 5000, false);
    if(IsPortaum(id)){
        idporta[playerid] = id;
		ShowPlayerDialog(playerid, D_DSENHAPORTAO, DIALOG_STYLE_INPUT, "{FFFF00}Definir Senha Porta/Portao", "{FFFFFF}Digite {FFFF00}Abaixo {FFFFFF} uma senha para essa porta/portao\n\
        {B22222}A senha deve conter de 1 a 50 caracteres\n\
        {B22222}OBS: Caso esqueca a senha ou queira trocar, sera cobrado 5.000 $!", "Confirmar", #);
        return 1;
    }
	if(!strcmp(PegarNome(playerid), CraftInfo[id][Dono]) && Plataforma[playerid] == 1)
    {
		SendClientMessage(playerid, Vermelho, "[CRAFT] Editando...");
	    SetPVarInt(playerid, "EditandoParede", 999);
	    ideditorp[playerid] = id;
		EditDynamicObject(playerid, CraftInfo[id][ObjectJ]);
		EditandoCraftInfo[playerid] = true;
	}
	if(!strcmp(PegarNome(playerid), CraftInfo[id][Dono]) && Plataforma[playerid] == 0)
	{
		ideditorp[playerid] = id;
        EditandoStyle[playerid] = Style_Craft;
		ShowEditorParede(playerid);
	}
	return 1;
}

stock IsCarEvento(vehicleid)
{
	if(vehicleid == CarroEvento[0] || vehicleid == CarroEvento[1] || vehicleid == CarroEvento[2]
	|| vehicleid == CarroEvento[3] || vehicleid == CarroEvento[4] || vehicleid == CarroEvento[5]
	|| vehicleid == CarroEvento[6] || vehicleid == CarroEvento[7] || vehicleid == CarroEvento[8]
	|| vehicleid == CarroEvento[9]) return 1;
	return 0;
}
stock GetPlayerBackpackName(playerid)
{
	new backpack[20];
	switch(pInfo[playerid][pBackpack])
	{
        case 8: backpack = "Sem Mochila";
		case 12: backpack = "School backpack";
        case 20: backpack = "Parachute backpack";
        case 30: backpack = "Camping backpack";
        case 40: backpack = "Coyote Backpack";
	}
	return backpack;
}
// -----------------------------------------------------------------------------
stock GetWeaponNameEx(id, name[], len) return format(name,len, "%s", GunNames[id]);

stock GetPlayerBackpackNameText(playerid)
{
	new backpack[15];
	switch(pInfo[playerid][pBackpack]){
        case 8: backpack = "Sem_Mochila";
		case 12: backpack = "School_backpack";
        case 20: backpack = "Parachute_backpack";
        case 30: backpack = "Camping_backpack";
        case 40: backpack = "Coyote_Backpack";
	}
	return backpack;
}
